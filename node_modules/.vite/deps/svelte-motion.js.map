{
  "version": 3,
  "sources": ["../../svelte-motion/src/components/AnimateSharedLayout/types.js", "../../svelte-motion/src/utils/fix-process-env.js", "../../svelte-motion/src/utils/array.js", "../../svelte-motion/src/utils/subscription-manager.js", "../../svelte-motion/src/value/index.js", "../../svelte-motion/src/context/DOMcontext.js", "../../svelte-motion/src/context/MotionConfigContext.js", "../../svelte-motion/src/context/ScaleCorrectionProvider.svelte", "../../svelte-motion/src/components/MotionConfig/MotionConfigScaleCorrection.js", "../../svelte-motion/src/components/MotionConfig/MotionConfig.svelte", "../../svelte-motion/src/render/utils/animation.js", "../../svelte-motion/src/animation/utils/transitions.js", "../../svelte-motion/src/utils/time-conversion.js", "../../svelte-motion/src/animation/utils/easing.js", "../../svelte-motion/src/animation/utils/is-animatable.js", "../../svelte-motion/src/animation/utils/is-keyframes-target.js", "../../svelte-motion/src/animation/utils/default-transitions.js", "../../svelte-motion/src/render/dom/value-types/type-int.js", "../../svelte-motion/src/render/dom/value-types/number.js", "../../svelte-motion/src/render/dom/value-types/defaults.js", "../../svelte-motion/src/render/dom/value-types/animatable-none.js", "../../svelte-motion/src/render/utils/setters.js", "../../svelte-motion/src/utils/is-numerical-string.js", "../../svelte-motion/src/utils/resolve-value.js", "../../svelte-motion/src/render/dom/value-types/find.js", "../../svelte-motion/src/render/dom/value-types/test.js", "../../svelte-motion/src/render/dom/value-types/type-auto.js", "../../svelte-motion/src/render/dom/value-types/dimensions.js", "../../svelte-motion/src/render/utils/variants.js", "../../svelte-motion/src/animation/animation-controls.js", "../../svelte-motion/src/render/dom/projection/scale-correction.js", "../../svelte-motion/src/render/index.js", "../../svelte-motion/src/utils/each-axis.js", "../../svelte-motion/src/utils/noop.js", "../../svelte-motion/src/utils/geometry/index.js", "../../svelte-motion/src/utils/geometry/delta-apply.js", "../../svelte-motion/src/render/utils/is-draggable.js", "../../svelte-motion/src/utils/geometry/delta-calc.js", "../../svelte-motion/src/value/utils/is-motion-value.js", "../../svelte-motion/src/render/utils/state.js", "../../svelte-motion/src/render/html/utils/build-projection-transform.js", "../../svelte-motion/src/render/utils/animation-state.js", "../../svelte-motion/src/animation/utils/is-animation-controls.js", "../../svelte-motion/src/utils/shallow-compare.js", "../../svelte-motion/src/render/utils/types.js", "../../svelte-motion/src/render/utils/lifecycles.js", "../../svelte-motion/src/render/utils/motion-values.js", "../../svelte-motion/src/render/utils/projection.js", "../../svelte-motion/src/render/utils/compare-by-depth.js", "../../svelte-motion/src/render/utils/flat-tree.js", "../../svelte-motion/src/motion/features/layout/utils.js", "../../svelte-motion/src/render/dom/projection/relative-set.js", "../../svelte-motion/src/motion/utils/valid-prop.js", "../../svelte-motion/src/context/PresenceContext.js", "../../svelte-motion/src/components/AnimatePresence/use-presence.js", "../../svelte-motion/src/context/LayoutGroupContext.js", "../../svelte-motion/src/components/AnimateSharedLayout/utils/batcher.js", "../../svelte-motion/src/render/dom/projection/utils.js", "../../svelte-motion/src/render/dom/utils/batch-layout.js", "../../svelte-motion/src/context/SharedLayoutContext.js", "../../svelte-motion/src/context/LazyContext.js", "../../svelte-motion/src/context/MotionContext/MotionContext.svelte", "../../svelte-motion/src/motion/utils/UseVisualElement.svelte", "../../svelte-motion/src/motion/features/definitions.js", "../../svelte-motion/src/motion/features/UseFeatures.svelte", "../../svelte-motion/src/context/MotionContext/MotionContextProvider.svelte", "../../svelte-motion/src/render/html/utils/create-render-state.js", "../../svelte-motion/src/render/svg/utils/create-render-state.js", "../../svelte-motion/src/render/html/utils/transform.js", "../../svelte-motion/src/motion/utils/is-forced-motion-value.js", "../../svelte-motion/src/render/html/utils/build-transform.js", "../../svelte-motion/src/render/dom/utils/is-css-variable.js", "../../svelte-motion/src/render/dom/value-types/get-as-type.js", "../../svelte-motion/src/render/html/utils/build-styles.js", "../../svelte-motion/src/render/html/UseInitialMotionValues.svelte", "../../svelte-motion/src/render/html/UseStyle.svelte", "../../svelte-motion/src/render/html/UseHTMLProps.svelte", "../../svelte-motion/src/render/svg/utils/build-attrs.js", "../../svelte-motion/src/render/svg/utils/transform-origin.js", "../../svelte-motion/src/render/svg/utils/path.js", "../../svelte-motion/src/render/svg/UseSVGProps.svelte", "../../svelte-motion/src/render/dom/utils/filter-props.js", "../../svelte-motion/src/render/dom/UseRender.svelte", "../../svelte-motion/src/render/html/visual-element.js", "../../svelte-motion/src/render/dom/projection/measure.js", "../../svelte-motion/src/render/dom/utils/css-variables-conversion.js", "../../svelte-motion/src/render/dom/utils/unit-conversion.js", "../../svelte-motion/src/render/dom/utils/parse-dom-variant.js", "../../svelte-motion/src/render/html/utils/scrape-motion-values.js", "../../svelte-motion/src/render/html/utils/render.js", "../../svelte-motion/src/render/svg/utils/scrape-motion-values.js", "../../svelte-motion/src/render/dom/utils/camel-to-dash.js", "../../svelte-motion/src/render/svg/utils/camel-case-attrs.js", "../../svelte-motion/src/render/svg/utils/render.js", "../../svelte-motion/src/render/svg/visual-element.js", "../../svelte-motion/src/render/dom/create-visual-element.js", "../../svelte-motion/src/render/svg/config-motion.js", "../../svelte-motion/src/render/html/config-motion.js", "../../svelte-motion/src/context/MotionContext/utils.js", "../../svelte-motion/src/context/MotionContext/UseCreateMotionContext.svelte", "../../svelte-motion/src/value/utils/resolve-motion-value.js", "../../svelte-motion/src/motion/utils/UseVisualState.svelte", "../../svelte-motion/src/utils/is-ref-object.js", "../../svelte-motion/src/motion/utils/use-motion-ref.js", "../../svelte-motion/src/motion/Motion.svelte", "../../svelte-motion/src/motion/index.js", "../../svelte-motion/src/events/UseDomEvent.svelte", "../../svelte-motion/src/gestures/utils/event-type.js", "../../svelte-motion/src/events/event-info.js", "../../svelte-motion/src/utils/is-browser.js", "../../svelte-motion/src/events/utils.js", "../../svelte-motion/src/events/UsePointerEvent.svelte", "../../svelte-motion/src/gestures/PanSession.js", "../../svelte-motion/src/gestures/UsePanGesture.svelte", "../../svelte-motion/src/gestures/utils/is-node-or-child.js", "../../svelte-motion/src/gestures/drag/utils/lock.js", "../../svelte-motion/src/gestures/UseTapGesture.svelte", "../../svelte-motion/src/gestures/UseHoverGesture.svelte", "../../svelte-motion/src/gestures/UseFocusGesture.svelte", "../../svelte-motion/src/gestures/UseGestures.svelte", "../../svelte-motion/src/render/dom/create-motion-class.js", "../../svelte-motion/src/motion/features/gestures.js", "../../svelte-motion/src/gestures/drag/VisualElementDragControls.js", "../../svelte-motion/src/gestures/drag/utils/constraints.js", "../../svelte-motion/src/render/dom/projection/convert-to-relative.js", "../../svelte-motion/src/gestures/drag/UseDrag.svelte", "../../svelte-motion/src/motion/features/drag.js", "../../svelte-motion/src/render/dom/projection/default-scale-correctors.js", "../../svelte-motion/src/motion/features/layout/Animate.svelte", "../../svelte-motion/src/motion/features/layout/AnimateLayoutContextProvider.svelte", "../../svelte-motion/src/motion/features/layout/Measure.svelte", "../../svelte-motion/src/motion/features/layout/MeasureContextProvider.svelte", "../../svelte-motion/src/motion/features/layout/index.js", "../../svelte-motion/src/motion/features/AnimationState.svelte", "../../svelte-motion/src/motion/features/Exit.svelte", "../../svelte-motion/src/motion/features/animations.js", "../../svelte-motion/src/render/dom/featureBundle.js", "../../svelte-motion/src/render/dom/motion.js", "../../svelte-motion/src/render/svg/lowercase-elements.js", "../../svelte-motion/src/render/dom/utils/is-svg-component.js", "../../svelte-motion/src/render/dom/M.svelte", "../../svelte-motion/src/render/dom/motion-proxy.js", "../../svelte-motion/src/motion/MotionSSR.svelte", "../../svelte-motion/src/components/AnimatePresence/PresenceChild.svelte", "../../svelte-motion/src/components/AnimatePresence/AnimatePresence.svelte", "../../svelte-motion/src/animation/animate.js", "../../svelte-motion/src/components/AnimateSharedLayout/utils/crossfader.js", "../../svelte-motion/src/components/AnimateSharedLayout/utils/stack.js", "../../svelte-motion/src/components/AnimateSharedLayout/utils/rotate.js", "../../svelte-motion/src/components/AnimateSharedLayout/AnimateSharedLayout.svelte", "../../svelte-motion/src/value/use-combine-values.js", "../../svelte-motion/src/value/use-motion-template.js", "../../svelte-motion/src/utils/transform.js", "../../svelte-motion/src/value/use-transform.js", "../../svelte-motion/src/value/use-spring.js", "../../svelte-motion/src/value/scroll/utils.js", "../../svelte-motion/src/value/scroll/use-element-scroll.js", "../../svelte-motion/src/value/scroll/use-viewport-scroll.js", "../../svelte-motion/src/utils/use-reduced-motion.js", "../../svelte-motion/src/animation/UseAnimation.svelte", "../../svelte-motion/src/animation/use-animation.js", "../../svelte-motion/src/utils/use-cycle.js", "../../svelte-motion/src/gestures/drag/use-drag-controls.js", "../../svelte-motion/src/value/use-velocity.js", "../../svelte-motion/src/components/MotionDiv.svelte"],
  "sourcesContent": ["/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n/**\r\n * @public\r\n */\r\nvar Presence;\r\n(function (Presence) {\r\n    Presence[Presence[\"Entering\"] = 0] = \"Entering\";\r\n    Presence[Presence[\"Present\"] = 1] = \"Present\";\r\n    Presence[Presence[\"Exiting\"] = 2] = \"Exiting\";\r\n})(Presence || (Presence = {}));\r\n/**\r\n * @public\r\n */\r\nvar VisibilityAction;\r\n(function (VisibilityAction) {\r\n    VisibilityAction[VisibilityAction[\"Hide\"] = 0] = \"Hide\";\r\n    VisibilityAction[VisibilityAction[\"Show\"] = 1] = \"Show\";\r\n})(VisibilityAction || (VisibilityAction = {}));\r\n\r\nexport { Presence, VisibilityAction };\r\n", "\r\nconst fix = ()=>{\r\n    try{\r\n        \r\n        if (!process.env){\r\n            process.env={};\r\n        }\r\n        return true;;\r\n    }catch(e){}\r\n    \r\n    if (!window || (window.process && window.process.env)){\r\n        return false;\r\n    }\r\n    \r\n    if (!window.process){\r\n        window.process={}\r\n    }\r\n    window.process.env={};\r\n    return true;    \r\n}\r\n\r\nexport const fixed = fix();", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nfunction addUniqueItem(arr, item) {\r\n    arr.indexOf(item) === -1 && arr.push(item);\r\n}\r\nfunction removeItem(arr, item) {\r\n    var index = arr.indexOf(item);\r\n    index > -1 && arr.splice(index, 1);\r\n}\r\n\r\nexport { addUniqueItem, removeItem };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { addUniqueItem, removeItem } from './array.js';\r\n\r\nvar SubscriptionManager = /** @class */ (function () {\r\n    function SubscriptionManager() {\r\n        this.subscriptions = [];\r\n    }\r\n    SubscriptionManager.prototype.add = function (handler) {\r\n        var _this = this;\r\n        addUniqueItem(this.subscriptions, handler);\r\n        return function () { return removeItem(_this.subscriptions, handler); };\r\n    };\r\n    SubscriptionManager.prototype.notify = function (a, b, c) {\r\n        var numSubscriptions = this.subscriptions.length;\r\n        if (!numSubscriptions)\r\n            return;\r\n        if (numSubscriptions === 1) {\r\n            /**\r\n             * If there's only a single handler we can just call it without invoking a loop.\r\n             */\r\n            this.subscriptions[0](a, b, c);\r\n        }\r\n        else {\r\n            for (var i = 0; i < numSubscriptions; i++) {\r\n                /**\r\n                 * Check whether the handler exists before firing as it's possible\r\n                 * the subscriptions were modified during this loop running.\r\n                 */\r\n                var handler = this.subscriptions[i];\r\n                handler && handler(a, b, c);\r\n            }\r\n        }\r\n    };\r\n    SubscriptionManager.prototype.getSize = function () {\r\n        return this.subscriptions.length;\r\n    };\r\n    SubscriptionManager.prototype.clear = function () {\r\n        this.subscriptions.length = 0;\r\n    };\r\n    return SubscriptionManager;\r\n}());\r\n\r\nexport { SubscriptionManager };\r\n", "\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { fixed } from '../utils/fix-process-env';\r\nimport sync, { getFrameData } from 'framesync';\r\nimport { velocityPerSecond } from 'popmotion';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.js';\r\n\r\nvar isFloat = function (value) {\r\n    return !isNaN(parseFloat(value));\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nvar MotionValue = /** @class */ (function () {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    function MotionValue(init, startStopNotifier) {\r\n        var _this = this;\r\n        /**\r\n         * Duration, in milliseconds, since last updating frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.timeDelta = 0;\r\n        /**\r\n         * Timestamp of the last time this `MotionValue` was updated.\r\n         *\r\n         * @internal\r\n         */\r\n        this.lastUpdated = 0;\r\n        /**\r\n         * Functions to notify when the `MotionValue` updates.\r\n         *\r\n         * @internal\r\n         */\r\n        this.updateSubscribers = new SubscriptionManager();\r\n        /**\r\n         * Functions to notify when the velocity updates.\r\n         *\r\n         * @internal\r\n         */\r\n        this.velocityUpdateSubscribers = new SubscriptionManager();\r\n        /**\r\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\r\n         *\r\n         * @internal\r\n         */\r\n        this.renderSubscribers = new SubscriptionManager();\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = false;\r\n        this.updateAndNotify = function (v, render) {\r\n            if (render === void 0) { render = true; }\r\n            _this.prev = _this.current;\r\n            _this.current = v;\r\n            // Update timestamp\r\n            var _a = getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\r\n            if (_this.lastUpdated !== timestamp) {\r\n                _this.timeDelta = delta;\r\n                _this.lastUpdated = timestamp;\r\n                sync.postRender(_this.scheduleVelocityCheck);\r\n            }\r\n            // Update update subscribers\r\n            if (_this.prev !== _this.current) {\r\n                _this.updateSubscribers.notify(_this.current);\r\n            }\r\n            // Update velocity subscribers\r\n            if (_this.velocityUpdateSubscribers.getSize()) {\r\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\r\n            }\r\n            // Update render subscribers\r\n            if (render) {\r\n                _this.renderSubscribers.notify(_this.current);\r\n            }\r\n        };\r\n        /**\r\n         * Schedule a velocity check for the next frame.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.scheduleVelocityCheck = function () { return sync.postRender(_this.velocityCheck); };\r\n        /**\r\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n         * This ensures velocity calculations return `0`.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.velocityCheck = function (_a) {\r\n            var timestamp = _a.timestamp;\r\n            if (timestamp !== _this.lastUpdated) {\r\n                _this.prev = _this.current;\r\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\r\n            }\r\n        };\r\n        this.hasAnimated = false;\r\n        this.prev = this.current = init;\r\n        this.canTrackVelocity = isFloat(this.current);\r\n        this.onSubscription = () => { }\r\n        this.onUnsubscription = () => { }\r\n        if (startStopNotifier) {\r\n            this.onSubscription = () => {\r\n                if (this.updateSubscribers.getSize() + this.velocityUpdateSubscribers.getSize() + this.renderSubscribers.getSize() === 0) {\r\n\r\n                    const unsub = startStopNotifier()\r\n                    this.onUnsubscription = () => { }\r\n                    if (unsub) {\r\n                        this.onUnsubscription = () => {\r\n                            if (this.updateSubscribers.getSize() + this.velocityUpdateSubscribers.getSize() + this.renderSubscribers.getSize() === 0) {\r\n                                unsub()\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * @motion\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.onChange(updateOpacity)\r\n     *     const unsubscribeY = y.onChange(updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <MotionDiv style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @internalremarks\r\n     *\r\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\r\n     *\r\n     * ```jsx\r\n     * useOnChange(x, () => {})\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.onChange = function (subscription) {\r\n        this.onSubscription();\r\n        const unsub = this.updateSubscribers.add(subscription);\r\n        return () => {\r\n            unsub()\r\n            this.onUnsubscription()\r\n\r\n        }\r\n    };\r\n    /** Add subscribe method for Svelte store interface */\r\n    MotionValue.prototype.subscribe = function (subscription) {\r\n        return this.onChange(subscription);\r\n    };\r\n\r\n    MotionValue.prototype.clearListeners = function () {\r\n        this.updateSubscribers.clear();\r\n        this.onUnsubscription()\r\n    };\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` requests a render.\r\n     *\r\n     * @param subscriber - A function that's provided the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.onRenderRequest = function (subscription) {\r\n        this.onSubscription()\r\n        // Render immediately\r\n        subscription(this.get());\r\n        const unsub = this.renderSubscribers.add(subscription);\r\n        return () => {\r\n            unsub()\r\n            this.onUnsubscription()\r\n        }\r\n    };\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.attach = function (passiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n    };\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.set = function (v, render) {\r\n        if (render === void 0) { render = true; }\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    };\r\n    /** Add update method for Svelte Store behavior */\r\n    MotionValue.prototype.update = function (v) {\r\n        this.set(v(this.get()));\r\n    }\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.get = function () {\r\n        this.onSubscription()\r\n        const curr = this.current;\r\n        this.onUnsubscription()\r\n        return curr\r\n    };\r\n    /**\r\n     * @public\r\n     */\r\n    MotionValue.prototype.getPrevious = function () {\r\n        return this.prev;\r\n    };\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.getVelocity = function () {\r\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\r\n        this.onSubscription()\r\n        const vel = this.canTrackVelocity\r\n            ? // These casts could be avoided if parseFloat would be typed better\r\n            velocityPerSecond(parseFloat(this.current) -\r\n                parseFloat(this.prev), this.timeDelta)\r\n            : 0;\r\n        this.onUnsubscription()\r\n        return vel;\r\n    };\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.start = function (animation) {\r\n        var _this = this;\r\n        this.stop();\r\n        return new Promise(function (resolve) {\r\n            _this.hasAnimated = true;\r\n            _this.stopAnimation = animation(resolve);\r\n        }).then(function () { return _this.clearAnimation(); });\r\n    };\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.stop = function () {\r\n        if (this.stopAnimation)\r\n            this.stopAnimation();\r\n        this.clearAnimation();\r\n    };\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.isAnimating = function () {\r\n        return !!this.stopAnimation;\r\n    };\r\n    MotionValue.prototype.clearAnimation = function () {\r\n        this.stopAnimation = null;\r\n    };\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.destroy = function () {\r\n        this.updateSubscribers.clear();\r\n        this.renderSubscribers.clear();\r\n        this.stop();\r\n        this.onUnsubscription()\r\n    };\r\n    return MotionValue;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nfunction motionValue(init, startStopNotifier) {\r\n    return new MotionValue(init, startStopNotifier);\r\n}\r\n\r\nexport { MotionValue, motionValue };\r\n\r\n", "export const getDomContext = (name,el) => {\r\n    if (!el || !window){\r\n        return undefined;\r\n    }\r\n    let par = el;\r\n    while(par = par.parentNode){\r\n        if (par.motionDomContext && par.motionDomContext.has(name)){\r\n            return par.motionDomContext.get(name)\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const setDomContext = (name,el,value) => {\r\n    if (el && window){\r\n        if (!el.motionDomContext){\r\n            el.motionDomContext = new Map();\r\n        }\r\n        el.motionDomContext.set(name,value);\r\n    }\r\n}", "import { writable } from \"svelte/store\";\r\nimport { getDomContext } from \"./DOMcontext\";\r\n\r\n\r\n/**\r\n * @public\r\n */\r\nvar MotionConfigContext = (c)=> getDomContext(\"MotionConfig\",c)||writable({\r\n    transformPagePoint: function (p) { return p; },\r\n    isStatic: false,\r\n});\r\n\r\nexport { MotionConfigContext };\r\n", "<script context=\"module\">\r\n    import { writable } from \"svelte/store\";\r\n    import { getContext, setContext } from \"svelte\";\r\n    import { getDomContext, setDomContext } from './DOMcontext'\r\n    export const ScaleCorrectionContext = (isCustom) => getDomContext(\"ScaleCorrection\",isCustom)||writable([]);\r\n    export const ScaleCorrectionParentContext = () => writable([]);\r\n\r\n    export const provideScaleCorrection = (isCustom) => {\r\n        const fromParent =\r\n            getContext(ScaleCorrectionContext) || ScaleCorrectionContext(isCustom);\r\n\r\n        const ctx = ScaleCorrectionContext();\r\n        setContext(ScaleCorrectionContext, ctx);\r\n        setDomContext(\"ScaleCorrection\", isCustom, ctx)\r\n\r\n        setContext(ScaleCorrectionParentContext, fromParent);\r\n\r\n    };\r\n</script>\r\n\r\n<script>\r\n    export let isCustom;\r\n    provideScaleCorrection(isCustom)\r\n</script>\r\n\r\n<slot />\r\n", "import { getContext } from \"svelte\";\r\nimport { get } from \"svelte/store\";\r\nimport {\r\n    ScaleCorrectionContext,\r\n    ScaleCorrectionParentContext,\r\n} from \"../../context/ScaleCorrectionProvider.svelte\";\r\n\r\n\r\nexport const scaleCorrection = () => {\r\n\r\n    const scaleCorrectionContext = getContext(ScaleCorrectionContext);\r\n    const scaleCorrectionParentContext = getContext(\r\n        ScaleCorrectionParentContext\r\n    );\r\n    const afterU = (nc = false) => {\r\n        /* Second part of the updater calling in child layouts first.*/\r\n        const scc = get(scaleCorrectionContext);\r\n\r\n        \r\n        scc.forEach((v, i) => {\r\n            v.afterU?.(true);\r\n        });\r\n    };\r\n\r\n    const updater = () => {\r\n        // in React the updater function is called on children first, in Svelte the child does not call it.\r\n        get(scaleCorrectionContext).forEach((v) => {\r\n            v.updater?.(true);\r\n        })\r\n    }\r\n\r\n    scaleCorrectionParentContext.update((v) =>\r\n        v.concat([\r\n            {\r\n                updater,\r\n                afterU,\r\n            },\r\n        ])\r\n    );\r\n    \r\n    return {\r\n        update: updater\r\n        }\r\n    }\r\n\r\n\r\n\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { getContext, setContext } from \"svelte\";\r\n    import { writable, get} from \"svelte/store\";\r\nimport { setDomContext } from \"../../context/DOMcontext.js\";\r\n    import { MotionConfigContext } from \"../../context/MotionConfigContext.js\";\r\n    import {provideScaleCorrection} from '../../context/ScaleCorrectionProvider.svelte'\r\n    import { scaleCorrection } from './MotionConfigScaleCorrection.js'\r\n\r\n    export let transformPagePoint = undefined,\r\n        isStatic = undefined,\r\n        transition = undefined,\r\n        isCustom = false;\r\n    const mcc = getContext(MotionConfigContext) || MotionConfigContext(isCustom);\r\n    /**\r\n     * Inherit props from any parent MotionConfig components\r\n     */\r\n    let config = { ...get(mcc), ...{ transformPagePoint, isStatic, transition } }\r\n    $: config = { ...$mcc, ...{ transformPagePoint, isStatic, transition } };\r\n  \r\n    // need to inform child layouts, or problems with scroll occur\r\n    provideScaleCorrection();\r\n    /**\r\n     * Don't allow isStatic to change between renders as it affects how many hooks\r\n     * motion components fire.\r\n     */\r\n    //config.isStatic = useConstant(() => config.isStatic)\r\n\r\n    /**\r\n     * Creating a new config context object will re-render every `motion` component\r\n     * every time it renders. So we only want to create a new one sparingly.\r\n     */\r\n    $: (transitionDependency =\r\n        typeof config.transition === \"object\"\r\n            ? config.transition.toString()\r\n            : \"\");\r\n\r\n    let context = writable(config);\r\n    setContext(MotionConfigContext, context);\r\n    setDomContext(\"Motion\",isCustom,context);\r\n    const memo = () => config;\r\n    const scaleCorrector = scaleCorrection()\r\n    $: {\r\n        context.set(memo(transitionDependency, config.transformPagePoint))\r\n        scaleCorrector.update();\r\n    }\r\n</script>\r\n\r\n\r\n<slot />\r\n\r\n\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { __read, __rest} from 'tslib';\r\nimport { startAnimation } from '../../animation/utils/transitions.js';\r\nimport { setTarget } from './setters.js';\r\nimport { resolveVariant } from './variants.js';\r\n\r\n/**\r\n * @internal\r\n */\r\nfunction animateVisualElement(visualElement, definition, options) {\r\n    if (options === void 0) { options = {}; }\r\n    visualElement.notifyAnimationStart();\r\n    var animation;\r\n    if (Array.isArray(definition)) {\r\n        var animations = definition.map(function (variant) {\r\n            return animateVariant(visualElement, variant, options);\r\n        });\r\n        animation = Promise.all(animations);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        animation = animateVariant(visualElement, definition, options);\r\n    }\r\n    else {\r\n        var resolvedDefinition = typeof definition === \"function\"\r\n            ? resolveVariant(visualElement, definition, options.custom)\r\n            : definition;\r\n        animation = animateTarget(visualElement, resolvedDefinition, options);\r\n    }\r\n    return animation.then(function () {\r\n        return visualElement.notifyAnimationComplete(definition);\r\n    });\r\n}\r\nfunction animateVariant(visualElement, variant, options) {\r\n    var _a;\r\n    if (options === void 0) { options = {}; }\r\n    var resolved = resolveVariant(visualElement, variant, options.custom);\r\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\r\n    if (options.transitionOverride) {\r\n        transition = options.transitionOverride;\r\n    }\r\n    /**\r\n     * If we have a variant, create a callback that runs it as an animation.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    var getAnimation = resolved\r\n        ? function () { return animateTarget(visualElement, resolved, options); }\r\n        : function () { return Promise.resolve(); };\r\n    /**\r\n     * If we have children, create a callback that runs all their animations.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\r\n        ? function (forwardDelay) {\r\n            if (forwardDelay === void 0) { forwardDelay = 0; }\r\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\r\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\r\n        }\r\n        : function () { return Promise.resolve(); };\r\n    /**\r\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\r\n     * this animation or all children animations before playing the other.\r\n     */\r\n    var when = transition.when;\r\n    if (when) {\r\n        var _c = __read(when === \"beforeChildren\"\r\n            ? [getAnimation, getChildAnimations]\r\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\r\n        return first().then(last);\r\n    }\r\n    else {\r\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction animateTarget(visualElement, definition, _a) {\r\n    var _b;\r\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\r\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = __rest(_e, [\"transition\", \"transitionEnd\"]);\r\n    if (transitionOverride)\r\n        transition = transitionOverride;\r\n    var animations = [];\r\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\r\n    for (var key in target) {\r\n        var value = visualElement.getValue(key);\r\n        var valueTarget = target[key];\r\n        if (!value ||\r\n            valueTarget === undefined ||\r\n            (animationTypeState &&\r\n                shouldBlockAnimation(animationTypeState, key))) {\r\n            continue;\r\n        }\r\n        var animation = startAnimation(key, value, valueTarget, Object.assign({ delay: delay }, transition));\r\n        animations.push(animation);\r\n    }\r\n    return Promise.all(animations).then(function () {\r\n        transitionEnd && setTarget(visualElement, transitionEnd);\r\n    });\r\n}\r\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\r\n    if (delayChildren === void 0) { delayChildren = 0; }\r\n    if (staggerChildren === void 0) { staggerChildren = 0; }\r\n    if (staggerDirection === void 0) { staggerDirection = 1; }\r\n    var animations = [];\r\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\r\n    var generateStaggerDuration = staggerDirection === 1\r\n        ? function (i) {\r\n            if (i === void 0) { i = 0; }\r\n            return i * staggerChildren;\r\n        }\r\n        : function (i) {\r\n            if (i === void 0) { i = 0; }\r\n            return maxStaggerDuration - i * staggerChildren;\r\n        };\r\n    Array.from(visualElement.variantChildren)\r\n        .sort(sortByTreeOrder)\r\n        .forEach(function (child, i) {\r\n        animations.push(animateVariant(child, variant, Object.assign(Object.assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\r\n    });\r\n    return Promise.all(animations);\r\n}\r\nfunction stopAnimation(visualElement) {\r\n    visualElement.forEachValue(function (value) { return value.stop(); });\r\n}\r\nfunction sortByTreeOrder(a, b) {\r\n    return a.sortNodePosition(b);\r\n}\r\n/**\r\n * Decide whether we should block this animation. Previously, we achieved this\r\n * just by checking whether the key was listed in protectedKeys, but this\r\n * posed problems if an animation was triggered by afterChildren and protectedKeys\r\n * had been set to true in the meantime.\r\n */\r\nfunction shouldBlockAnimation(_a, key) {\r\n    \r\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\r\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\r\n    needsAnimating[key] = false;\r\n    return shouldBlock;\r\n}\r\n\r\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../utils/fix-process-env';\r\nimport { __rest, __spreadArray, __read } from 'tslib';\r\nimport { inertia, animate } from 'popmotion';\r\nimport { secondsToMilliseconds } from '../../utils/time-conversion.js';\r\nimport { isEasingArray, easingDefinitionToFunction } from './easing.js';\r\nimport { isAnimatable } from './is-animatable.js';\r\nimport { getDefaultTransition } from './default-transitions.js';\r\nimport { warning } from 'hey-listen';\r\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.js';\r\n\r\n/**\r\n * Decide whether a transition is defined on a given Transition.\r\n * This filters out orchestration options and returns true\r\n * if any options are left.\r\n */\r\nfunction isTransitionDefined(_a) {\r\n    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\r\n    return !!Object.keys(transition).length;\r\n}\r\nvar legacyRepeatWarning = false;\r\n/**\r\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\r\n */\r\nfunction convertTransitionToAnimationOptions(_a) {\r\n    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = __rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\r\n    var options = Object.assign({}, transition);\r\n    if (times)\r\n        options[\"offset\"] = times;\r\n    /**\r\n     * Convert any existing durations from seconds to milliseconds\r\n     */\r\n    if (transition.duration)\r\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\r\n    if (transition.repeatDelay)\r\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\r\n    /**\r\n     * Map easing names to Popmotion's easing functions\r\n     */\r\n    if (ease) {\r\n        options[\"ease\"] = isEasingArray(ease)\r\n            ? ease.map(easingDefinitionToFunction)\r\n            : easingDefinitionToFunction(ease);\r\n    }\r\n    /**\r\n     * Support legacy transition API\r\n     */\r\n    if (transition.type === \"tween\")\r\n        options.type = \"keyframes\";\r\n    /**\r\n     * TODO: These options are officially removed from the API.\r\n     */\r\n    if (yoyo || loop || flip) {\r\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\r\n        legacyRepeatWarning = true;\r\n        if (yoyo) {\r\n            options.repeatType = \"reverse\";\r\n        }\r\n        else if (loop) {\r\n            options.repeatType = \"loop\";\r\n        }\r\n        else if (flip) {\r\n            options.repeatType = \"mirror\";\r\n        }\r\n        options.repeat = loop || yoyo || flip || transition.repeat;\r\n    }\r\n    /**\r\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\r\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\r\n     * It'd be good to introduce a similar thing here.\r\n     */\r\n    if (transition.type !== \"spring\")\r\n        options.type = \"keyframes\";\r\n    return options;\r\n}\r\n/**\r\n * Get the delay for a value by checking Transition with decreasing specificity.\r\n */\r\nfunction getDelayFromTransition(transition, key) {\r\n    var _a;\r\n    var valueTransition = getValueTransition(transition, key) || {};\r\n    return (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : 0;\r\n}\r\nfunction hydrateKeyframes(options) {\r\n    if (Array.isArray(options.to) && options.to[0] === null) {\r\n        options.to = __spreadArray([], __read(options.to));\r\n        options.to[0] = options.from;\r\n    }\r\n    return options;\r\n}\r\nfunction getPopmotionAnimationOptions(transition, options, key) {\r\n    var _a;\r\n    if (Array.isArray(options.to)) {\r\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\r\n    }\r\n    hydrateKeyframes(options);\r\n    /**\r\n     * Get a default transition if none is determined to be defined.\r\n     */\r\n    if (!isTransitionDefined(transition)) {\r\n        transition = Object.assign(Object.assign({}, transition), getDefaultTransition(key, options.to));\r\n    }\r\n    return Object.assign(Object.assign({}, options), convertTransitionToAnimationOptions(transition));\r\n}\r\n/**\r\n *\r\n */\r\nfunction getAnimation(key, value, target, transition, onComplete) {\r\n    var _a;\r\n    var valueTransition = getValueTransition(transition, key);\r\n    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\r\n    var isTargetAnimatable = isAnimatable(key, target);\r\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\r\n        /**\r\n         * If we're trying to animate from \"none\", try and get an animatable version\r\n         * of the target. This could be improved to work both ways.\r\n         */\r\n        origin = getAnimatableNone(key, target);\r\n    }\r\n    else if (isZero(origin) && typeof target === \"string\") {\r\n        origin = getZeroUnit(target);\r\n    }\r\n    else if (!Array.isArray(target) &&\r\n        isZero(target) &&\r\n        typeof origin === \"string\") {\r\n        target = getZeroUnit(origin);\r\n    }\r\n    var isOriginAnimatable = isAnimatable(key, origin);\r\n    warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \\\"\" + target + \"\\\". \" + origin + \" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\r\n    function start() {\r\n        var options = {\r\n            from: origin,\r\n            to: target,\r\n            velocity: value.getVelocity(),\r\n            onComplete: onComplete,\r\n            onUpdate: function (v) { return value.set(v); },\r\n        };\r\n        return valueTransition.type === \"inertia\" ||\r\n            valueTransition.type === \"decay\"\r\n            ? inertia(Object.assign(Object.assign({}, options), valueTransition))\r\n            : animate(Object.assign(Object.assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {\r\n                    var _a;\r\n                    options.onUpdate(v);\r\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\r\n                }, onComplete: function () {\r\n                    var _a;\r\n                    options.onComplete();\r\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\r\n                } }));\r\n    }\r\n    function set() {\r\n        var _a;\r\n        value.set(target);\r\n        onComplete();\r\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\r\n        return { stop: function () { } };\r\n    }\r\n    return !isOriginAnimatable ||\r\n        !isTargetAnimatable ||\r\n        valueTransition.type === false\r\n        ? set\r\n        : start;\r\n}\r\nfunction isZero(value) {\r\n    return (value === 0 ||\r\n        (typeof value === \"string\" &&\r\n            parseFloat(value) === 0 &&\r\n            value.indexOf(\" \") === -1));\r\n}\r\nfunction getZeroUnit(potentialUnitType) {\r\n    return typeof potentialUnitType === \"number\"\r\n        ? 0\r\n        : getAnimatableNone(\"\", potentialUnitType);\r\n}\r\nfunction getValueTransition(transition, key) {\r\n    return transition[key] || transition[\"default\"] || transition;\r\n}\r\n/**\r\n * Start animation on a MotionValue. This function is an interface between\r\n * Framer Motion and Popmotion\r\n *\r\n * @internal\r\n */\r\nfunction startAnimation(key, value, target, transition) {\r\n    if (transition === void 0) { transition = {}; }\r\n    return value.start(function (onComplete) {\r\n        var delayTimer;\r\n        var controls;\r\n        var animation = getAnimation(key, value, target, transition, onComplete);\r\n        var delay = getDelayFromTransition(transition, key);\r\n        var start = function () { return (controls = animation()); };\r\n        if (delay) {\r\n            delayTimer = setTimeout(start, secondsToMilliseconds(delay));\r\n        }\r\n        else {\r\n            start();\r\n        }\r\n        return function () {\r\n            clearTimeout(delayTimer);\r\n            controls === null || controls === void 0 ? void 0 : controls.stop();\r\n        };\r\n    });\r\n}\r\n\r\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\r\n\r\nexport { secondsToMilliseconds };\r\n", "\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../utils/fix-process-env';\r\nimport { __read } from 'tslib';\r\nimport { cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\r\n//import { invariant } from 'hey-listen';\r\n\r\nvar easingLookup = {\r\n    linear: linear,\r\n    easeIn: easeIn,\r\n    easeInOut: easeInOut,\r\n    easeOut: easeOut,\r\n    circIn: circIn,\r\n    circInOut: circInOut,\r\n    circOut: circOut,\r\n    backIn: backIn,\r\n    backInOut: backInOut,\r\n    backOut: backOut,\r\n    anticipate: anticipate,\r\n    bounceIn: bounceIn,\r\n    bounceInOut: bounceInOut,\r\n    bounceOut: bounceOut,\r\n};\r\nvar easingDefinitionToFunction = function (definition) {\r\n    if (Array.isArray(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        //invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\r\n        var _a = __read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        //invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\nvar isEasingArray = function (ease) {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\r\n\r\nexport { easingDefinitionToFunction, isEasingArray };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../utils/fix-process-env';\r\nimport { complex } from 'style-value-types';\r\n\r\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nvar isAnimatable = function (key, value) {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (key === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        complex.test(value) && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { isAnimatable };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nvar isKeyframesTarget = function (v) {\r\n    return Array.isArray(v);\r\n};\r\n\r\nexport { isKeyframesTarget };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { isKeyframesTarget } from './is-keyframes-target.js';\r\n\r\nvar underDampedSpring = function () { return ({\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restDelta: 0.5,\r\n    restSpeed: 10,\r\n}); };\r\nvar criticallyDampedSpring = function (to) { return ({\r\n    type: \"spring\",\r\n    stiffness: 550,\r\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\r\n    restDelta: 0.01,\r\n    restSpeed: 10,\r\n}); };\r\nvar linearTween = function () { return ({\r\n    type: \"keyframes\",\r\n    ease: \"linear\",\r\n    duration: 0.3,\r\n}); };\r\nvar keyframes = function (values) { return ({\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n    values: values,\r\n}); };\r\nvar defaultTransitions = {\r\n    x: underDampedSpring,\r\n    y: underDampedSpring,\r\n    z: underDampedSpring,\r\n    rotate: underDampedSpring,\r\n    rotateX: underDampedSpring,\r\n    rotateY: underDampedSpring,\r\n    rotateZ: underDampedSpring,\r\n    scaleX: criticallyDampedSpring,\r\n    scaleY: criticallyDampedSpring,\r\n    scale: criticallyDampedSpring,\r\n    opacity: linearTween,\r\n    backgroundColor: linearTween,\r\n    color: linearTween,\r\n    default: criticallyDampedSpring,\r\n};\r\nvar getDefaultTransition = function (valueKey, to) {\r\n    var transitionFactory;\r\n    if (isKeyframesTarget(to)) {\r\n        transitionFactory = keyframes;\r\n    }\r\n    else {\r\n        transitionFactory =\r\n            defaultTransitions[valueKey] || defaultTransitions.default;\r\n    }\r\n    return Object.assign({ to: to }, transitionFactory(to));\r\n};\r\n\r\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { number } from 'style-value-types';\r\n\r\nvar int = Object.assign(Object.assign({}, number), { transform: Math.round });\r\n\r\nexport { int };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\r\nimport { int } from './type-int.js';\r\n\r\nvar numberValueTypes = {\r\n    // Border props\r\n    borderWidth: px,\r\n    borderTopWidth: px,\r\n    borderRightWidth: px,\r\n    borderBottomWidth: px,\r\n    borderLeftWidth: px,\r\n    borderRadius: px,\r\n    radius: px,\r\n    borderTopLeftRadius: px,\r\n    borderTopRightRadius: px,\r\n    borderBottomRightRadius: px,\r\n    borderBottomLeftRadius: px,\r\n    // Positioning props\r\n    width: px,\r\n    maxWidth: px,\r\n    height: px,\r\n    maxHeight: px,\r\n    size: px,\r\n    top: px,\r\n    right: px,\r\n    bottom: px,\r\n    left: px,\r\n    // Spacing props\r\n    padding: px,\r\n    paddingTop: px,\r\n    paddingRight: px,\r\n    paddingBottom: px,\r\n    paddingLeft: px,\r\n    margin: px,\r\n    marginTop: px,\r\n    marginRight: px,\r\n    marginBottom: px,\r\n    marginLeft: px,\r\n    // Transform props\r\n    rotate: degrees,\r\n    rotateX: degrees,\r\n    rotateY: degrees,\r\n    rotateZ: degrees,\r\n    scale: scale,\r\n    scaleX: scale,\r\n    scaleY: scale,\r\n    scaleZ: scale,\r\n    skew: degrees,\r\n    skewX: degrees,\r\n    skewY: degrees,\r\n    distance: px,\r\n    translateX: px,\r\n    translateY: px,\r\n    translateZ: px,\r\n    x: px,\r\n    y: px,\r\n    z: px,\r\n    perspective: px,\r\n    transformPerspective: px,\r\n    opacity: alpha,\r\n    originX: progressPercentage,\r\n    originY: progressPercentage,\r\n    originZ: px,\r\n    // Misc\r\n    zIndex: int,\r\n    // SVG\r\n    fillOpacity: alpha,\r\n    strokeOpacity: alpha,\r\n    numOctaves: int,\r\n};\r\n\r\nexport { numberValueTypes };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { color, filter } from 'style-value-types';\r\nimport { numberValueTypes } from './number.js';\r\n\r\n/**\r\n * A map of default value types for common values\r\n */\r\nvar defaultValueTypes = Object.assign(Object.assign({}, numberValueTypes), { \r\n    // Color props\r\n    color: color, backgroundColor: color, outlineColor: color, fill: color, stroke: color, \r\n    // Border props\r\n    borderColor: color, borderTopColor: color, borderRightColor: color, borderBottomColor: color, borderLeftColor: color, filter: filter, WebkitFilter: filter });\r\n/**\r\n * Gets the default ValueType for the provided value key\r\n */\r\nvar getDefaultValueType = function (key) { return defaultValueTypes[key]; };\r\n\r\nexport { defaultValueTypes, getDefaultValueType };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { filter, complex } from 'style-value-types';\r\nimport { getDefaultValueType } from './defaults.js';\r\n\r\nfunction getAnimatableNone(key, value) {\r\n    var _a;\r\n    var defaultValueType = getDefaultValueType(key);\r\n    if (defaultValueType !== filter)\r\n        defaultValueType = complex;\r\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\r\n}\r\n\r\nexport { getAnimatableNone };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../utils/fix-process-env';\r\nimport { __rest, __spreadArray, __read } from 'tslib';\r\nimport { complex } from 'style-value-types';\r\nimport { isNumericalString } from '../../utils/is-numerical-string.js';\r\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.js';\r\nimport { motionValue } from '../../value/index.js';\r\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.js';\r\nimport { findValueType } from '../dom/value-types/find.js';\r\nimport { resolveVariant } from './variants.js';\r\n\r\n/**\r\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\r\n * it doesn't exist.\r\n */\r\nfunction setMotionValue(visualElement, key, value) {\r\n    if (visualElement.hasValue(key)) {\r\n        visualElement.getValue(key).set(value);\r\n    }\r\n    else {\r\n        visualElement.addValue(key, motionValue(value));\r\n    }\r\n}\r\nfunction setTarget(visualElement, definition) {\r\n    var resolved = resolveVariant(visualElement, definition);\r\n    var _a = resolved\r\n        ? visualElement.makeTargetAnimatable(resolved, false)\r\n        : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = __rest(_a, [\"transitionEnd\", \"transition\"]);\r\n    target = Object.assign(Object.assign({}, target), transitionEnd);\r\n    for (var key in target) {\r\n        var value = resolveFinalValueInKeyframes(target[key]);\r\n        setMotionValue(visualElement, key, value);\r\n    }\r\n}\r\nfunction setVariants(visualElement, variantLabels) {\r\n    var reversedLabels = __spreadArray([], __read(variantLabels)).reverse();\r\n    reversedLabels.forEach(function (key) {\r\n        var _a;\r\n        var variant = visualElement.getVariant(key);\r\n        variant && setTarget(visualElement, variant);\r\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\r\n            setVariants(child, variantLabels);\r\n        });\r\n    });\r\n}\r\nfunction setValues(visualElement, definition) {\r\n    if (Array.isArray(definition)) {\r\n        return setVariants(visualElement, definition);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        return setVariants(visualElement, [definition]);\r\n    }\r\n    else {\r\n        setTarget(visualElement, definition);\r\n    }\r\n}\r\nfunction checkTargetForNewValues(visualElement, target, origin) {\r\n    var _a, _b, _c;\r\n    var _d;\r\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\r\n    var numNewValues = newValueKeys.length;\r\n    if (!numNewValues)\r\n        return;\r\n    for (var i = 0; i < numNewValues; i++) {\r\n        var key = newValueKeys[i];\r\n        var targetValue = target[key];\r\n        var value = null;\r\n        /**\r\n         * If the target is a series of keyframes, we can use the first value\r\n         * in the array. If this first value is null, we'll still need to read from the DOM.\r\n         */\r\n        if (Array.isArray(targetValue)) {\r\n            value = targetValue[0];\r\n        }\r\n        /**\r\n         * If the target isn't keyframes, or the first keyframe was null, we need to\r\n         * first check if an origin value was explicitly defined in the transition as \"from\",\r\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\r\n         */\r\n        if (value === null) {\r\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\r\n        }\r\n        /**\r\n         * If value is still undefined or null, ignore it. Preferably this would throw,\r\n         * but this was causing issues in Framer.\r\n         */\r\n        if (value === undefined || value === null)\r\n            continue;\r\n        if (typeof value === \"string\" && isNumericalString(value)) {\r\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n            value = parseFloat(value);\r\n        }\r\n        else if (!findValueType(value) && complex.test(targetValue)) {\r\n            value = getAnimatableNone(key, targetValue);\r\n        }\r\n        visualElement.addValue(key, motionValue(value));\r\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\r\n        visualElement.setBaseTarget(key, value);\r\n    }\r\n}\r\nfunction getOriginFromTransition(key, transition) {\r\n    if (!transition)\r\n        return;\r\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\r\n    return valueTransition.from;\r\n}\r\nfunction getOrigin(target, transition, visualElement) {\r\n    var _a, _b;\r\n    var origin = {};\r\n    for (var key in target) {\r\n        origin[key] =\r\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\r\n    }\r\n    return origin;\r\n}\r\n\r\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\r\n */\r\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\r\n\r\nexport { isNumericalString };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { isKeyframesTarget } from '../animation/utils/is-keyframes-target.js';\r\n\r\nvar isCustomValue = function (v) {\r\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\r\n};\r\nvar resolveFinalValueInKeyframes = function (v) {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n};\r\n\r\nexport { isCustomValue, resolveFinalValueInKeyframes };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { __spreadArray, __read } from 'tslib';\r\nimport { color, complex } from 'style-value-types';\r\nimport { dimensionValueTypes } from './dimensions.js';\r\nimport { testValueType } from './test.js';\r\n\r\n/**\r\n * A list of all ValueTypes\r\n */\r\nvar valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes)), [color, complex]);\r\n/**\r\n * Tests a value against the list of ValueTypes\r\n */\r\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\r\n\r\nexport { findValueType };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * Tests a provided value against a ValueType\r\n */\r\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\r\n\r\nexport { testValueType };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n/**\r\n * ValueType for \"auto\"\r\n */\r\nvar auto = {\r\n    test: function (v) { return v === \"auto\"; },\r\n    parse: function (v) { return v; },\r\n};\r\n\r\nexport { auto };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { number, px, percent, degrees, vw, vh } from 'style-value-types';\r\nimport { testValueType } from './test.js';\r\nimport { auto } from './type-auto.js';\r\n\r\n/**\r\n * A list of value types commonly used for dimensions\r\n */\r\nvar dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\r\n/**\r\n * Tests a dimensional value against the list of dimension ValueTypes\r\n */\r\nvar findDimensionValueType = function (v) {\r\n    return dimensionValueTypes.find(testValueType(v));\r\n};\r\n\r\nexport { dimensionValueTypes, findDimensionValueType };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * Decides if the supplied variable is an array of variant labels\r\n */\r\nfunction isVariantLabels(v) {\r\n    return Array.isArray(v);\r\n}\r\n/**\r\n * Decides if the supplied variable is variant label\r\n */\r\nfunction isVariantLabel(v) {\r\n    return typeof v === \"string\" || isVariantLabels(v);\r\n}\r\n/**\r\n * Creates an object containing the latest state of every MotionValue on a VisualElement\r\n */\r\nfunction getCurrent(visualElement) {\r\n    var current = {};\r\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\r\n    return current;\r\n}\r\n/**\r\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\r\n */\r\nfunction getVelocity(visualElement) {\r\n    var velocity = {};\r\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\r\n    return velocity;\r\n}\r\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\r\n    var _a;\r\n    if (currentValues === void 0) { currentValues = {}; }\r\n    if (currentVelocity === void 0) { currentVelocity = {}; }\r\n    if (typeof definition === \"string\") {\r\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\r\n    }\r\n    return typeof definition === \"function\"\r\n        ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)\r\n        : definition;\r\n}\r\nfunction resolveVariant(visualElement, definition, custom) {\r\n    var props = visualElement.getProps();\r\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\r\n}\r\nfunction checkIfControllingVariants(props) {\r\n    var _a;\r\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\r\n        isVariantLabel(props.initial) ||\r\n        isVariantLabel(props.animate) ||\r\n        isVariantLabel(props.whileHover) ||\r\n        isVariantLabel(props.whileDrag) ||\r\n        isVariantLabel(props.whileTap) ||\r\n        isVariantLabel(props.whileFocus) ||\r\n        isVariantLabel(props.exit));\r\n}\r\nfunction checkIfVariantNode(props) {\r\n    return Boolean(checkIfControllingVariants(props) || props.variants);\r\n}\r\n\r\nexport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel, isVariantLabels, resolveVariant, resolveVariantFromProps };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { __spreadArray, __read } from 'tslib';\r\n//import { invariant } from 'hey-listen';\r\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.js';\r\nimport { setValues } from '../render/utils/setters.js';\r\n\r\n/**\r\n * @public\r\n */\r\nfunction animationControls(startStopNotifier) {\r\n    /**\r\n     * Track whether the host component has mounted.\r\n     */\r\n    var hasMounted = false;\r\n    /**\r\n     * Pending animations that are started before a component is mounted.\r\n     * TODO: Remove this as animations should only run in effects\r\n     */\r\n    var pendingAnimations = [];\r\n    /**\r\n     * A collection of linked component animation controls.\r\n     */\r\n    var subscribers = new Set();\r\n    var stopNotification;\r\n    var controls = {\r\n        subscribe: function (visualElement) {\r\n            if (subscribers.size === 0){\r\n                stopNotification = startStopNotifier?.();\r\n            }\r\n            subscribers.add(visualElement);\r\n            return function () { \r\n                subscribers.delete(visualElement); \r\n                if (subscribers.size===0){\r\n                    stopNotification?.()\r\n                }\r\n            };\r\n        },\r\n        start: function (definition, transitionOverride) {\r\n            /**\r\n             * TODO: We only perform this hasMounted check because in Framer we used to\r\n             * encourage the ability to start an animation within the render phase. This\r\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\r\n             * we can ditch this.\r\n             */\r\n            if (hasMounted) {\r\n                var animations_1 = [];\r\n                subscribers.forEach(function (visualElement) {\r\n                    animations_1.push(animateVisualElement(visualElement, definition, {\r\n                        transitionOverride: transitionOverride,\r\n                    }));\r\n                });\r\n                return Promise.all(animations_1);\r\n            }\r\n            else {\r\n                return new Promise(function (resolve) {\r\n                    pendingAnimations.push({\r\n                        animation: [definition, transitionOverride],\r\n                        resolve: resolve,\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        set: function (definition) {\r\n            //invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\r\n            return subscribers.forEach(function (visualElement) {\r\n                setValues(visualElement, definition);\r\n            });\r\n        },\r\n        stop: function () {\r\n            subscribers.forEach(function (visualElement) {\r\n                stopAnimation(visualElement);\r\n            });\r\n        },\r\n        mount: function () {\r\n            hasMounted = true;\r\n            pendingAnimations.forEach(function (_a) {\r\n                var animation = _a.animation, resolve = _a.resolve;\r\n                controls.start.apply(controls, __spreadArray([], __read(animation))).then(resolve);\r\n            });\r\n            return function () {\r\n                hasMounted = false;\r\n                controls.stop();\r\n            };\r\n        },\r\n    };\r\n    return controls;\r\n}\r\n\r\nexport { animationControls };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nvar valueScaleCorrection = {};\r\n/**\r\n * @internal\r\n */\r\nfunction addScaleCorrection(correctors) {\r\n    for (var key in correctors) {\r\n        valueScaleCorrection[key] = correctors[key];\r\n    }\r\n}\r\n\r\nexport { addScaleCorrection, valueScaleCorrection };\r\n", "/** \r\nbased on framer-motion@4.1.1,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../utils/fix-process-env';\r\nimport { __spreadArray, __read } from 'tslib';\r\nimport sync, { cancelSync } from 'framesync';\r\nimport { pipe } from 'popmotion';\r\nimport { Presence } from '../components/AnimateSharedLayout/types.js';\r\nimport { eachAxis } from '../utils/each-axis.js';\r\nimport { axisBox } from '../utils/geometry/index.js';\r\nimport { removeBoxTransforms, applyBoxTransforms } from '../utils/geometry/delta-apply.js';\r\nimport { calcRelativeBox, updateBoxDelta } from '../utils/geometry/delta-calc.js';\r\nimport { motionValue } from '../value/index.js';\r\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\r\nimport { buildLayoutProjectionTransform } from './html/utils/build-projection-transform.js';\r\nimport { variantPriorityOrder } from './utils/animation-state.js';\r\nimport { createLifecycles } from './utils/lifecycles.js';\r\nimport { updateMotionValuesFromProps } from './utils/motion-values.js';\r\nimport { updateLayoutDeltas } from './utils/projection.js';\r\nimport { createLayoutState, createProjectionState } from './utils/state.js';\r\nimport { FlatTree } from './utils/flat-tree.js';\r\nimport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel } from './utils/variants.js';\r\nimport { setCurrentViewportBox } from './dom/projection/relative-set.js';\r\nimport { isDraggable } from './utils/is-draggable.js';\r\n\r\nvar visualElement = function (_a) {\r\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\r\n    return function (_a, options) {\r\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;\r\n        if (options === void 0) { options = {}; }\r\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\r\n        /**\r\n         * The instance of the render-specific node that will be hydrated by the\r\n         * exposed React ref. So for example, this visual element can host a\r\n         * HTMLElement, plain object, or Three.js object. The functions provided\r\n         * in VisualElementConfig allow us to interface with this instance.\r\n         */\r\n        var instance;\r\n        /**\r\n         * Manages the subscriptions for a visual element's lifecycle, for instance\r\n         * onRender and onViewportBoxUpdate.\r\n         */\r\n        var lifecycles = createLifecycles();\r\n        /**\r\n         *\r\n         */\r\n        var projection = createProjectionState();\r\n        /**\r\n         * A reference to the nearest projecting parent. This is either\r\n         * undefined if we haven't looked for the nearest projecting parent,\r\n         * false if there is no parent performing layout projection, or a reference\r\n         * to the projecting parent.\r\n         */\r\n        var projectionParent;\r\n        /**\r\n         * This is a reference to the visual state of the \"lead\" visual element.\r\n         * Usually, this will be this visual element. But if it shares a layoutId\r\n         * with other visual elements, only one of them will be designated lead by\r\n         * AnimateSharedLayout. All the other visual elements will take on the visual\r\n         * appearance of the lead while they crossfade to it.\r\n         */\r\n        var leadProjection = projection;\r\n        var leadLatestValues = latestValues;\r\n        var unsubscribeFromLeadVisualElement;\r\n        /**\r\n         * The latest layout measurements and calculated projections. This\r\n         * is seperate from the target projection data in visualState as\r\n         * many visual elements might point to the same piece of visualState as\r\n         * a target, whereas they might each have different layouts and thus\r\n         * projection calculations needed to project into the same viewport box.\r\n         */\r\n        var layoutState = createLayoutState();\r\n        /**\r\n         *\r\n         */\r\n        var crossfader;\r\n        /**\r\n         * Keep track of whether the viewport box has been updated since the\r\n         * last time the layout projection was re-calculated.\r\n         */\r\n        var hasViewportBoxUpdated = false;\r\n        /**\r\n         * A map of all motion values attached to this visual element. Motion\r\n         * values are source of truth for any given animated value. A motion\r\n         * value might be provided externally by the component via props.\r\n         */\r\n        var values = new Map();\r\n        /**\r\n         * A map of every subscription that binds the provided or generated\r\n         * motion values onChange listeners to this visual element.\r\n         */\r\n        var valueSubscriptions = new Map();\r\n        /**\r\n         * A reference to the previously-provided motion values as returned\r\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\r\n         * if any motion values need to be removed after props are updated.\r\n         */\r\n        var prevMotionValues = {};\r\n        /**\r\n         * x/y motion values that track the progress of initiated layout\r\n         * animations.\r\n         *\r\n         * TODO: Target for removal\r\n         */\r\n        var projectionTargetProgress;\r\n        /**\r\n         * When values are removed from all animation props we need to search\r\n         * for a fallback value to animate to. These values are tracked in baseTarget.\r\n         */\r\n        var baseTarget = Object.assign({}, latestValues);\r\n        // Internal methods ========================\r\n        /**\r\n         * On mount, this will be hydrated with a callback to disconnect\r\n         * this visual element from its parent on unmount.\r\n         */\r\n        var removeFromVariantTree;\r\n        /**\r\n         *\r\n         */\r\n        function render() {\r\n            if (!instance)\r\n                return;\r\n            if (element.isProjectionReady()) {\r\n                /**\r\n                 * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\r\n                 * This is the final box that we will then project into by calculating a transform delta and\r\n                 * applying it to the corrected box.\r\n                 */\r\n                applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);\r\n                /**\r\n                 * Update the delta between the corrected box and the final target box, after\r\n                 * user-set transforms are applied to it. This will be used by the renderer to\r\n                 * create a transform style that will reproject the element from its actual layout\r\n                 * into the desired bounding box.\r\n                 */\r\n                updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);\r\n            }\r\n            triggerBuild();\r\n            renderInstance(instance, renderState);\r\n        }\r\n        function triggerBuild() {\r\n            var valuesToRender = latestValues;\r\n            if (crossfader && crossfader.isActive()) {\r\n                var crossfadedValues = crossfader.getCrossfadeState(element);\r\n                if (crossfadedValues)\r\n                    valuesToRender = crossfadedValues;\r\n            }\r\n            build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);\r\n        }\r\n        function update() {\r\n            lifecycles.notifyUpdate(latestValues);\r\n        }\r\n        function updateLayoutProjection() {\r\n            if (!element.isProjectionReady())\r\n                return;\r\n            var delta = layoutState.delta, treeScale = layoutState.treeScale;\r\n            var prevTreeScaleX = treeScale.x;\r\n            var prevTreeScaleY = treeScale.y;\r\n            var prevDeltaTransform = layoutState.deltaTransform;\r\n            updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);\r\n            hasViewportBoxUpdated &&\r\n                element.notifyViewportBoxUpdate(leadProjection.target, delta);\r\n            hasViewportBoxUpdated = false;\r\n            var deltaTransform = buildLayoutProjectionTransform(delta, treeScale);\r\n            if (deltaTransform !== prevDeltaTransform ||\r\n                // Also compare calculated treeScale, for values that rely on this only for scale correction\r\n                prevTreeScaleX !== treeScale.x ||\r\n                prevTreeScaleY !== treeScale.y) {\r\n                element.scheduleRender();\r\n            }\r\n            layoutState.deltaTransform = deltaTransform;\r\n        }\r\n        function updateTreeLayoutProjection() {\r\n            element.layoutTree.forEach(fireUpdateLayoutProjection);\r\n        }\r\n        /**\r\n         *\r\n         */\r\n        function bindToMotionValue(key, value) {\r\n            var removeOnChange = value.onChange(function (latestValue) {\r\n                latestValues[key] = latestValue;\r\n                props.onUpdate && sync.update(update, false, true);\r\n            });\r\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\r\n            valueSubscriptions.set(key, function () {\r\n                removeOnChange();\r\n                removeOnRenderRequest();\r\n            });\r\n        }\r\n        /**\r\n         * Any motion values that are provided to the element when created\r\n         * aren't yet bound to the element, as this would technically be impure.\r\n         * However, we iterate through the motion values and set them to the\r\n         * initial values for this component.\r\n         *\r\n         * TODO: This is impure and we should look at changing this to run on mount.\r\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\r\n         * more a reflection of the test.\r\n         */\r\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\r\n        for (var key in initialMotionValues) {\r\n            var value = initialMotionValues[key];\r\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\r\n                value.set(latestValues[key], false);\r\n            }\r\n        }\r\n        /**\r\n         * Determine what role this visual element should take in the variant tree.\r\n         */\r\n        var isControllingVariants = checkIfControllingVariants(props);\r\n        var isVariantNode = checkIfVariantNode(props);\r\n        var element = Object.assign(Object.assign({ treeType: treeType, \r\n            /**\r\n             * This is a mirror of the internal instance prop, which keeps\r\n             * VisualElement type-compatible with React's RefObject.\r\n             */\r\n            current: null, \r\n            /**\r\n             * The depth of this visual element within the visual element tree.\r\n             */\r\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \r\n            /**\r\n             * An ancestor path back to the root visual element. This is used\r\n             * by layout projection to quickly recurse back up the tree.\r\n             */\r\n            path: parent ? __spreadArray(__spreadArray([], __read(parent.path)), [parent]) : [], layoutTree: parent ? parent.layoutTree : new FlatTree(), \r\n            /**\r\n             *\r\n             */\r\n            presenceId: presenceId,\r\n            projection: projection, \r\n            /**\r\n             * If this component is part of the variant tree, it should track\r\n             * any children that are also part of the tree. This is essentially\r\n             * a shadow tree to simplify logic around how to stagger over children.\r\n             */\r\n            variantChildren: isVariantNode ? new Set() : undefined, \r\n            /**\r\n             * Whether this instance is visible. This can be changed imperatively\r\n             * by AnimateSharedLayout, is analogous to CSS's visibility in that\r\n             * hidden elements should take up layout, and needs enacting by the configured\r\n             * render function.\r\n             */\r\n            isVisible: undefined, \r\n            /**\r\n             * Normally, if a component is controlled by a parent's variants, it can\r\n             * rely on that ancestor to trigger animations further down the tree.\r\n             * However, if a component is created after its parent is mounted, the parent\r\n             * won't trigger that mount animation so the child needs to.\r\n             *\r\n             * TODO: This might be better replaced with a method isParentMounted\r\n             */\r\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \r\n            /**\r\n             * This can be set by AnimatePresence to force components that mount\r\n             * at the same time as it to mount as if they have initial={false} set.\r\n             */\r\n            blockInitialAnimation: blockInitialAnimation, \r\n            /**\r\n             * Determine whether this component has mounted yet. This is mostly used\r\n             * by variant children to determine whether they need to trigger their\r\n             * own animations on mount.\r\n             */\r\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\r\n                instance = element.current = newInstance;\r\n                element.pointTo(element);\r\n                if (isVariantNode && parent && !isControllingVariants) {\r\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\r\n                }\r\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\r\n            },\r\n            /**\r\n             *\r\n             */\r\n            unmount: function () {\r\n                cancelSync.update(update);\r\n                cancelSync.render(render);\r\n                cancelSync.preRender(element.updateLayoutProjection);\r\n                valueSubscriptions.forEach(function (remove) { return remove(); });\r\n                element.stopLayoutAnimation();\r\n                element.layoutTree.remove(element);\r\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\r\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\r\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\r\n                lifecycles.clearAllListeners();\r\n            },\r\n            /**\r\n             * Add a child visual element to our set of children.\r\n             */\r\n            addVariantChild: function (child) {\r\n                var _a;\r\n                var closestVariantNode = element.getClosestVariantNode();\r\n                if (closestVariantNode) {\r\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\r\n                    return function () { return closestVariantNode.variantChildren.delete(child); };\r\n                }\r\n            },\r\n            sortNodePosition: function (other) {\r\n                /**\r\n                 * If these nodes aren't even of the same type we can't compare their depth.\r\n                 */\r\n                if (!sortNodePosition || treeType !== other.treeType)\r\n                    return 0;\r\n                return sortNodePosition(element.getInstance(), other.getInstance());\r\n            }, \r\n            /**\r\n             * Returns the closest variant node in the tree starting from\r\n             * this visual element.\r\n             */\r\n            getClosestVariantNode: function () {\r\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\r\n            }, \r\n            /**\r\n             * A method that schedules an update to layout projections throughout\r\n             * the tree. We inherit from the parent so there's only ever one\r\n             * job scheduled on the next frame - that of the root visual element.\r\n             */\r\n            scheduleUpdateLayoutProjection: parent\r\n                ? parent.scheduleUpdateLayoutProjection\r\n                : function () {\r\n                    return sync.preRender(element.updateTreeLayoutProjection, false, true);\r\n                }, \r\n            /**\r\n             * Expose the latest layoutId prop.\r\n             */\r\n            getLayoutId: function () { return props.layoutId; }, \r\n            /**\r\n             * Returns the current instance.\r\n             */\r\n            getInstance: function () { return instance; }, \r\n            /**\r\n             * Get/set the latest static values.\r\n             */\r\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \r\n            /**\r\n             * Returns the latest motion value state. Currently only used to take\r\n             * a snapshot of the visual element - perhaps this can return the whole\r\n             * visual state\r\n             */\r\n            getLatestValues: function () { return latestValues; }, \r\n            /**\r\n             * Set the visiblity of the visual element. If it's changed, schedule\r\n             * a render to reflect these changes.\r\n             */\r\n            setVisibility: function (visibility) {\r\n                if (element.isVisible === visibility)\r\n                    return;\r\n                element.isVisible = visibility;\r\n                element.scheduleRender();\r\n            },\r\n            /**\r\n             * Make a target animatable by Popmotion. For instance, if we're\r\n             * trying to animate width from 100px to 100vw we need to measure 100vw\r\n             * in pixels to determine what we really need to animate to. This is also\r\n             * pluggable to support Framer's custom value types like Color,\r\n             * and CSS variables.\r\n             */\r\n            makeTargetAnimatable: function (target, canMutate) {\r\n                if (canMutate === void 0) { canMutate = true; }\r\n                return makeTargetAnimatable(element, target, props, canMutate);\r\n            },\r\n            // Motion values ========================\r\n            /**\r\n             * Add a motion value and bind it to this visual element.\r\n             */\r\n            addValue: function (key, value) {\r\n                // Remove existing value if it exists\r\n                if (element.hasValue(key))\r\n                    element.removeValue(key);\r\n                values.set(key, value);\r\n                latestValues[key] = value.get();\r\n                bindToMotionValue(key, value);\r\n            },\r\n            /**\r\n             * Remove a motion value and unbind any active subscriptions.\r\n             */\r\n            removeValue: function (key) {\r\n                var _a;\r\n                values.delete(key);\r\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\r\n                valueSubscriptions.delete(key);\r\n                delete latestValues[key];\r\n                removeValueFromRenderState(key, renderState);\r\n            }, \r\n            /**\r\n             * Check whether we have a motion value for this key\r\n             */\r\n            hasValue: function (key) { return values.has(key); }, \r\n            /**\r\n             * Get a motion value for this key. If called with a default\r\n             * value, we'll create one if none exists.\r\n             */\r\n            getValue: function (key, defaultValue) {\r\n                var value = values.get(key);\r\n                if (value === undefined && defaultValue !== undefined) {\r\n                    value = motionValue(defaultValue);\r\n                    element.addValue(key, value);\r\n                }\r\n                return value;\r\n            }, \r\n            /**\r\n             * Iterate over our motion values.\r\n             */\r\n            forEachValue: function (callback) { return values.forEach(callback); }, \r\n            /**\r\n             * If we're trying to animate to a previously unencountered value,\r\n             * we need to check for it in our state and as a last resort read it\r\n             * directly from the instance (which might have performance implications).\r\n             */\r\n            readValue: function (key) { var _a; return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options); }, \r\n            /**\r\n             * Set the base target to later animate back to. This is currently\r\n             * only hydrated on creation and when we first read a value.\r\n             */\r\n            setBaseTarget: function (key, value) {\r\n                baseTarget[key] = value;\r\n            },\r\n            /**\r\n             * Find the base target for a value thats been removed from all animation\r\n             * props.\r\n             */\r\n            getBaseTarget: function (key) {\r\n                if (getBaseTarget) {\r\n                    var target = getBaseTarget(props, key);\r\n                    if (target !== undefined && !isMotionValue(target))\r\n                        return target;\r\n                }\r\n                return baseTarget[key];\r\n            } }, lifecycles), { \r\n            /**\r\n             * Build the renderer state based on the latest visual state.\r\n             */\r\n            build: function () {\r\n                triggerBuild();\r\n                return renderState;\r\n            },\r\n            /**\r\n             * Schedule a render on the next animation frame.\r\n             */\r\n            scheduleRender: function () {\r\n                sync.render(render, false, true);\r\n            }, \r\n            /**\r\n             * Synchronously fire render. It's prefered that we batch renders but\r\n             * in many circumstances, like layout measurement, we need to run this\r\n             * synchronously. However in those instances other measures should be taken\r\n             * to batch reads/writes.\r\n             */\r\n            syncRender: render, \r\n            /**\r\n             * Update the provided props. Ensure any newly-added motion values are\r\n             * added to our map, old ones removed, and listeners updated.\r\n             */\r\n            setProps: function (newProps) {\r\n                props = newProps;\r\n                lifecycles.updatePropListeners(newProps);\r\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\r\n            }, getProps: function () { return props; }, \r\n            // Variants ==============================\r\n            /**\r\n             * Returns the variant definition with a given name.\r\n             */\r\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \r\n            /**\r\n             * Returns the defined default transition on this component.\r\n             */\r\n            getDefaultTransition: function () { return props.transition; }, \r\n            /**\r\n             * Used by child variant nodes to get the closest ancestor variant props.\r\n             */\r\n            getVariantContext: function (startAtParent) {\r\n                if (startAtParent === void 0) { startAtParent = false; }\r\n                if (startAtParent)\r\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\r\n                if (!isControllingVariants) {\r\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\r\n                    if (props.initial !== undefined) {\r\n                        context_1.initial = props.initial;\r\n                    }\r\n                    return context_1;\r\n                }\r\n                var context = {};\r\n                for (var i = 0; i < numVariantProps; i++) {\r\n                    var name_1 = variantProps[i];\r\n                    var prop = props[name_1];\r\n                    if (isVariantLabel(prop) || prop === false) {\r\n                        context[name_1] = prop;\r\n                    }\r\n                }\r\n                return context;\r\n            },\r\n            // Layout projection ==============================\r\n            /**\r\n             * Enable layout projection for this visual element. Won't actually\r\n             * occur until we also have hydrated layout measurements.\r\n             */\r\n            enableLayoutProjection: function () {\r\n                projection.isEnabled = true;\r\n                element.layoutTree.add(element);\r\n            },\r\n            /**\r\n             * Lock the projection target, for instance when dragging, so\r\n             * nothing else can try and animate it.\r\n             */\r\n            lockProjectionTarget: function () {\r\n                projection.isTargetLocked = true;\r\n            },\r\n            unlockProjectionTarget: function () {\r\n                element.stopLayoutAnimation();\r\n                projection.isTargetLocked = false;\r\n            }, getLayoutState: function () { return layoutState; }, setCrossfader: function (newCrossfader) {\r\n                crossfader = newCrossfader;\r\n            }, isProjectionReady: function () {\r\n                return projection.isEnabled &&\r\n                    projection.isHydrated &&\r\n                    layoutState.isHydrated;\r\n            }, \r\n            /**\r\n             * Start a layout animation on a given axis.\r\n             */\r\n            startLayoutAnimation: function (axis, transition, isRelative) {\r\n                if (isRelative === void 0) { isRelative = false; }\r\n                var progress = element.getProjectionAnimationProgress()[axis];\r\n                var _a = isRelative\r\n                    ? projection.relativeTarget[axis]\r\n                    : projection.target[axis], min = _a.min, max = _a.max;\r\n                var length = max - min;\r\n                progress.clearListeners();\r\n                progress.set(min);\r\n                progress.set(min); // Set twice to hard-reset velocity\r\n                progress.onChange(function (v) {\r\n                    element.setProjectionTargetAxis(axis, v, v + length, isRelative);\r\n                });\r\n                return element.animateMotionValue(axis, progress, 0, transition);\r\n            },\r\n            /**\r\n             * Stop layout animations.\r\n             */\r\n            stopLayoutAnimation: function () {\r\n                eachAxis(function (axis) {\r\n                    return element.getProjectionAnimationProgress()[axis].stop();\r\n                });\r\n            },\r\n            /**\r\n             * Measure the current viewport box with or without transforms.\r\n             * Only measures axis-aligned boxes, rotate and skew must be manually\r\n             * removed with a re-render to work.\r\n             */\r\n            measureViewportBox: function (withTransform) {\r\n                if (withTransform === void 0) { withTransform = true; }\r\n                var viewportBox = measureViewportBox(instance, options);\r\n                if (!withTransform)\r\n                    removeBoxTransforms(viewportBox, latestValues);\r\n                return viewportBox;\r\n            },\r\n            /**\r\n             * Get the motion values tracking the layout animations on each\r\n             * axis. Lazy init if not already created.\r\n             */\r\n            getProjectionAnimationProgress: function () {\r\n                projectionTargetProgress || (projectionTargetProgress = {\r\n                    x: motionValue(0),\r\n                    y: motionValue(0),\r\n                });\r\n                return projectionTargetProgress;\r\n            },\r\n            /**\r\n             * Update the projection of a single axis. Schedule an update to\r\n             * the tree layout projection.\r\n             */\r\n            setProjectionTargetAxis: function (axis, min, max, isRelative) {\r\n                if (isRelative === void 0) { isRelative = false; }\r\n                var target;\r\n                if (isRelative) {\r\n                    if (!projection.relativeTarget) {\r\n                        projection.relativeTarget = axisBox();\r\n                    }\r\n                    target = projection.relativeTarget[axis];\r\n                }\r\n                else {\r\n                    projection.relativeTarget = undefined;\r\n                    target = projection.target[axis];\r\n                }\r\n                projection.isHydrated = true;\r\n                target.min = min;\r\n                target.max = max;\r\n                // Flag that we want to fire the onViewportBoxUpdate event handler\r\n                hasViewportBoxUpdated = true;\r\n                lifecycles.notifySetAxisTarget();\r\n            },\r\n            /**\r\n             * Rebase the projection target on top of the provided viewport box\r\n             * or the measured layout. This ensures that non-animating elements\r\n             * don't fall out of sync differences in measurements vs projections\r\n             * after a page scroll or other relayout.\r\n             */\r\n            rebaseProjectionTarget: function (force, box) {\r\n                if (box === void 0) { box = layoutState.layout; }\r\n                var _a = element.getProjectionAnimationProgress(), x = _a.x, y = _a.y;\r\n                var shouldRebase = !projection.relativeTarget &&\r\n                    !projection.isTargetLocked &&\r\n                    !x.isAnimating() &&\r\n                    !y.isAnimating();\r\n                if (force || shouldRebase) {\r\n                    eachAxis(function (axis) {\r\n                        var _a = box[axis], min = _a.min, max = _a.max;\r\n                        element.setProjectionTargetAxis(axis, min, max);\r\n                    });\r\n                }\r\n            },\r\n            /**\r\n             * Notify the visual element that its layout is up-to-date.\r\n             * Currently Animate.tsx uses this to check whether a layout animation\r\n             * needs to be performed.\r\n             */\r\n            notifyLayoutReady: function (config) {\r\n                setCurrentViewportBox(element);\r\n                element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);\r\n            }, \r\n            /**\r\n             * Temporarily reset the transform of the instance.\r\n             */\r\n            resetTransform: function () { return resetTransform(element, instance, props); }, restoreTransform: function () { return restoreTransform(instance, renderState); }, updateLayoutProjection: updateLayoutProjection,\r\n            updateTreeLayoutProjection: function () {\r\n                element.layoutTree.forEach(fireResolveRelativeTargetBox);\r\n                /**\r\n                 * Schedule the projection updates at the end of the current preRender\r\n                 * step. This will ensure that all layout trees will first resolve\r\n                 * relative projection boxes into viewport boxes, and *then*\r\n                 * update projections.\r\n                 */\r\n                sync.preRender(updateTreeLayoutProjection, false, true);\r\n                // sync.postRender(() => element.scheduleUpdateLayoutProjection())\r\n            },\r\n            getProjectionParent: function () {\r\n                if (projectionParent === undefined) {\r\n                    var foundParent = false;\r\n                    // Search backwards through the tree path\r\n                    for (var i = element.path.length - 1; i >= 0; i--) {\r\n                        var ancestor = element.path[i];\r\n                        if (ancestor.projection.isEnabled) {\r\n                            foundParent = ancestor;\r\n                            break;\r\n                        }\r\n                    }\r\n                    projectionParent = foundParent;\r\n                }\r\n                return projectionParent;\r\n            },\r\n            resolveRelativeTargetBox: function () {\r\n                var relativeParent = element.getProjectionParent();\r\n                if (!projection.relativeTarget || !relativeParent)\r\n                    return;\r\n                calcRelativeBox(projection, relativeParent.projection);\r\n                if (isDraggable(relativeParent)) {\r\n                    var target = projection.target;\r\n                    applyBoxTransforms(target, target, relativeParent.getLatestValues());\r\n                }\r\n            },\r\n            shouldResetTransform: function () {\r\n                return Boolean(props._layoutResetTransform);\r\n            },\r\n            /**\r\n             *\r\n             */\r\n            pointTo: function (newLead) {\r\n                leadProjection = newLead.projection;\r\n                leadLatestValues = newLead.getLatestValues();\r\n                /**\r\n                 * Subscribe to lead component's layout animations\r\n                 */\r\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\r\n                unsubscribeFromLeadVisualElement = pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function () {\r\n                    var _a;\r\n                    if (element.isPresent) {\r\n                        element.presence = Presence.Present;\r\n                    }\r\n                    else {\r\n                        (_a = element.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(element);\r\n                    }\r\n                }));\r\n            }, \r\n            // TODO: Clean this up\r\n            isPresent: true, presence: Presence.Entering });\r\n        return element;\r\n    };\r\n};\r\nfunction fireResolveRelativeTargetBox(child) {\r\n    child.resolveRelativeTargetBox();\r\n}\r\nfunction fireUpdateLayoutProjection(child) {\r\n    child.updateLayoutProjection();\r\n}\r\nvar variantProps = __spreadArray([\"initial\"], __read(variantPriorityOrder));\r\nvar numVariantProps = variantProps.length;\r\n\r\nexport { visualElement };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n// Call a handler once for each axis\r\nfunction eachAxis(handler) {\r\n    return [handler(\"x\"), handler(\"y\")];\r\n}\r\n\r\nexport { eachAxis };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nfunction noop(any) {\r\n    return any;\r\n}\r\n\r\nexport { noop };\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { noop } from '../noop.js';\r\n\r\n/**\r\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\r\n * it's easier to consider each axis individually. This function returns a bounding box\r\n * as a map of single-axis min/max values.\r\n */\r\nfunction convertBoundingBoxToAxisBox(_a) {\r\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\r\n    return {\r\n        x: { min: left, max: right },\r\n        y: { min: top, max: bottom },\r\n    };\r\n}\r\nfunction convertAxisBoxToBoundingBox(_a) {\r\n    var x = _a.x, y = _a.y;\r\n    return {\r\n        top: y.min,\r\n        bottom: y.max,\r\n        left: x.min,\r\n        right: x.max,\r\n    };\r\n}\r\n/**\r\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\r\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\r\n * when measuring DOM elements and DOM event points.\r\n */\r\nfunction transformBoundingBox(_a, transformPoint) {\r\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\r\n    if (transformPoint === void 0) { transformPoint = noop; }\r\n    var topLeft = transformPoint({ x: left, y: top });\r\n    var bottomRight = transformPoint({ x: right, y: bottom });\r\n    return {\r\n        top: topLeft.y,\r\n        left: topLeft.x,\r\n        bottom: bottomRight.y,\r\n        right: bottomRight.x,\r\n    };\r\n}\r\n/**\r\n * Create an empty axis box of zero size\r\n */\r\nfunction axisBox() {\r\n    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\r\n}\r\nfunction copyAxisBox(box) {\r\n    return {\r\n        x: Object.assign({}, box.x),\r\n        y: Object.assign({}, box.y),\r\n    };\r\n}\r\n/**\r\n * Create an empty box delta\r\n */\r\nvar zeroDelta = {\r\n    translate: 0,\r\n    scale: 1,\r\n    origin: 0,\r\n    originPoint: 0,\r\n};\r\nfunction delta() {\r\n    return {\r\n        x: Object.assign({}, zeroDelta),\r\n        y: Object.assign({}, zeroDelta),\r\n    };\r\n}\r\n\r\nexport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox };\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../fix-process-env';\r\nimport { __read } from 'tslib';\r\nimport { mix } from 'popmotion';\r\nimport { isDraggable } from '../../render/utils/is-draggable.js';\r\n\r\n/**\r\n * Reset an axis to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction resetAxis(axis, originAxis) {\r\n    axis.min = originAxis.min;\r\n    axis.max = originAxis.max;\r\n}\r\n/**\r\n * Reset a box to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction resetBox(box, originBox) {\r\n    resetAxis(box.x, originBox.x);\r\n    resetAxis(box.y, originBox.y);\r\n}\r\n/**\r\n * Scales a point based on a factor and an originPoint\r\n */\r\nfunction scalePoint(point, scale, originPoint) {\r\n    var distanceFromOrigin = point - originPoint;\r\n    var scaled = scale * distanceFromOrigin;\r\n    return originPoint + scaled;\r\n}\r\n/**\r\n * Applies a translate/scale delta to a point\r\n */\r\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, boxScale, originPoint);\r\n    }\r\n    return scalePoint(point, scale, originPoint) + translate;\r\n}\r\n/**\r\n * Applies a translate/scale delta to an axis\r\n */\r\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\r\n    if (translate === void 0) { translate = 0; }\r\n    if (scale === void 0) { scale = 1; }\r\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Applies a translate/scale delta to a box\r\n */\r\nfunction applyBoxDelta(box, _a) {\r\n    var x = _a.x, y = _a.y;\r\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\r\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\r\n}\r\n/**\r\n * Apply a transform to an axis from the latest resolved motion values.\r\n * This function basically acts as a bridge between a flat motion value map\r\n * and applyAxisDelta\r\n */\r\nfunction applyAxisTransforms(final, axis, transforms, _a) {\r\n    var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\r\n    // Copy the current axis to the final axis before mutation\r\n    final.min = axis.min;\r\n    final.max = axis.max;\r\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\r\n    var originPoint = mix(axis.min, axis.max, axisOrigin);\r\n    // Apply the axis delta to the final axis\r\n    applyAxisDelta(final, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\r\n}\r\n/**\r\n * The names of the motion values we want to apply as translation, scale and origin.\r\n */\r\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\r\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\r\n/**\r\n * Apply a transform to a box from the latest resolved motion values.\r\n */\r\nfunction applyBoxTransforms(finalBox, box, transforms) {\r\n    applyAxisTransforms(finalBox.x, box.x, transforms, xKeys);\r\n    applyAxisTransforms(finalBox.y, box.y, transforms, yKeys);\r\n}\r\n/**\r\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\r\n */\r\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\r\n    point -= translate;\r\n    point = scalePoint(point, 1 / scale, originPoint);\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, 1 / boxScale, originPoint);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\r\n */\r\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale) {\r\n    if (translate === void 0) { translate = 0; }\r\n    if (scale === void 0) { scale = 1; }\r\n    if (origin === void 0) { origin = 0.5; }\r\n    var originPoint = mix(axis.min, axis.max, origin) - translate;\r\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeAxisTransforms(axis, transforms, _a) {\r\n    var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\r\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale);\r\n}\r\n/**\r\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeBoxTransforms(box, transforms) {\r\n    removeAxisTransforms(box.x, transforms, xKeys);\r\n    removeAxisTransforms(box.y, transforms, yKeys);\r\n}\r\n/**\r\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\r\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\r\n *\r\n * This is the final nested loop within updateLayoutDelta for future refactoring\r\n */\r\nfunction applyTreeDeltas(box, treeScale, treePath) {\r\n    var treeLength = treePath.length;\r\n    if (!treeLength)\r\n        return;\r\n    // Reset the treeScale\r\n    treeScale.x = treeScale.y = 1;\r\n    var node;\r\n    var delta;\r\n    for (var i = 0; i < treeLength; i++) {\r\n        node = treePath[i];\r\n        delta = node.getLayoutState().delta;\r\n        // Incoporate each ancestor's scale into a culmulative treeScale for this component\r\n        treeScale.x *= delta.x.scale;\r\n        treeScale.y *= delta.y.scale;\r\n        // Apply each ancestor's calculated delta into this component's recorded layout box\r\n        applyBoxDelta(box, delta);\r\n        // If this is a draggable ancestor, also incorporate the node's transform to the layout box\r\n        if (isDraggable(node)) {\r\n            applyBoxTransforms(box, box, node.getLatestValues());\r\n        }\r\n    }\r\n}\r\n\r\nexport { applyAxisDelta, applyAxisTransforms, applyBoxDelta, applyBoxTransforms, applyPointDelta, applyTreeDeltas, removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta, resetAxis, resetBox, scalePoint };\r\n", "/** \r\nbased on framer-motion@4.1.11,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nfunction isDraggable(visualElement) {\r\n    var _a = visualElement.getProps(), drag = _a.drag, _dragX = _a._dragX;\r\n    return drag && !_dragX;\r\n}\r\n\r\nexport { isDraggable };\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../utils/fix-process-env';\r\nimport { mix, distance, clamp, progress } from 'popmotion';\r\n\r\nvar clampProgress = function (v) { return clamp(0, 1, v); };\r\n/**\r\n * Returns true if the provided value is within maxDistance of the provided target\r\n */\r\nfunction isNear(value, target, maxDistance) {\r\n    if (target === void 0) { target = 0; }\r\n    if (maxDistance === void 0) { maxDistance = 0.01; }\r\n    return distance(value, target) < maxDistance;\r\n}\r\nfunction calcLength(axis) {\r\n    return axis.max - axis.min;\r\n}\r\n/**\r\n * Calculate a transform origin relative to the source axis, between 0-1, that results\r\n * in an asthetically pleasing scale/transform needed to project from source to target.\r\n */\r\nfunction calcOrigin(source, target) {\r\n    var origin = 0.5;\r\n    var sourceLength = calcLength(source);\r\n    var targetLength = calcLength(target);\r\n    if (targetLength > sourceLength) {\r\n        origin = progress(target.min, target.max - sourceLength, source.min);\r\n    }\r\n    else if (sourceLength > targetLength) {\r\n        origin = progress(source.min, source.max - targetLength, target.min);\r\n    }\r\n    return clampProgress(origin);\r\n}\r\n/**\r\n * Update the AxisDelta with a transform that projects source into target.\r\n *\r\n * The transform `origin` is optional. If not provided, it'll be automatically\r\n * calculated based on the relative positions of the two bounding boxes.\r\n */\r\nfunction updateAxisDelta(delta, source, target, origin) {\r\n    if (origin === void 0) { origin = 0.5; }\r\n    delta.origin = origin;\r\n    delta.originPoint = mix(source.min, source.max, delta.origin);\r\n    delta.scale = calcLength(target) / calcLength(source);\r\n    if (isNear(delta.scale, 1, 0.0001))\r\n        delta.scale = 1;\r\n    delta.translate =\r\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\r\n    if (isNear(delta.translate))\r\n        delta.translate = 0;\r\n}\r\n/**\r\n * Update the BoxDelta with a transform that projects the source into the target.\r\n *\r\n * The transform `origin` is optional. If not provided, it'll be automatically\r\n * calculated based on the relative positions of the two bounding boxes.\r\n */\r\nfunction updateBoxDelta(delta, source, target, origin) {\r\n    updateAxisDelta(delta.x, source.x, target.x, defaultOrigin(origin.originX));\r\n    updateAxisDelta(delta.y, source.y, target.y, defaultOrigin(origin.originY));\r\n}\r\n/**\r\n * Currently this only accepts numerical origins, measured as 0-1, but could\r\n * accept pixel values by comparing to the target axis.\r\n */\r\nfunction defaultOrigin(origin) {\r\n    return typeof origin === \"number\" ? origin : 0.5;\r\n}\r\nfunction calcRelativeAxis(target, relative, parent) {\r\n    target.min = parent.min + relative.min;\r\n    target.max = target.min + calcLength(relative);\r\n}\r\nfunction calcRelativeBox(projection, parentProjection) {\r\n    calcRelativeAxis(projection.target.x, projection.relativeTarget.x, parentProjection.target.x);\r\n    calcRelativeAxis(projection.target.y, projection.relativeTarget.y, parentProjection.target.y);\r\n}\r\n\r\nexport { calcOrigin, calcRelativeAxis, calcRelativeBox, isNear, updateAxisDelta, updateBoxDelta };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nvar isMotionValue = function (value) {\r\n    return value !== null && typeof value === \"object\" && value.getVelocity;\r\n};\r\n\r\nexport { isMotionValue };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { axisBox, delta } from '../../utils/geometry/index.js';\r\n\r\nvar createProjectionState = function () { return ({\r\n    isEnabled: false,\r\n    isTargetLocked: false,\r\n    target: axisBox(),\r\n    targetFinal: axisBox(),\r\n}); };\r\nfunction createLayoutState() {\r\n    return {\r\n        isHydrated: false,\r\n        layout: axisBox(),\r\n        layoutCorrected: axisBox(),\r\n        treeScale: { x: 1, y: 1 },\r\n        delta: delta(),\r\n        deltaFinal: delta(),\r\n        deltaTransform: \"\",\r\n    };\r\n}\r\nvar zeroLayout = createLayoutState();\r\n\r\nexport { createLayoutState, createProjectionState, zeroLayout };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { zeroLayout } from '../../utils/state.js';\r\n\r\n/**\r\n * Build a transform style that takes a calculated delta between the element's current\r\n * space on screen and projects it into the desired space.\r\n */\r\nfunction buildLayoutProjectionTransform(_a, treeScale, latestTransform) {\r\n    var x = _a.x, y = _a.y;\r\n    /**\r\n     * The translations we use to calculate are always relative to the viewport coordinate space.\r\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\r\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\r\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\r\n     */\r\n    var xTranslate = x.translate / treeScale.x;\r\n    var yTranslate = y.translate / treeScale.y;\r\n    var transform = \"translate3d(\" + xTranslate + \"px, \" + yTranslate + \"px, 0) \";\r\n    if (latestTransform) {\r\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\r\n        if (rotate)\r\n            transform += \"rotate(\" + rotate + \") \";\r\n        if (rotateX)\r\n            transform += \"rotateX(\" + rotateX + \") \";\r\n        if (rotateY)\r\n            transform += \"rotateY(\" + rotateY + \") \";\r\n    }\r\n    transform += \"scale(\" + x.scale + \", \" + y.scale + \")\";\r\n    return !latestTransform && transform === identityProjection ? \"\" : transform;\r\n}\r\n/**\r\n * Take the calculated delta origin and apply it as a transform string.\r\n */\r\nfunction buildLayoutProjectionTransformOrigin(_a) {\r\n    var deltaFinal = _a.deltaFinal;\r\n    return deltaFinal.x.origin * 100 + \"% \" + deltaFinal.y.origin * 100 + \"% 0\";\r\n}\r\nvar identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });\r\n\r\nexport { buildLayoutProjectionTransform, buildLayoutProjectionTransformOrigin, identityProjection };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { __spreadArray, __read, __rest } from 'tslib';\r\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\r\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.js';\r\nimport { shallowCompare } from '../../utils/shallow-compare.js';\r\nimport { animateVisualElement } from './animation.js';\r\nimport { AnimationType } from './types.js';\r\nimport { isVariantLabels, resolveVariant, isVariantLabel } from './variants.js';\r\n\r\nvar variantPriorityOrder = [\r\n    AnimationType.Animate,\r\n    AnimationType.Hover,\r\n    AnimationType.Tap,\r\n    AnimationType.Drag,\r\n    AnimationType.Focus,\r\n    AnimationType.Exit,\r\n];\r\nvar reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder)).reverse();\r\nvar numAnimationTypes = variantPriorityOrder.length;\r\nfunction animateList(visualElement) {\r\n    return function (animations) {\r\n        return Promise.all(animations.map(function (_a) {\r\n            var animation = _a.animation, options = _a.options;\r\n            return animateVisualElement(visualElement, animation, options);\r\n        }));\r\n    };\r\n}\r\nfunction createAnimationState(visualElement) {\r\n    var animate = animateList(visualElement);\r\n    var state = createState();\r\n    var allAnimatedKeys = {};\r\n    var isInitialRender = true;\r\n    /**\r\n     * This function will be used to reduce the animation definitions for\r\n     * each active animation type into an object of resolved values for it.\r\n     */\r\n    var buildResolvedTypeValues = function (acc, definition) {\r\n        var resolved = resolveVariant(visualElement, definition);\r\n        if (resolved) {\r\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = __rest(resolved, [\"transition\", \"transitionEnd\"]);\r\n            acc = Object.assign(Object.assign(Object.assign({}, acc), target), transitionEnd);\r\n        }\r\n        return acc;\r\n    };\r\n    function isAnimated(key) {\r\n        return allAnimatedKeys[key] !== undefined;\r\n    }\r\n    /**\r\n     * This just allows us to inject mocked animation functions\r\n     * @internal\r\n     */\r\n    function setAnimateFunction(makeAnimator) {\r\n        animate = makeAnimator(visualElement);\r\n    }\r\n    /**\r\n     * When we receive new props, we need to:\r\n     * 1. Create a list of protected keys for each type. This is a directory of\r\n     *    value keys that are currently being \"handled\" by types of a higher priority\r\n     *    so that whenever an animation is played of a given type, these values are\r\n     *    protected from being animated.\r\n     * 2. Determine if an animation type needs animating.\r\n     * 3. Determine if any values have been removed from a type and figure out\r\n     *    what to animate those to.\r\n     */\r\n    function animateChanges(options, changedActiveType) {\r\n        var _a;\r\n        var props = visualElement.getProps();\r\n        var context = visualElement.getVariantContext(true) || {};\r\n        /**\r\n         * A list of animations that we'll build into as we iterate through the animation\r\n         * types. This will get executed at the end of the function.\r\n         */\r\n        var animations = [];\r\n        /**\r\n         * Keep track of which values have been removed. Then, as we hit lower priority\r\n         * animation types, we can check if they contain removed values and animate to that.\r\n         */\r\n        var removedKeys = new Set();\r\n        /**\r\n         * A dictionary of all encountered keys. This is an object to let us build into and\r\n         * copy it without iteration. Each time we hit an animation type we set its protected\r\n         * keys - the keys its not allowed to animate - to the latest version of this object.\r\n         */\r\n        var encounteredKeys = {};\r\n        /**\r\n         * If a variant has been removed at a given index, and this component is controlling\r\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\r\n         */\r\n        var removedVariantIndex = Infinity;\r\n        var _loop_1 = function (i) {\r\n            var type = reversePriorityOrder[i];\r\n            var typeState = state[type];\r\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\r\n            var propIsVariant = isVariantLabel(prop);\r\n            /**\r\n             * If this type has *just* changed isActive status, set activeDelta\r\n             * to that status. Otherwise set to null.\r\n             */\r\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\r\n            if (activeDelta === false)\r\n                removedVariantIndex = i;\r\n            /**\r\n             * If this prop is an inherited variant, rather than been set directly on the\r\n             * component itself, we want to make sure we allow the parent to trigger animations.\r\n             *\r\n             * TODO: Can probably change this to a !isControllingVariants check\r\n             */\r\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\r\n            /**\r\n             *\r\n             */\r\n            if (isInherited &&\r\n                isInitialRender &&\r\n                visualElement.manuallyAnimateOnMount) {\r\n                isInherited = false;\r\n            }\r\n            /**\r\n             * Set all encountered keys so far as the protected keys for this type. This will\r\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\r\n             */\r\n            typeState.protectedKeys = Object.assign({}, encounteredKeys);\r\n            // Check if we can skip analysing this prop early\r\n            if (\r\n            // If it isn't active and hasn't *just* been set as inactive\r\n            (!typeState.isActive && activeDelta === null) ||\r\n                // If we didn't and don't have any defined prop for this animation type\r\n                (!prop && !typeState.prevProp) ||\r\n                // Or if the prop doesn't define an animation\r\n                isAnimationControls(prop) ||\r\n                typeof prop === \"boolean\") {\r\n                return \"continue\";\r\n            }\r\n            /**\r\n             * As we go look through the values defined on this type, if we detect\r\n             * a changed value or a value that was removed in a higher priority, we set\r\n             * this to true and add this prop to the animation list.\r\n             */\r\n            var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) ||\r\n                // If we're making this variant active, we want to always make it active\r\n                (type === changedActiveType &&\r\n                    typeState.isActive &&\r\n                    !isInherited &&\r\n                    propIsVariant) ||\r\n                // If we removed a higher-priority variant (i is in reverse order)\r\n                (i > removedVariantIndex && propIsVariant);\r\n            /**\r\n             * As animations can be set as variant lists, variants or target objects, we\r\n             * coerce everything to an array if it isn't one already\r\n             */\r\n            var definitionList = Array.isArray(prop) ? prop : [prop];\r\n            /**\r\n             * Build an object of all the resolved values. We'll use this in the subsequent\r\n             * animateChanges calls to determine whether a value has changed.\r\n             */\r\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\r\n            if (activeDelta === false)\r\n                resolvedValues = {};\r\n            /**\r\n             * Now we need to loop through all the keys in the prev prop and this prop,\r\n             * and decide:\r\n             * 1. If the value has changed, and needs animating\r\n             * 2. If it has been removed, and needs adding to the removedKeys set\r\n             * 3. If it has been removed in a higher priority type and needs animating\r\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\r\n             *    needs adding to the type's protectedKeys list.\r\n             */\r\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\r\n            var allKeys = Object.assign(Object.assign({}, prevResolvedValues), resolvedValues);\r\n            var markToAnimate = function (key) {\r\n                shouldAnimateType = true;\r\n                removedKeys.delete(key);\r\n                typeState.needsAnimating[key] = true;\r\n            };\r\n            for (var key in allKeys) {\r\n                var next = resolvedValues[key];\r\n                var prev = prevResolvedValues[key];\r\n                // If we've already handled this we can just skip ahead\r\n                if (encounteredKeys.hasOwnProperty(key))\r\n                    continue;\r\n                /**\r\n                 * If the value has changed, we probably want to animate it.\r\n                 */\r\n                if (next !== prev) {\r\n                    /**\r\n                     * If both values are keyframes, we need to shallow compare them to\r\n                     * detect whether any value has changed. If it has, we animate it.\r\n                     */\r\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\r\n                        if (!shallowCompare(next, prev)) {\r\n                            markToAnimate(key);\r\n                        }\r\n                        else {\r\n                            /**\r\n                             * If it hasn't changed, we want to ensure it doesn't animate by\r\n                             * adding it to the list of protected keys.\r\n                             */\r\n                            typeState.protectedKeys[key] = true;\r\n                        }\r\n                    }\r\n                    else if (next !== undefined) {\r\n                        // If next is defined and doesn't equal prev, it needs animating\r\n                        markToAnimate(key);\r\n                    }\r\n                    else {\r\n                        // If it's undefined, it's been removed.\r\n                        removedKeys.add(key);\r\n                    }\r\n                }\r\n                else if (next !== undefined && removedKeys.has(key)) {\r\n                    /**\r\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\r\n                     * been removed by a higher priority\r\n                     */\r\n                    markToAnimate(key);\r\n                }\r\n                else {\r\n                    /**\r\n                     * If it hasn't changed, we add it to the list of protected values\r\n                     * to ensure it doesn't get animated.\r\n                     */\r\n                    typeState.protectedKeys[key] = true;\r\n                }\r\n            }\r\n            /**\r\n             * Update the typeState so next time animateChanges is called we can compare the\r\n             * latest prop and resolvedValues to these.\r\n             */\r\n            typeState.prevProp = prop;\r\n            typeState.prevResolvedValues = resolvedValues;\r\n            /**\r\n             *\r\n             */\r\n            if (typeState.isActive) {\r\n                encounteredKeys = Object.assign(Object.assign({}, encounteredKeys), resolvedValues);\r\n            }\r\n            if (isInitialRender && visualElement.blockInitialAnimation) {\r\n                shouldAnimateType = false;\r\n            }\r\n            /**\r\n             * If this is an inherited prop we want to hard-block animations\r\n             * TODO: Test as this should probably still handle animations triggered\r\n             * by removed values?\r\n             */\r\n            if (shouldAnimateType && !isInherited) {\r\n                animations.push.apply(animations, __spreadArray([], __read(definitionList.map(function (animation) { return ({\r\n                    animation: animation,\r\n                    options: Object.assign({ type: type }, options),\r\n                }); }))));\r\n            }\r\n        };\r\n        /**\r\n         * Iterate through all animation types in reverse priority order. For each, we want to\r\n         * detect which values it's handling and whether or not they've changed (and therefore\r\n         * need to be animated). If any values have been removed, we want to detect those in\r\n         * lower priority props and flag for animation.\r\n         */\r\n        for (var i = 0; i < numAnimationTypes; i++) {\r\n            _loop_1(i);\r\n        }\r\n        allAnimatedKeys = Object.assign({}, encounteredKeys);\r\n        /**\r\n         * If there are some removed value that haven't been dealt with,\r\n         * we need to create a new animation that falls back either to the value\r\n         * defined in the style prop, or the last read value.\r\n         */\r\n        if (removedKeys.size) {\r\n            var fallbackAnimation_1 = {};\r\n            removedKeys.forEach(function (key) {\r\n                var fallbackTarget = visualElement.getBaseTarget(key);\r\n                if (fallbackTarget !== undefined) {\r\n                    fallbackAnimation_1[key] = fallbackTarget;\r\n                }\r\n            });\r\n            animations.push({ animation: fallbackAnimation_1 });\r\n        }\r\n        var shouldAnimate = Boolean(animations.length);\r\n        if (isInitialRender &&\r\n            props.initial === false &&\r\n            !visualElement.manuallyAnimateOnMount) {\r\n            shouldAnimate = false;\r\n        }\r\n        isInitialRender = false;\r\n        return shouldAnimate ? animate(animations) : Promise.resolve();\r\n    }\r\n    /**\r\n     * Change whether a certain animation type is active.\r\n     */\r\n    function setActive(type, isActive, options) {\r\n        var _a;\r\n        // If the active state hasn't changed, we can safely do nothing here\r\n        if (state[type].isActive === isActive)\r\n            return Promise.resolve();\r\n        // Propagate active change to children\r\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\r\n        state[type].isActive = isActive;\r\n        return animateChanges(options, type);\r\n    }\r\n    return {\r\n        isAnimated: isAnimated,\r\n        animateChanges: animateChanges,\r\n        setActive: setActive,\r\n        setAnimateFunction: setAnimateFunction,\r\n        getState: function () { return state; },\r\n    };\r\n}\r\nfunction variantsHaveChanged(prev, next) {\r\n    if (typeof next === \"string\") {\r\n        return next !== prev;\r\n    }\r\n    else if (isVariantLabels(next)) {\r\n        return !shallowCompare(next, prev);\r\n    }\r\n    return false;\r\n}\r\nfunction createTypeState(isActive) {\r\n    if (isActive === void 0) { isActive = false; }\r\n    return {\r\n        isActive: isActive,\r\n        protectedKeys: {},\r\n        needsAnimating: {},\r\n        prevResolvedValues: {},\r\n    };\r\n}\r\nfunction createState() {\r\n    var _a;\r\n    return _a = {},\r\n        _a[AnimationType.Animate] = createTypeState(true),\r\n        _a[AnimationType.Hover] = createTypeState(),\r\n        _a[AnimationType.Tap] = createTypeState(),\r\n        _a[AnimationType.Drag] = createTypeState(),\r\n        _a[AnimationType.Focus] = createTypeState(),\r\n        _a[AnimationType.Exit] = createTypeState(),\r\n        _a;\r\n}\r\n\r\nexport { createAnimationState, variantPriorityOrder, variantsHaveChanged };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nvar isAnimationControls = function (v) {\r\n    return typeof v === \"object\" && typeof (v).start === \"function\"\r\n};\r\n\r\nexport { isAnimationControls };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nfunction shallowCompare(next, prev) {\r\n    if (!Array.isArray(prev))\r\n        return false;\r\n    var prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (var i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport { shallowCompare };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nvar AnimationType;\r\n(function (AnimationType) {\r\n    AnimationType[\"Animate\"] = \"animate\";\r\n    AnimationType[\"Hover\"] = \"whileHover\";\r\n    AnimationType[\"Tap\"] = \"whileTap\";\r\n    AnimationType[\"Drag\"] = \"whileDrag\";\r\n    AnimationType[\"Focus\"] = \"whileFocus\";\r\n    AnimationType[\"Exit\"] = \"exit\";\r\n})(AnimationType || (AnimationType = {}));\r\n\r\nexport { AnimationType };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { __spreadArray, __read } from 'tslib';\r\nimport { SubscriptionManager } from '../../utils/subscription-manager.js';\r\n\r\nvar names = [\r\n    \"LayoutMeasure\",\r\n    \"BeforeLayoutMeasure\",\r\n    \"LayoutUpdate\",\r\n    \"ViewportBoxUpdate\",\r\n    \"Update\",\r\n    \"Render\",\r\n    \"AnimationComplete\",\r\n    \"LayoutAnimationComplete\",\r\n    \"AnimationStart\",\r\n    \"SetAxisTarget\",\r\n    \"Unmount\",\r\n];\r\nfunction createLifecycles() {\r\n    var managers = names.map(function () { return new SubscriptionManager(); });\r\n    var propSubscriptions = {};\r\n    var lifecycles = {\r\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\r\n        updatePropListeners: function (props) {\r\n            return names.forEach(function (name) {\r\n                var _a;\r\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\r\n                var on = \"on\" + name;\r\n                var propListener = props[on];\r\n                if (propListener) {\r\n                    propSubscriptions[name] = lifecycles[on](propListener);\r\n                }\r\n            });\r\n        },\r\n    };\r\n    managers.forEach(function (manager, i) {\r\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\r\n        lifecycles[\"notify\" + names[i]] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return manager.notify.apply(manager, __spreadArray([], __read(args)));\r\n        };\r\n    });\r\n    return lifecycles;\r\n}\r\n\r\nexport { createLifecycles };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { motionValue } from '../../value/index.js';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\r\n\r\nfunction updateMotionValuesFromProps(element, next, prev) {\r\n    var _a;\r\n    for (var key in next) {\r\n        var nextValue = next[key];\r\n        var prevValue = prev[key];\r\n        if (isMotionValue(nextValue)) {\r\n            /**\r\n             * If this is a motion value found in props or style, we want to add it\r\n             * to our visual element's motion value map.\r\n             */\r\n            element.addValue(key, nextValue);\r\n        }\r\n        else if (isMotionValue(prevValue)) {\r\n            /**\r\n             * If we're swapping to a new motion value, create a new motion value\r\n             * from that\r\n             */\r\n            element.addValue(key, motionValue(nextValue));\r\n        }\r\n        else if (prevValue !== nextValue) {\r\n            /**\r\n             * If this is a flat value that has changed, update the motion value\r\n             * or create one if it doesn't exist. We only want to do this if we're\r\n             * not handling the value with our animation state.\r\n             */\r\n            if (element.hasValue(key)) {\r\n                var existingValue = element.getValue(key);\r\n                // TODO: Only update values that aren't being animated or even looked at\r\n                !existingValue.hasAnimated && existingValue.set(nextValue);\r\n            }\r\n            else {\r\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\r\n            }\r\n        }\r\n    }\r\n    // Handle removed values\r\n    for (var key in prev) {\r\n        if (next[key] === undefined)\r\n            element.removeValue(key);\r\n    }\r\n    return next;\r\n}\r\n\r\nexport { updateMotionValuesFromProps };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { resetBox, applyTreeDeltas } from '../../utils/geometry/delta-apply.js';\r\nimport { updateBoxDelta } from '../../utils/geometry/delta-calc.js';\r\n\r\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\r\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\r\n    var target = _b.target;\r\n    /**\r\n     * Reset the corrected box with the latest values from box, as we're then going\r\n     * to perform mutative operations on it.\r\n     */\r\n    resetBox(layoutCorrected, layout);\r\n    /**\r\n     * Apply all the parent deltas to this box to produce the corrected box. This\r\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\r\n     */\r\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\r\n    /**\r\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\r\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\r\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\r\n     * It might be that to simplify this we may want to accept that user-set scale1 is also corrected\r\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\r\n     * to allow people to choose whether these styles are corrected based on just the\r\n     * layout reprojection or the final bounding box.\r\n     */\r\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\r\n}\r\n\r\nexport { updateLayoutDeltas };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nvar compareByDepth = function (a, b) {\r\n    return a.depth - b.depth;\r\n};\r\n\r\nexport { compareByDepth };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { addUniqueItem, removeItem } from '../../utils/array.js';\r\nimport { compareByDepth } from './compare-by-depth.js';\r\n\r\nvar FlatTree = /** @class */ (function () {\r\n    function FlatTree() {\r\n        this.children = [];\r\n        this.isDirty = false;\r\n    }\r\n    FlatTree.prototype.add = function (child) {\r\n        addUniqueItem(this.children, child);\r\n        this.isDirty = true;\r\n    };\r\n    FlatTree.prototype.remove = function (child) {\r\n        removeItem(this.children, child);\r\n        this.isDirty = true;\r\n    };\r\n    FlatTree.prototype.forEach = function (callback) {\r\n        this.isDirty && this.children.sort(compareByDepth);\r\n        var numChildren = this.children.length;\r\n        for (var i = 0; i < numChildren; i++) {\r\n            callback(this.children[i]);\r\n        }\r\n    };\r\n    return FlatTree;\r\n}());\r\n\r\nexport { FlatTree };\r\n", "/** \r\nbased on framer-motion@4.1.11,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { mix } from 'popmotion';\r\n\r\nfunction tweenAxis(target, prev, next, p) {\r\n    target.min = mix(prev.min, next.min, p);\r\n    target.max = mix(prev.max, next.max, p);\r\n}\r\nfunction calcRelativeOffsetAxis(parent, child) {\r\n    return {\r\n        min: child.min - parent.min,\r\n        max: child.max - parent.min,\r\n    };\r\n}\r\nfunction calcRelativeOffset(parent, child) {\r\n    return {\r\n        x: calcRelativeOffsetAxis(parent.x, child.x),\r\n        y: calcRelativeOffsetAxis(parent.y, child.y),\r\n    };\r\n}\r\nfunction checkIfParentHasChanged(prev, next) {\r\n    var prevId = prev.getLayoutId();\r\n    var nextId = next.getLayoutId();\r\n    return prevId !== nextId || (nextId === undefined && prev !== next);\r\n}\r\n\r\nexport { calcRelativeOffset, calcRelativeOffsetAxis, checkIfParentHasChanged, tweenAxis };\r\n\r\n", "/** \r\nbased on framer-motion@4.1.11,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { calcRelativeOffset } from '../../../motion/features/layout/utils.js';\r\nimport { eachAxis } from '../../../utils/each-axis.js';\r\n\r\nfunction setCurrentViewportBox(visualElement) {\r\n    var projectionParent = visualElement.getProjectionParent();\r\n    if (!projectionParent) {\r\n        visualElement.rebaseProjectionTarget();\r\n        return;\r\n    }\r\n    var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\r\n    eachAxis(function (axis) {\r\n        visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\r\n    });\r\n}\r\n\r\nexport { setCurrentViewportBox };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * A list of all valid MotionProps.\r\n *\r\n * @internalremarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nvar validMotionProps = new Set([\r\n    \"initial\",\r\n    \"animate\",\r\n    \"exit\",\r\n    \"style\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"transformValues\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"layout\",\r\n    \"layoutId\",\r\n    \"onLayoutAnimationComplete\",\r\n    \"onViewportBoxUpdate\",\r\n    \"onLayoutMeasure\",\r\n    \"onBeforeLayoutMeasure\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onMeasureDragConstraints\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"drag\",\r\n    \"dragControls\",\r\n    \"dragListener\",\r\n    \"dragConstraints\",\r\n    \"dragDirectionLock\",\r\n    \"_dragX\",\r\n    \"_dragY\",\r\n    \"dragElastic\",\r\n    \"dragMomentum\",\r\n    \"dragPropagation\",\r\n    \"dragTransition\",\r\n    \"whileDrag\",\r\n    \"onPan\",\r\n    \"onPanStart\",\r\n    \"onPanEnd\",\r\n    \"onPanSessionStart\",\r\n    \"onTap\",\r\n    \"onTapStart\",\r\n    \"onTapCancel\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n    \"whileFocus\",\r\n    \"whileTap\",\r\n    \"whileHover\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return validMotionProps.has(key);\r\n}\r\n\r\nexport { isValidMotionProp };\r\n", "import { writable } from \"svelte/store\";\r\nimport { getDomContext } from \"./DOMcontext\";\r\n\r\n\r\n/**\r\n * @public\r\n */\r\nexport const PresenceContext = (c)=> getDomContext(\"Presence\",c)||writable(null);\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { PresenceContext } from '../../context/PresenceContext.js';\r\nimport { derived, get, readable } from 'svelte/store';\r\n\r\nimport { getContext, onMount} from \"svelte\";\r\n\r\nlet counter = 0;\r\nconst incrementId = () => counter++;\r\n\r\nfunction isPresent(context) {\r\n    return context === null ? true : context.isPresent\r\n}\r\n\r\nexport const useIsPresent = (isCustom=false) => {\r\n    let presenceContext = getContext(PresenceContext) || PresenceContext(isCustom);\r\n    return derived(presenceContext, $v => $v === null ? true : $v.isPresent)\r\n}\r\n\r\nexport const usePresence = (isCustom=false) => {\r\n\r\n    const context = getContext(PresenceContext)||PresenceContext(isCustom);\r\n    const id = get(context) === null ? undefined : incrementId();\r\n    onMount(()=>{\r\n        if (get(context)!==null){\r\n            get(context).register(id);\r\n        }\r\n    })\r\n\r\n    if (get(context) === null){\r\n        return readable([true,null]);\r\n    }\r\n    return derived(context,$v=>\r\n        (!$v.isPresent && $v.onExitComplete) ? \r\n            [false, ()=>$v.onExitComplete?.(id)] :\r\n            [true]\r\n    )\r\n}\r\n\r\nexport { isPresent };\r\n", "import { writable } from \"svelte/store\";\r\nimport { getDomContext } from \"./DOMcontext\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const LayoutGroupContext = (c)=>getDomContext(\"LayoutGroup\",c)||writable(null);\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { __spreadArray, __read } from 'tslib';\r\nimport sync, { flushSync } from 'framesync';\r\nimport { collectProjectingAncestors, updateLayoutMeasurement } from '../../../render/dom/projection/utils.js';\r\nimport { batchLayout, flushLayout } from '../../../render/dom/utils/batch-layout.js';\r\nimport { compareByDepth } from '../../../render/utils/compare-by-depth.js';\r\nimport { Presence } from '../types.js';\r\n\r\n/**\r\n * Default handlers for batching VisualElements\r\n */\r\nvar defaultHandler = {\r\n    layoutReady: function (child) { return child.notifyLayoutReady(); },\r\n};\r\n/**\r\n * Create a batcher to process VisualElements\r\n */\r\nfunction createBatcher() {\r\n    var queue = new Set();\r\n    return {\r\n        add: function (child) { return queue.add(child); },\r\n        flush: function (_a) {\r\n            var _b = _a === void 0 ? defaultHandler : _a, layoutReady = _b.layoutReady, parent = _b.parent;\r\n            batchLayout(function (read, write) {\r\n                var order = Array.from(queue).sort(compareByDepth);\r\n                var ancestors = parent\r\n                    ? collectProjectingAncestors(parent)\r\n                    : [];\r\n                write(function () {\r\n                    var allElements = __spreadArray(__spreadArray([], __read(ancestors)), __read(order));\r\n                    allElements.forEach(function (element) { return element.resetTransform(); });\r\n                });\r\n                read(function () {\r\n                    order.forEach(updateLayoutMeasurement);\r\n                });\r\n                write(function () {\r\n                    ancestors.forEach(function (element) { return element.restoreTransform(); });\r\n                    order.forEach(layoutReady);\r\n                });\r\n                read(function () {\r\n                    /**\r\n                     * After all children have started animating, ensure any Entering components are set to Present.\r\n                     * If we add deferred animations (set up all animations and then start them in two loops) this\r\n                     * could be moved to the start loop. But it needs to happen after all the animations configs\r\n                     * are generated in AnimateSharedLayout as this relies on presence data\r\n                     */\r\n                    order.forEach(function (child) {\r\n                        if (child.isPresent)\r\n                            child.presence = Presence.Present;\r\n                    });\r\n                });\r\n                write(function () {\r\n                    /**\r\n                     * Starting these animations will have queued jobs on the frame loop. In some situations,\r\n                     * like when removing an element, these will be processed too late after the DOM is manipulated,\r\n                     * leaving a flash of incorrectly-projected content. By manually flushing these jobs\r\n                     * we ensure there's no flash.\r\n                     */\r\n                    flushSync.preRender();\r\n                    flushSync.render();\r\n                });\r\n                read(function () {\r\n                    /**\r\n                     * Schedule a callback at the end of the following frame to assign the latest projection\r\n                     * box to the prevViewportBox snapshot. Once global batching is in place this could be run\r\n                     * synchronously. But for now it ensures that if any nested `AnimateSharedLayout` top-level\r\n                     * child attempts to calculate its previous relative position against a prevViewportBox\r\n                     * it will be against its latest projection box instead, as the snapshot is useless beyond this\r\n                     * render.\r\n                     */\r\n                    sync.postRender(function () {\r\n                        return order.forEach(assignProjectionToSnapshot);\r\n                    });\r\n                    queue.clear();\r\n                });\r\n            });\r\n            // TODO: Need to find a layout-synchronous way of flushing this\r\n            flushLayout();\r\n        },\r\n    };\r\n}\r\nfunction assignProjectionToSnapshot(child) {\r\n    child.prevViewportBox = child.projection.target;\r\n}\r\n\r\nexport { createBatcher };\r\n", "/** \r\nbased on framer-motion@4.1.11,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport sync from 'framesync';\r\nimport { copyAxisBox } from '../../../utils/geometry/index.js';\r\nimport { compareByDepth } from '../../utils/compare-by-depth.js';\r\n\r\nfunction isProjecting(visualElement) {\r\n    var isEnabled = visualElement.projection.isEnabled;\r\n    return isEnabled || visualElement.shouldResetTransform();\r\n}\r\nfunction collectProjectingAncestors(visualElement, ancestors) {\r\n    if (ancestors === void 0) { ancestors = []; }\r\n    var parent = visualElement.parent;\r\n    if (parent)\r\n        collectProjectingAncestors(parent, ancestors);\r\n    if (isProjecting(visualElement))\r\n        ancestors.push(visualElement);\r\n    return ancestors;\r\n}\r\nfunction collectProjectingChildren(visualElement) {\r\n    var children = [];\r\n    var addChild = function (child) {\r\n        if (isProjecting(child))\r\n            children.push(child);\r\n        child.children.forEach(addChild);\r\n    };\r\n    visualElement.children.forEach(addChild);\r\n    return children.sort(compareByDepth);\r\n}\r\n/**\r\n * Update the layoutState by measuring the DOM layout. This\r\n * should be called after resetting any layout-affecting transforms.\r\n */\r\nfunction updateLayoutMeasurement(visualElement) {\r\n    if (visualElement.shouldResetTransform())\r\n        return;\r\n    var layoutState = visualElement.getLayoutState();\r\n    visualElement.notifyBeforeLayoutMeasure(layoutState.layout);\r\n    layoutState.isHydrated = true;\r\n    layoutState.layout = visualElement.measureViewportBox();\r\n    layoutState.layoutCorrected = copyAxisBox(layoutState.layout);\r\n    visualElement.notifyLayoutMeasure(layoutState.layout, visualElement.prevViewportBox || layoutState.layout);\r\n    sync.update(function () { return visualElement.rebaseProjectionTarget(); });\r\n}\r\n/**\r\n * Record the viewport box as it was before an expected mutation/re-render\r\n */\r\nfunction snapshotViewportBox(visualElement,nc) {\r\n    if (visualElement.shouldResetTransform())\r\n        return;\r\n    if (!nc) visualElement.prevViewportBox = visualElement.measureViewportBox(false);\r\n    /**\r\n     * Update targetBox to match the prevViewportBox. This is just to ensure\r\n     * that targetBox is affected by scroll in the same way as the measured box\r\n     */\r\n    visualElement.rebaseProjectionTarget(false, visualElement.prevViewportBox);\r\n}\r\n\r\nexport { collectProjectingAncestors, collectProjectingChildren, snapshotViewportBox, updateLayoutMeasurement };\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport sync from 'framesync';\r\n\r\nvar unresolvedJobs = new Set();\r\nvar layoutState = {\r\n    isMeasuringLayout: false,\r\n};\r\nfunction pushJob(stack, job, pointer) {\r\n    if (!stack[pointer])\r\n        stack[pointer] = [];\r\n    stack[pointer].push(job);\r\n}\r\nfunction batchLayout(callback) {\r\n    unresolvedJobs.add(callback);\r\n    return function () { return unresolvedJobs.delete(callback); };\r\n}\r\nfunction flushLayout() {\r\n    if (!unresolvedJobs.size)\r\n        return;\r\n    var pointer = 0;\r\n    var reads = [[]];\r\n    var writes = [];\r\n    var setRead = function (job) { return pushJob(reads, job, pointer); };\r\n    var setWrite = function (job) {\r\n        pushJob(writes, job, pointer);\r\n        pointer++;\r\n    };\r\n    /**\r\n     * Resolve jobs into their array stacks\r\n     */\r\n    unresolvedJobs.forEach(function (callback) {\r\n        callback(setRead, setWrite);\r\n        pointer = 0;\r\n    });\r\n    unresolvedJobs.clear();\r\n    /**\r\n     * Mark that we're currently measuring layouts. This allows us to, for instance, ignore\r\n     * hover events that might be triggered as a result of resetting transforms.\r\n     *\r\n     * The postRender/setTimeout combo seems like an odd bit of scheduling but what it's saying\r\n     * is *after* the next render, wait 10ms before re-enabling hover events. Waiting until the\r\n     * next frame completely will result in missed, valid hover events. But events seem to\r\n     * be fired async from their actual action, so setting this to false too soon can still\r\n     * trigger events from layout measurements.\r\n     *\r\n     * Note: If we figure out a way of measuring layout while transforms remain applied, this can be removed.\r\n     * I have attempted unregistering event listeners and setting CSS to pointer-events: none\r\n     * but neither seem to work as expected.\r\n     */\r\n    layoutState.isMeasuringLayout = true;\r\n    sync.postRender(function () {\r\n        setTimeout(function () { return (layoutState.isMeasuringLayout = false); }, 10);\r\n    });\r\n    /**\r\n     * Execute jobs\r\n     */\r\n    var numStacks = writes.length;\r\n    for (var i = 0; i <= numStacks; i++) {\r\n        reads[i] && reads[i].forEach(executeJob);\r\n        writes[i] && writes[i].forEach(executeJob);\r\n    }\r\n}\r\nvar executeJob = function (job) { return job(); };\r\n\r\nexport { batchLayout, flushLayout, layoutState };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { writable } from 'svelte/store';\r\nimport { createBatcher } from '../components/AnimateSharedLayout/utils/batcher.js';\r\nimport { getDomContext } from './DOMcontext.js';\r\n\r\nvar SharedLayoutContext = (custom) => getDomContext(\"SharedLayout\",custom)||writable(createBatcher());\r\n/**\r\n * @internal\r\n */\r\nvar FramerTreeLayoutContext = ()=> writable(createBatcher());\r\n\r\nfunction isSharedLayout(context) {\r\n    return !!context.forceUpdate;\r\n}\r\n\r\nexport { FramerTreeLayoutContext, SharedLayoutContext, isSharedLayout };\r\n", "import { writable } from \"svelte/store\";\r\nimport { getDomContext } from \"./DOMcontext\";\r\n\r\n\r\nconst LazyContext = (c) => getDomContext(\"Lazy\",c) || writable({ strict: false });\r\n\r\nexport { LazyContext };\r\n", "<script context=\"module\">\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import {writable} from 'svelte/store';\r\n    export const MotionContext = (c) => getDomContext(\"Motion\",c)||writable({});\r\n    \r\n    export const useVisualElementContext = (c)=>{\r\n        return (getContext(MotionContext)||MotionContext(c))\r\n    }\r\n</script>\r\n<script>\r\n    import { getContext } from \"svelte\";\r\n    import { getDomContext } from '../DOMcontext';\r\n    export let isCustom;\r\n    const motionContext = getContext(MotionContext)||MotionContext(isCustom);\r\n</script>\r\n<slot parent={$motionContext.visualElement}/>\r\n", "<script context=\"module\">\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    \r\n    export const ssr=false;\r\n</script>\r\n<script>\r\n    import { afterUpdate, getContext, onDestroy, tick} from \"svelte\";\r\n    import { PresenceContext } from \"../../context/PresenceContext\";\r\n    import { LazyContext } from \"../../context/LazyContext\";\r\n    import { MotionConfigContext } from \"../../context/MotionConfigContext\";\r\n    import { LayoutGroupContext } from '../../context/LayoutGroupContext'\r\n    import {MotionContext} from \"../../context/MotionContext/index.js\";\r\n    import { isPresent } from '../../components/AnimatePresence/use-presence.js';\r\n    import { get } from \"svelte/store\";\r\n\r\n    export let createVisualElement=undefined,\r\n        props,\r\n        Component,\r\n        visualState,\r\n        isCustom;\r\n\r\n    const config = getContext(MotionConfigContext) || MotionConfigContext(isCustom);\r\n    const presenceContext = getContext(PresenceContext) || PresenceContext(isCustom);\r\n    const lazyContext = getContext(LazyContext) || LazyContext(isCustom);\r\n    const mc = getContext(MotionContext) || MotionContext(isCustom);\r\n    let parent = get(mc).visualElement;\r\n    $: (parent = $mc.visualElement);\r\n    const layoutGroupId =\r\n        getContext(LayoutGroupContext) || LayoutGroupContext(isCustom);\r\n    let layoutId = $layoutGroupId && props.layoutId !== undefined\r\n            ? $layoutGroupId + \"-\" + props.layoutId\r\n            : props.layoutId;\r\n    $: (layoutId =\r\n        $layoutGroupId && props.layoutId !== undefined\r\n            ? $layoutGroupId + \"-\" + props.layoutId\r\n            : props.layoutId);\r\n    \r\n    let visualElementRef = undefined;\r\n    /**\r\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\r\n     */\r\n    if (!createVisualElement) {\r\n        createVisualElement = $lazyContext.renderer;\r\n    }\r\n\r\n    $: if (!visualElementRef && createVisualElement) {\r\n        \r\n        visualElementRef = createVisualElement(Component, {\r\n            visualState,\r\n            parent:parent,\r\n            props: { ...props, layoutId },\r\n            presenceId: $presenceContext?.id,\r\n            blockInitialAnimation: $presenceContext?.initial === false,\r\n        });\r\n    }\r\n    let visualElement = visualElementRef;\r\n    $: (visualElement = visualElementRef);\r\n\r\n    $: if (visualElement){\r\n        visualElement.setProps({\r\n            ...$config,\r\n            ...props,\r\n            layoutId,\r\n        });\r\n        visualElement.isPresent = isPresent($presenceContext);\r\n        visualElement.isPresenceRoot =\r\n            !parent || parent.presenceId !== $presenceContext?.id;\r\n\r\n        /**\r\n         * Fire a render to ensure the latest state is reflected on-screen.\r\n         */\r\n         visualElement.syncRender();\r\n    }\r\n\r\n    afterUpdate(()=>{\r\n        tick().then(()=>{ \r\n             visualElement.animationState?.animateChanges()\r\n         })\r\n    });\r\n\r\n    onDestroy(()=>{\r\n        visualElement?.notifyUnmount()\r\n        \r\n    })\r\n</script>\r\n\r\n<slot {visualElement} />\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nvar createDefinition = function (propNames) { return ({\r\n    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },\r\n}); };\r\nvar featureDefinitions = {\r\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\r\n    animation: createDefinition([\r\n        \"animate\",\r\n        \"exit\",\r\n        \"variants\",\r\n        \"whileHover\",\r\n        \"whileTap\",\r\n        \"whileFocus\",\r\n        \"whileDrag\",\r\n    ]),\r\n    exit: createDefinition([\"exit\"]),\r\n    drag: createDefinition([\"drag\", \"dragControls\"]),\r\n    focus: createDefinition([\"whileFocus\"]),\r\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\r\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\r\n    pan: createDefinition([\r\n        \"onPan\",\r\n        \"onPanStart\",\r\n        \"onPanSessionStart\",\r\n        \"onPanEnd\",\r\n    ]),\r\n    layoutAnimation: createDefinition([\"layout\", \"layoutId\"]),\r\n};\r\nfunction loadFeatures(features) {\r\n    for (var key in features) {\r\n        var Component = features[key];\r\n        if (Component !== null){\r\n            featureDefinitions[key].Component = Component;\r\n        }\r\n    }\r\n}\r\n\r\nexport { featureDefinitions, loadFeatures };\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    \r\n    import { featureDefinitions } from \"./definitions\";\r\n    const featureNames = Object.keys(featureDefinitions);\r\n    const numFeatures = featureNames.length;\r\n    export let visualElement, props;\r\n\r\n\r\n    let features = [];\r\n\r\n    // If this is a static component, or we're rendering on the server, we don't load\r\n    // any feature components\r\n    // Decide which features we should render and add them to the returned array\r\n    $: {\r\n        features = [];\r\n        for (let i = 0; i < numFeatures; i++) {\r\n            const name = featureNames[i];\r\n            const { isEnabled, Component } = featureDefinitions[name];\r\n            /**\r\n             * It might be possible in the future to use this moment to\r\n             * dynamically request functionality. In initial tests this\r\n             * was producing a lot of duplication amongst bundles.\r\n             */\r\n            if (isEnabled(props) && Component) {\r\n                features.push({\r\n                    Component: Component,\r\n                    key: name,\r\n                    props,\r\n                    visualElement\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n{#if visualElement}\r\n    <slot {features} />\r\n{/if}\r\n", "<script>\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import { onDestroy, setContext } from \"svelte\";\r\n    import { writable } from \"svelte/store\";\r\nimport { setDomContext } from \"../DOMcontext.js\";\r\n    import { MotionContext } from \"./index.js\";\r\n\r\n    export let value, isCustom;\r\n    let store = writable(value);\r\n    $: store.set(value);\r\n    setContext(MotionContext,store);\r\n    setDomContext(\"Motion\",isCustom,store)\r\n\r\n    // Since useMotionRef is not called on destroy, the visual element is unmounted here\r\n    onDestroy(()=>{\r\n\r\n        value?.visualElement?.unmount()\r\n    })\r\n</script>\r\n<slot/>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nvar createHtmlRenderState = function () { return ({\r\n    style: {},\r\n    transform: {},\r\n    transformKeys: [],\r\n    transformOrigin: {},\r\n    vars: {},\r\n}); };\r\n\r\nexport { createHtmlRenderState };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { createHtmlRenderState } from '../../html/utils/create-render-state.js';\r\n\r\nvar createSvgRenderState = function () { return (Object.assign(Object.assign({}, createHtmlRenderState()), { attrs: {} })); };\r\n\r\nexport { createSvgRenderState };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n/**\r\n * A list of all transformable axes. We'll use this list to generated a version\r\n * of each axes for each transform.\r\n */\r\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\r\n/**\r\n * An ordered array of each transformable value. By default, transform values\r\n * will be sorted to this order.\r\n */\r\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\r\n/**\r\n * Generate a list of every possible transform key.\r\n */\r\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\r\norder.forEach(function (operationKey) {\r\n    return transformAxes.forEach(function (axesKey) {\r\n        return transformProps.push(operationKey + axesKey);\r\n    });\r\n});\r\n/**\r\n * A function to use with Array.sort to sort transform keys by their default order.\r\n */\r\nfunction sortTransformProps(a, b) {\r\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\r\n}\r\n/**\r\n * A quick lookup for transform props.\r\n */\r\nvar transformPropSet = new Set(transformProps);\r\nfunction isTransformProp(key) {\r\n    return transformPropSet.has(key);\r\n}\r\n/**\r\n * A quick lookup for transform origin props\r\n */\r\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\r\nfunction isTransformOriginProp(key) {\r\n    return transformOriginProps.has(key);\r\n}\r\n\r\nexport { isTransformOriginProp, isTransformProp, sortTransformProps, transformAxes, transformProps };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { valueScaleCorrection } from '../../render/dom/projection/scale-correction.js';\r\nimport { isTransformProp, isTransformOriginProp } from '../../render/html/utils/transform.js';\r\n\r\nfunction isForcedMotionValue(key, _a) {\r\n    var layout = _a.layout, layoutId = _a.layoutId;\r\n    return (isTransformProp(key) ||\r\n        isTransformOriginProp(key) ||\r\n        ((layout || layoutId !== undefined) && !!valueScaleCorrection[key]));\r\n}\r\n\r\nexport { isForcedMotionValue };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { sortTransformProps } from './transform.js';\r\n\r\nvar translateAlias = {\r\n    x: \"translateX\",\r\n    y: \"translateY\",\r\n    z: \"translateZ\",\r\n    transformPerspective: \"perspective\",\r\n};\r\n/**\r\n * Build a CSS transform style from individual x/y/scale etc properties.\r\n *\r\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\r\n * providing a transformTemplate function.\r\n */\r\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate) {\r\n    var transform = _a.transform, transformKeys = _a.transformKeys;\r\n    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;\r\n    // The transform string we're going to build into.\r\n    var transformString = \"\";\r\n    // Transform keys into their default order - this will determine the output order.\r\n    transformKeys.sort(sortTransformProps);\r\n    // Track whether the defined transform has a defined z so we don't add a\r\n    // second to enable hardware acceleration\r\n    var transformHasZ = false;\r\n    // Loop over each transform and build them into transformString\r\n    var numTransformKeys = transformKeys.length;\r\n    for (var i = 0; i < numTransformKeys; i++) {\r\n        var key = transformKeys[i];\r\n        transformString += (translateAlias[key] || key) + \"(\" + transform[key] + \") \";\r\n        if (key === \"z\")\r\n            transformHasZ = true;\r\n    }\r\n    if (!transformHasZ && enableHardwareAcceleration) {\r\n        transformString += \"translateZ(0)\";\r\n    }\r\n    else {\r\n        transformString = transformString.trim();\r\n    }\r\n    // If we have a custom `transform` template, pass our transform values and\r\n    // generated transformString to that before returning\r\n    if (transformTemplate) {\r\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\r\n    }\r\n    else if (allowTransformNone && transformIsDefault) {\r\n        transformString = \"none\";\r\n    }\r\n    return transformString;\r\n}\r\n/**\r\n * Build a transformOrigin style. Uses the same defaults as the browser for\r\n * undefined origins.\r\n */\r\nfunction buildTransformOrigin(_a) {\r\n    var _b = _a.originX, originX = _b === void 0 ? \"50%\" : _b, _c = _a.originY, originY = _c === void 0 ? \"50%\" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;\r\n    return originX + \" \" + originY + \" \" + originZ;\r\n}\r\n\r\nexport { buildTransform, buildTransformOrigin };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * Returns true if the provided key is a CSS variable\r\n */\r\nfunction isCSSVariable(key) {\r\n    return key.startsWith(\"--\");\r\n}\r\n\r\nexport { isCSSVariable };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * Provided a value and a ValueType, returns the value as that value type.\r\n */\r\nvar getValueAsType = function (value, type) {\r\n    return type && typeof value === \"number\"\r\n        ? type.transform(value)\r\n        : value;\r\n};\r\n\r\nexport { getValueAsType };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { valueScaleCorrection } from '../../dom/projection/scale-correction.js';\r\nimport { buildTransform, buildTransformOrigin } from './build-transform.js';\r\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.js';\r\nimport { isTransformProp, isTransformOriginProp } from './transform.js';\r\nimport { getValueAsType } from '../../dom/value-types/get-as-type.js';\r\nimport { numberValueTypes } from '../../dom/value-types/number.js';\r\n\r\nfunction buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\r\n    var _a;\r\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\r\n    // Empty the transformKeys array. As we're throwing out refs to its items\r\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\r\n    // with a manual incrementation would be better.\r\n    transformKeys.length = 0;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    var hasTransform = false;\r\n    var hasTransformOrigin = false;\r\n    // Does the calculated transform essentially equal \"none\"?\r\n    var transformIsNone = true;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept seperately for further processing.\r\n     */\r\n    for (var key in latestValues) {\r\n        var value = latestValues[key];\r\n        /**\r\n         * If this is a CSS variable we don't do any further processing.\r\n         */\r\n        if (isCSSVariable(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        // Convert the value to its default value type, ie 0 -> \"0px\"\r\n        var valueType = numberValueTypes[key];\r\n        var valueAsType = getValueAsType(value, valueType);\r\n        if (isTransformProp(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            transform[key] = valueAsType;\r\n            transformKeys.push(key);\r\n            // If we already know we have a non-default transform, early return\r\n            if (!transformIsNone)\r\n                continue;\r\n            // Otherwise check to see if this is a default transform\r\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\r\n                transformIsNone = false;\r\n        }\r\n        else if (isTransformOriginProp(key)) {\r\n            transformOrigin[key] = valueAsType;\r\n            // If this is a transform origin, flag and enable further transform-origin processing\r\n            hasTransformOrigin = true;\r\n        }\r\n        else {\r\n            /**\r\n             * If layout projection is on, and we need to perform scale correction for this\r\n             * value type, perform it.\r\n             */\r\n            if (layoutState &&\r\n                projection &&\r\n                layoutState.isHydrated &&\r\n                valueScaleCorrection[key]) {\r\n                var correctedValue = valueScaleCorrection[key].process(value, layoutState, projection);\r\n                /**\r\n                 * Scale-correctable values can define a number of other values to break\r\n                 * down into. For instance borderRadius needs applying to borderBottomLeftRadius etc\r\n                 */\r\n                var applyTo = valueScaleCorrection[key].applyTo;\r\n                if (applyTo) {\r\n                    var num = applyTo.length;\r\n                    for (var i = 0; i < num; i++) {\r\n                        style[applyTo[i]] = correctedValue;\r\n                    }\r\n                }\r\n                else {\r\n                    style[key] = correctedValue;\r\n                }\r\n            }\r\n            else {\r\n                style[key] = valueAsType;\r\n            }\r\n        }\r\n    }\r\n    if (layoutState &&\r\n        projection &&\r\n        buildProjectionTransform &&\r\n        buildProjectionTransformOrigin) {\r\n        style.transform = buildProjectionTransform(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform : undefined);\r\n        if (transformTemplate) {\r\n            style.transform = transformTemplate(transform, style.transform);\r\n        }\r\n        style.transformOrigin = buildProjectionTransformOrigin(layoutState);\r\n    }\r\n    else {\r\n        if (hasTransform) {\r\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\r\n        }\r\n        if (hasTransformOrigin) {\r\n            style.transformOrigin = buildTransformOrigin(transformOrigin);\r\n        }\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import { buildHTMLStyles } from \"./utils/build-styles\";\r\n\r\n    import { createHtmlRenderState } from \"./utils/create-render-state\";\r\n    export let visualState, isStatic, props;\r\n    const memo = ()=>{\r\n        let state = createHtmlRenderState();\r\n\r\n        buildHTMLStyles(\r\n            state,\r\n            visualState,\r\n            undefined,\r\n            undefined,\r\n            { enableHardwareAcceleration: !isStatic },\r\n            props.transformTemplate\r\n        );\r\n\r\n        const { vars, style } = state\r\n        return { ...vars, ...style }\r\n    }\r\n    $: (styles = memo(visualState));\r\n</script>\r\n\r\n<slot {styles} />\r\n", "<script context=\"module\">\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    export function copyRawValuesOnly(\r\n    target,\r\n    source,\r\n    props\r\n) {\r\n    for (const key in source) {\r\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\r\n            target[key] = source[key]\r\n        }\r\n    }\r\n}\r\n</script>\r\n<script>\r\n    import { isMotionValue } from \"../../value/utils/is-motion-value\";\r\n    import { isForcedMotionValue } from \"../../motion/utils/is-forced-motion-value\";\r\n    import UseInitialMotionValues from \"./UseInitialMotionValues.svelte\";\r\n    export let visualState, \r\n        props,isStatic;\r\n    $: (styleProp = props.style || {});\r\n    let style = {};\r\n    /**\r\n     * Copy non-Motion Values straight into style\r\n     */\r\n    const cRVO = copyRawValuesOnly;\r\n    $: cRVO(style,styleProp,props);\r\n    \r\n    const toStyle=(s1)=>{\r\n        Object.assign(style,s1)\r\n        if (props.transformValues){\r\n            style = props.transformValues(style)\r\n        }\r\n        \r\n        return style;\r\n    }\r\n</script>\r\n<UseInitialMotionValues {props} {visualState} {isStatic} let:styles={s1}>\r\n    <slot styles={toStyle(s1,props,style)}/>\r\n</UseInitialMotionValues>\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import UseStyle from \"./UseStyle.svelte\";\r\n\r\n    export let props,\r\n        visualState,\r\n        isStatic;\r\n\r\n    \r\n    const getHTMLProps = (style, props) => {\r\n        let htmlProps={};\r\n        if (Boolean(props.drag)) {\r\n            \r\n            // Disable the ghost element when a user drags\r\n            htmlProps.draggable = false;\r\n\r\n            // Disable text selection\r\n            style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout =\r\n                \"none\";\r\n\r\n            // Disable scrolling on the draggable direction\r\n            style.touchAction =\r\n                props.drag === true\r\n                    ? \"none\"\r\n                    : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\r\n        }\r\n\r\n        htmlProps.style = style;\r\n        return htmlProps;\r\n    };\r\n</script>\r\n\r\n<UseStyle let:styles {visualState} {props} {isStatic}>\r\n    <slot visualProps={getHTMLProps(styles,props)} />\r\n</UseStyle>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { __rest } from 'tslib';\r\nimport { buildHTMLStyles } from '../../html/utils/build-styles.js';\r\nimport { calcSVGTransformOrigin } from './transform-origin.js';\r\nimport { buildSVGPath } from './path.js';\r\n\r\n/**\r\n * Build SVG visual attrbutes, like cx and style.transform\r\n */\r\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\r\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \r\n    // This is object creation, which we try to avoid per-frame.\r\n    latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\r\n    buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\r\n    state.attrs = state.style;\r\n    state.style = {};\r\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\r\n    /**\r\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\r\n     * and copy it into style.\r\n     */\r\n    if (attrs.transform) {\r\n        if (dimensions)\r\n            style.transform = attrs.transform;\r\n        delete attrs.transform;\r\n    }\r\n    // Parse transformOrigin\r\n    if (dimensions &&\r\n        (originX !== undefined || originY !== undefined || style.transform)) {\r\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\r\n    }\r\n    // Treat x/y not as shortcuts but as actual attributes\r\n    if (attrX !== undefined)\r\n        attrs.x = attrX;\r\n    if (attrY !== undefined)\r\n        attrs.y = attrY;\r\n    // Build SVG path if one has been measured\r\n    if (totalPathLength !== undefined && pathLength !== undefined) {\r\n        buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\r\n    }\r\n}\r\n\r\nexport { buildSVGAttrs };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { px } from 'style-value-types';\r\n\r\nfunction calcOrigin(origin, offset, size) {\r\n    return typeof origin === \"string\"\r\n        ? origin\r\n        : px.transform(offset + size * origin);\r\n}\r\n/**\r\n * The SVG transform origin defaults are different to CSS and is less intuitive,\r\n * so we use the measured dimensions of the SVG to reconcile these.\r\n */\r\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\r\n    var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\r\n    var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\r\n    return pxOriginX + \" \" + pxOriginY;\r\n}\r\n\r\nexport { calcSVGTransformOrigin };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { px } from 'style-value-types';\r\n\r\n// Convert a progress 0-1 to a pixels value based on the provided length\r\nvar progressToPixels = function (progress, length) {\r\n    return px.transform(progress * length);\r\n};\r\nvar dashKeys = {\r\n    offset: \"stroke-dashoffset\",\r\n    array: \"stroke-dasharray\",\r\n};\r\nvar camelKeys = {\r\n    offset: \"strokeDashoffset\",\r\n    array: \"strokeDasharray\",\r\n};\r\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\r\nfunction buildSVGPath(attrs, totalLength, length, spacing, offset, useDashCase) {\r\n    if (spacing === void 0) { spacing = 1; }\r\n    if (offset === void 0) { offset = 0; }\r\n    if (useDashCase === void 0) { useDashCase = true; }\r\n    // We use dash case when setting attributes directly to the DOM node and camel case\r\n    // when defining props on a React component.\r\n    var keys = useDashCase ? dashKeys : camelKeys;\r\n    // Build the dash offset\r\n    attrs[keys.offset] = progressToPixels(-offset, totalLength);\r\n    // Build the dash array\r\n    var pathLength = progressToPixels(length, totalLength);\r\n    var pathSpacing = progressToPixels(spacing, totalLength);\r\n    attrs[keys.array] = pathLength + \" \" + pathSpacing;\r\n}\r\n\r\nexport { buildSVGPath };\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import { createSvgRenderState } from \"./utils/create-render-state\";\r\n    import { copyRawValuesOnly } from \"../html/use-props\";\r\n    import { buildSVGAttrs } from \"./utils/build-attrs\";\r\n\r\n    export let visualState, props;\r\n    let memo = () => {\r\n        const state = createSvgRenderState();\r\n        buildSVGAttrs(\r\n            state,\r\n            visualState,\r\n            undefined,\r\n            undefined,\r\n            { enableHardwareAcceleration: false },\r\n            props.transformTemplate\r\n        );\r\n        return {\r\n            ...state.attrs,\r\n            style: { ...state.style },\r\n        };\r\n    };\r\n    $: visualProps = memo(visualState);\r\n\r\n    $: if (props.style) {\r\n            const rawStyles = {};\r\n            copyRawValuesOnly(rawStyles, props.style, props);\r\n            visualProps.style = { ...rawStyles, ...visualProps.style };\r\n        }\r\n    \r\n</script>\r\n\r\n<slot {visualProps} />\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { isValidMotionProp } from '../../../motion/utils/valid-prop.js';\r\n\r\nvar shouldForward = function (key) { return !isValidMotionProp(key); };\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(MotionDiv)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\r\n    shouldForward = function (key) {\r\n        // Handle events explicitly as Emotion validates them all as true\r\n        if (key.startsWith(\"on\")) {\r\n            return !isValidMotionProp(key);\r\n        }\r\n        else {\r\n            return emotionIsPropValid_1(key);\r\n        }\r\n    };\r\n}\r\ncatch (_a) {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterProps(props, isDom, forwardMotionProps) {\r\n    var filteredProps = {};\r\n    for (var key in props) {\r\n        if (shouldForward(key) ||\r\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\r\n            (!isDom && !isValidMotionProp(key))) {\r\n            filteredProps[key] = props[key];\r\n        }\r\n    }\r\n    return filteredProps;\r\n}\r\n\r\nexport { filterProps };\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { UseSVGProps } from \"../svg/use-props\"\r\nimport { UseHTMLProps } from \"../html/use-props\"\r\nimport { filterProps } from \"./utils/filter-props\"\r\n\r\n\r\n\r\n    export let props,\r\n        visualState,\r\n        Component,\r\n        forwardMotionProps = false,\r\n        isStatic,\r\n        ref,\r\n        targetEl=undefined;\r\n    const motion = (node)=>{\r\n        \r\n        ref(node)\r\n    }\r\n    $: (filteredProps = filterProps(\r\n            props,\r\n            typeof Component === \"string\",\r\n            forwardMotionProps\r\n        ))\r\n    $: if (targetEl){\r\n            motion(targetEl)\r\n    }\r\n</script>\r\n\r\n<svelte:component\r\n    this={Component === 'SVG' ? UseSVGProps : UseHTMLProps}\r\n    {visualState}\r\n    {isStatic}\r\n    {props}\r\n    let:visualProps>\r\n\r\n    <slot\r\n        motion={motion}\r\n        props={{...filteredProps,...visualProps}} />\r\n\r\n</svelte:component>\r\n\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { __rest} from 'tslib';\r\nimport { visualElement } from '../index.js';\r\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.js';\r\nimport { getBoundingBox } from '../dom/projection/measure.js';\r\nimport { buildHTMLStyles } from './utils/build-styles.js';\r\nimport { isCSSVariable } from '../dom/utils/is-css-variable.js';\r\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.js';\r\nimport { isTransformProp } from './utils/transform.js';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\r\nimport { renderHTML } from './utils/render.js';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\r\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from './utils/build-projection-transform.js';\r\n\r\nfunction getComputedStyle(element) {\r\n    return window.getComputedStyle(element);\r\n}\r\nvar htmlConfig = {\r\n    treeType: \"dom\",\r\n    readValueFromInstance: function (domElement, key) {\r\n        if (isTransformProp(key)) {\r\n            var defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        else {\r\n            var computedStyle = getComputedStyle(domElement);\r\n            return ((isCSSVariable(key)\r\n                ? computedStyle.getPropertyValue(key)\r\n                : computedStyle[key]) || 0);\r\n        }\r\n    },\r\n    sortNodePosition: function (a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    },\r\n    getBaseTarget: function (props, key) {\r\n        var _a;\r\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\r\n    },\r\n    measureViewportBox: function (element, _a) {\r\n        var transformPagePoint = _a.transformPagePoint;\r\n        return getBoundingBox(element, transformPagePoint);\r\n    },\r\n    /**\r\n     * Reset the transform on the current Element. This is called as part\r\n     * of a batched process across the entire layout tree. To remove this write\r\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\r\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\r\n     * works\r\n     */\r\n    resetTransform: function (element, domElement, props) {\r\n        var transformTemplate = props.transformTemplate;\r\n        domElement.style.transform = transformTemplate\r\n            ? transformTemplate({}, \"\")\r\n            : \"none\";\r\n        // Ensure that whatever happens next, we restore our transform on the next frame\r\n        element.scheduleRender();\r\n    },\r\n    restoreTransform: function (instance, mutableState) {\r\n        instance.style.transform = mutableState.style.transform;\r\n    },\r\n    removeValueFromRenderState: function (key, _a) {\r\n        var vars = _a.vars, style = _a.style;\r\n        delete vars[key];\r\n        delete style[key];\r\n    },\r\n    /**\r\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\r\n     * can be animated by Motion.\r\n     */\r\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\r\n        var transformValues = _b.transformValues;\r\n        if (isMounted === void 0) { isMounted = true; }\r\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\r\n        var origin = getOrigin(target, transition || {}, element);\r\n        /**\r\n         * If Framer has provided a function to convert `Color` etc value types, convert them\r\n         */\r\n        if (transformValues) {\r\n            if (transitionEnd)\r\n                transitionEnd = transformValues(transitionEnd);\r\n            if (target)\r\n                target = transformValues(target);\r\n            if (origin)\r\n                origin = transformValues(origin);\r\n        }\r\n        if (isMounted) {\r\n            checkTargetForNewValues(element, target, origin);\r\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\r\n            transitionEnd = parsed.transitionEnd;\r\n            target = parsed.target;\r\n        }\r\n        return Object.assign({ transition: transition,\r\n            transitionEnd: transitionEnd }, target);\r\n    },\r\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\r\n        if (element.isVisible !== undefined) {\r\n            renderState.style.visibility = element.isVisible\r\n                ? \"visible\"\r\n                : \"hidden\";\r\n        }\r\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\r\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\r\n            ? buildLayoutProjectionTransformOrigin\r\n            : undefined);\r\n    },\r\n    render: renderHTML,\r\n};\r\nvar htmlVisualElement = visualElement(htmlConfig);\r\n\r\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { convertBoundingBoxToAxisBox, transformBoundingBox } from '../../../utils/geometry/index.js';\r\n\r\n/**\r\n * Measure and return the element bounding box.\r\n *\r\n * We convert the box into an AxisBox2D to make it easier to work with each axis\r\n * individually and programmatically.\r\n *\r\n * This function optionally accepts a transformPagePoint function which allows us to compensate\r\n * for, for instance, measuring the element within a scaled plane like a Framer devivce preview component.\r\n */\r\nfunction getBoundingBox(element, transformPagePoint) {\r\n    var box = element.getBoundingClientRect();\r\n    return convertBoundingBoxToAxisBox(transformBoundingBox(box, transformPagePoint));\r\n}\r\n\r\nexport { getBoundingBox };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { __rest, __read } from 'tslib';\r\n//import { invariant } from 'hey-listen';\r\n\r\nfunction isCSSVariable(value) {\r\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\r\n}\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\r\nfunction parseCSSVariable(current) {\r\n    var match = cssVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    var _a = __read(match, 3), token = _a[1], fallback = _a[2];\r\n    return [token, fallback];\r\n}\r\nvar maxDepth = 4;\r\nfunction getVariableValue(current, element, depth) {\r\n    if (depth === void 0) { depth = 1; }\r\n    //invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\r\n    var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        return resolved.trim();\r\n    }\r\n    else if (isCSSVariable(fallback)) {\r\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\r\n        return getVariableValue(fallback, element, depth + 1);\r\n    }\r\n    else {\r\n        return fallback;\r\n    }\r\n}\r\n/**\r\n * Resolve CSS variables from\r\n *\r\n * @internal\r\n */\r\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\r\n    var _b;\r\n    var target = __rest(_a, []);\r\n    var element = visualElement.getInstance();\r\n    if (!(element instanceof HTMLElement))\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\r\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\r\n    if (transitionEnd) {\r\n        transitionEnd = Object.assign({}, transitionEnd);\r\n    }\r\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\r\n    visualElement.forEachValue(function (value) {\r\n        var current = value.get();\r\n        if (!isCSSVariable(current))\r\n            return;\r\n        var resolved = getVariableValue(current, element);\r\n        if (resolved)\r\n            value.set(resolved);\r\n    });\r\n    // Cycle through every target property and resolve CSS variables. Currently\r\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\r\n    for (var key in target) {\r\n        var current = target[key];\r\n        if (!isCSSVariable(current))\r\n            continue;\r\n        var resolved = getVariableValue(current, element);\r\n        if (!resolved)\r\n            continue;\r\n        // Clone target if it hasn't already been\r\n        target[key] = resolved;\r\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\r\n        // CSS variable. This will ensure that after the animation the component will reflect\r\n        // changes in the value of the CSS variable.\r\n        if (transitionEnd)\r\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\r\n    }\r\n    return { target: target, transitionEnd: transitionEnd };\r\n}\r\n\r\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { __read } from 'tslib';\r\nimport { number, px } from 'style-value-types';\r\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.js';\r\n//import { invariant } from 'hey-listen';\r\nimport { transformProps } from '../../html/utils/transform.js';\r\nimport { findDimensionValueType } from '../value-types/dimensions.js';\r\n\r\nvar positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    \"x\",\r\n    \"y\",\r\n]);\r\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\r\nvar hasPositionalKey = function (target) {\r\n    return Object.keys(target).some(isPositionalKey);\r\n};\r\nvar setAndResetVelocity = function (value, to) {\r\n    // Looks odd but setting it twice doesn't render, it'll just\r\n    // set both prev and current to the latest value\r\n    value.set(to, false);\r\n    value.set(to);\r\n};\r\nvar isNumOrPxType = function (v) {\r\n    return v === number || v === px;\r\n};\r\nvar BoundingBoxDimension;\r\n(function (BoundingBoxDimension) {\r\n    BoundingBoxDimension[\"width\"] = \"width\";\r\n    BoundingBoxDimension[\"height\"] = \"height\";\r\n    BoundingBoxDimension[\"left\"] = \"left\";\r\n    BoundingBoxDimension[\"right\"] = \"right\";\r\n    BoundingBoxDimension[\"top\"] = \"top\";\r\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\r\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\r\nvar getPosFromMatrix = function (matrix, pos) {\r\n    return parseFloat(matrix.split(\", \")[pos]);\r\n};\r\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\r\n    var transform = _a.transform;\r\n    if (transform === \"none\" || !transform)\r\n        return 0;\r\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\r\n    if (matrix3d) {\r\n        return getPosFromMatrix(matrix3d[1], pos3);\r\n    }\r\n    else {\r\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\r\n        if (matrix) {\r\n            return getPosFromMatrix(matrix[1], pos2);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}; };\r\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\r\nfunction removeNonTranslationalTransform(visualElement) {\r\n    var removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach(function (key) {\r\n        var value = visualElement.getValue(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    // Apply changes to element before measurement\r\n    if (removedTransforms.length)\r\n        visualElement.syncRender();\r\n    return removedTransforms;\r\n}\r\nvar positionalValues = {\r\n    // Dimensions\r\n    width: function (_a) {\r\n        var x = _a.x;\r\n        return x.max - x.min;\r\n    },\r\n    height: function (_a) {\r\n        var y = _a.y;\r\n        return y.max - y.min;\r\n    },\r\n    top: function (_bbox, _a) {\r\n        var top = _a.top;\r\n        return parseFloat(top);\r\n    },\r\n    left: function (_bbox, _a) {\r\n        var left = _a.left;\r\n        return parseFloat(left);\r\n    },\r\n    bottom: function (_a, _b) {\r\n        var y = _a.y;\r\n        var top = _b.top;\r\n        return parseFloat(top) + (y.max - y.min);\r\n    },\r\n    right: function (_a, _b) {\r\n        var x = _a.x;\r\n        var left = _b.left;\r\n        return parseFloat(left) + (x.max - x.min);\r\n    },\r\n    // Transform\r\n    x: getTranslateFromMatrix(4, 13),\r\n    y: getTranslateFromMatrix(5, 14),\r\n};\r\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\r\n    var originBbox = visualElement.measureViewportBox();\r\n    var element = visualElement.getInstance();\r\n    var elementComputedStyle = getComputedStyle(element);\r\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\r\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\r\n    // If the element is currently set to display: \"none\", make it visible before\r\n    // measuring the target bounding box\r\n    if (display === \"none\") {\r\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\r\n    }\r\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\r\n    visualElement.syncRender();\r\n    var targetBbox = visualElement.measureViewportBox();\r\n    changedKeys.forEach(function (key) {\r\n        // Restore styles to their **calculated computed style**, not their actual\r\n        // originally set style. This allows us to animate between equivalent pixel units.\r\n        var value = visualElement.getValue(key);\r\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\r\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\r\n    });\r\n    return target;\r\n};\r\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\r\n    if (origin === void 0) { origin = {}; }\r\n    if (transitionEnd === void 0) { transitionEnd = {}; }\r\n    target = Object.assign({}, target);\r\n    transitionEnd = Object.assign({}, transitionEnd);\r\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\r\n    // We want to remove any transform values that could affect the element's bounding box before\r\n    // it's measured. We'll reapply these later.\r\n    var removedTransformValues = [];\r\n    var hasAttemptedToRemoveTransformValues = false;\r\n    var changedValueTypeKeys = [];\r\n    targetPositionalKeys.forEach(function (key) {\r\n        var value = visualElement.getValue(key);\r\n        if (!visualElement.hasValue(key))\r\n            return;\r\n        var from = origin[key];\r\n        var to = target[key];\r\n        var fromType = findDimensionValueType(from);\r\n        var toType;\r\n        // TODO: The current implementation of this basically throws an error\r\n        // if you try and do value conversion via keyframes. There's probably\r\n        // a way of doing this but the performance implications would need greater scrutiny,\r\n        // as it'd be doing multiple resize-remeasure operations.\r\n        if (isKeyframesTarget(to)) {\r\n            var numKeyframes = to.length;\r\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\r\n                if (!toType) {\r\n                    toType = findDimensionValueType(to[i]);\r\n                    //invariant(toType === fromType ||\r\n                    //    (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\r\n                }\r\n                //else {\r\n                ///    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\r\n                //}\r\n            }\r\n        }\r\n        else {\r\n            toType = findDimensionValueType(to);\r\n        }\r\n        if (fromType !== toType) {\r\n            // If they're both just number or px, convert them both to numbers rather than\r\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\r\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\r\n                var current = value.get();\r\n                if (typeof current === \"string\") {\r\n                    value.set(parseFloat(current));\r\n                }\r\n                if (typeof to === \"string\") {\r\n                    target[key] = parseFloat(to);\r\n                }\r\n                else if (Array.isArray(to) && toType === px) {\r\n                    target[key] = to.map(parseFloat);\r\n                }\r\n            }\r\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\r\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\r\n                (from === 0 || to === 0)) {\r\n                // If one or the other value is 0, it's safe to coerce it to the\r\n                // type of the other without measurement\r\n                if (from === 0) {\r\n                    value.set(toType.transform(from));\r\n                }\r\n                else {\r\n                    target[key] = fromType.transform(to);\r\n                }\r\n            }\r\n            else {\r\n                // If we're going to do value conversion via DOM measurements, we first\r\n                // need to remove non-positional transform values that could affect the bbox measurements.\r\n                if (!hasAttemptedToRemoveTransformValues) {\r\n                    removedTransformValues = removeNonTranslationalTransform(visualElement);\r\n                    hasAttemptedToRemoveTransformValues = true;\r\n                }\r\n                changedValueTypeKeys.push(key);\r\n                transitionEnd[key] =\r\n                    transitionEnd[key] !== undefined\r\n                        ? transitionEnd[key]\r\n                        : target[key];\r\n                setAndResetVelocity(value, to);\r\n            }\r\n        }\r\n    });\r\n    if (changedValueTypeKeys.length) {\r\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\r\n        // If we removed transform values, reapply them before the next render\r\n        if (removedTransformValues.length) {\r\n            removedTransformValues.forEach(function (_a) {\r\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n                visualElement.getValue(key).set(value);\r\n            });\r\n        }\r\n        // Reapply original values\r\n        visualElement.syncRender();\r\n        return { target: convertedTarget, transitionEnd: transitionEnd };\r\n    }\r\n    else {\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    }\r\n};\r\n/**\r\n * Convert value types for x/y/width/height/top/left/bottom/right\r\n *\r\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\r\n *\r\n * @internal\r\n */\r\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\r\n    return hasPositionalKey(target)\r\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\r\n        : { target: target, transitionEnd: transitionEnd };\r\n}\r\n\r\nexport { BoundingBoxDimension, unitConversion };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { resolveCSSVariables } from './css-variables-conversion.js';\r\nimport { unitConversion } from './unit-conversion.js';\r\n\r\n/**\r\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\r\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\r\n */\r\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\r\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\r\n    target = resolved.target;\r\n    transitionEnd = resolved.transitionEnd;\r\n    return unitConversion(visualElement, target, origin, transitionEnd);\r\n};\r\n\r\nexport { parseDomVariant };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.js';\r\nimport { isMotionValue } from '../../../value/utils/is-motion-value.js';\r\n\r\nfunction scrapeMotionValuesFromProps(props) {\r\n    var style = props.style;\r\n    var newValues = {};\r\n    for (var key in style) {\r\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\r\n            newValues[key] = style[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nfunction renderHTML(element, _a) {\r\n    var style = _a.style, vars = _a.vars;\r\n    // Directly assign style into the Element's style prop. In tests Object.assign is the\r\n    // fastest way to assign styles.\r\n    Object.assign(element.style, style);\r\n    // Loop over any CSS variables and assign those.\r\n    for (var key in vars) {\r\n        element.style.setProperty(key, vars[key]);\r\n    }\r\n}\r\n\r\nexport { renderHTML };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { isMotionValue } from '../../../value/utils/is-motion-value.js';\r\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.js';\r\n\r\nfunction scrapeMotionValuesFromProps(props) {\r\n    var newValues = scrapeMotionValuesFromProps$1(props);\r\n    for (var key in props) {\r\n        if (isMotionValue(props[key])) {\r\n            var targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\r\n            newValues[targetKey] = props[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\r\nvar REPLACE_TEMPLATE = \"$1-$2\";\r\n/**\r\n * Convert camelCase to dash-case properties.\r\n */\r\nvar camelToDash = function (str) {\r\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\r\n};\r\n\r\nexport { camelToDash };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * A set of attribute names that are always read/written as camel case.\r\n */\r\nvar camelCaseAttributes = new Set([\r\n    \"baseFrequency\",\r\n    \"diffuseConstant\",\r\n    \"kernelMatrix\",\r\n    \"kernelUnitLength\",\r\n    \"keySplines\",\r\n    \"keyTimes\",\r\n    \"limitingConeAngle\",\r\n    \"markerHeight\",\r\n    \"markerWidth\",\r\n    \"numOctaves\",\r\n    \"targetX\",\r\n    \"targetY\",\r\n    \"surfaceScale\",\r\n    \"specularConstant\",\r\n    \"specularExponent\",\r\n    \"stdDeviation\",\r\n    \"tableValues\",\r\n    \"viewBox\",\r\n]);\r\n\r\nexport { camelCaseAttributes };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { camelToDash } from '../../dom/utils/camel-to-dash.js';\r\nimport { renderHTML } from '../../html/utils/render.js';\r\nimport { camelCaseAttributes } from './camel-case-attrs.js';\r\n\r\nfunction renderSVG(element, renderState) {\r\n    renderHTML(element, renderState);\r\n    for (var key in renderState.attrs) {\r\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\r\n    }\r\n}\r\n\r\nexport { renderSVG };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { visualElement } from '../index.js';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\r\nimport { htmlConfig } from '../html/visual-element.js';\r\nimport { buildSVGAttrs } from './utils/build-attrs.js';\r\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\r\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\r\nimport { isTransformProp } from '../html/utils/transform.js';\r\nimport { renderSVG } from './utils/render.js';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\r\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from '../html/utils/build-projection-transform.js';\r\n\r\nvar svgVisualElement = visualElement(Object.assign(Object.assign({}, htmlConfig), { getBaseTarget: function (props, key) {\r\n        return props[key];\r\n    },\r\n    readValueFromInstance: function (domElement, key) {\r\n        var _a;\r\n        if (isTransformProp(key)) {\r\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\r\n        }\r\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\r\n        return domElement.getAttribute(key);\r\n    },\r\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\r\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\r\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\r\n            ? buildLayoutProjectionTransformOrigin\r\n            : undefined);\r\n    }, render: renderSVG }));\r\n\r\nexport { svgVisualElement };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { htmlVisualElement } from '../html/visual-element.js';\r\nimport { svgVisualElement } from '../svg/visual-element.js';\r\n\r\n\r\nvar createDomVisualElement = function (Component, options) {\r\n   \r\n    return Component === \"SVG\"\r\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\r\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\r\n};\r\n\r\nexport { createDomVisualElement };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { renderSVG } from './utils/render.js';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\r\nimport { createSvgRenderState } from './utils/create-render-state.js';\r\nimport { buildSVGAttrs } from './utils/build-attrs.js';\r\n\r\nvar svgMotionConfig = {\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n        onMount: function (props, instance, _a) {\r\n            var renderState = _a.renderState, latestValues = _a.latestValues;\r\n            try {\r\n                renderState.dimensions =\r\n                    typeof instance.getBBox ===\r\n                        \"function\"\r\n                        ? instance.getBBox()\r\n                        : instance.getBoundingClientRect();\r\n            }\r\n            catch (e) {\r\n                // Most likely trying to measure an unrendered element under Firefox\r\n                renderState.dimensions = {\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                };\r\n            }\r\n            if (isPath(instance)) {\r\n                renderState.totalPathLength = instance.getTotalLength();\r\n            }\r\n            buildSVGAttrs(renderState, latestValues, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\r\n            // TODO: Replace with direct assignment\r\n            renderSVG(instance, renderState);\r\n        },\r\n    }\r\nfunction isPath(element) {\r\n    return element.tagName === \"path\";\r\n}\r\n\r\nexport { svgMotionConfig };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\r\nimport { createHtmlRenderState } from './utils/create-render-state.js';\r\n\r\nvar htmlMotionConfig = {\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createHtmlRenderState,   \r\n};\r\n\r\nexport { htmlMotionConfig };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { checkIfControllingVariants, isVariantLabel } from '../../render/utils/variants.js';\r\n\r\nfunction getCurrentTreeVariants(props, context) {\r\n    if (checkIfControllingVariants(props)) {\r\n        var initial = props.initial, animate = props.animate;\r\n        return {\r\n            initial: initial === false || isVariantLabel(initial)\r\n                ? initial\r\n                : undefined,\r\n            animate: isVariantLabel(animate) ? animate : undefined,\r\n        };\r\n    }\r\n    return props.inherit !== false ? (context||{}) : {};\r\n}\r\n\r\nexport { getCurrentTreeVariants };\r\n", "<script>\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import { getContext } from \"svelte\";\r\n    import { get } from 'svelte/store';\r\n    import { MotionContext } from './index.js';\r\n    import { getCurrentTreeVariants } from './utils.js';\r\n\r\n    export let props, \r\n        isStatic,\r\n        isCustom;\r\n        let mc = getContext(MotionContext)||MotionContext(isCustom);\r\n        let {initial, animate} = getCurrentTreeVariants(props, get(mc));\r\n        $: ({initial,animate} = getCurrentTreeVariants(props, $mc));\r\n\r\n    const variantLabelsAsDependency = (prop) => {\r\n        return Array.isArray(prop) ? prop.join(\" \") : prop;\r\n    }\r\n\r\n    const memo = () => { return (\r\n        { initial: initial, animate: animate }\r\n        ); \r\n    } \r\n    /**\r\n     * Only break memoisation in static mode\r\n     */\r\n     let value = memo();\r\n     $: if (isStatic){\r\n         value = memo(variantLabelsAsDependency(initial),variantLabelsAsDependency(animate))\r\n     }\r\n</script>\r\n<slot {value}/>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { isCustomValue } from '../../utils/resolve-value.js';\r\nimport { isMotionValue } from './is-motion-value.js';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\r\nfunction resolveMotionValue(value) {\r\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n", "<script context=\"module\">\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    \r\n    import { resolveMotionValue } from \"../../value/utils/resolve-motion-value\";\r\n    import {\r\n        checkIfControllingVariants,\r\n        checkIfVariantNode,\r\n        resolveVariantFromProps,\r\n    } from \"../../render/utils/variants\";\r\n    import { isAnimationControls } from \"../../animation/utils/is-animation-controls.js\";\r\n    const makeState = (\r\n        { scrapeMotionValuesFromProps, createRenderState, onMount },\r\n        props,\r\n        context,\r\n        presenceContext\r\n    ) => {\r\n        const state = {\r\n            latestValues: makeLatestValues(\r\n                props,\r\n                context,\r\n                presenceContext,\r\n                scrapeMotionValuesFromProps\r\n            ),\r\n            renderState: createRenderState(),\r\n        };\r\n\r\n        if (onMount) {\r\n            state.mount = (instance) => onMount(props, instance, state);\r\n        }\r\n\r\n        return state;\r\n    };\r\n    function makeLatestValues(\r\n        props,\r\n        context,\r\n        presenceContext,\r\n        scrapeMotionValues\r\n    ) {\r\n        const values = {};\r\n        const blockInitialAnimation = presenceContext?.initial === false;\r\n\r\n        const motionValues = scrapeMotionValues(props);\r\n        for (const key in motionValues) {\r\n            values[key] = resolveMotionValue(motionValues[key]);\r\n        }\r\n\r\n        let { initial, animate } = props;\r\n        const isControllingVariants = checkIfControllingVariants(props);\r\n        const isVariantNode = checkIfVariantNode(props);\r\n\r\n        if (context &&\r\n        isVariantNode &&\r\n        !isControllingVariants &&\r\n        props.inherit !== false) {\r\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\r\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\r\n    }\r\n\r\n        const variantToSet =\r\n            blockInitialAnimation || initial === false ? animate : initial;\r\n\r\n        if (\r\n            variantToSet &&\r\n            typeof variantToSet !== \"boolean\" &&\r\n            !isAnimationControls(variantToSet)\r\n        ) {\r\n            const list = Array.isArray(variantToSet)\r\n                ? variantToSet\r\n                : [variantToSet];\r\n            list.forEach((definition) => {\r\n                const resolved = resolveVariantFromProps(props, definition);\r\n                if (!resolved) return;\r\n\r\n                const { transitionEnd, transition, ...target } = resolved;\r\n\r\n                for (const key in target) values[key] = target[key];\r\n                for (const key in transitionEnd)\r\n                    values[key] = transitionEnd[key];\r\n            });\r\n        }\r\n\r\n        return values;\r\n    }\r\n</script>\r\n\r\n<script>\r\n    import { getContext } from \"svelte\";\r\n    import {get}from 'svelte/store';\r\n    import { PresenceContext } from \"../../context/PresenceContext\";\r\n    import {MotionContext} from \"../../context/MotionContext/index.js\";\r\n\r\n    export let config, props, isStatic, isCustom;\r\n\r\n    const context = getContext(MotionContext) || MotionContext(isCustom);\r\n    const presenceContext = getContext(PresenceContext) || PresenceContext(isCustom);\r\n    let state = makeState(config, props, get(context), get(presenceContext));\r\n    const ms = makeState;\r\n    $: if (isStatic) {    \r\n        state = ms(config, props, $context, $presenceContext);\r\n    }\r\n</script>\r\n\r\n<slot {state} />\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nfunction isRefObject(ref) {\r\n    return (typeof ref === \"object\" &&\r\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\r\n}\r\n\r\nexport { isRefObject };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { isRefObject } from '../../utils/is-ref-object.js';\r\n\r\n/**\r\n * Creates a ref function that, when called, hydrates the provided\r\n * external ref and VisualElement.\r\n */\r\nfunction useMotionRef(visualState, visualElement, externalRef) {\r\n    return function (instance) {\r\n        var _a;\r\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\r\n        if (visualElement) {\r\n            instance\r\n                ? visualElement.mount(instance)\r\n                : visualElement.unmount();\r\n        }\r\n        if (externalRef) {\r\n            if (typeof externalRef === \"function\") {\r\n                externalRef(instance);\r\n            }\r\n            else if (isRefObject(externalRef)) {\r\n                externalRef.current = instance;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport { useMotionRef };\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import { MotionConfigContext } from \"../context/MotionConfigContext\";\r\n    import { UseVisualElement } from \"./utils/use-visual-element\";\r\n    import { UseFeatures } from \"./features/use-features\";\r\n    import MotionContextProvider from \"../context/MotionContext/MotionContextProvider.svelte\";\r\n    import { getContext, onMount } from \"svelte\";\r\n    import { UseRender } from \"../render/dom/use-render.js\";\r\n    import { createDomVisualElement } from \"../render/dom/create-visual-element.js\";\r\n    import { svgMotionConfig } from \"../render/svg/config-motion.js\";\r\n    import { htmlMotionConfig } from \"../render/html/config-motion.js\";\r\n    import { UseCreateMotionContext } from \"../context/MotionContext/create\";\r\n    import { UseVisualState } from \"./utils/use-visual-state.js\";\r\n    import { useMotionRef } from \"./utils/use-motion-ref.js\";\r\n    import ScaleCorrectionProvider from \"../context/ScaleCorrectionProvider.svelte\";\r\n\r\n\r\n    export let isSVG = false,\r\n        forwardMotionProps = false,\r\n        externalRef = undefined,\r\n        targetEl=undefined;/*\r\n        initial = undefined,\r\n        style = undefined,\r\n        transformTemplate = undefined,\r\n        transformValues = undefined,\r\n        //AnimationProps\r\n        animate = undefined,\r\n        exit = undefined,\r\n        variants = undefined,\r\n        transition = undefined,\r\n        //VisualElementLifecycles\r\n        onViewportBoxUpdate = undefined,\r\n        onBeforeLayoutMeasure = undefined,\r\n        onLayoutMeasure = undefined,\r\n        onUpdate = undefined,\r\n        onAnimationStart = undefined,\r\n        onAnimationComplete = undefined,\r\n        onLayoutAnimationComplete = undefined,\r\n        //GestureHandlers\r\n        // PanHandlers\r\n        onPan = undefined,\r\n        onPanStart = undefined,\r\n        onPanSessionStart = undefined,\r\n        onPanEnd = undefined,\r\n        // TapHandlers\r\n        onTap = undefined,\r\n        onTapStart = undefined,\r\n        onTapCancel = undefined,\r\n        whileTap = undefined,\r\n        //HoverHandlers\r\n        whileHover = undefined,\r\n        onHoverStart = undefined,\r\n        onHoverEnd = undefined,\r\n        //FocusHandlers\r\n        whileFocus = undefined,\r\n        //DraggableProps\r\n        drag = undefined,\r\n        whileDrag = undefined,\r\n        dragDirectionLock = undefined,\r\n        dragPropagation = undefined,\r\n        dragConstraints = undefined,\r\n        dragElastic = undefined,\r\n        dragMomentum = undefined,\r\n        dragTransition = undefined,\r\n        dragControls = undefined,\r\n        dragListener = undefined,\r\n        onMeasureDragConstraints = undefined,\r\n        _dragX = undefined,\r\n        _dragY = undefined,\r\n        //DragHandlers\r\n        onDragStart = undefined,\r\n        onDragEnd = undefined,\r\n        onDrag = undefined,\r\n        onDirectionLock = undefined,\r\n        onDragTransitionEnd = undefined,\r\n        // LayoutProps\r\n        layout = undefined,\r\n        layoutId = undefined,\r\n        //MotionAdvancedProps\r\n        custom = undefined,\r\n        inherit = undefined,\r\n        update = undefined;\r\n*/\r\n    //layout=undefined;\r\n    $: motionProps = $$restProps/*{\r\n        initial,\r\n        style,\r\n        transformTemplate,\r\n        transformValues,\r\n        //AnimationProps\r\n        animate,\r\n        exit,\r\n        variants,\r\n        transition,\r\n        //VisualElementLifecycles\r\n        onViewportBoxUpdate,\r\n        onBeforeLayoutMeasure,\r\n        onLayoutMeasure,\r\n        onUpdate,\r\n        onAnimationStart,\r\n        onAnimationComplete,\r\n        onLayoutAnimationComplete,\r\n        //GestureHandlers\r\n        // PanHandlers\r\n        onPan,\r\n        onPanStart,\r\n        onPanSessionStart,\r\n        onPanEnd,\r\n        // TapHandlers\r\n        onTap,\r\n        onTapStart,\r\n        onTapCancel,\r\n        whileTap,\r\n        //HoverHandlers\r\n        whileHover,\r\n        onHoverStart,\r\n        onHoverEnd,\r\n        //FocusHandlers\r\n        whileFocus,\r\n        //DraggableProps\r\n        drag,\r\n        whileDrag,\r\n        dragDirectionLock,\r\n        dragPropagation,\r\n        dragConstraints,\r\n        dragElastic,\r\n        dragMomentum,\r\n        dragTransition,\r\n        dragControls,\r\n        dragListener,\r\n        onMeasureDragConstraints,\r\n        _dragX,\r\n        _dragY,\r\n        //DragHandlers\r\n        onDragStart,\r\n        onDragEnd,\r\n        onDrag,\r\n        onDirectionLock,\r\n        onDragTransitionEnd,\r\n        // LayoutProps\r\n        layout,\r\n        layoutId,\r\n        //MotionAdvancedProps\r\n        custom,\r\n        inherit,\r\n        ...(isSVG ? $$restProps : {}),\r\n    };*/\r\n    const isCustom = targetEl;\r\n    let Component = isSVG ? \"SVG\" : \"DOM\";\r\n    let createVisualElement = createDomVisualElement;\r\n    let visualStateConfig = isSVG ? svgMotionConfig : htmlMotionConfig;\r\n\r\n    /**\r\n     * If a component is static, we only visually update it as a\r\n     * result of a React re-render, rather than any interactions or animations.\r\n     * If this component or any ancestor is static, we disable hardware acceleration\r\n     * and don't load any additional functionality.\r\n     */\r\n    const a = getContext(MotionConfigContext) || MotionConfigContext(isCustom);\r\n    $: ({ isStatic } = $a || {});\r\n   \r\n    let mounted = false;\r\n    const setContext = (c, v) => {\r\n        c.visualElement = v;\r\n        return v;\r\n    };\r\n    onMount(() => (mounted = true));\r\n</script>\r\n\r\n<ScaleCorrectionProvider {isCustom}>\r\n    <UseCreateMotionContext props={motionProps} {isStatic} let:value={context} {isCustom}>\r\n        <UseVisualState\r\n            config={visualStateConfig}\r\n            props={motionProps}\r\n            {isStatic}\r\n            {isCustom}\r\n            let:state={visualState}>\r\n            <UseVisualElement\r\n                {Component}\r\n                {visualState}\r\n                {createVisualElement}\r\n                props={motionProps}\r\n                {isCustom}\r\n                let:visualElement>\r\n                <UseFeatures\r\n                    visualElement={setContext(context, visualElement)}\r\n                    props={motionProps}\r\n                    let:features={_features}>\r\n                    <MotionContextProvider value={context} {isCustom}>\r\n                        <UseRender\r\n                            {Component}\r\n                            props={motionProps}\r\n                            ref={useMotionRef(visualState, context.visualElement, externalRef)}\r\n                            {visualState}\r\n                            {isStatic}\r\n                            {forwardMotionProps}\r\n                            let:motion\r\n                            let:props={renderProps}>\r\n                            <slot {motion} props={renderProps} />\r\n                        </UseRender>\r\n                    </MotionContextProvider>\r\n\r\n                    {#if mounted}\r\n                        {#each _features as feat (feat.key)}\r\n                            <svelte:component\r\n                                this={feat.Component}\r\n                                props={feat.props}\r\n                                visualElement={feat.visualElement}\r\n                                {isCustom}\r\n                                />\r\n                        {/each}\r\n                    {/if}\r\n                </UseFeatures>\r\n            </UseVisualElement>\r\n        </UseVisualState>\r\n    </UseCreateMotionContext>\r\n</ScaleCorrectionProvider>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport Motion from './Motion.svelte';\r\nimport { loadFeatures } from \"./features/definitions\"\r\n\r\nexport const createMotionComponent = (\r\n    {\r\n        preloadedFeatures,\r\n        createVisualElement,\r\n        forwardMotionProps,\r\n        visualStateConfig,\r\n        Component,\r\n\r\n    }\r\n) => {\r\n    preloadedFeatures && loadFeatures(preloadedFeatures)\r\n    return class MotionComponent extends Motion {\r\n        constructor(options) {\r\n            const props = options.props;\r\n            options.props = {\r\n                props: props,\r\n                defaultFeatures: preloadedFeatures,\r\n                createVisualElement: createVisualElement,\r\n                forwardMotionProps: forwardMotionProps,\r\n                Component: Component,\r\n                visualStateConfig\r\n            }\r\n            super(options)\r\n        }\r\n    }\r\n}\r\n", "<script context=\"module\">\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    export function addDomEvent(target, eventName, handler, options) {\r\n        \r\n        target.addEventListener(eventName, handler, options);\r\n        return function () {\r\n            return target.removeEventListener(eventName, handler, options);\r\n        };\r\n    }\r\n    \r\n</script>\r\n\r\n<script>\r\nimport { onDestroy } from \"svelte\";\r\n\r\n\r\n    /**\r\n     * Attaches an event listener directly to the provided DOM element.\r\n     *\r\n     * Bypassing React's event system can be desirable, for instance when attaching non-passive\r\n     * event handlers.\r\n     *\r\n     * ```jsx\r\n     * const ref = useRef(null)\r\n     *\r\n     * useDomEvent(ref, 'wheel', onWheel, { passive: false })\r\n     *\r\n     * return <div ref={ref} />\r\n     * ```\r\n     *\r\n     * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\r\n     * @param eventName - Name of the event you want listen for.\r\n     * @param handler - Function to fire when receiving the event.\r\n     * @param options - Options to pass to `Event.addEventListener`.\r\n     *\r\n     * @public\r\n     */\r\n    export let ref,\r\n        eventName,\r\n            handler=undefined,\r\n            options=undefined;\r\n    let cleanup = ()=>{};\r\n    const effect = ()=>{\r\n        cleanup();\r\n        if (!ref){\r\n            return ()=>{};\r\n        }\r\n        const element = ref.current\r\n\r\n        if (handler && element) {\r\n            return addDomEvent(element, eventName, handler, options)\r\n        }\r\n        return ()=>{};\r\n    }\r\n    \r\n    $: (cleanup = effect(ref, eventName, handler, options));\r\n    onDestroy(cleanup);\r\n</script>\r\n<slot/>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nfunction isMouseEvent(event) {\r\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\r\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\r\n        return !!(event.pointerType === \"mouse\");\r\n    }\r\n    return event instanceof MouseEvent;\r\n}\r\nfunction isTouchEvent(event) {\r\n    var hasTouches = !!event.touches;\r\n    return hasTouches;\r\n}\r\n\r\nexport { isMouseEvent, isTouchEvent };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { isTouchEvent } from '../gestures/utils/event-type.js';\r\n\r\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\r\nfunction filterPrimaryPointer(eventHandler) {\r\n    return function (event) {\r\n        var isMouseEvent = event instanceof MouseEvent;\r\n        var isPrimaryPointer = !isMouseEvent ||\r\n            (isMouseEvent && event.button === 0);\r\n        if (isPrimaryPointer) {\r\n            eventHandler(event);\r\n        }\r\n    };\r\n}\r\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\r\nfunction pointFromTouch(e, pointType) {\r\n    if (pointType === void 0) { pointType = \"page\"; }\r\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\r\n    var point = primaryTouch || defaultPagePoint;\r\n    return {\r\n        x: point[pointType + \"X\"],\r\n        y: point[pointType + \"Y\"],\r\n    };\r\n}\r\nfunction pointFromMouse(point, pointType) {\r\n    if (pointType === void 0) { pointType = \"page\"; }\r\n    return {\r\n        x: point[pointType + \"X\"],\r\n        y: point[pointType + \"Y\"],\r\n    };\r\n}\r\nfunction extractEventInfo(event, pointType) {\r\n    if (pointType === void 0) { pointType = \"page\"; }\r\n    return {\r\n        point: isTouchEvent(event)\r\n            ? pointFromTouch(event, pointType)\r\n            : pointFromMouse(event, pointType),\r\n    };\r\n}\r\nfunction getViewportPointFromEvent(event) {\r\n    return extractEventInfo(event, \"client\");\r\n}\r\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\r\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\r\n    var listener = function (event) {\r\n        return handler(event, extractEventInfo(event));\r\n    };\r\n    return shouldFilterPrimaryPointer\r\n        ? filterPrimaryPointer(listener)\r\n        : listener;\r\n};\r\n\r\nexport { extractEventInfo, getViewportPointFromEvent, wrapHandler };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nvar isBrowser = typeof window !== \"undefined\";\r\n\r\nexport { isBrowser };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { isBrowser } from '../utils/is-browser.js';\r\n\r\n// We check for event support via functions in case they've been mocked by a testing suite.\r\nvar supportsPointerEvents = function () {\r\n    return isBrowser && window.onpointerdown === null;\r\n};\r\nvar supportsTouchEvents = function () {\r\n    return isBrowser && window.ontouchstart === null;\r\n};\r\nvar supportsMouseEvents = function () {\r\n    return isBrowser && window.onmousedown === null;\r\n};\r\n\r\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\r\n", "<script context=\"module\">\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport {UseDomEvent} from \"./use-dom-event\"\r\nimport {\r\n    supportsPointerEvents,\r\n    supportsTouchEvents,\r\n    supportsMouseEvents,\r\n} from \"./utils\"\r\n\r\n    const mouseEventNames = {\r\n    pointerdown: \"mousedown\",\r\n    pointermove: \"mousemove\",\r\n    pointerup: \"mouseup\",\r\n    pointercancel: \"mousecancel\",\r\n    pointerover: \"mouseover\",\r\n    pointerout: \"mouseout\",\r\n    pointerenter: \"mouseenter\",\r\n    pointerleave: \"mouseleave\",\r\n}\r\n\r\nconst touchEventNames = {\r\n    pointerdown: \"touchstart\",\r\n    pointermove: \"touchmove\",\r\n    pointerup: \"touchend\",\r\n    pointercancel: \"touchcancel\",\r\n}\r\nfunction getPointerEventName(name) {\r\n    if (supportsPointerEvents()) {\r\n        return name\r\n    } else if (supportsTouchEvents()) {\r\n        return touchEventNames[name]\r\n    } else if (supportsMouseEvents()) {\r\n        return mouseEventNames[name]\r\n    }\r\n\r\n    return name\r\n}\r\nexport function addPointerEvent(\r\n    target,\r\n    eventName,\r\n    handler,\r\n    options\r\n) {\r\n    return addDomEvent(\r\n        target,\r\n        getPointerEventName(eventName),\r\n        wrapHandler(handler, eventName === \"pointerdown\"),\r\n        options\r\n    )\r\n}\r\n</script>\r\n<script>\r\nimport { wrapHandler } from \"./event-info\";\r\nimport { addDomEvent } from \"./use-dom-event\";\r\n\r\n    export let ref,\r\n        eventName,\r\n        handler=undefined,\r\n        options=undefined;\r\n</script>\r\n<UseDomEvent {ref}  \r\neventName={getPointerEventName(eventName)}\r\nhandler={handler && wrapHandler(handler, eventName === \"pointerdown\")}\r\n{options}>\r\n    <slot/>\r\n</UseDomEvent>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../utils/fix-process-env';\r\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.js';\r\nimport { extractEventInfo } from '../events/event-info.js';\r\nimport sync, { getFrameData, cancelSync } from 'framesync';\r\nimport { secondsToMilliseconds } from '../utils/time-conversion.js';\r\nimport { addPointerEvent } from '../events/use-pointer-event.js';\r\nimport { distance, pipe } from 'popmotion';\r\n\r\n/**\r\n * @internal\r\n */\r\nvar PanSession = /** @class */ (function () {\r\n    function PanSession(event, handlers, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        this.updatePoint = function () {\r\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\r\n                return;\r\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\r\n            var isPanStarted = _this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            var isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            var point = info.point;\r\n            var timestamp = getFrameData().timestamp;\r\n            _this.history.push(Object.assign(Object.assign({}, point), { timestamp: timestamp }));\r\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(_this.lastMoveEvent, info);\r\n                _this.startEvent = _this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(_this.lastMoveEvent, info);\r\n        };\r\n        this.handlePointerMove = function (event, info) {\r\n            _this.lastMoveEvent = event;\r\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\r\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\r\n            if (isMouseEvent(event) && event.buttons === 0) {\r\n                _this.handlePointerUp(event, info);\r\n                return;\r\n            }\r\n            // Throttle mouse move event to once per frame\r\n            sync.update(_this.updatePoint, true);\r\n        };\r\n        this.handlePointerUp = function (event, info) {\r\n            _this.end();\r\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\r\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\r\n            if (_this.startEvent && onEnd) {\r\n                onEnd(event, panInfo);\r\n            }\r\n            onSessionEnd && onSessionEnd(event, panInfo);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (isTouchEvent(event) && event.touches.length > 1)\r\n            return;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        var info = extractEventInfo(event);\r\n        var initialInfo = transformPoint(info, this.transformPagePoint);\r\n        var point = initialInfo.point;\r\n        var timestamp = getFrameData().timestamp;\r\n        this.history = [Object.assign(Object.assign({}, point), { timestamp: timestamp })];\r\n        var onSessionStart = handlers.onSessionStart;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\r\n    }\r\n    PanSession.prototype.updateHandlers = function (handlers) {\r\n        this.handlers = handlers;\r\n    };\r\n    PanSession.prototype.end = function () {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelSync.update(this.updatePoint);\r\n    };\r\n    return PanSession;\r\n}());\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction subtractPoint(a, b) {\r\n    return { x: a.x - b.x, y: a.y - b.y };\r\n}\r\nfunction getPanInfo(_a, history) {\r\n    var point = _a.point;\r\n    return {\r\n        point: point,\r\n        delta: subtractPoint(point, lastDevicePoint(history)),\r\n        offset: subtractPoint(point, startDevicePoint(history)),\r\n        velocity: getVelocity(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var i = history.length - 1;\r\n    var timestampedPoint = null;\r\n    var lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n\r\nexport { PanSession };\r\n", "<script>\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { MotionConfigContext } from '../context/MotionConfigContext.js';\r\n    import { PanSession } from \"./PanSession\"\r\n    import { afterUpdate, getContext, onDestroy } from \"svelte\";\r\n    import { UsePointerEvent } from \"../events/use-pointer-event\"\r\n    import { get } from 'svelte/store'\r\n    \r\n    \r\n    export let props,\r\n        visualElement,\r\n        isCustom;\r\n    let { onPan, onPanStart, onPanEnd, onPanSessionStart } = props;\r\n    $: ({ onPan, onPanStart, onPanEnd, onPanSessionStart } = props);\r\n    $:( hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart)\r\n    let panSession = null;\r\n    const mcc = getContext(MotionConfigContext)||MotionConfigContext(isCustom);\r\n    let {transformPagePoint} = get(mcc);\r\n    $: ({transformPagePoint} = $mcc);\r\n    let handlers = {\r\n        onSessionStart: onPanSessionStart,\r\n        onStart: onPanStart,\r\n        onMove: onPan,\r\n        onEnd: (\r\n            event,\r\n            info\r\n        ) => {\r\n            panSession = null\r\n            onPanEnd && onPanEnd(event, info)\r\n        },\r\n    };\r\n    $:( handlers = {\r\n        onSessionStart: onPanSessionStart,\r\n        onStart: onPanStart,\r\n        onMove: onPan,\r\n        onEnd: (\r\n            event,\r\n            info\r\n        ) => {\r\n            panSession = null\r\n            onPanEnd && onPanEnd(event, info)\r\n        },\r\n    });\r\n    function onPointerDown(event) {\r\n        panSession = new PanSession(event, handlers, {\r\n            transformPagePoint,\r\n        })\r\n    }\r\n    afterUpdate(()=>{\r\n        if (panSession !== null) {\r\n            panSession.updateHandlers(handlers)\r\n        }\r\n    })\r\n    onDestroy(() => panSession && panSession.end())\r\n\r\n</script>\r\n<UsePointerEvent ref={visualElement} eventName=\"pointerdown\" handler={hasPanEvents && onPointerDown}>\r\n    <slot/>\r\n</UsePointerEvent>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nvar isNodeOrChild = function (parent, child) {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\r\n\r\nexport { isNodeOrChild };\r\n", "/** \r\nbased on framer-motion@4.1.17,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nfunction createLock(name) {\r\n    var lock = null;\r\n    return function () {\r\n        var openLock = function () {\r\n            lock = null;\r\n        };\r\n        \r\n        if (lock === null) {\r\n            lock = name;\r\n            return openLock;\r\n        }\r\n        return false;\r\n    };\r\n}\r\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\r\nvar globalVerticalLock = createLock(\"dragVertical\");\r\nfunction getGlobalLock(drag) {\r\n    var lock = false;\r\n    if (drag === \"y\") {\r\n        \r\n        lock = globalVerticalLock();\r\n    }\r\n    else if (drag === \"x\") {\r\n        \r\n        lock = globalHorizontalLock();\r\n    }\r\n    else {\r\n        var openHorizontal_1 = globalHorizontalLock();\r\n        var openVertical_1 = globalVerticalLock();\r\n        if (openHorizontal_1 && openVertical_1) {\r\n            lock = function () {\r\n                openHorizontal_1();\r\n                openVertical_1();\r\n            };\r\n        }\r\n        else {\r\n            // Release the locks because we don't use them\r\n            if (openHorizontal_1)\r\n                openHorizontal_1();\r\n            if (openVertical_1)\r\n                openVertical_1();\r\n        }\r\n    }\r\n    return lock;\r\n}\r\nfunction isDragActive() {\r\n    // Check the gesture lock - if we get it, it means no drag gesture is active\r\n    // and we can safely fire the tap gesture.\r\n    var openGestureLock = getGlobalLock(true);\r\n    if (!openGestureLock)\r\n        return true;\r\n    openGestureLock();\r\n    return false;\r\n}\r\n\r\nexport { createLock, getGlobalLock, isDragActive };\r\n", "<script>\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import {fixed} from '../utils/fix-process-env';\r\n    import { isNodeOrChild } from \"./utils/is-node-or-child\";\r\n    import { pipe } from \"popmotion\";\r\n    import { isDragActive } from \"./drag/utils/lock\";\r\n    import { onDestroy } from \"svelte\";\r\n    import {UsePointerEvent, addPointerEvent } from \"../events/use-pointer-event\";\r\n    import { AnimationType } from \"../render/utils/types\";\r\n    export let props, visualElement;\r\n    \r\n    $: ({ onTap, onTapStart, onTapCancel, whileTap } = props);\r\n    $: hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\r\n\r\n    let isPressing = false;\r\n    let cancelPointerEndListeners = null;\r\n\r\n    function removePointerEndListener() {\r\n        cancelPointerEndListeners?.();\r\n        cancelPointerEndListeners = null;\r\n    }\r\n\r\n    function checkPointerEnd() {\r\n        removePointerEndListener();\r\n        isPressing = false;\r\n        visualElement.animationState?.setActive(AnimationType.Tap, false);\r\n        return !isDragActive();\r\n    }\r\n\r\n    function onPointerUp(event, info) {\r\n        \r\n        if (!checkPointerEnd()) return;\r\n\r\n        /**\r\n         * We only count this as a tap gesture if the event.target is the same\r\n         * as, or a child of, this component's element\r\n         */\r\n        !isNodeOrChild(visualElement.getInstance(), event.target)\r\n            ? onTapCancel?.(event, info)\r\n            : onTap?.(event, info);\r\n    }\r\n\r\n    function onPointerCancel(event, info) {\r\n        if (!checkPointerEnd()) return;\r\n\r\n        onTapCancel?.(event, info);\r\n    }\r\n\r\n    function onPointerDown(event, info) {\r\n        \r\n        \r\n\r\n        if (isPressing) return;\r\n        removePointerEndListener();\r\n        isPressing = true;\r\n\r\n        cancelPointerEndListeners = pipe(\r\n            addPointerEvent(window, \"pointerup\", onPointerUp),\r\n            addPointerEvent(window, \"pointercancel\", onPointerCancel)\r\n        );\r\n\r\n        onTapStart?.(event, info);\r\n\r\n        visualElement.animationState?.setActive(AnimationType.Tap, true);\r\n    }\r\n\r\n    onDestroy(removePointerEndListener);\r\n</script>\r\n\r\n<UsePointerEvent\r\n    ref={visualElement}\r\n    eventName=\"pointerdown\"\r\n    handler={hasPressListeners ? onPointerDown : undefined}>\r\n    <slot />\r\n</UsePointerEvent>\r\n", "<script context=\"module\">\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { isDragActive } from \"./drag/utils/lock\"\r\n    function createHoverEvent(\r\n    visualElement,\r\n    isActive,\r\n    callback\r\n) {\r\n    return (event, info) => {\r\n        if (!isMouseEvent(event) || isDragActive()) return\r\n        callback?.(event, info)\r\n\r\n        visualElement.animationState?.setActive(AnimationType.Hover, isActive)\r\n    }\r\n}\r\n</script>\r\n<script>\r\nimport { UsePointerEvent } from \"../events/use-pointer-event\"\r\nimport { AnimationType } from \"../render/utils/types\";\r\nimport { isMouseEvent } from \"./utils/event-type\";\r\n\r\n    export let props,\r\n        visualElement;\r\n    let {onHoverStart, onHoverEnd, whileHover} = props;\r\n    $: ({onHoverStart, onHoverEnd, whileHover} = props);\r\n</script>\r\n<UsePointerEvent ref={visualElement} eventName=\"pointerenter\" handler={ onHoverStart || whileHover\r\n    ? createHoverEvent(visualElement, true, onHoverStart)\r\n    : undefined}/>\r\n<UsePointerEvent ref={visualElement} eventName=\"pointerleave\" handler={ onHoverEnd || whileHover\r\n    ? createHoverEvent(visualElement, false, onHoverEnd)\r\n    : undefined}/>\r\n<slot/>\r\n", "<script>\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { UseDomEvent } from \"../events/use-dom-event\"\r\nimport { AnimationType } from \"../render/utils/types\"\r\n\r\n    export let props,\r\n        visualElement;\r\n    $: ( {whileFocus} = props);\r\n    const onFocus = () => {\r\n        visualElement.animationState?.setActive(AnimationType.Focus, true)\r\n    }\r\n\r\n    const onBlur = () => {\r\n        visualElement.animationState?.setActive(AnimationType.Focus, false)\r\n    }\r\n</script>\r\n<UseDomEvent ref={visualElement} eventName=\"focus\" handler={whileFocus ? onFocus : undefined}>\r\n    <UseDomEvent ref={visualElement} eventName=\"blur\" handler={whileFocus ? onBlur : undefined}>\r\n        <slot/>    \r\n    </UseDomEvent>\r\n</UseDomEvent>\r\n", "<script>\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { UsePanGesture } from \"./use-pan-gesture\";\r\nimport { UseTapGesture } from \"./use-tap-gesture\"\r\nimport { UseHoverGesture } from \"./use-hover-gesture\"\r\nimport { UseFocusGesture } from \"./use-focus-gesture\"\r\n\r\n    export let props,\r\n        visualElement;\r\n</script>\r\n<UsePanGesture {props} {visualElement}/>\r\n<UseTapGesture {props} {visualElement}/>\r\n<UseHoverGesture {props} {visualElement}/>\r\n<UseFocusGesture {props} {visualElement}/>\r\n<slot/>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport Motion from '../../motion/Motion.svelte';\r\nimport { loadFeatures } from \"../../motion/features/definitions\"\r\n\r\n\r\nexport const createMotionClass = (features)=>{\r\n    features && loadFeatures(features)\r\n    return Motion;           \r\n}\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { UseFocusGesture } from '../../gestures/use-focus-gesture.js';\r\nimport { UseHoverGesture } from '../../gestures/use-hover-gesture.js';\r\nimport { UseTapGesture } from '../../gestures/use-tap-gesture.js';\r\n/**\r\n * @public\r\n */\r\nconst gestureAnimations = {\r\n    tap: UseTapGesture,\r\n    focus: UseFocusGesture,\r\n    hover: UseHoverGesture,\r\n};\r\n\r\nexport { gestureAnimations };\r\n", "/** \r\nbased on framer-motion@4.1.15,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../utils/fix-process-env';\r\nimport { __rest, __spreadArray, __read } from 'tslib';\r\nimport { invariant } from 'hey-listen';\r\nimport { PanSession } from '../PanSession.js';\r\nimport { getGlobalLock } from './utils/lock.js';\r\nimport { isRefObject } from '../../utils/is-ref-object.js';\r\nimport { addPointerEvent } from '../../events/use-pointer-event.js';\r\nimport { addDomEvent } from '../../events/use-dom-event.js';\r\nimport { getViewportPointFromEvent } from '../../events/event-info.js';\r\nimport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox } from '../../utils/geometry/index.js';\r\nimport { eachAxis } from '../../utils/each-axis.js';\r\nimport { calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, applyConstraints, calcConstrainedMinPoint, calcPositionFromProgress, defaultElastic } from './utils/constraints.js';\r\nimport { getBoundingBox } from '../../render/dom/projection/measure.js';\r\nimport { calcOrigin } from '../../utils/geometry/delta-calc.js';\r\nimport { startAnimation } from '../../animation/utils/transitions.js';\r\nimport { AnimationType } from '../../render/utils/types.js';\r\nimport { collectProjectingAncestors, updateLayoutMeasurement, collectProjectingChildren } from '../../render/dom/projection/utils.js';\r\nimport { progress } from 'popmotion';\r\nimport { convertToRelativeProjection } from '../../render/dom/projection/convert-to-relative.js';\r\nimport { calcRelativeOffset } from '../../motion/features/layout/utils.js';\r\nimport { flushLayout, batchLayout } from '../../render/dom/utils/batch-layout.js';\r\nimport { flushSync } from 'framesync';\r\n\r\nvar elementDragControls = new WeakMap();\r\n/**\r\n *\r\n */\r\nvar lastPointerEvent;\r\nvar VisualElementDragControls = /** @class */ (function () {\r\n    function VisualElementDragControls(_a) {\r\n        var visualElement = _a.visualElement;\r\n        /**\r\n         * Track whether we're currently dragging.\r\n         *\r\n         * @internal\r\n         */\r\n        this.isDragging = false;\r\n        /**\r\n         * The current direction of drag, or `null` if both.\r\n         *\r\n         * @internal\r\n         */\r\n        this.currentDirection = null;\r\n        /**\r\n         * The permitted boundaries of travel, in pixels.\r\n         *\r\n         * @internal\r\n         */\r\n        this.constraints = false;\r\n        /**\r\n         * The per-axis resolved elastic values.\r\n         *\r\n         * @internal\r\n         */\r\n        this.elastic = axisBox();\r\n        /**\r\n         * A reference to the host component's latest props.\r\n         *\r\n         * @internal\r\n         */\r\n        this.props = {};\r\n        /**\r\n         * @internal\r\n         */\r\n        this.hasMutatedConstraints = false;\r\n        /**\r\n         * Track the initial position of the cursor relative to the dragging element\r\n         * when dragging starts as a value of 0-1 on each axis. We then use this to calculate\r\n         * an ideal bounding box for the VisualElement renderer to project into every frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.cursorProgress = {\r\n            x: 0.5,\r\n            y: 0.5,\r\n        };\r\n        // When updating _dragX, or _dragY instead of the VisualElement,\r\n        // persist their values between drag gestures.\r\n        this.originPoint = {};\r\n        // This is a reference to the global drag gesture lock, ensuring only one component\r\n        // can \"capture\" the drag of one or both axes.\r\n        // TODO: Look into moving this into pansession?\r\n        this.openGlobalLock = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.panSession = null;\r\n        this.visualElement = visualElement;\r\n        this.visualElement.enableLayoutProjection();\r\n        elementDragControls.set(visualElement, this);\r\n    }\r\n    /**\r\n     * Instantiate a PanSession for the drag gesture\r\n     *\r\n     * @public\r\n     */\r\n    VisualElementDragControls.prototype.start = function (originEvent, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;\r\n        var onSessionStart = function (event) {\r\n            var _a;\r\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\r\n            // the component.\r\n            _this.stopMotion();\r\n            /**\r\n             * Save the initial point. We'll use this to calculate the pointer's position rather\r\n             * than the one we receive when the gesture actually starts. By then, the pointer will\r\n             * have already moved, and the perception will be of the pointer \"slipping\" across the element\r\n             */\r\n            var initialPoint = getViewportPointFromEvent(event).point;\r\n            (_a = _this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(_this);\r\n            _this.cancelLayout = batchLayout(function (read, write) {\r\n                var ancestors = collectProjectingAncestors(_this.visualElement);\r\n                var children = collectProjectingChildren(_this.visualElement);\r\n                var tree = __spreadArray(__spreadArray([], __read(ancestors)), __read(children));\r\n                var hasManuallySetCursorOrigin = false;\r\n                /**\r\n                 * Apply a simple lock to the projection target. This ensures no animations\r\n                 * can run on the projection box while this lock is active.\r\n                 */\r\n                _this.isLayoutDrag() && _this.visualElement.lockProjectionTarget();\r\n                write(function () {\r\n                    tree.forEach(function (element) { return element.resetTransform(); });\r\n                });\r\n                read(function () {\r\n                    updateLayoutMeasurement(_this.visualElement);\r\n                    children.forEach(updateLayoutMeasurement);\r\n                });\r\n                write(function () {\r\n                    tree.forEach(function (element) { return element.restoreTransform(); });\r\n                    if (snapToCursor) {\r\n                        hasManuallySetCursorOrigin = _this.snapToCursor(initialPoint);\r\n                    }\r\n                });\r\n                read(function () {\r\n                    var isRelativeDrag = Boolean(_this.getAxisMotionValue(\"x\") && !_this.isExternalDrag());\r\n                    if (!isRelativeDrag) {\r\n                        _this.visualElement.rebaseProjectionTarget(true, _this.visualElement.measureViewportBox(false));\r\n                    }\r\n                    _this.visualElement.scheduleUpdateLayoutProjection();\r\n                    /**\r\n                     * When dragging starts, we want to find where the cursor is relative to the bounding box\r\n                     * of the element. Every frame, we calculate a new bounding box using this relative position\r\n                     * and let the visualElement renderer figure out how to reproject the element into this bounding\r\n                     * box.\r\n                     *\r\n                     * By doing it this way, rather than applying an x/y transform directly to the element,\r\n                     * we can ensure the component always visually sticks to the cursor as we'd expect, even\r\n                     * if the DOM element itself changes layout as a result of React updates the user might\r\n                     * make based on the drag position.\r\n                     */\r\n                    var projection = _this.visualElement.projection;\r\n                    eachAxis(function (axis) {\r\n                        if (!hasManuallySetCursorOrigin) {\r\n                            var _a = projection.target[axis], min = _a.min, max = _a.max;\r\n                            _this.cursorProgress[axis] = cursorProgress\r\n                                ? cursorProgress[axis]\r\n                                : progress(min, max, initialPoint[axis]);\r\n                        }\r\n                        /**\r\n                         * If we have external drag MotionValues, record their origin point. On pointermove\r\n                         * we'll apply the pan gesture offset directly to this value.\r\n                         */\r\n                        var axisValue = _this.getAxisMotionValue(axis);\r\n                        if (axisValue) {\r\n                            _this.originPoint[axis] = axisValue.get();\r\n                        }\r\n                    });\r\n                });\r\n                write(function () {\r\n                    flushSync.update();\r\n                    flushSync.preRender();\r\n                    flushSync.render();\r\n                    flushSync.postRender();\r\n                });\r\n                read(function () { return _this.resolveDragConstraints(); });\r\n            });\r\n        };\r\n        var onStart = function (event, info) {\r\n            var _a, _b, _c;\r\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\r\n            var _d = _this.props, drag = _d.drag, dragPropagation = _d.dragPropagation;\r\n            if (drag && !dragPropagation) {\r\n                if (_this.openGlobalLock)\r\n                    _this.openGlobalLock();\r\n                _this.openGlobalLock = getGlobalLock(drag);\r\n                // If we don 't have the lock, don't start dragging\r\n                if (!_this.openGlobalLock)\r\n                    return;\r\n            }\r\n            flushLayout();\r\n            // Set current drag status\r\n            _this.isDragging = true;\r\n            _this.currentDirection = null;\r\n            // Fire onDragStart event\r\n            (_b = (_a = _this.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\r\n            (_c = _this.visualElement.animationState) === null || _c === void 0 ? void 0 : _c.setActive(AnimationType.Drag, true);\r\n        };\r\n        var onMove = function (event, info) {\r\n            var _a, _b, _c, _d;\r\n            var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;\r\n            // If we didn't successfully receive the gesture lock, early return.\r\n            if (!dragPropagation && !_this.openGlobalLock)\r\n                return;\r\n            var offset = info.offset;\r\n            // Attempt to detect drag direction if directionLock is true\r\n            if (dragDirectionLock && _this.currentDirection === null) {\r\n                _this.currentDirection = getCurrentDirection(offset);\r\n                // If we've successfully set a direction, notify listener\r\n                if (_this.currentDirection !== null) {\r\n                    (_b = (_a = _this.props).onDirectionLock) === null || _b === void 0 ? void 0 : _b.call(_a, _this.currentDirection);\r\n                }\r\n                return;\r\n            }\r\n            // Update each point with the latest position\r\n            _this.updateAxis(\"x\", info.point, offset);\r\n            _this.updateAxis(\"y\", info.point, offset);\r\n            // Fire onDrag event\r\n            (_d = (_c = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\r\n            // Update the last pointer event\r\n            lastPointerEvent = event;\r\n        };\r\n        var onSessionEnd = function (event, info) {\r\n            return _this.stop(event, info);\r\n        };\r\n        var transformPagePoint = this.props.transformPagePoint;\r\n        this.panSession = new PanSession(originEvent, {\r\n            onSessionStart: onSessionStart,\r\n            onStart: onStart,\r\n            onMove: onMove,\r\n            onSessionEnd: onSessionEnd,\r\n        }, { transformPagePoint: transformPagePoint });\r\n    };\r\n    VisualElementDragControls.prototype.resolveDragConstraints = function () {\r\n        var _this = this;\r\n        var _a = this.props, dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\r\n        var layout = this.visualElement.getLayoutState().layoutCorrected;\r\n        if (dragConstraints) {\r\n            this.constraints = isRefObject(dragConstraints)\r\n                ? this.resolveRefConstraints(layout, dragConstraints)\r\n                : calcRelativeConstraints(layout, dragConstraints);\r\n        }\r\n        else {\r\n            this.constraints = false;\r\n        }\r\n        this.elastic = resolveDragElastic(dragElastic);\r\n        /**\r\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\r\n         * from viewport-relative to component-relative.\r\n         */\r\n        if (this.constraints && !this.hasMutatedConstraints) {\r\n            eachAxis(function (axis) {\r\n                if (_this.getAxisMotionValue(axis)) {\r\n                    _this.constraints[axis] = rebaseAxisConstraints(layout[axis], _this.constraints[axis]);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    VisualElementDragControls.prototype.resolveRefConstraints = function (layoutBox, constraints) {\r\n        var _a = this.props, onMeasureDragConstraints = _a.onMeasureDragConstraints, transformPagePoint = _a.transformPagePoint;\r\n        var constraintsElement = constraints.current;\r\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n        this.constraintsBox = getBoundingBox(constraintsElement, transformPagePoint);\r\n        var measuredConstraints = calcViewportConstraints(layoutBox, this.constraintsBox);\r\n        /**\r\n         * If there's an onMeasureDragConstraints listener we call it and\r\n         * if different constraints are returned, set constraints to that\r\n         */\r\n        if (onMeasureDragConstraints) {\r\n            var userConstraints = onMeasureDragConstraints(convertAxisBoxToBoundingBox(measuredConstraints));\r\n            this.hasMutatedConstraints = !!userConstraints;\r\n            if (userConstraints) {\r\n                measuredConstraints = convertBoundingBoxToAxisBox(userConstraints);\r\n            }\r\n        }\r\n        return measuredConstraints;\r\n    };\r\n    VisualElementDragControls.prototype.cancelDrag = function () {\r\n        var _a, _b;\r\n        this.visualElement.unlockProjectionTarget();\r\n        (_a = this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(this);\r\n        this.isDragging = false;\r\n        this.panSession && this.panSession.end();\r\n        this.panSession = null;\r\n        if (!this.props.dragPropagation && this.openGlobalLock) {\r\n            this.openGlobalLock();\r\n            this.openGlobalLock = null;\r\n        }\r\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\r\n    };\r\n    VisualElementDragControls.prototype.stop = function (event, info) {\r\n        var _a, _b, _c;\r\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\r\n        this.panSession = null;\r\n        var isDragging = this.isDragging;\r\n        this.cancelDrag();\r\n        if (!isDragging)\r\n            return;\r\n        var velocity = info.velocity;\r\n        this.animateDragEnd(velocity);\r\n        (_c = (_b = this.props).onDragEnd) === null || _c === void 0 ? void 0 : _c.call(_b, event, info);\r\n    };\r\n    VisualElementDragControls.prototype.snapToCursor = function (point) {\r\n        var _this = this;\r\n        return eachAxis(function (axis) {\r\n            var drag = _this.props.drag;\r\n            // If we're not dragging this axis, do an early return.\r\n            if (!shouldDrag(axis, drag, _this.currentDirection))\r\n                return;\r\n            var axisValue = _this.getAxisMotionValue(axis);\r\n            if (axisValue) {\r\n                var box = _this.visualElement.getLayoutState().layout;\r\n                var length_1 = box[axis].max - box[axis].min;\r\n                var center = box[axis].min + length_1 / 2;\r\n                var offset = point[axis] - center;\r\n                _this.originPoint[axis] = point[axis];\r\n                axisValue.set(offset);\r\n            }\r\n            else {\r\n                _this.cursorProgress[axis] = 0.5;\r\n                return true;\r\n            }\r\n        }).includes(true);\r\n    };\r\n    /**\r\n     * Update the specified axis with the latest pointer information.\r\n     */\r\n    VisualElementDragControls.prototype.updateAxis = function (axis, point, offset) {\r\n        var drag = this.props.drag;\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!shouldDrag(axis, drag, this.currentDirection))\r\n            return;\r\n        return this.getAxisMotionValue(axis)\r\n            ? this.updateAxisMotionValue(axis, offset)\r\n            : this.updateVisualElementAxis(axis, point);\r\n    };\r\n    VisualElementDragControls.prototype.updateAxisMotionValue = function (axis, offset) {\r\n        var axisValue = this.getAxisMotionValue(axis);\r\n        if (!offset || !axisValue)\r\n            return;\r\n        var nextValue = this.originPoint[axis] + offset[axis];\r\n        var update = this.constraints\r\n            ? applyConstraints(nextValue, this.constraints[axis], this.elastic[axis])\r\n            : nextValue;\r\n        axisValue.set(update);\r\n    };\r\n    VisualElementDragControls.prototype.updateVisualElementAxis = function (axis, point) {\r\n        var _a;\r\n        // Get the actual layout bounding box of the element\r\n        var axisLayout = this.visualElement.getLayoutState().layout[axis];\r\n        // Calculate its current length. In the future we might want to lerp this to animate\r\n        // between lengths if the layout changes as we change the DOM\r\n        var axisLength = axisLayout.max - axisLayout.min;\r\n        // Get the initial progress that the pointer sat on this axis on gesture start.\r\n        var axisProgress = this.cursorProgress[axis];\r\n        // Calculate a new min point based on the latest pointer position, constraints and elastic\r\n        var min = calcConstrainedMinPoint(point[axis], axisLength, axisProgress, (_a = this.constraints) === null || _a === void 0 ? void 0 : _a[axis], this.elastic[axis]);\r\n        // Update the axis viewport target with this new min and the length\r\n        this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);\r\n    };\r\n    VisualElementDragControls.prototype.setProps = function (_a) {\r\n        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? defaultElastic : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = __rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\r\n        this.props = Object.assign({ drag: drag,\r\n            dragDirectionLock: dragDirectionLock,\r\n            dragPropagation: dragPropagation,\r\n            dragConstraints: dragConstraints,\r\n            dragElastic: dragElastic,\r\n            dragMomentum: dragMomentum }, remainingProps);\r\n    };\r\n    /**\r\n     * Drag works differently depending on which props are provided.\r\n     *\r\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\r\n     * - If the component will perform layout animations, we output the gesture to the component's\r\n     *      visual bounding box\r\n     * - Otherwise, we apply the delta to the x/y motion values.\r\n     */\r\n    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\r\n        var _a = this.props, layout = _a.layout, layoutId = _a.layoutId;\r\n        var dragKey = \"_drag\" + axis.toUpperCase();\r\n        if (this.props[dragKey]) {\r\n            return this.props[dragKey];\r\n        }\r\n        else if (!layout && layoutId === undefined) {\r\n            return this.visualElement.getValue(axis, 0);\r\n        }\r\n    };\r\n    VisualElementDragControls.prototype.isLayoutDrag = function () {\r\n        return !this.getAxisMotionValue(\"x\");\r\n    };\r\n    VisualElementDragControls.prototype.isExternalDrag = function () {\r\n        var _a = this.props, _dragX = _a._dragX, _dragY = _a._dragY;\r\n        return _dragX || _dragY;\r\n    };\r\n    VisualElementDragControls.prototype.animateDragEnd = function (velocity) {\r\n        var _this = this;\r\n        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition;\r\n        /**\r\n         * Everything beyond the drag gesture should be performed with\r\n         * relative projection so children stay in sync with their parent element.\r\n         */\r\n        var isRelative = convertToRelativeProjection(this.visualElement, this.isLayoutDrag() && !this.isExternalDrag());\r\n        /**\r\n         * If we had previously resolved constraints relative to the viewport,\r\n         * we need to also convert those to a relative coordinate space for the animation\r\n         */\r\n        var constraints = this.constraints || {};\r\n        if (isRelative &&\r\n            Object.keys(constraints).length &&\r\n            this.isLayoutDrag()) {\r\n            var projectionParent = this.visualElement.getProjectionParent();\r\n            if (projectionParent) {\r\n                var relativeConstraints_1 = calcRelativeOffset(projectionParent.projection.targetFinal, constraints);\r\n                eachAxis(function (axis) {\r\n                    var _a = relativeConstraints_1[axis], min = _a.min, max = _a.max;\r\n                    constraints[axis] = {\r\n                        min: isNaN(min) ? undefined : min,\r\n                        max: isNaN(max) ? undefined : max,\r\n                    };\r\n                });\r\n            }\r\n        }\r\n        var momentumAnimations = eachAxis(function (axis) {\r\n            var _a;\r\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\r\n                return;\r\n            }\r\n            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            var bounceStiffness = dragElastic ? 200 : 1000000;\r\n            var bounceDamping = dragElastic ? 40 : 10000000;\r\n            var inertia = Object.assign(Object.assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\r\n                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\r\n            // If we're not animating on an externally-provided `MotionValue` we can use the\r\n            // component's animation controls which will handle interactions with whileHover (etc),\r\n            // otherwise we just have to animate the `MotionValue` itself.\r\n            return _this.getAxisMotionValue(axis)\r\n                ? _this.startAxisValueAnimation(axis, inertia)\r\n                : _this.visualElement.startLayoutAnimation(axis, inertia, isRelative);\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        return Promise.all(momentumAnimations).then(function () {\r\n            var _a, _b;\r\n            (_b = (_a = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n        });\r\n    };\r\n    VisualElementDragControls.prototype.stopMotion = function () {\r\n        var _this = this;\r\n        eachAxis(function (axis) {\r\n            var axisValue = _this.getAxisMotionValue(axis);\r\n            axisValue\r\n                ? axisValue.stop()\r\n                : _this.visualElement.stopLayoutAnimation();\r\n        });\r\n    };\r\n    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\r\n        var axisValue = this.getAxisMotionValue(axis);\r\n        if (!axisValue)\r\n            return;\r\n        var currentValue = axisValue.get();\r\n        axisValue.set(currentValue);\r\n        axisValue.set(currentValue); // Set twice to hard-reset velocity\r\n        return startAnimation(axis, axisValue, 0, transition);\r\n    };\r\n    VisualElementDragControls.prototype.scalePoint = function () {\r\n        var _this = this;\r\n        var _a = this.props, drag = _a.drag, dragConstraints = _a.dragConstraints;\r\n        if (!isRefObject(dragConstraints) || !this.constraintsBox)\r\n            return;\r\n        // Stop any current animations as there can be some visual glitching if we resize mid animation\r\n        this.stopMotion();\r\n        // Record the relative progress of the targetBox relative to the constraintsBox\r\n        var boxProgress = { x: 0, y: 0 };\r\n        eachAxis(function (axis) {\r\n            boxProgress[axis] = calcOrigin(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);\r\n        });\r\n        /**\r\n         * For each axis, calculate the current progress of the layout axis within the constraints.\r\n         * Then, using the latest layout and constraints measurements, reposition the new layout axis\r\n         * proportionally within the constraints.\r\n         */\r\n        this.updateConstraints(function () {\r\n            eachAxis(function (axis) {\r\n                if (!shouldDrag(axis, drag, null))\r\n                    return;\r\n                // Calculate the position of the targetBox relative to the constraintsBox using the\r\n                // previously calculated progress\r\n                var _a = calcPositionFromProgress(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a.min, max = _a.max;\r\n                _this.visualElement.setProjectionTargetAxis(axis, min, max);\r\n            });\r\n        });\r\n        /**\r\n         * If any other draggable components are queuing the same tasks synchronously\r\n         * this will wait until they've all been scheduled before flushing.\r\n         */\r\n        setTimeout(flushLayout, 1);\r\n    };\r\n    VisualElementDragControls.prototype.updateConstraints = function (onReady) {\r\n        var _this = this;\r\n        this.cancelLayout = batchLayout(function (read, write) {\r\n            var ancestors = collectProjectingAncestors(_this.visualElement);\r\n            write(function () {\r\n                return ancestors.forEach(function (element) { return element.resetTransform(); });\r\n            });\r\n            read(function () { return updateLayoutMeasurement(_this.visualElement); });\r\n            write(function () {\r\n                return ancestors.forEach(function (element) { return element.restoreTransform(); });\r\n            });\r\n            read(function () {\r\n                _this.resolveDragConstraints();\r\n            });\r\n            if (onReady)\r\n                write(onReady);\r\n        });\r\n    };\r\n    VisualElementDragControls.prototype.mount = function (visualElement) {\r\n        var _this = this;\r\n        var element = visualElement.getInstance();\r\n        /**\r\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\r\n         */\r\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\r\n            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\r\n            drag && dragListener && _this.start(event);\r\n        });\r\n        /**\r\n         * Attach a window resize listener to scale the draggable target within its defined\r\n         * constraints as the window resizes.\r\n         */\r\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\r\n            _this.scalePoint();\r\n        });\r\n        /**\r\n         * Ensure drag constraints are resolved correctly relative to the dragging element\r\n         * whenever its layout changes.\r\n         */\r\n        var stopLayoutUpdateListener = visualElement.onLayoutUpdate(function () {\r\n            if (_this.isDragging) {\r\n                _this.resolveDragConstraints();\r\n            }\r\n        });\r\n        /**\r\n         * If the previous component with this same layoutId was dragging at the time\r\n         * it was unmounted, we want to continue the same gesture on this component.\r\n         */\r\n        var prevDragCursor = visualElement.prevDragCursor;\r\n        if (prevDragCursor) {\r\n            this.start(lastPointerEvent, { cursorProgress: prevDragCursor });\r\n        }\r\n        /**\r\n         * Return a function that will teardown the drag gesture\r\n         */\r\n        return function () {\r\n            stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();\r\n            stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();\r\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\r\n            _this.cancelDrag();\r\n        };\r\n    };\r\n    return VisualElementDragControls;\r\n}());\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold) {\r\n    if (lockThreshold === void 0) { lockThreshold = 10; }\r\n    var direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\r\n\r\nexport { VisualElementDragControls, elementDragControls };\r\n", "/** \r\nbased on framer-motion@4.1.17,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { __read } from 'tslib';\r\nimport { mix } from 'popmotion';\r\n\r\n/**\r\n * Apply constraints to a point. These constraints are both physical along an\r\n * axis, and an elastic factor that determines how much to constrain the point\r\n * by if it does lie outside the defined parameters.\r\n */\r\nfunction applyConstraints(point, _a, elastic) {\r\n    var min = _a.min, max = _a.max;\r\n    if (min !== undefined && point < min) {\r\n        // If we have a min point defined, and this is outside of that, constrain\r\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\r\n    }\r\n    else if (max !== undefined && point > max) {\r\n        // If we have a max point defined, and this is outside of that, constrain\r\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Calculates a min projection point based on a pointer, pointer progress\r\n * within the drag target, and constraints.\r\n *\r\n * For instance if an element was 100px width, we were dragging from 0.25\r\n * along this axis, the pointer is at 200px, and there were no constraints,\r\n * we would calculate a min projection point of 175px.\r\n */\r\nfunction calcConstrainedMinPoint(point, length, progress, constraints, elastic) {\r\n    // Calculate a min point for this axis and apply it to the current pointer\r\n    var min = point - length * progress;\r\n    return constraints ? applyConstraints(min, constraints, elastic) : min;\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when defined relatively to the\r\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\r\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\r\n */\r\nfunction calcRelativeAxisConstraints(axis, min, max) {\r\n    return {\r\n        min: min !== undefined ? axis.min + min : undefined,\r\n        max: max !== undefined\r\n            ? axis.max + max - (axis.max - axis.min)\r\n            : undefined,\r\n    };\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when\r\n * defined relatively to the measured bounding box.\r\n */\r\nfunction calcRelativeConstraints(layoutBox, _a) {\r\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\r\n    return {\r\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\r\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\r\n    };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative axis\r\n */\r\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\r\n    var _a;\r\n    var min = constraintsAxis.min - layoutAxis.min;\r\n    var max = constraintsAxis.max - layoutAxis.max;\r\n    // If the constraints axis is actually smaller than the layout axis then we can\r\n    // flip the constraints\r\n    if (constraintsAxis.max - constraintsAxis.min <\r\n        layoutAxis.max - layoutAxis.min) {\r\n        _a = __read([max, min], 2), min = _a[0], max = _a[1];\r\n    }\r\n    return {\r\n        min: layoutAxis.min + min,\r\n        max: layoutAxis.min + max,\r\n    };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative box\r\n */\r\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\r\n    return {\r\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\r\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\r\n    };\r\n}\r\n/**\r\n * Calculate the an axis position based on two axes and a progress value.\r\n */\r\nfunction calcPositionFromProgress(axis, constraints, progress) {\r\n    var axisLength = axis.max - axis.min;\r\n    var min = mix(constraints.min, constraints.max - axisLength, progress);\r\n    return { min: min, max: min + axisLength };\r\n}\r\n/**\r\n * Rebase the calculated viewport constraints relative to the layout.min point.\r\n */\r\nfunction rebaseAxisConstraints(layout, constraints) {\r\n    var relativeConstraints = {};\r\n    if (constraints.min !== undefined) {\r\n        relativeConstraints.min = constraints.min - layout.min;\r\n    }\r\n    if (constraints.max !== undefined) {\r\n        relativeConstraints.max = constraints.max - layout.min;\r\n    }\r\n    return relativeConstraints;\r\n}\r\nvar defaultElastic = 0.35;\r\n/**\r\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\r\n */\r\nfunction resolveDragElastic(dragElastic) {\r\n    if (dragElastic === false) {\r\n        dragElastic = 0;\r\n    }\r\n    else if (dragElastic === true) {\r\n        dragElastic = defaultElastic;\r\n    }\r\n    return {\r\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\r\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\r\n    };\r\n}\r\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\r\n    return {\r\n        min: resolvePointElastic(dragElastic, minLabel),\r\n        max: resolvePointElastic(dragElastic, maxLabel),\r\n    };\r\n}\r\nfunction resolvePointElastic(dragElastic, label) {\r\n    var _a;\r\n    return typeof dragElastic === \"number\"\r\n        ? dragElastic\r\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\r\n}\r\n\r\nexport { applyConstraints, calcConstrainedMinPoint, calcPositionFromProgress, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\r\n", "/** \r\nbased on framer-motion@4.1.11,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { calcRelativeOffset } from '../../../motion/features/layout/utils.js';\r\nimport { eachAxis } from '../../../utils/each-axis.js';\r\nimport { removeBoxTransforms } from '../../../utils/geometry/delta-apply.js';\r\n\r\n/**\r\n * Returns a boolean stating whether or not we converted the projection\r\n * to relative projection.\r\n */\r\nfunction convertToRelativeProjection(visualElement, isLayoutDrag) {\r\n    if (isLayoutDrag === void 0) { isLayoutDrag = true; }\r\n    var projectionParent = visualElement.getProjectionParent();\r\n    if (!projectionParent)\r\n        return false;\r\n    var offset;\r\n    if (isLayoutDrag) {\r\n        offset = calcRelativeOffset(projectionParent.projection.target, visualElement.projection.target);\r\n        removeBoxTransforms(offset, projectionParent.getLatestValues());\r\n    }\r\n    else {\r\n        offset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\r\n    }\r\n    eachAxis(function (axis) {\r\n        return visualElement.setProjectionTargetAxis(axis, offset[axis].min, offset[axis].max, true);\r\n    });\r\n    return true;\r\n}\r\n\r\nexport { convertToRelativeProjection };\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.1.11,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { MotionConfigContext } from \"../../context/MotionConfigContext.js\";\r\n    import { VisualElementDragControls } from \"./VisualElementDragControls\";\r\n    import { getContext, onDestroy, onMount } from \"svelte\";\r\n    import { get } from \"svelte/store\";\r\n\r\n    export let visualElement, props, isCustom;\r\n\r\n    const mcc = getContext(MotionConfigContext) || MotionConfigContext(isCustom);\r\n\r\n    let dragControls = new VisualElementDragControls({\r\n        visualElement,\r\n    });\r\n\r\n    // If we've been provided a DragControls for manual control over the drag gesture,\r\n    // subscribe this component to it on mount.\r\n    let cleanup;\r\n    const dragEffect = () => {\r\n        if (cleanup) {\r\n            cleanup();\r\n        }\r\n        if (groupDragControls) {\r\n            cleanup = groupDragControls.subscribe(dragControls);\r\n        }\r\n    };\r\n    let { dragControls: groupDragControls } = props;\r\n    let { transformPagePoint } = get(mcc);\r\n\r\n    $: ({ dragControls: groupDragControls } = props);\r\n    //let {transformPagePoint} = get($mcc);\r\n    $: ({ transformPagePoint } = $mcc);\r\n    dragControls.setProps({ ...props, transformPagePoint });\r\n\r\n    //dragControls.setProps({ ...props, transformPagePoint })\r\n\r\n    $: dragControls.setProps({ ...props, transformPagePoint });\r\n\r\n    $: dragEffect(dragControls);\r\n\r\n    onDestroy(() => {\r\n        if (cleanup) {\r\n            cleanup();\r\n        }\r\n    });\r\n    onMount(() => dragControls.mount(visualElement));\r\n</script>\r\n\r\n<slot />\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { UsePanGesture } from '../../gestures/use-pan-gesture.js';\r\nimport { UseDrag } from '../../gestures/drag/use-drag.js';\r\n\r\n/**\r\n * @public\r\n */\r\nconst drag = {\r\n    pan: UsePanGesture,\r\n    drag: UseDrag\r\n}\r\n\r\nexport { drag };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport { complex, px } from 'style-value-types';\r\nimport { mix } from 'popmotion';\r\nimport { cssVariableRegex } from '../utils/css-variables-conversion.js';\r\n\r\nfunction pixelsToPercent(pixels, axis) {\r\n    return (pixels / (axis.max - axis.min)) * 100;\r\n}\r\n/**\r\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\r\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\r\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\r\n * borderRadius in both states. If we animate between the two in pixels that will trigger\r\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\r\n */\r\nfunction correctBorderRadius(latest, _layoutState, _a) {\r\n    var target = _a.target;\r\n    /**\r\n     * If latest is a string, if it's a percentage we can return immediately as it's\r\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\r\n     */\r\n    if (typeof latest === \"string\") {\r\n        if (px.test(latest)) {\r\n            latest = parseFloat(latest);\r\n        }\r\n        else {\r\n            return latest;\r\n        }\r\n    }\r\n    /**\r\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\r\n     * pixel value as a percentage of each axis\r\n     */\r\n    var x = pixelsToPercent(latest, target.x);\r\n    var y = pixelsToPercent(latest, target.y);\r\n    return x + \"% \" + y + \"%\";\r\n}\r\nvar varToken = \"_$css\";\r\nfunction correctBoxShadow(latest, _a) {\r\n    var delta = _a.delta, treeScale = _a.treeScale;\r\n    var original = latest;\r\n    /**\r\n     * We need to first strip and store CSS variables from the string.\r\n     */\r\n    var containsCSSVariables = latest.includes(\"var(\");\r\n    var cssVariables = [];\r\n    if (containsCSSVariables) {\r\n        latest = latest.replace(cssVariableRegex, function (match) {\r\n            cssVariables.push(match);\r\n            return varToken;\r\n        });\r\n    }\r\n    var shadow = complex.parse(latest);\r\n    // TODO: Doesn't support multiple shadows\r\n    if (shadow.length > 5)\r\n        return original;\r\n    var template = complex.createTransformer(latest);\r\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\r\n    // Calculate the overall context scale\r\n    var xScale = delta.x.scale * treeScale.x;\r\n    var yScale = delta.y.scale * treeScale.y;\r\n    shadow[0 + offset] /= xScale;\r\n    shadow[1 + offset] /= yScale;\r\n    /**\r\n     * Ideally we'd correct x and y scales individually, but because blur and\r\n     * spread apply to both we have to take a scale average and apply that instead.\r\n     * We could potentially improve the outcome of this by incorporating the ratio between\r\n     * the two scales.\r\n     */\r\n    var averageScale = mix(xScale, yScale, 0.5);\r\n    // Blur\r\n    if (typeof shadow[2 + offset] === \"number\")\r\n        shadow[2 + offset] /= averageScale;\r\n    // Spread\r\n    if (typeof shadow[3 + offset] === \"number\")\r\n        shadow[3 + offset] /= averageScale;\r\n    var output = template(shadow);\r\n    if (containsCSSVariables) {\r\n        var i_1 = 0;\r\n        output = output.replace(varToken, function () {\r\n            var cssVariable = cssVariables[i_1];\r\n            i_1++;\r\n            return cssVariable;\r\n        });\r\n    }\r\n    return output;\r\n}\r\nvar borderCorrectionDefinition = {\r\n    process: correctBorderRadius,\r\n};\r\nvar defaultScaleCorrectors = {\r\n    borderRadius: Object.assign(Object.assign({}, borderCorrectionDefinition), { applyTo: [\r\n            \"borderTopLeftRadius\",\r\n            \"borderTopRightRadius\",\r\n            \"borderBottomLeftRadius\",\r\n            \"borderBottomRightRadius\",\r\n        ] }),\r\n    borderTopLeftRadius: borderCorrectionDefinition,\r\n    borderTopRightRadius: borderCorrectionDefinition,\r\n    borderBottomLeftRadius: borderCorrectionDefinition,\r\n    borderBottomRightRadius: borderCorrectionDefinition,\r\n    boxShadow: {\r\n        process: correctBoxShadow,\r\n    },\r\n};\r\n\r\nexport { correctBorderRadius, correctBoxShadow, defaultScaleCorrectors, pixelsToPercent };\r\n", "<script context=\"module\">\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    const progressTarget = 1000;\r\n\r\n    function hasMoved(a, b) {\r\n        return (\r\n            !isZeroBox(a) &&\r\n            !isZeroBox(b) &&\r\n            (!axisIsEqual(a.x, b.x) || !axisIsEqual(a.y, b.y))\r\n        );\r\n    }\r\n\r\n    const zeroAxis = { min: 0, max: 0 };\r\n    function isZeroBox(a) {\r\n        return axisIsEqual(a.x, zeroAxis) && axisIsEqual(a.y, zeroAxis);\r\n    }\r\n\r\n    function axisIsEqual(a, b) {\r\n        return a.min === b.min && a.max === b.max;\r\n    }\r\n\r\n    const defaultLayoutTransition = {\r\n        duration: 0.45,\r\n        ease: [0.4, 0, 0.1, 1],\r\n    };\r\n</script>\r\n\r\n<script>\r\n    import { onDestroy, onMount } from \"svelte\";\r\n    import { axisBox } from \"../../../utils/geometry\";\r\n    import { eachAxis } from \"../../../utils/each-axis\";\r\n    import {\r\n        startAnimation,\r\n        getValueTransition,\r\n    } from \"../../../animation/utils/transitions\";\r\n    import { tweenAxis } from \"./utils\";\r\n    import { addScaleCorrection } from \"../../../render/dom/projection/scale-correction\";\r\n    import { defaultScaleCorrectors } from \"../../../render/dom/projection/default-scale-correctors\";\r\n\r\n    export let visualElement,\r\n        //initial = undefined,\r\n        //style = undefined,\r\n        //transformTemplate = undefined,\r\n        //transformValues = undefined,\r\n        //AnimationProps\r\n        //animate = undefined,\r\n        //exit = undefined,\r\n        //variants = undefined,\r\n        //transition = undefined,\r\n        //VisualElementLifecycles\r\n        //onViewportBoxUpdate = undefined,\r\n        //onBeforeLayoutMeasure = undefined,\r\n        //onLayoutMeasure = undefined,\r\n        //onUpdate = undefined,\r\n        //onAnimationStart = undefined,\r\n        //onAnimationComplete = undefined,\r\n        //onLayoutAnimationComplete = undefined,\r\n        //GestureHandlers\r\n        // PanHandlers\r\n        //onPan = undefined,\r\n        //onPanStart = undefined,\r\n        //onPanSessionStart = undefined,\r\n        //onPanEnd = undefined,\r\n        // TapHandlers\r\n        //onTap = undefined,\r\n        //onTapStart = undefined,\r\n        //onTapCancel = undefined,\r\n        //whileTap = undefined,\r\n        //HoverHandlers\r\n        //whileHover = undefined,\r\n        //onHoverStart = undefined,\r\n        //onHoverEnd = undefined,\r\n        //FocusHandlers\r\n        //whileFocus = undefined,\r\n        //DraggableProps\r\n        //drag = undefined,\r\n        //whileDrag = undefined,\r\n        //dragDirectionLock = undefined,\r\n        //dragPropagation = undefined,\r\n        //dragConstraints = undefined,\r\n        //dragElastic = undefined,\r\n        //dragMomentum = undefined,\r\n        //dragTransition = undefined,\r\n        //dragControls = undefined,\r\n        //dragListener = undefined,\r\n        //onMeasureDragConstraints = undefined,\r\n        //_dragX = undefined,\r\n        //_dragY = undefined,\r\n        //DragHandlers\r\n        //onDragStart = undefined,\r\n        //onDragEnd = undefined,\r\n        //onDrag = undefined,\r\n        //onDirectionLock = undefined,\r\n        //onDragTransitionEnd = undefined,\r\n        // LayoutProps\r\n        layout = undefined,\r\n        //layoutId = undefined,\r\n        //MotionAdvancedProps\r\n        //custom = undefined,\r\n        //inherit = undefined,\r\n        safeToRemove;\r\n\r\n    /**\r\n     * A mutable object that tracks the target viewport box\r\n     * for the current animation frame.\r\n     */\r\n    let frameTarget = axisBox();\r\n    /**\r\n     * The current animation target, we use this to check whether to start\r\n     * a new animation or continue the existing one.\r\n     */\r\n    let currentAnimationTarget = axisBox();\r\n    /**\r\n     * Track whether we're animating this axis.\r\n     */\r\n    let isAnimating = {\r\n        x: false,\r\n        y: false,\r\n    };\r\n    let stopAxisAnimation = {\r\n        x: undefined,\r\n        y: undefined,\r\n    };\r\n\r\n    let unsubLayoutReady;\r\n\r\n    let isAnimatingTree = false;\r\n\r\n    onMount(() => {\r\n        visualElement.animateMotionValue = startAnimation;\r\n        visualElement.enableLayoutProjection();\r\n        unsubLayoutReady = visualElement.onLayoutUpdate(animateF);\r\n        visualElement.layoutSafeToRemove = function () {\r\n            safeToRemove();\r\n        };\r\n\r\n        addScaleCorrection(defaultScaleCorrectors);\r\n    });\r\n\r\n    onDestroy(() => {\r\n        unsubLayoutReady();\r\n        eachAxis((axis) => stopAxisAnimation[axis]?.());\r\n    });\r\n\r\n    const animateF = (\r\n        target,\r\n        origin,\r\n        {\r\n            originBox,\r\n            targetBox,\r\n            visibilityAction,\r\n            shouldStackAnimate,\r\n            onComplete,\r\n            ...config\r\n        } = {}\r\n    ) => {\r\n        /**\r\n         * Early return if we've been instructed not to animate this render.\r\n         */\r\n        if (shouldStackAnimate === false) {\r\n            isAnimatingTree = false;\r\n            return safeToRemove();\r\n        }\r\n\r\n        /**\r\n         * Prioritise tree animations\r\n         */\r\n        if (isAnimatingTree && shouldStackAnimate !== true) {\r\n            return;\r\n        } else if (shouldStackAnimate) {\r\n            isAnimatingTree = true;\r\n        }\r\n\r\n        /**\r\n         * Allow the measured origin (prev bounding box) and target (actual layout) to be\r\n         * overridden by the provided config.\r\n         */\r\n        origin = originBox || origin;\r\n        target = targetBox || target;\r\n\r\n        const boxHasMoved = hasMoved(origin, target);\r\n\r\n        const animations = eachAxis((axis) => {\r\n            /**\r\n             * If layout is set to \"position\", we can resize the origin box based on the target\r\n             * box and only animate its position.\r\n             */\r\n            if (layout === \"position\") {\r\n                const targetLength = target[axis].max - target[axis].min;\r\n                origin[axis].max = origin[axis].min + targetLength;\r\n            }\r\n\r\n            if (visualElement.projection.isTargetLocked) {\r\n                return;\r\n            } else if (visibilityAction !== undefined) {\r\n                visualElement.setVisibility(\r\n                    visibilityAction === VisibilityAction.Show\r\n                );\r\n            } else if (boxHasMoved) {\r\n                // If the box has moved, animate between it's current visual state and its\r\n                // final state\r\n                return animateAxis(axis, target[axis], origin[axis], config);\r\n            } else {\r\n                // If the box has remained in the same place, immediately set the axis target\r\n                // to the final desired state\r\n                return visualElement.setProjectionTargetAxis(\r\n                    axis,\r\n                    target[axis].min,\r\n                    target[axis].max\r\n                );\r\n            }\r\n        });\r\n\r\n        // Force a render to ensure there's no flash of uncorrected bounding box.\r\n        visualElement.syncRender();\r\n\r\n        /**\r\n         * If this visualElement isn't present (ie it's been removed from the tree by the user but\r\n         * kept in by the tree by AnimatePresence) then call safeToRemove when all axis animations\r\n         * have successfully finished.\r\n         */\r\n        return Promise.all(animations).then(() => {\r\n            isAnimatingTree = false;\r\n            onComplete && onComplete();\r\n            visualElement.notifyLayoutAnimationComplete();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * TODO: This manually performs animations on the visualElement's layout progress\r\n     * values. It'd be preferable to amend the startLayoutAxisAnimation\r\n     * API to accept more custom animations like\r\n     */\r\n    const animateAxis = (\r\n        axis,\r\n        target,\r\n        origin,\r\n        { transition: _transition } = {}\r\n    ) => {\r\n        stopAxisAnimation[axis]?.();\r\n        /**\r\n         * If we're not animating to a new target, don't run this animation\r\n         */\r\n        if (\r\n            isAnimating[axis] &&\r\n            axisIsEqual(target, currentAnimationTarget[axis])\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        stopAxisAnimation[axis]?.();\r\n        isAnimating[axis] = true;\r\n\r\n        const _frameTarget = frameTarget[axis];\r\n        const layoutProgress =\r\n            visualElement.getProjectionAnimationProgress()[axis];\r\n\r\n        /**\r\n         * Set layout progress back to 0. We set it twice to hard-reset any velocity that might\r\n         * be re-incoporated into a subsequent spring animation.\r\n         */\r\n        layoutProgress.clearListeners();\r\n        layoutProgress.set(0);\r\n        layoutProgress.set(0);\r\n\r\n        /**\r\n         * Create an animation function to run once per frame. This will tween the visual bounding box from\r\n         * origin to target using the latest progress value.\r\n         */\r\n        const frame = () => {\r\n            // Convert the latest layoutProgress, which is a value from 0-1000, into a 0-1 progress\r\n            const p = layoutProgress.get() / progressTarget;\r\n\r\n            // Tween the axis and update the visualElement with the latest values\r\n            tweenAxis(_frameTarget, origin, target, p);\r\n            visualElement.setProjectionTargetAxis(\r\n                axis,\r\n                _frameTarget.min,\r\n                _frameTarget.max\r\n            );\r\n        };\r\n\r\n        // Synchronously run a frame to ensure there's no flash of the uncorrected bounding box.\r\n        frame();\r\n\r\n        // Ensure that the layout delta is updated for this frame.\r\n        //visualElement.updateLayoutProjection();\r\n\r\n        // Create a function to stop animation on this specific axis\r\n        const unsubscribeProgress = layoutProgress.onChange(frame);\r\n\r\n        stopAxisAnimation[axis] = () => {\r\n            isAnimating[axis] = false;\r\n            layoutProgress.stop();\r\n            unsubscribeProgress();\r\n        };\r\n\r\n        currentAnimationTarget[axis] = target;\r\n\r\n        const layoutTransition =\r\n            _transition ||\r\n            visualElement.getDefaultTransition() ||\r\n            defaultLayoutTransition;\r\n\r\n        // Start the animation on this axis\r\n        const animation = startAnimation(\r\n            axis === \"x\" ? \"layoutX\" : \"layoutY\",\r\n            layoutProgress,\r\n            progressTarget,\r\n            layoutTransition && getValueTransition(layoutTransition, \"layout\")\r\n        ).then(stopAxisAnimation[axis]);\r\n\r\n        return animation;\r\n    };\r\n</script>\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { usePresence } from \"../../../components/AnimatePresence/use-presence\";\r\n    import Animate from \"./Animate.svelte\";\r\n    export let visualElement, props, isCustom;\r\n\r\n    let { layout } = props;\r\n    $: ({ layout } = props);\r\n    const presence = usePresence(isCustom);\r\n</script>\r\n\r\n<Animate {visualElement} {layout} safeToRemove={$presence[1]} />\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.1.16,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import {\r\n        afterUpdate,\r\n        beforeUpdate,\r\n        getContext,\r\n        onMount\r\n    } from \"svelte\";\r\n    import { get } from \"svelte/store\";\r\n    import {\r\n        ScaleCorrectionContext,\r\n        ScaleCorrectionParentContext,\r\n    } from \"../../../context/ScaleCorrectionProvider.svelte\";\r\n    import { isSharedLayout } from \"../../../context/SharedLayoutContext\";\r\n    import { snapshotViewportBox } from \"../../../render/dom/projection/utils\";\r\n   \r\n    export let visualElement, syncLayout, framerSyncLayout, update;\r\n\r\n    const scaleCorrectionContext = getContext(ScaleCorrectionContext);\r\n    const scaleCorrectionParentContext = getContext(\r\n        ScaleCorrectionParentContext\r\n    );\r\n\r\n    onMount(() => {\r\n        isSharedLayout(syncLayout) && syncLayout.register(visualElement);\r\n        isSharedLayout(framerSyncLayout) &&\r\n            framerSyncLayout.register(visualElement);\r\n\r\n        visualElement.onUnmount(() => {\r\n            if (isSharedLayout(syncLayout)) {\r\n                syncLayout.remove(visualElement);\r\n            }\r\n\r\n            if (isSharedLayout(framerSyncLayout)) {\r\n                framerSyncLayout.remove(visualElement);\r\n            }\r\n        });\r\n    });\r\n    /**\r\n     * If this is a child of a SyncContext, notify it that it needs to re-render. It will then\r\n     * handle the snapshotting.\r\n     *\r\n     * If it is stand-alone component, add it to the batcher.\r\n     */\r\n\r\n    let updated=false;\r\n    const updater = (nc=false) => {\r\n        if (updated){\r\n            return null;\r\n        }\r\n        updated=true;\r\n    \r\n        // in React the updater function is called on children first, in Svelte the child does not call it.\r\n        get(scaleCorrectionContext).forEach((v) =>{\r\n            v.updater?.(true);\r\n        });\r\n        \r\n        if (isSharedLayout(syncLayout)) {\r\n            syncLayout.syncUpdate();\r\n        } else {\r\n            snapshotViewportBox(visualElement,nc);\r\n            syncLayout.add(visualElement);\r\n\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    \r\n\r\n    $: update !== undefined && updater(update);\r\n\r\n    if (update === undefined) {\r\n        beforeUpdate(updater);\r\n    }\r\n    const afterU = (nc =false)=>{\r\n        updated=false;\r\n        /* Second part of the updater calling in child layouts first.*/\r\n        const scc = get(scaleCorrectionContext);\r\n        \r\n        scc.forEach((v,i) => {\r\n            v.afterU?.(true)\r\n        });\r\n        \r\n        if (!isSharedLayout(syncLayout)) {\r\n            syncLayout.flush();\r\n        }\r\n\r\n        /**\r\n         * If this axis isn't animating as a result of this render we want to reset the targetBox\r\n         * to the measured box\r\n         */\r\n        //setCurrentViewportBox(visualElement);\r\n\r\n\r\n\r\n    }\r\n    scaleCorrectionParentContext.update((v) =>\r\n        v.concat([{\r\n            updater,\r\n            afterU\r\n        } ])\r\n    );\r\n    afterUpdate(afterU);\r\n</script>\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { getContext } from \"svelte\";\r\n    import {\r\n        SharedLayoutContext,\r\n        FramerTreeLayoutContext,\r\n    } from \"../../../context/SharedLayoutContext.js\";\r\n    import Measure from \"./Measure.svelte\";\r\n\r\n    export let visualElement, props, isCustom;\r\n\r\n    $: ({ update } = props);\r\n    const syncLayout = getContext(SharedLayoutContext) || SharedLayoutContext(isCustom);\r\n\r\n    const framerSyncLayout =\r\n        getContext(FramerTreeLayoutContext) || FramerTreeLayoutContext(isCustom);\r\n</script>\r\n\r\n<Measure\r\n    syncLayout={$syncLayout}\r\n    framerSyncLayout={$framerSyncLayout}\r\n    {visualElement}\r\n    {update}\r\n/>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { AnimateLayoutContextProvider } from './Animate.js';\r\nimport { MeasureContextProvider } from './Measure.js';\r\n\r\nvar layoutAnimations = {\r\n    measureLayout: MeasureContextProvider,\r\n    layoutAnimation: AnimateLayoutContextProvider\r\n};\r\n\r\nexport { layoutAnimations };\r\n", "<script>\r\n    \r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import { tick } from \"svelte\";\r\n\r\n    import { createAnimationState } from \"../../render/utils/animation-state\";\r\n    import { isAnimationControls } from \"../../animation/utils/is-animation-controls.js\";\r\n    export let visualElement, props;\r\n\r\n    let {animate} = props;\r\n    $: ({animate} = props);\r\n    /**\r\n     * We dynamically generate the AnimationState manager as it contains a reference\r\n     * to the underlying animation library. We only want to load that if we load this,\r\n     * so people can optionally code split it out using the `m` component.\r\n     */\r\n    $: {visualElement.animationState =\r\n        visualElement.animationState || createAnimationState(visualElement);\r\n    }\r\n    /**\r\n     * Subscribe any provided AnimationControls to the component's VisualElement\r\n     */\r\n\r\n    $: if (isAnimationControls(animate)) {\r\n        tick().then(() => animate.subscribe(visualElement)/*, [animate]*/);\r\n    }\r\n</script>\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { usePresence } from \"../../components/AnimatePresence/use-presence\";\r\n    import { getContext } from \"svelte\";\r\n    import { PresenceContext } from \"../../context/PresenceContext\";\r\n    import { AnimationType } from \"../../render/utils/types\";\r\n\r\n    export let props, visualElement, isCustom;\r\n    $: ({ custom } = props);\r\n\r\n    const presenceContext = getContext(PresenceContext) || PresenceContext(isCustom);\r\n    const presence = usePresence(isCustom);\r\n\r\n    const effect = (pres) => {\r\n        const [isPresent, onExitComplete] = pres;\r\n        \r\n        const animation = visualElement.animationState?.setActive(\r\n            AnimationType.Exit,\r\n            !isPresent,\r\n            { custom: $presenceContext?.custom ?? custom }\r\n        );\r\n\r\n        !isPresent && animation?.then(onExitComplete);\r\n        return \"\";\r\n    };\r\n    $: effect($presence)\r\n</script>\r\n\r\n<slot />\r\n\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport AnimationState from './AnimationState.svelte';\r\nimport Exit from './Exit.svelte';\r\n/**\r\n * @public\r\n */\r\nconst animations = {\r\n    animation: AnimationState,\r\n    exit:Exit\r\n}\r\nexport { animations };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { gestureAnimations } from \"../../motion/features/gestures\"\r\nimport { drag } from \"../../motion/features/drag\"\r\nimport { layoutAnimations } from \"../../motion/features/layout\";\r\nimport { animations } from \"../../motion/features/animations\";\r\n\r\nexport const featureBundle = {\r\n    ...animations,\r\n    ...gestureAnimations,\r\n    ...drag,\r\n    ...layoutAnimations,\r\n}\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { createDomVisualElement } from './create-visual-element.js';\r\nimport { createMotionComponent } from '../../motion/index.js';\r\nimport {createMotionClass} from './create-motion-class.js';\r\nimport {featureBundle} from './featureBundle.js';\r\n//import { createMotionProxy } from './motion-proxy.js';\r\n\r\n\r\n\r\n/**\r\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\r\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\r\n *\r\n * @public\r\n */\r\nvar motion = /*@__PURE__*/ //createMotionProxy(allMotionFeatures);\r\n    createMotionClass(featureBundle)\r\n/**\r\n * Create a DOM `motion` component with the provided string. This is primarily intended\r\n * as a full alternative to `motion` for consumers who have to support environments that don't\r\n * support `Proxy`.\r\n *\r\n * ```javascript\r\n * import { createDomMotionComponent } from \"framer-motion\"\r\n *\r\n * const motion = {\r\n *   div: createDomMotionComponent('div')\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction createDomMotionComponent(key) {\r\n    var config = {\r\n        createVisualElement: createDomVisualElement(key),\r\n        //useRender: createUseRender(key, false),\r\n        forwardMotionProps:  key.forwardMotionProps,\r\n        Component: key.Component,\r\n        defaultFeatures: allMotionFeatures,\r\n    };\r\n    return createMotionComponent(config);\r\n}\r\n\r\nexport { createDomMotionComponent, motion as Motion };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * We keep these listed seperately as we use the lowercase tag names as part\r\n * of the runtime bundle to detect SVG components\r\n */\r\nvar lowercaseSVGElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"filter\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"svg\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"text\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\r\n\r\nexport { lowercaseSVGElements };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { lowercaseSVGElements } from '../../svg/lowercase-elements.js';\r\n\r\nfunction isSVGComponent(Component) {\r\n    if (\r\n    /**\r\n     * If it's not a string, it's a custom React component. Currently we only support\r\n     * HTML custom React components.\r\n     */\r\n    typeof Component !== \"string\" ||\r\n        /**\r\n         * If it contains a dash, the element is a custom HTML webcomponent.\r\n         */\r\n        Component.includes(\"-\")) {\r\n        return false;\r\n    }\r\n    else if (\r\n    /**\r\n     * If it's in our list of lowercase SVG tags, it's an SVG component\r\n     */\r\n    lowercaseSVGElements.indexOf(Component) > -1 ||\r\n        /**\r\n         * If it contains a capital letter, it's an SVG component\r\n         */\r\n        /[A-Z]/.test(Component)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { isSVGComponent };\r\n", "<script>\r\n    import Motion from \"../../motion/Motion.svelte\";\r\n    export let ___tag;\r\n</script>\r\n\r\n<Motion {...$$restProps} let:props let:motion>\r\n    <svelte:element this={___tag} use:motion {...props}>\r\n        <slot />\r\n    </svelte:element>\r\n</Motion>\r\n\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { isSVGComponent } from './utils/is-svg-component';\r\nimport Mo from './M.svelte'\r\n\r\n\r\n/**\r\n * Convert any React component into a `motion` component. The provided component\r\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\r\n *\r\n * ```jsx\r\n * const Component = React.forwardRef((props, ref) => {\r\n *   return <div ref={ref} />\r\n * })\r\n *\r\n * const MotionComponent = motion(Component)\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction createMotionProxy(defaultFeatures) {\r\n    \r\n    /*function deprecatedCustom(Component) {\r\n        warning(false, \"motion.custom() is deprecated. Use motion() instead.\");\r\n        return custom(Component, { forwardMotionProps: true });\r\n    }*/\r\n    /**\r\n     * A cache of generated `motion` components, e.g `MotionDiv`, `motion.input` etc.\r\n     * Rather than generating them anew every render.\r\n     */\r\n\r\n    return new Proxy({}, {\r\n        /**\r\n         * Called when `motion` is referenced with a prop: `MotionDiv`, `motion.input` etc.\r\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\r\n         * DOM component with that name.\r\n         */\r\n        get: function (_target, key) {\r\n            /**\r\n             * Can be removed in 4.0\r\n             */\r\n            ///if (key === \"custom\")\r\n            //    return deprecatedCustom;\r\n            /**\r\n             * If this element doesn't exist in the component cache, create it and cache.\r\n             */\r\n            let type = key;\r\n            if (key.slice(0, 1) === key.slice(0, 1).toLowerCase()) {\r\n                type = isSVGComponent(key) ? \"SVG\" : \"DOM\";\r\n            }\r\n            const ret = new Proxy(Mo,{\r\n                construct(target, args) {\r\n                    if (!args || !args[0]){\r\n                        args.push({})\r\n                    }\r\n                    if (!args[0].props){\r\n                        args[0].props= {___tag:key,isSVG:type===\"SVG\"}\r\n                    }else{\r\n                        args[0].props.___tag = key;\r\n                        args[0].props.isSVG = type===\"SVG\"\r\n                    }                                    \r\n                    return new target(...args);\r\n                  }\r\n            })\r\n            \r\n            return ret;\r\n        },\r\n    });\r\n}\r\n\r\nconst M = createMotionProxy();\r\n\r\nexport { createMotionProxy , M};\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n    import { MotionConfigContext } from \"../context/MotionConfigContext\";\r\n    import { UseVisualElement } from \"./utils/use-visual-element\";\r\n    import { UseFeatures } from \"./features/use-features\";\r\n    import MotionContextProvider from \"../context/MotionContext/MotionContextProvider.svelte\";\r\n    import { getContext, onMount } from \"svelte\";\r\n    import { UseRender } from \"../render/dom/use-render.js\";\r\n    import { createDomVisualElement } from \"../render/dom/create-visual-element.js\";\r\n    import { svgMotionConfig } from \"../render/svg/config-motion.js\";\r\n    import { htmlMotionConfig } from \"../render/html/config-motion.js\";\r\n    import { UseCreateMotionContext } from \"../context/MotionContext/create\";\r\n    import { UseVisualState } from \"./utils/use-visual-state.js\";\r\n    import { useMotionRef } from \"./utils/use-motion-ref.js\";\r\n    import ScaleCorrectionProvider from \"../context/ScaleCorrectionProvider.svelte\";\r\n    import { featureBundle } from \"../render/dom/featureBundle.js\";\r\n    import { loadFeatures } from \"./features/definitions\";\r\n\r\n    export let isSVG = false,\r\n        forwardMotionProps = false,\r\n        externalRef = undefined,\r\n        targetEl = undefined; /*\r\n        initial = undefined,\r\n        style = undefined,\r\n        transformTemplate = undefined,\r\n        transformValues = undefined,\r\n        //AnimationProps\r\n        animate = undefined,\r\n        exit = undefined,\r\n        variants = undefined,\r\n        transition = undefined,\r\n        //VisualElementLifecycles\r\n        onViewportBoxUpdate = undefined,\r\n        onBeforeLayoutMeasure = undefined,\r\n        onLayoutMeasure = undefined,\r\n        onUpdate = undefined,\r\n        onAnimationStart = undefined,\r\n        onAnimationComplete = undefined,\r\n        onLayoutAnimationComplete = undefined,\r\n        //GestureHandlers\r\n        // PanHandlers\r\n        onPan = undefined,\r\n        onPanStart = undefined,\r\n        onPanSessionStart = undefined,\r\n        onPanEnd = undefined,\r\n        // TapHandlers\r\n        onTap = undefined,\r\n        onTapStart = undefined,\r\n        onTapCancel = undefined,\r\n        whileTap = undefined,\r\n        //HoverHandlers\r\n        whileHover = undefined,\r\n        onHoverStart = undefined,\r\n        onHoverEnd = undefined,\r\n        //FocusHandlers\r\n        whileFocus = undefined,\r\n        //DraggableProps\r\n        drag = undefined,\r\n        whileDrag = undefined,\r\n        dragDirectionLock = undefined,\r\n        dragPropagation = undefined,\r\n        dragConstraints = undefined,\r\n        dragElastic = undefined,\r\n        dragMomentum = undefined,\r\n        dragTransition = undefined,\r\n        dragControls = undefined,\r\n        dragListener = undefined,\r\n        onMeasureDragConstraints = undefined,\r\n        _dragX = undefined,\r\n        _dragY = undefined,\r\n        //DragHandlers\r\n        onDragStart = undefined,\r\n        onDragEnd = undefined,\r\n        onDrag = undefined,\r\n        onDirectionLock = undefined,\r\n        onDragTransitionEnd = undefined,\r\n        // LayoutProps\r\n        layout = undefined,\r\n        layoutId = undefined,\r\n        //MotionAdvancedProps\r\n        custom = undefined,\r\n        inherit = undefined,\r\n        update=undefined;\r\n*/\r\n    //layout=undefined;\r\n    $: motionProps = $$restProps; /*{\r\n        initial,\r\n        style,\r\n        transformTemplate,\r\n        transformValues,\r\n        //AnimationProps\r\n        animate,\r\n        exit,\r\n        variants,\r\n        transition,\r\n        //VisualElementLifecycles\r\n        onViewportBoxUpdate,\r\n        onBeforeLayoutMeasure,\r\n        onLayoutMeasure,\r\n        onUpdate,\r\n        onAnimationStart,\r\n        onAnimationComplete,\r\n        onLayoutAnimationComplete,\r\n        //GestureHandlers\r\n        // PanHandlers\r\n        onPan,\r\n        onPanStart,\r\n        onPanSessionStart,\r\n        onPanEnd,\r\n        // TapHandlers\r\n        onTap,\r\n        onTapStart,\r\n        onTapCancel,\r\n        whileTap,\r\n        //HoverHandlers\r\n        whileHover,\r\n        onHoverStart,\r\n        onHoverEnd,\r\n        //FocusHandlers\r\n        whileFocus,\r\n        //DraggableProps\r\n        drag,\r\n        whileDrag,\r\n        dragDirectionLock,\r\n        dragPropagation,\r\n        dragConstraints,\r\n        dragElastic,\r\n        dragMomentum,\r\n        dragTransition,\r\n        dragControls,\r\n        dragListener,\r\n        onMeasureDragConstraints,\r\n        _dragX,\r\n        _dragY,\r\n        //DragHandlers\r\n        onDragStart,\r\n        onDragEnd,\r\n        onDrag,\r\n        onDirectionLock,\r\n        onDragTransitionEnd,\r\n        // LayoutProps\r\n        layout,\r\n        layoutId,\r\n        //MotionAdvancedProps\r\n        custom,\r\n        inherit,\r\n        ...(isSVG ? $$restProps : {}),\r\n    };*/\r\n    //$: (allProps = {...motionProps,$$restProps});\r\n\r\n    // The SSR component needs to load this here\r\n    loadFeatures(featureBundle);\r\n\r\n    let Component = isSVG ? \"SVG\" : \"DOM\";\r\n    let isCustom = targetEl || false;\r\n    let createVisualElement = createDomVisualElement;\r\n    let visualStateConfig = isSVG ? svgMotionConfig : htmlMotionConfig;\r\n\r\n    /**\r\n     * If a component is static, we only visually update it as a\r\n     * result of a React re-render, rather than any interactions or animations.\r\n     * If this component or any ancestor is static, we disable hardware acceleration\r\n     * and don't load any additional functionality.\r\n     */\r\n    const a = getContext(MotionConfigContext) || MotionConfigContext(isCustom);\r\n\r\n    $: ({ isStatic } = $a || {});\r\n    let mounted = false;\r\n    const setContext = (c, v) => {\r\n        c.visualElement = v;\r\n        return v;\r\n    };\r\n\r\n    onMount(() => {\r\n        mounted = true;\r\n    });\r\n</script>\r\n\r\n<ScaleCorrectionProvider {isCustom}>\r\n    <UseCreateMotionContext props={motionProps} {isStatic} let:value={context}>\r\n        <UseVisualState\r\n            config={visualStateConfig}\r\n            props={motionProps}\r\n            {isStatic}\r\n            {isCustom}\r\n            let:state={visualState}\r\n        >\r\n            <UseVisualElement\r\n                {Component}\r\n                {visualState}\r\n                {createVisualElement}\r\n                props={motionProps}\r\n                {isCustom}\r\n                let:visualElement\r\n            >\r\n                <UseFeatures\r\n                    visualElement={setContext(context, visualElement)}\r\n                    props={motionProps}\r\n                    let:features={_features}\r\n                >\r\n                    <MotionContextProvider value={context} {isCustom}>\r\n                        <UseRender\r\n                            {Component}\r\n                            props={motionProps}\r\n                            ref={useMotionRef(\r\n                                visualState,\r\n                                context.visualElement,\r\n                                externalRef\r\n                            )}\r\n                            {visualState}\r\n                            {isStatic}\r\n                            {forwardMotionProps}\r\n                            let:motion\r\n                            let:props={renderProps}\r\n                            {targetEl}\r\n                        >\r\n                            <slot {motion} props={renderProps} />\r\n                        </UseRender>\r\n                    </MotionContextProvider>\r\n\r\n                    {#if mounted}\r\n                        {#each _features as feat (feat.key)}\r\n                            <svelte:component\r\n                                this={feat.Component}\r\n                                props={feat.props}\r\n                                visualElement={feat.visualElement}\r\n                                {isCustom}\r\n                            />\r\n                        {/each}\r\n                    {/if}\r\n                </UseFeatures>\r\n            </UseVisualElement>\r\n        </UseVisualState>\r\n    </UseCreateMotionContext>\r\n</ScaleCorrectionProvider>\r\n", "<script context=\"module\">\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    let presenceId = 0;\r\n    function getPresenceId() {\r\n        const id = presenceId;\r\n        presenceId++;\r\n        return id;\r\n    }\r\n    function newChildrenMap() {\r\n        return new Map();\r\n    }\r\n</script>\r\n\r\n<script>\r\n    import { afterUpdate, setContext, tick } from \"svelte\";\r\nimport { setDomContext } from \"../../context/DOMcontext.js\";\r\n    import { PresenceContext } from \"../../context/PresenceContext.js\";\r\n    export let isPresent,\r\n        onExitComplete = undefined,\r\n        initial,\r\n        custom = undefined,\r\n        presenceAffectsLayout,\r\n        isCustom;\r\n\r\n    const presenceChildren = new newChildrenMap();\r\n    const id = getPresenceId();\r\n\r\n    $: refresh = presenceAffectsLayout ? undefined : isPresent;\r\n\r\n    const memoContext = () => {\r\n        return {\r\n            id,\r\n            initial,\r\n            isPresent,\r\n            custom,\r\n            onExitComplete: (childId) => {\r\n                presenceChildren.set(childId, true);\r\n                let allComplete = true;\r\n                presenceChildren.forEach((isComplete) => {\r\n                    if (!isComplete) allComplete = false;\r\n                });\r\n\r\n                allComplete && onExitComplete?.();\r\n            },\r\n            register: (childId) => {\r\n                presenceChildren.set(childId, false);\r\n                return () => presenceChildren.delete(childId);\r\n            },\r\n        };\r\n    };\r\n    let context = PresenceContext();\r\n\r\n    afterUpdate(() => {\r\n        if (presenceAffectsLayout) {\r\n            context.set(memoContext());\r\n        }\r\n    });\r\n\r\n    $: context.set(memoContext(refresh));\r\n\r\n    const keyset = () => {\r\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\r\n    };\r\n    $: keyset(isPresent);\r\n    $: tick().then(() => {\r\n        !isPresent && !presenceChildren.size && onExitComplete?.();\r\n    });\r\n    setContext(PresenceContext, context);\r\n    setDomContext(\"Presence\",isCustom,context)\r\n</script>\r\n\r\n<slot />\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { getContext } from \"svelte\";\r\n    import {\r\n        SharedLayoutContext,\r\n        isSharedLayout,\r\n    } from \"../../context/SharedLayoutContext.js\";\r\n    import PresenceChild from \"./PresenceChild.svelte\";\r\n\r\n    export let list = undefined,\r\n        custom = undefined,\r\n        initial = true,\r\n        onExitComplete = undefined,\r\n        exitBeforeEnter = undefined,\r\n        presenceAffectsLayout = true,\r\n        show = undefined,\r\n        isCustom=false;\r\n\r\n    let _list = list !== undefined ? list : show ? [{ key: 1 }] : [];\r\n    $: _list = list !== undefined ? list : show ? [{ key: 1 }] : [];\r\n\r\n    const layoutContext =\r\n        getContext(SharedLayoutContext) || SharedLayoutContext(isCustom);\r\n\r\n    $: (isl = isSharedLayout($layoutContext));\r\n\r\n    $: forceRender = () => {\r\n        if (isl) {\r\n            $layoutContext.forceUpdate();\r\n        }\r\n        _list = [..._list];\r\n    };\r\n\r\n    function getChildKey(child) {\r\n        return child.key || \"\";\r\n    }\r\n\r\n    let isInitialRender = true;\r\n    let filteredChildren = _list;\r\n    $: filteredChildren = _list;\r\n\r\n    let presentChildren = filteredChildren;\r\n    let allChildren = new Map();\r\n    let exiting = new Set();\r\n    const updateChildLookup = (children, allChild) => {\r\n        children.forEach((child) => {\r\n            const key = getChildKey(child);\r\n            allChild.set(key, child);\r\n        });\r\n    };\r\n    $: updateChildLookup(filteredChildren, allChildren);\r\n\r\n    let childrenToRender = [\r\n        ...filteredChildren.map((v) => ({\r\n            present: true,\r\n            item: v,\r\n            key: v.key,\r\n        })),\r\n    ];\r\n\r\n    $: if (!isInitialRender) {\r\n        // If this is a subsequent render, deal with entering and exiting children\r\n        childrenToRender = [\r\n            ...filteredChildren.map((v) => ({\r\n                present: true,\r\n                item: v,\r\n                key: v.key,\r\n            })),\r\n        ];\r\n\r\n        // Diff the keys of the currently-present and target children to update our\r\n        // exiting list.\r\n        const presentKeys = presentChildren.map(getChildKey);\r\n        const targetKeys = filteredChildren.map(getChildKey);\r\n        // Diff the present children with our target children and mark those that are exiting\r\n        const numPresent = presentKeys.length;\r\n        for (let i = 0; i < numPresent; i++) {\r\n            const key = presentKeys[i];\r\n            if (targetKeys.indexOf(key) === -1) {\r\n                exiting.add(key);\r\n            } else {\r\n                // In case this key has re-entered, remove from the exiting list\r\n                exiting.delete(key);\r\n            }\r\n        }\r\n\r\n        // If we currently have exiting children, and we're deferring rendering incoming children\r\n        // until after all current children have exiting, empty the childrenToRender array\r\n        if (exitBeforeEnter && exiting.size) {\r\n            childrenToRender = [];\r\n        }\r\n        // Loop through all currently exiting components and clone them to overwrite `animate`\r\n        // with any `exit` prop they might have defined.\r\n        exiting.forEach((key) => {\r\n            // If this component is actually entering again, early return\r\n            if (targetKeys.indexOf(key) !== -1) return;\r\n\r\n            const child = allChildren.get(key);\r\n            if (!child) return;\r\n\r\n            const insertionIndex = presentKeys.indexOf(key);\r\n\r\n            const onExit = () => {\r\n                allChildren.delete(key);\r\n                exiting.delete(key);\r\n\r\n                // Remove this child from the present children\r\n                const removeIndex = presentChildren.findIndex(\r\n                    (presentChild) => presentChild.key === key\r\n                );\r\n\r\n                if (removeIndex < 0) {\r\n                    return;\r\n                }\r\n                presentChildren.splice(removeIndex, 1);\r\n\r\n                // Defer re-rendering until all exiting children have indeed left\r\n                if (!exiting.size) {\r\n                    presentChildren = [...filteredChildren];\r\n                    forceRender();\r\n                    onExitComplete && onExitComplete();\r\n                }\r\n            };\r\n\r\n            childrenToRender.splice(insertionIndex, 0, {\r\n                present: false,\r\n                item: child,\r\n                key: getChildKey(child),\r\n                onExit,\r\n            });\r\n        });\r\n        // Add `MotionContext` even to children that don't need it to ensure we're rendering\r\n        // the same tree between renders\r\n\r\n        /*\r\n        childrenToRender = childrenToRender.map((child) => {\r\n            const key = child.key as string | number;\r\n            return exiting.has(key) ? (\r\n                child\r\n            ) : (\r\n                <PresenceChild\r\n                    key={getChildKey(child)}\r\n                    isPresent\r\n                    presenceAffectsLayout={presenceAffectsLayout}\r\n                >\r\n                    {child}\r\n                </PresenceChild>\r\n            );\r\n        });\r\n        */\r\n        presentChildren = childrenToRender;\r\n    } else {\r\n        isInitialRender = false;\r\n    }\r\n</script>\r\n\r\n{#each childrenToRender as child (getChildKey(child))\r\n}<PresenceChild\r\n        isPresent={child.present}\r\n        initial={initial ? undefined : false}\r\n        custom={child.onExit ? custom : undefined}\r\n        {presenceAffectsLayout}\r\n        onExitComplete={child.onExit}\r\n        {isCustom}\r\n    ><slot item={child.item} \r\n    /></PresenceChild\r\n    >{/each}\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { motionValue } from '../value/index.js';\r\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\r\nimport { startAnimation } from './utils/transitions.js';\r\n\r\n/**\r\n * Animate a single value or a `MotionValue`.\r\n *\r\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\r\n *\r\n * The second is either a value to animate to, or an array of keyframes to animate through.\r\n *\r\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\r\n *\r\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\r\n *\r\n * ```javascript\r\n * const x = useMotionValue(0)\r\n *\r\n * useEffect(() => {\r\n *   const controls = animate(x, 100, {\r\n *     type: \"spring\",\r\n *     stiffness: 2000,\r\n *     onComplete: v => {}\r\n *   })\r\n *\r\n *   return controls.stop\r\n * })\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction animate(from, to, transition) {\r\n    if (transition === void 0) { transition = {}; }\r\n    var value = isMotionValue(from) ? from : motionValue(from);\r\n    startAnimation(\"\", value, to, transition);\r\n    return {\r\n        stop: function () { return value.stop(); },\r\n    };\r\n}\r\n\r\nexport { animate };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from '../../../utils/fix-process-env';\r\nimport sync, { getFrameData } from 'framesync';\r\nimport { mix, progress, linear, mixColor, circOut } from 'popmotion';\r\nimport { animate } from '../../../animation/animate.js';\r\nimport { getValueTransition } from '../../../animation/utils/transitions.js';\r\nimport { motionValue } from '../../../value/index.js';\r\n\r\nfunction createCrossfader() {\r\n    /**\r\n     * The current state of the crossfade as a value between 0 and 1\r\n     */\r\n    var progress = motionValue(1);\r\n    var options = {\r\n        lead: undefined,\r\n        follow: undefined,\r\n        crossfadeOpacity: false,\r\n        preserveFollowOpacity: false,\r\n    };\r\n    var prevOptions = Object.assign({}, options);\r\n    var leadState = {};\r\n    var followState = {};\r\n    /**\r\n     *\r\n     */\r\n    var isActive = false;\r\n    /**\r\n     *\r\n     */\r\n    var finalCrossfadeFrame = null;\r\n    /**\r\n     * Framestamp of the last frame we updated values at.\r\n     */\r\n    var prevUpdate = 0;\r\n    function startCrossfadeAnimation(target, transition) {\r\n        var lead = options.lead, follow = options.follow;\r\n        isActive = true;\r\n        finalCrossfadeFrame = null;\r\n        var hasUpdated = false;\r\n        var onUpdate = function () {\r\n            hasUpdated = true;\r\n            lead && lead.scheduleRender();\r\n            follow && follow.scheduleRender();\r\n        };\r\n        var onComplete = function () {\r\n            isActive = false;\r\n            /**\r\n             * If the crossfade animation is no longer active, flag a frame\r\n             * that we're still allowed to crossfade\r\n             */\r\n            finalCrossfadeFrame = getFrameData().timestamp;\r\n        };\r\n        transition = transition && getValueTransition(transition, \"crossfade\");\r\n        return animate(progress, target, Object.assign(Object.assign({}, transition), { onUpdate: onUpdate, onComplete: function () {\r\n                if (!hasUpdated) {\r\n                    progress.set(target);\r\n                    /**\r\n                     * If we never ran an update, for instance if this was an instant transition, fire a\r\n                     * simulated final frame to ensure the crossfade gets applied correctly.\r\n                     */\r\n                    sync.read(onComplete);\r\n                }\r\n                else {\r\n                    onComplete();\r\n                }\r\n                onUpdate();\r\n            } }));\r\n    }\r\n    function updateCrossfade() {\r\n        var _a, _b;\r\n        /**\r\n         * We only want to compute the crossfade once per frame, so we\r\n         * compare the previous update framestamp with the current frame\r\n         * and early return if they're the same.\r\n         */\r\n        var timestamp = getFrameData().timestamp;\r\n        var lead = options.lead, follow = options.follow;\r\n        if (timestamp === prevUpdate || !lead)\r\n            return;\r\n        prevUpdate = timestamp;\r\n        /**\r\n         * Merge each component's latest values into our crossfaded state\r\n         * before crossfading.\r\n         */\r\n        var latestLeadValues = lead.getLatestValues();\r\n        Object.assign(leadState, latestLeadValues);\r\n        var latestFollowValues = follow\r\n            ? follow.getLatestValues()\r\n            : options.prevValues;\r\n        Object.assign(followState, latestFollowValues);\r\n        var p = progress.get();\r\n        /**\r\n         * Crossfade the opacity between the two components. This will result\r\n         * in a different opacity for each component.\r\n         */\r\n        var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\r\n        var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\r\n        if (options.crossfadeOpacity && follow) {\r\n            leadState.opacity = mix(\r\n            /**\r\n             * If the follow child has been completely hidden we animate\r\n             * this opacity from its previous opacity, but otherwise from completely transparent.\r\n             */\r\n            follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\r\n            followState.opacity = options.preserveFollowOpacity\r\n                ? followTargetOpacity\r\n                : mix(followTargetOpacity, 0, easeCrossfadeOut(p));\r\n        }\r\n        else if (!follow) {\r\n            leadState.opacity = mix(followTargetOpacity, leadTargetOpacity, p);\r\n        }\r\n        mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\r\n    }\r\n    return {\r\n        isActive: function () {\r\n            return leadState &&\r\n                (isActive || getFrameData().timestamp === finalCrossfadeFrame);\r\n        },\r\n        fromLead: function (transition) {\r\n            return startCrossfadeAnimation(0, transition);\r\n        },\r\n        toLead: function (transition) {\r\n            var initialProgress = 0;\r\n            if (!options.prevValues && !options.follow) {\r\n                /**\r\n                 * If we're not coming from anywhere, start at the end of the animation.\r\n                 */\r\n                initialProgress = 1;\r\n            }\r\n            else if (prevOptions.lead === options.follow &&\r\n                prevOptions.follow === options.lead) {\r\n                /**\r\n                 * If we're swapping follow/lead we can reverse the progress\r\n                 */\r\n                initialProgress = 1 - progress.get();\r\n            }\r\n            progress.set(initialProgress);\r\n            return startCrossfadeAnimation(1, transition);\r\n        },\r\n        reset: function () { return progress.set(1); },\r\n        stop: function () { return progress.stop(); },\r\n        getCrossfadeState: function (element) {\r\n            updateCrossfade();\r\n            if (element === options.lead) {\r\n                return leadState;\r\n            }\r\n            else if (element === options.follow) {\r\n                return followState;\r\n            }\r\n        },\r\n        setOptions: function (newOptions) {\r\n            prevOptions = options;\r\n            options = newOptions;\r\n            leadState = {};\r\n            followState = {};\r\n        },\r\n        getLatestValues: function () {\r\n            return leadState;\r\n        },\r\n    };\r\n}\r\nvar easeCrossfadeIn = compress(0, 0.5, circOut);\r\nvar easeCrossfadeOut = compress(0.5, 0.95, linear);\r\nfunction compress(min, max, easing) {\r\n    return function (p) {\r\n        // Could replace ifs with clamp\r\n        if (p < min)\r\n            return 0;\r\n        if (p > max)\r\n            return 1;\r\n        return easing(progress(min, max, p));\r\n    };\r\n}\r\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\r\nvar numBorders = borders.length;\r\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\r\n    /**\r\n     * Mix border radius\r\n     */\r\n    for (var i = 0; i < numBorders; i++) {\r\n        var borderLabel = \"border\" + borders[i] + \"Radius\";\r\n        var followRadius = getRadius(latestFollowValues, borderLabel);\r\n        var leadRadius = getRadius(latestLeadValues, borderLabel);\r\n        if (followRadius === undefined && leadRadius === undefined)\r\n            continue;\r\n        followRadius || (followRadius = 0);\r\n        leadRadius || (leadRadius = 0);\r\n        /**\r\n         * Currently we're only crossfading between numerical border radius.\r\n         * It would be possible to crossfade between percentages for a little\r\n         * extra bundle size.\r\n         */\r\n        if (typeof followRadius === \"number\" &&\r\n            typeof leadRadius === \"number\") {\r\n            var radius = Math.max(mix(followRadius, leadRadius, p), 0);\r\n            leadState[borderLabel] = followState[borderLabel] = radius;\r\n        }\r\n    }\r\n    /**\r\n     * Mix rotation\r\n     */\r\n    if (latestFollowValues.rotate || latestLeadValues.rotate) {\r\n        var rotate = mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\r\n        leadState.rotate = followState.rotate = rotate;\r\n    }\r\n    /**\r\n     * We only want to mix the background color if there's a follow element\r\n     * that we're not crossfading opacity between. For instance with switch\r\n     * AnimateSharedLayout animations, this helps the illusion of a continuous\r\n     * element being animated but also cuts down on the number of paints triggered\r\n     * for elements where opacity is doing that work for us.\r\n     */\r\n    if (!hasFollowElement &&\r\n        latestLeadValues.backgroundColor &&\r\n        latestFollowValues.backgroundColor) {\r\n        /**\r\n         * This isn't ideal performance-wise as mixColor is creating a new function every frame.\r\n         * We could probably create a mixer that runs at the start of the animation but\r\n         * the idea behind the crossfader is that it runs dynamically between two potentially\r\n         * changing targets (ie opacity or borderRadius may be animating independently via variants)\r\n         */\r\n        leadState.backgroundColor = followState.backgroundColor = mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\r\n    }\r\n}\r\nfunction getRadius(values, radiusName) {\r\n    var _a;\r\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\r\n}\r\n\r\nexport { createCrossfader };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { Presence } from '../types.js';\r\nimport { elementDragControls } from '../../../gestures/drag/VisualElementDragControls.js';\r\nimport { createCrossfader } from './crossfader.js';\r\n\r\nfunction layoutStack() {\r\n    var stack = new Set();\r\n    var state = { leadIsExiting: false };\r\n    var prevState = Object.assign({}, state);\r\n    var prevValues;\r\n    var prevViewportBox;\r\n    var prevDragCursor;\r\n    var crossfader = createCrossfader();\r\n    var needsCrossfadeAnimation = false;\r\n    function getFollowViewportBox() {\r\n        return state.follow ? state.follow.prevViewportBox : prevViewportBox;\r\n    }\r\n    function getFollowLayout() {\r\n        var _a;\r\n        return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\r\n    }\r\n    return {\r\n        add: function (element) {\r\n            element.setCrossfader(crossfader);\r\n            stack.add(element);\r\n            /**\r\n             * Hydrate new element with previous drag position if we have one\r\n             */\r\n            if (prevDragCursor)\r\n                element.prevDragCursor = prevDragCursor;\r\n            if (!state.lead)\r\n                state.lead = element;\r\n        },\r\n        remove: function (element) {\r\n            stack.delete(element);\r\n        },\r\n        getLead: function () { return state.lead; },\r\n        updateSnapshot: function () {\r\n            if (!state.lead)\r\n                return;\r\n            prevValues = crossfader.isActive()\r\n                ? crossfader.getLatestValues()\r\n                : state.lead.getLatestValues();\r\n            prevViewportBox = state.lead.prevViewportBox;\r\n            var dragControls = elementDragControls.get(state.lead);\r\n            if (dragControls && dragControls.isDragging) {\r\n                prevDragCursor = dragControls.cursorProgress;\r\n            }\r\n        },\r\n        clearSnapshot: function () {\r\n            prevDragCursor = prevViewportBox = undefined;\r\n        },\r\n        updateLeadAndFollow: function () {\r\n            var _a;\r\n            prevState = Object.assign({}, state);\r\n            var lead;\r\n            var follow;\r\n            var order = Array.from(stack);\r\n            for (var i = order.length; i--; i >= 0) {\r\n                var element = order[i];\r\n                if (lead)\r\n                    follow !== null && follow !== void 0 ? follow : (follow = element);\r\n                lead !== null && lead !== void 0 ? lead : (lead = element);\r\n                if (lead && follow)\r\n                    break;\r\n            }\r\n            state.lead = lead;\r\n            state.follow = follow;\r\n            state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\r\n            crossfader.setOptions({\r\n                lead: lead,\r\n                follow: follow,\r\n                prevValues: prevValues,\r\n                crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot),\r\n            });\r\n            if (\r\n            // Don't crossfade if we've just animated back from lead and switched the\r\n            // old follow to the new lead.\r\n            state.lead !== prevState.follow &&\r\n                (prevState.lead !== state.lead ||\r\n                    prevState.leadIsExiting !== state.leadIsExiting)) {\r\n                needsCrossfadeAnimation = true;\r\n            }\r\n        },\r\n        animate: function (child, shouldCrossfade) {\r\n            var _a;\r\n            if (shouldCrossfade === void 0) { shouldCrossfade = false; }\r\n            if (child === state.lead) {\r\n                if (shouldCrossfade) {\r\n                    /**\r\n                     * Point a lead to itself in case it was previously pointing\r\n                     * to a different visual element\r\n                     */\r\n                    child.pointTo(state.lead);\r\n                }\r\n                else {\r\n                    child.setVisibility(true);\r\n                }\r\n                var config = {};\r\n                var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\r\n                if (prevParent) {\r\n                    /**\r\n                     * We'll use this to determine if the element or its layoutId has been reparented.\r\n                     */\r\n                    config.prevParent = prevParent;\r\n                }\r\n                if (child.presence === Presence.Entering) {\r\n                    config.originBox = getFollowViewportBox();\r\n                }\r\n                else if (child.presence === Presence.Exiting) {\r\n                    config.targetBox = getFollowLayout();\r\n                }\r\n                if (needsCrossfadeAnimation) {\r\n                    needsCrossfadeAnimation = false;\r\n                    var transition = child.getDefaultTransition();\r\n                    child.presence === Presence.Entering\r\n                        ? crossfader.toLead(transition)\r\n                        : crossfader.fromLead(transition);\r\n                }\r\n                child.notifyLayoutReady(config);\r\n            }\r\n            else {\r\n                if (shouldCrossfade) {\r\n                    state.lead && child.pointTo(state.lead);\r\n                }\r\n                else {\r\n                    child.setVisibility(false);\r\n                }\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nexport { layoutStack };\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { transformAxes } from '../../../render/html/utils/transform.js';\r\n\r\nfunction resetRotate(child) {\r\n    // If there's no detected rotation values, we can early return without a forced render.\r\n    var hasRotate = false;\r\n    // Keep a record of all the values we've reset\r\n    var resetValues = {};\r\n    // Check the rotate value of all axes and reset to 0\r\n    for (var i = 0; i < transformAxes.length; i++) {\r\n        var axis = transformAxes[i];\r\n        var key = \"rotate\" + axis;\r\n        // If this rotation doesn't exist as a motion value, then we don't\r\n        // need to reset it\r\n        if (!child.hasValue(key) || child.getStaticValue(key) === 0)\r\n            continue;\r\n        hasRotate = true;\r\n        // Record the rotation and then temporarily set it to 0\r\n        resetValues[key] = child.getStaticValue(key);\r\n        child.setStaticValue(key, 0);\r\n    }\r\n    // If there's no rotation values, we don't need to do any more.\r\n    if (!hasRotate)\r\n        return;\r\n    // Force a render of this element to apply the transform with all rotations\r\n    // set to 0.\r\n    child.syncRender();\r\n    // Put back all the values we reset\r\n    for (var key in resetValues) {\r\n        child.setStaticValue(key, resetValues[key]);\r\n    }\r\n    // Schedule a render for the next frame. This ensures we won't visually\r\n    // see the element with the reset rotate value applied.\r\n    child.scheduleRender();\r\n}\r\n\r\nexport { resetRotate };\r\n", "<script>\r\n    /** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n    import { Presence } from \"./types\";\r\n    import { createBatcher } from \"./utils/batcher\";\r\n    import { SharedLayoutContext } from \"../../context/SharedLayoutContext\";\r\n\r\n    import { layoutStack } from \"./utils/stack\";\r\n    import { resetRotate } from \"./utils/rotate\";\r\n    import { getContext, onMount, setContext, tick } from \"svelte\";\r\n    import { get } from \"svelte/store\";\r\n    import { writable } from \"svelte/store\";\r\n    import { MotionContext } from \"../../context/MotionContext/index.js\";\r\n    import { snapshotViewportBox } from \"../../render/dom/projection/utils\";\r\nimport { setDomContext } from \"../../context/DOMcontext\";\r\n\r\n    export let type = undefined,isCustom=false;\r\n\r\n    const context = getContext(MotionContext) || MotionContext(isCustom);\r\n\r\n    /**\r\n     * Track whether the component has mounted. If it hasn't, the presence of added children\r\n     * are set to Present, whereas if it has they're considered Entering\r\n     */\r\n    let hasMounted = false;\r\n    /**\r\n     * A list of all the children in the shared layout\r\n     */\r\n    let children = new Set();\r\n    /**\r\n     * As animate components with a defined `layoutId` are added/removed to the tree,\r\n     * we store them in order. When one is added, it will animate out from the\r\n     * previous one, and when it's removed, it'll animate to the previous one.\r\n     */\r\n    let stacks = new Map();\r\n    /**\r\n     * Track whether we already have an update scheduled. If we don't, we'll run snapshots\r\n     * and schedule one.\r\n     */\r\n    let updateScheduled = false;\r\n    /**\r\n     * Tracks whether we already have a render scheduled. If we don't, we'll force one with this.forceRender\r\n     */\r\n    let renderScheduled = false;\r\n\r\n    let forced = false; /*\r\n    const resetForced = ()=>{\r\n        if (forced){\r\n            forced=false;\r\n        }\r\n    }\r\n    $: resetForced(forced);\r\n    */\r\n    /**\r\n     * The methods provided to all children in the shared layout tree.\r\n     */\r\n    let syncContext = {\r\n        ...createBatcher(),\r\n        syncUpdate: (force) => scheduleUpdate(force),\r\n        forceUpdate: () => {\r\n            // By copying syncContext to itself, when this component re-renders it'll also re-render\r\n            // all children subscribed to the SharedLayout context.\r\n            //syncContext = { ...syncContext }\r\n            //scheduleUpdate(true)\r\n            //syncContext = { ...syncContext }\r\n            //setSyncContext()\r\n            scheduleUpdate();\r\n\r\n            forced = true;\r\n        },\r\n        register: (child) => addChild(child),\r\n        remove: (child) => {\r\n            removeChild(child);\r\n        },\r\n    };\r\n\r\n    const startLayoutAnimation = () => {\r\n        /**\r\n         * Reset update and render scheduled status\r\n         */\r\n        renderScheduled = updateScheduled = false;\r\n\r\n        /**\r\n         * Update presence metadata based on the latest AnimatePresence status.\r\n         * This is a kind of goofy way of dealing with this, perhaps there's a better model to find.\r\n         */\r\n        children.forEach((child) => {\r\n            if (!child.isPresent) {\r\n                child.presence = Presence.Exiting;\r\n            } else if (child.presence !== Presence.Entering) {\r\n                child.presence =\r\n                    child.presence === Presence.Exiting\r\n                        ? Presence.Entering\r\n                        : Presence.Present;\r\n            }\r\n        });\r\n\r\n        updateStacks();\r\n\r\n        /**\r\n         * Create a handler which we can use to flush the children animations\r\n         */\r\n        const handler = {\r\n            measureLayout: (child) => child.updateLayoutMeasurement(),\r\n            layoutReady: (child) => {\r\n                if (child.getLayoutId() !== undefined) {\r\n                    const stack = getStack(child);\r\n                    stack.animate(child, type === \"crossfade\");\r\n                } else {\r\n                    child.notifyLayoutReady();\r\n                }\r\n            },\r\n            parent: get(context).visualElement,\r\n        };\r\n        /**\r\n         * Shared layout animations can be used without the AnimateSharedLayout wrapping component.\r\n         * This requires some co-ordination across components to stop layout thrashing\r\n         * and ensure measurements are taken at the correct time.\r\n         *\r\n         * Here we use that same mechanism of schedule/flush.\r\n         */\r\n        children.forEach((child) => syncContext.add(child));\r\n        syncContext.flush(handler);\r\n\r\n        /**\r\n         * Clear snapshots so subsequent rerenders don't retain memory of outgoing components\r\n         */\r\n        stacks.forEach((stack) => stack.clearSnapshot());\r\n    };\r\n\r\n    const updateStacks = () => {\r\n        stacks.forEach((stack) => stack.updateLeadAndFollow());\r\n    };\r\n\r\n    const scheduleUpdate = (force = false) => {\r\n        if (!(force || !updateScheduled)) return;\r\n\r\n        /**\r\n         * Flag we've scheduled an update\r\n         */\r\n        updateScheduled = true;\r\n\r\n        /**\r\n         * Write: Reset rotation transforms so bounding boxes can be accurately measured.\r\n         */\r\n        children.forEach((child) => resetRotate(child));\r\n\r\n        /**\r\n         * Read: Snapshot children\r\n         */\r\n        children.forEach((child) => snapshotViewportBox(child));\r\n\r\n        /**\r\n         * Every child keeps a local snapshot, but we also want to record\r\n         * snapshots of the visible children as, if they're are being removed\r\n         * in this render, we can still access them.\r\n         *\r\n         * TODO: What would be better here is doing a single loop where we\r\n         * only snapshotViewportBoxes of undefined layoutIds and then one for each stack\r\n         */\r\n        stacks.forEach((stack) => stack.updateSnapshot());\r\n\r\n        /**\r\n         * Force a rerender by setting state if we aren't already going to render.\r\n         */\r\n        if (force || !renderScheduled) {\r\n            renderScheduled = true;\r\n            forced = true;\r\n        }\r\n    };\r\n\r\n    const addChild = (child) => {\r\n        children.add(child);\r\n        addToStack(child);\r\n\r\n        child.presence = hasMounted ? Presence.Entering : Presence.Present;\r\n    };\r\n\r\n    const removeChild = (child) => {\r\n        scheduleUpdate();\r\n        children.delete(child);\r\n        removeFromStack(child);\r\n    };\r\n\r\n    const addToStack = (child) => {\r\n        const stack = getStack(child);\r\n        stack?.add(child);\r\n    };\r\n\r\n    const removeFromStack = (child) => {\r\n        const stack = getStack(child);\r\n        stack?.remove(child);\r\n    };\r\n\r\n    /**\r\n     * Return a stack of animate children based on the provided layoutId.\r\n     * Will create a stack if none currently exists with that layoutId.\r\n     */\r\n    const getStack = (child) => {\r\n        const id = child.getLayoutId();\r\n        if (id === undefined) return;\r\n\r\n        // Create stack if it doesn't already exist\r\n        !stacks.has(id) && stacks.set(id, layoutStack());\r\n\r\n        return stacks.get(id);\r\n    };\r\n    let sc = writable(syncContext);\r\n\r\n    const setSyncContext = () => {\r\n        syncContext = { ...syncContext };\r\n        sc.set(syncContext);\r\n        //forced = !forced\r\n    };\r\n    //$: sc.set(syncContext)\r\n    setContext(SharedLayoutContext, sc);\r\n    setDomContext(\"SharedLayout\",isCustom,sc)\r\n\r\n    onMount(() => {\r\n        hasMounted = true;\r\n    });\r\n\r\n    //afterUpdate(()=>!forced && startLayoutAnimation())\r\n    //const falseForced = ()=>{forced=false;return true;}\r\n    //$: forced && renderScheduled && falseForced() && startLayoutAnimation()\r\n\r\n    $: if (renderScheduled) {\r\n        tick().then(() => {\r\n            startLayoutAnimation();\r\n        });\r\n    }\r\n\r\n    //afterUpdate(startLayoutAnimation)\r\n</script>\r\n\r\n<slot />\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport sync from 'framesync';\r\nimport { motionValue } from '.';\r\n\r\nexport const useCombineMotionValues = (values, combineValues) => {\r\n\r\n  let subscriptions = [];\r\n  let vals = values;\r\n\r\n  \r\n  const unsubscribe = ()=>{\r\n    subscriptions.forEach((unsubscribe) => unsubscribe())\r\n  }\r\n  const subscribe = () => {\r\n    subscriptions = vals.map((val) => val.onChange(handler))\r\n    updateValue();\r\n  }\r\n  const value = motionValue(combineValues(), () => {\r\n    unsubscribe()\r\n    subscribe()\r\n    return unsubscribe;\r\n  });\r\n\r\n  let updateValue = () => {\r\n    value.set(combineValues());\r\n  }\r\n\r\n  const handler = () => {\r\n    sync.update(updateValue, false, true);\r\n  }\r\n\r\n  value.reset = (_values, _combineValues) => {\r\n    vals=_values;\r\n    //cleanup and reset\r\n    unsubscribe()\r\n    updateValue = () => {\r\n      value.set(_combineValues())\r\n    }\r\n    subscribe()\r\n  }\r\n\r\n  return value;\r\n}\r\n//export { default as UseCombineMotionValues } from \"./UseCombineValues.svelte\";\r\n", "import { useCombineMotionValues } from \"./use-combine-values\"\r\n\r\n/**\r\n * Combine multiple motion values into a new one using a string template literal.\r\n *\r\n * ```jsx\r\n * import {\r\n *   motion,\r\n *   useSpring,\r\n *   useMotionValue,\r\n *   useMotionTemplate\r\n * } from \"framer-motion\"\r\n *\r\n * function Component() {\r\n *   const shadowX = useSpring(0)\r\n *   const shadowY = useMotionValue(0)\r\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\r\n *\r\n *   return <MotionDiv style={{ filter: shadow }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\n\r\nexport const useMotionTemplate = (fragments, ...values) => {\r\n    /**\r\n    * Create a function that will build a string from the latest motion values.\r\n    */\r\n    let numFragments = fragments.length;\r\n    const buildValue = () => {\r\n        let output = ``\r\n\r\n        for (let i = 0; i < numFragments; i++) {\r\n            output += fragments[i]\r\n            const value = values[i]\r\n            if (value) output += values[i].get()\r\n        }\r\n\r\n        return output\r\n    }\r\n    const value = useCombineMotionValues(values, buildValue);\r\n    value.resetInner = value.reset;\r\n\r\n    value.reset = (f, ...vs) => {\r\n        numFragments = f.length;\r\n        value.resetInner(vs,buildValue)\r\n    }\r\n\r\n    return value;\r\n}", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {fixed} from './fix-process-env';\r\nimport { interpolate } from 'popmotion';\r\n\r\nvar isCustomValueType = function (v) {\r\n    return typeof v === \"object\" && v.mix;\r\n};\r\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\r\nfunction transform() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var useImmediate = !Array.isArray(args[0]);\r\n    var argOffset = useImmediate ? 0 : -1;\r\n    var inputValue = args[0 + argOffset];\r\n    var inputRange = args[1 + argOffset];\r\n    var outputRange = args[2 + argOffset];\r\n    var options = args[3 + argOffset];\r\n    var interpolator = interpolate(inputRange, outputRange, Object.assign({ mixer: getMixer(outputRange[0]) }, options));\r\n    return useImmediate ? interpolator(inputValue) : interpolator;\r\n}\r\n\r\nexport { transform };\r\n", "import { transform } from \"../utils/transform\"\r\nimport { useCombineMotionValues } from \"./use-combine-values\"\r\n\r\nexport const useTransform = (\r\n    input,\r\n    inputRangeOrTransformer,\r\n    outputRange,\r\n    options\r\n) => {\r\n\r\n    let latest = [];\r\n\r\n    const update = (\r\n        input,\r\n        inputRangeOrTransformer,\r\n        outputRange,\r\n        options\r\n    ) => {\r\n        const transformer = typeof inputRangeOrTransformer === \"function\"\r\n            ? inputRangeOrTransformer\r\n            : transform(inputRangeOrTransformer, outputRange, options);\r\n        const values = Array.isArray(input) ? input : [input];\r\n        const _transformer = Array.isArray(input) ? transformer :\r\n            ([latest]) =>\r\n                transformer(latest);\r\n        return [values, () => {\r\n            latest.length = 0\r\n            const numValues = values.length\r\n            for (let i = 0; i < numValues; i++) {\r\n                latest[i] = values[i].get()\r\n            }\r\n\r\n            return _transformer(latest)\r\n        }]\r\n\r\n    }\r\n    const comb = useCombineMotionValues(...update(input,\r\n        inputRangeOrTransformer,\r\n        outputRange,\r\n        options));\r\n\r\n    comb.updateInner = comb.reset;\r\n\r\n    comb.reset = (\r\n        input,\r\n        inputRangeOrTransformer,\r\n        outputRange,\r\n        options\r\n    ) => comb.updateInner(\r\n        ...update(\r\n            input,\r\n            inputRangeOrTransformer,\r\n            outputRange,\r\n            options\r\n        )\r\n    )\r\n    return comb;\r\n}\r\n//export { default as UseTransform } from './UseTransform.svelte';\r\n", "/** \r\nbased on framer-motion@4.1.16,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { fixed } from '../utils/fix-process-env';\r\nimport { getContext } from \"svelte\"\r\nimport { MotionConfigContext } from \"../context/MotionConfigContext\"\r\nimport { get } from 'svelte/store';\r\nimport { useMotionValue } from \"./use-motion-value\";\r\nimport { isMotionValue } from \"./utils/is-motion-value\";\r\nimport { animate } from \"popmotion\"\r\n\r\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\r\nexport const useSpring = (source, config = {}, isCustom=false) => {\r\n\r\n    const mcc = getContext(MotionConfigContext) || MotionConfigContext(isCustom);\r\n\r\n    let activeSpringAnimation = null;\r\n\r\n    let value = useMotionValue(isMotionValue(source) ? source.get() : source);\r\n\r\n    let cleanup;\r\n    const update = (_source, _config) => {\r\n        value.attach((v, set) => {\r\n\r\n\r\n            const { isStatic } = get(mcc);\r\n\r\n            if (isStatic) {\r\n                return set(v);\r\n            }\r\n            if (activeSpringAnimation) {\r\n                activeSpringAnimation.stop();\r\n            }\r\n            activeSpringAnimation = animate({\r\n                from: value.get(),\r\n                to: v,\r\n                velocity: value.getVelocity(),\r\n                ..._config,\r\n                onUpdate: set,\r\n            })\r\n\r\n            return value.get();\r\n        })\r\n        cleanup?.()\r\n        return isMotionValue(_source) ?\r\n            _source.onChange(v => value.set(parseFloat(v))) :\r\n            undefined\r\n    }\r\n\r\n    update(source, config);\r\n\r\n    value.reset = update;\r\n    \r\n    return value;\r\n}\r\n\r\n//export { default as UseSpring } from './UseSpring.svelte';\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { motionValue } from '../index.js';\r\n\r\nfunction createScrollMotionValues(startStopNotifier) {\r\n    const hasListener = { x: false, y: false, xp: false, yp: false }\r\n    let stop\r\n    const jointNotifier = startStopNotifier ? (type) => ()=>{\r\n        if (!hasListener.x && !hasListener.y && !hasListener.xp && !hasListener.yp) {\r\n            stop = startStopNotifier();\r\n        }\r\n        hasListener[type] = true;\r\n        return () => {\r\n            hasListener[type] = false;\r\n            if (!hasListener.x && !hasListener.y && !hasListener.xp && !hasListener.yp) {\r\n                if (stop){\r\n                    stop.then(v=>v())\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    } : ()=>() => { }\r\n\r\n    const smvs = {\r\n        scrollX: motionValue(0,jointNotifier(\"x\")),\r\n        scrollY: motionValue(0,jointNotifier(\"y\")),\r\n        scrollXProgress: motionValue(0,jointNotifier(\"xp\")),\r\n        scrollYProgress: motionValue(0,jointNotifier(\"yp\")),\r\n    };\r\n\r\n    return smvs;\r\n}\r\nfunction setProgress(offset, maxOffset, value) {\r\n    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\r\n}\r\nfunction createScrollUpdater(values, getOffsets) {\r\n    var update = function () {\r\n        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\r\n        // Set absolute positions\r\n        values.scrollX.set(xOffset);\r\n        values.scrollY.set(yOffset);\r\n        // Set 0-1 progress\r\n        setProgress(xOffset, xMaxOffset, values.scrollXProgress);\r\n        setProgress(yOffset, yMaxOffset, values.scrollYProgress);\r\n    };\r\n    update();\r\n    return update;\r\n}\r\n\r\nexport { createScrollMotionValues, createScrollUpdater };\r\n", "/** \r\nbased on framer-motion@4.1.16,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {\r\n    createScrollMotionValues,\r\n    createScrollUpdater,\r\n} from \"./utils\"\r\nimport { addDomEvent } from \"../../events/use-dom-event\"\r\n\r\n\r\nconst getElementScrollOffsets = (element) => () => {\r\n    return {\r\n        xOffset: element.scrollLeft,\r\n        yOffset: element.scrollTop,\r\n        xMaxOffset: element.scrollWidth - element.offsetWidth,\r\n        yMaxOffset: element.scrollHeight - element.offsetHeight,\r\n    }\r\n}\r\n\r\nexport const useElementScroll = (ref) => {\r\n\r\n    const values = {}\r\n\r\n    const setScroll = async () => {\r\n        if (typeof window === \"undefined\") return ()=>{}\r\n\r\n        let times = 10\r\n        while ( (!ref || !ref.current) && !values.ref ){\r\n            if(times-- < 1){\r\n                return ()=>{};\r\n            };\r\n            \r\n            await new Promise(r=>setTimeout(()=>r(),200));\r\n        }\r\n        const element = (ref && ref.current) ? ref : values.ref;\r\n\r\n        const updateScrollValues = createScrollUpdater(\r\n            values,\r\n            getElementScrollOffsets(element)\r\n        )\r\n\r\n        const scrollListener = addDomEvent(\r\n            element,\r\n            \"scroll\",\r\n            updateScrollValues,\r\n            { passive: true }\r\n        )\r\n\r\n        const resizeListener = addDomEvent(\r\n            element,\r\n            \"resize\",\r\n            updateScrollValues\r\n        )\r\n        return ()=>{\r\n            scrollListener && scrollListener()\r\n            resizeListener && resizeListener()\r\n        }\r\n    }\r\n    Object.assign(values,createScrollMotionValues(setScroll));\r\n\r\n    return values;\r\n}\r\n\r\n//export { default as UseElementScroll } from './UseElementScroll.svelte';\r\n", "/** \r\nbased on framer-motion@4.1.16,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport {\r\n    createScrollMotionValues,\r\n    createScrollUpdater,\r\n} from \"./utils\"\r\nimport { addDomEvent } from \"../../events/use-dom-event\"\r\nimport { tick } from \"svelte\"\r\n\r\nlet viewportScrollValues\r\n\r\n\r\nfunction getViewportScrollOffsets() {\r\n    return {\r\n        xOffset: window.pageXOffset,\r\n        yOffset: window.pageYOffset,\r\n        xMaxOffset: document.body.clientWidth - window.innerWidth,\r\n        yMaxOffset: document.body.clientHeight - window.innerHeight,\r\n    }\r\n}\r\n\r\nlet hasListeners = false\r\n\r\nfunction addEventListeners() {\r\n    hasListeners = true\r\n    if (typeof window === \"undefined\") return\r\n\r\n    const updateScrollValues = createScrollUpdater(\r\n        viewportScrollValues,\r\n        getViewportScrollOffsets\r\n    )\r\n\r\n    addDomEvent(window, \"scroll\", updateScrollValues, { passive: true })\r\n    addDomEvent(window, \"resize\", updateScrollValues)\r\n}\r\n\r\n/**\r\n * Returns MotionValues that update when the viewport scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`\r\n * values as this breaks the browser's capability to accurately measure the page length.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <MotionDiv style={{ scaleX: scrollYProgress }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nexport function useViewportScroll() {\r\n    /**\r\n     * Lazy-initialise the viewport scroll values\r\n     */\r\n    if (!viewportScrollValues) {\r\n        viewportScrollValues = createScrollMotionValues()\r\n    }\r\n\r\n    tick().then(_=>{\r\n        !hasListeners && addEventListeners()\r\n    })\r\n    \r\n    return viewportScrollValues\r\n}\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { motionValue } from \"../value\";\r\nimport { derived } from \"svelte/store\";\r\n// Does this device prefer reduced motion? Returns `null` server-side.\r\nlet prefersReducedMotion;\r\n\r\nfunction initPrefersReducedMotion() {\r\n    prefersReducedMotion = motionValue(null);\r\n\r\n    if (typeof window === \"undefined\") return;\r\n\r\n    if (window.matchMedia) {\r\n        const motionMediaQuery = window.matchMedia(\r\n            \"(prefers-reduced-motion)\"\r\n        );\r\n\r\n        const setReducedMotionPreferences = () =>\r\n            prefersReducedMotion.set(motionMediaQuery.matches);\r\n\r\n        motionMediaQuery.addListener(setReducedMotionPreferences);\r\n\r\n        setReducedMotionPreferences();\r\n    } else {\r\n        prefersReducedMotion.set(false);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n* A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\r\n*\r\n* This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\r\n* `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\r\n*\r\n* It will actively respond to changes and re-render your components with the latest setting.\r\n*\r\n* ```jsx\r\n* export function Sidebar({ isOpen }) {\r\n*   const shouldReduceMotion = useReducedMotion()\r\n*   const closedX = shouldReduceMotion ? 0 : \"-100%\"\r\n*\r\n*   return (\r\n*     <MotionDiv animate={{\r\n*       opacity: isOpen ? 1 : 0,\r\n*       x: isOpen ? 0 : closedX\r\n*     }} />\r\n*   )\r\n* }\r\n* ```\r\n*\r\n* @return boolean\r\n*\r\n* @public\r\n*/\r\nexport const useReducedMotion = ()=>{\r\n    !prefersReducedMotion && initPrefersReducedMotion()\r\n\r\n    return derived(prefersReducedMotion,$v=>$v)    \r\n}\r\n", "<script>\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { onMount } from \"svelte\";\r\n\r\n\r\nimport { animationControls } from \"./animation-controls\"\r\n/**\r\n * Creates `AnimationControls`, which can be used to manually start, stop\r\n * and sequence animations on one or more components.\r\n *\r\n * The returned `AnimationControls` should be passed to the `animate` property\r\n * of the components you want to animate.\r\n *\r\n * These components can then be animated with the `start` method.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { Frame, useAnimation } from 'framer'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <Frame animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { motion, useAnimation } from 'framer-motion'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <MotionDiv animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @returns Animation controller with `start` and `stop` methods\r\n *\r\n * @public\r\n */\r\nlet controls = animationControls();\r\nonMount(controls.mount);\r\n\r\n</script>\r\n\r\n<slot {controls}/>\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\nimport { tick } from \"svelte\";\r\nimport { animationControls } from \"./animation-controls\"\r\n\r\n/**\r\n * Creates `AnimationControls`, which can be used to manually start, stop\r\n * and sequence animations on one or more components.\r\n *\r\n * The returned `AnimationControls` should be passed to the `animate` property\r\n * of the components you want to animate.\r\n *\r\n * These components can then be animated with the `start` method.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { Frame, useAnimation } from 'framer'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <Frame animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { motion, useAnimation } from 'framer-motion'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <MotionDiv animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @returns Animation controller with `start` and `stop` methods\r\n *\r\n * @public\r\n */\r\nexport const useAnimation = () =>{\r\n\r\n    const controls =  animationControls(()=>{\r\n\r\n        const cleanup = {}\r\n        tick().then(v => cleanup.clean = controls.mount());\r\n        return ()=>{\r\n            cleanup.clean?.();\r\n        }\r\n    });\r\n\r\n    return controls;\r\n}\r\n\r\n\r\n\r\nexport { default as UseAnimation } from \"./UseAnimation.svelte\";\r\n", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { Frame, useCycle } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <Frame\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <MotionDiv\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\r\n//export { default as UseCycle } from './UseCycle.svelte';\r\nimport { fixed } from './fix-process-env';\r\nimport { wrap } from \"popmotion\";\r\nimport { writable } from 'svelte/store';\r\n\r\nexport const useCycle = (...items) => {\r\n    let index = 0;\r\n    const x = writable(items[index])\r\n    const next = (i) => {\r\n        index = typeof i !== \"number\" ?\r\n            wrap(0, items.length, index + 1) :\r\n            i;\r\n        x.set(items[index])\r\n    }\r\n    x.next=next;\r\n    return x;\r\n}", "\r\n/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\n\r\n/**\r\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <Frame onTapStart={startDrag} />\r\n *     <Frame drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onPointerDown={startDrag} />\r\n *     <MotionDiv drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nexport const DragControls = /** @class */ (function () {\r\n    function DragControls() {\r\n        this.componentControls = new Set();\r\n    }\r\n    /**\r\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\r\n     *\r\n     * @internal\r\n     */\r\n    DragControls.prototype.subscribe = function (controls) {\r\n        var _this = this;\r\n        this.componentControls.add(controls);\r\n        return function () {\r\n            return _this.componentControls.delete(controls);\r\n        };\r\n    };\r\n    /**\r\n     * Start a drag gesture on every `motion` component that has this set of drag controls\r\n     * passed into it via the `dragControls` prop.\r\n     *\r\n     * ```jsx\r\n     * dragControls.start(e, {\r\n     *   snapToCursor: true\r\n     * })\r\n     * ```\r\n     *\r\n     * @param event - PointerEvent\r\n     * @param options - Options\r\n     *\r\n     * @public\r\n     */\r\n    DragControls.prototype.start = function (event, options) {\r\n        this.componentControls.forEach(function (controls) {\r\n            controls.start(event.nativeEvent || event, options);\r\n        });\r\n    };\r\n    DragControls.prototype.updateConstraints = function () {\r\n        this.componentControls.forEach(function (controls) {\r\n            controls.prepareBoundingBox();\r\n            controls.resolveDragConstraints();\r\n        });\r\n    };\r\n    return DragControls;\r\n})();\r\nconst createDragControls = function () {\r\n    return new DragControls();\r\n};\r\n\r\n/**\r\n* Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\r\n* and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\r\n* might want to initiate that dragging from a different component than the draggable one.\r\n*\r\n* By creating a `dragControls` using the `useDragControls` hook, we can pass this into\r\n* the draggable component's `dragControls` prop. It exposes a `start` method\r\n* that can start dragging from pointer events on other components.\r\n*\r\n* @library\r\n*\r\n* ```jsx\r\n* const dragControls = useDragControls()\r\n*\r\n* function startDrag(event) {\r\n*   dragControls.start(event, { snapToCursor: true })\r\n* }\r\n*\r\n* return (\r\n*   <>\r\n    *     <Frame onTapStart={startDrag} />\r\n*     <Frame drag=\"x\" dragControls={dragControls} />\r\n*   </>\r\n* )\r\n* ```\r\n*\r\n* @motion\r\n*\r\n* ```jsx\r\n* const dragControls = useDragControls()\r\n*\r\n* function startDrag(event) {\r\n*   dragControls.start(event, { snapToCursor: true })\r\n* }\r\n*\r\n* return (\r\n*   <>\r\n    *     <div onPointerDown={startDrag} />\r\n*     <MotionDiv drag=\"x\" dragControls={dragControls} />\r\n*   </>\r\n* )\r\n* ```\r\n*\r\n* @public\r\n*/\r\nexport const useDragControls = createDragControls", "/** \r\nbased on framer-motion@4.0.3,\r\nCopyright (c) 2018 Framer B.V.\r\n*/\r\nimport { useMotionValue } from \"./use-motion-value\"\r\n/**\r\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\r\n *\r\n * ```javascript\r\n * const x = useMotionValue(0)\r\n * const xVelocity = useVelocity(x)\r\n * const xAcceleration = useVelocity(xVelocity)\r\n * ```\r\n *\r\n * @public\r\n */\r\nexport const useVelocity = (value) => {\r\n    let val = value;\r\n    let cleanup;\r\n    \r\n    const velocity = useMotionValue(value.getVelocity(),()=>{\r\n        cleanup?.();\r\n        cleanup = val.velocityUpdateSubscribers.add((newVelocity) => {\r\n            velocity.set(newVelocity);\r\n        })\r\n        return ()=>{\r\n            cleanup?.()     \r\n        }\r\n    });\r\n\r\n    \r\n    const reset = (valu) => {\r\n        cleanup?.();\r\n        val = valu\r\n        cleanup = val.velocityUpdateSubscribers.add((newVelocity) => {\r\n            velocity.set(newVelocity);\r\n        })\r\n    }\r\n\r\n    velocity.reset = reset;\r\n\r\n    return velocity;\r\n}\r\n", "<script>\r\n    import Motion from \"../motion/MotionSSR.svelte\";\r\n    export let div = {};\r\n</script>\r\n\r\n<Motion {...$$restProps} let:motion={m} let:props>\r\n\t<div {...props} {...div} use:m><slot/></div>\r\n</Motion>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAI;AAAA,CACH,SAAUA,WAAU;AACjB,EAAAA,UAASA,UAAS,UAAU,IAAI,CAAC,IAAI;AACrC,EAAAA,UAASA,UAAS,SAAS,IAAI,CAAC,IAAI;AACpC,EAAAA,UAASA,UAAS,SAAS,IAAI,CAAC,IAAI;AACxC,GAAG,aAAa,WAAW,CAAC,EAAE;AAI9B,IAAIC;AAAA,CACH,SAAUA,mBAAkB;AACzB,EAAAA,kBAAiBA,kBAAiB,MAAM,IAAI,CAAC,IAAI;AACjD,EAAAA,kBAAiBA,kBAAiB,MAAM,IAAI,CAAC,IAAI;AACrD,GAAGA,sBAAqBA,oBAAmB,CAAC,EAAE;;;ACpB9C,IAAM,MAAM,MAAI;AACZ,MAAG;AAEC,QAAI,CAAC,QAAQ,KAAI;AACb,cAAQ,MAAI,CAAC;AAAA,IACjB;AACA,WAAO;AAAK;AAAA,EAChB,SAAO,GAAE;AAAA,EAAC;AAEV,MAAI,CAAC,UAAW,OAAO,WAAW,OAAO,QAAQ,KAAK;AAClD,WAAO;AAAA,EACX;AAEA,MAAI,CAAC,OAAO,SAAQ;AAChB,WAAO,UAAQ,CAAC;AAAA,EACpB;AACA,SAAO,QAAQ,MAAI,CAAC;AACpB,SAAO;AACX;AAEO,IAAM,QAAQ,IAAI;;;ACjBzB,SAAS,cAAc,KAAK,MAAM;AAC9B,MAAI,QAAQ,IAAI,MAAM,MAAM,IAAI,KAAK,IAAI;AAC7C;AACA,SAAS,WAAW,KAAK,MAAM;AAC3B,MAAI,QAAQ,IAAI,QAAQ,IAAI;AAC5B,UAAQ,MAAM,IAAI,OAAO,OAAO,CAAC;AACrC;;;ACJA,IAAI;AAAA;AAAA,GAAqC,WAAY;AACjD,aAASC,uBAAsB;AAC3B,WAAK,gBAAgB,CAAC;AAAA,IAC1B;AACA,IAAAA,qBAAoB,UAAU,MAAM,SAAU,SAAS;AACnD,UAAI,QAAQ;AACZ,oBAAc,KAAK,eAAe,OAAO;AACzC,aAAO,WAAY;AAAE,eAAO,WAAW,MAAM,eAAe,OAAO;AAAA,MAAG;AAAA,IAC1E;AACA,IAAAA,qBAAoB,UAAU,SAAS,SAAU,GAAG,GAAG,GAAG;AACtD,UAAI,mBAAmB,KAAK,cAAc;AAC1C,UAAI,CAAC;AACD;AACJ,UAAI,qBAAqB,GAAG;AAIxB,aAAK,cAAc,CAAC,EAAE,GAAG,GAAG,CAAC;AAAA,MACjC,OACK;AACD,iBAAS,IAAI,GAAG,IAAI,kBAAkB,KAAK;AAKvC,cAAI,UAAU,KAAK,cAAc,CAAC;AAClC,qBAAW,QAAQ,GAAG,GAAG,CAAC;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AACA,IAAAA,qBAAoB,UAAU,UAAU,WAAY;AAChD,aAAO,KAAK,cAAc;AAAA,IAC9B;AACA,IAAAA,qBAAoB,UAAU,QAAQ,WAAY;AAC9C,WAAK,cAAc,SAAS;AAAA,IAChC;AACA,WAAOA;AAAA,EACX,GAAE;AAAA;;;ACjCF,IAAI,UAAU,SAAU,OAAO;AAC3B,SAAO,CAAC,MAAM,WAAW,KAAK,CAAC;AACnC;AAMA,IAAI;AAAA;AAAA,GAA6B,WAAY;AASzC,aAASC,aAAYC,OAAM,mBAAmB;AAC1C,UAAI,QAAQ;AAMZ,WAAK,YAAY;AAMjB,WAAK,cAAc;AAMnB,WAAK,oBAAoB,IAAI,oBAAoB;AAMjD,WAAK,4BAA4B,IAAI,oBAAoB;AAMzD,WAAK,oBAAoB,IAAI,oBAAoB;AAQjD,WAAK,mBAAmB;AACxB,WAAK,kBAAkB,SAAU,GAAG,QAAQ;AACxC,YAAI,WAAW,QAAQ;AAAE,mBAAS;AAAA,QAAM;AACxC,cAAM,OAAO,MAAM;AACnB,cAAM,UAAU;AAEhB,YAAI,KAAK,aAAa,GAAGC,SAAQ,GAAG,OAAO,YAAY,GAAG;AAC1D,YAAI,MAAM,gBAAgB,WAAW;AACjC,gBAAM,YAAYA;AAClB,gBAAM,cAAc;AACpB,qBAAK,WAAW,MAAM,qBAAqB;AAAA,QAC/C;AAEA,YAAI,MAAM,SAAS,MAAM,SAAS;AAC9B,gBAAM,kBAAkB,OAAO,MAAM,OAAO;AAAA,QAChD;AAEA,YAAI,MAAM,0BAA0B,QAAQ,GAAG;AAC3C,gBAAM,0BAA0B,OAAO,MAAM,YAAY,CAAC;AAAA,QAC9D;AAEA,YAAI,QAAQ;AACR,gBAAM,kBAAkB,OAAO,MAAM,OAAO;AAAA,QAChD;AAAA,MACJ;AASA,WAAK,wBAAwB,WAAY;AAAE,eAAO,WAAK,WAAW,MAAM,aAAa;AAAA,MAAG;AAUxF,WAAK,gBAAgB,SAAU,IAAI;AAC/B,YAAI,YAAY,GAAG;AACnB,YAAI,cAAc,MAAM,aAAa;AACjC,gBAAM,OAAO,MAAM;AACnB,gBAAM,0BAA0B,OAAO,MAAM,YAAY,CAAC;AAAA,QAC9D;AAAA,MACJ;AACA,WAAK,cAAc;AACnB,WAAK,OAAO,KAAK,UAAUD;AAC3B,WAAK,mBAAmB,QAAQ,KAAK,OAAO;AAC5C,WAAK,iBAAiB,MAAM;AAAA,MAAE;AAC9B,WAAK,mBAAmB,MAAM;AAAA,MAAE;AAChC,UAAI,mBAAmB;AACnB,aAAK,iBAAiB,MAAM;AACxB,cAAI,KAAK,kBAAkB,QAAQ,IAAI,KAAK,0BAA0B,QAAQ,IAAI,KAAK,kBAAkB,QAAQ,MAAM,GAAG;AAEtH,kBAAM,QAAQ,kBAAkB;AAChC,iBAAK,mBAAmB,MAAM;AAAA,YAAE;AAChC,gBAAI,OAAO;AACP,mBAAK,mBAAmB,MAAM;AAC1B,oBAAI,KAAK,kBAAkB,QAAQ,IAAI,KAAK,0BAA0B,QAAQ,IAAI,KAAK,kBAAkB,QAAQ,MAAM,GAAG;AACtH,wBAAM;AAAA,gBACV;AAAA,cACJ;AAAA,YACJ;AAAA,UAEJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAmDA,IAAAD,aAAY,UAAU,WAAW,SAAU,cAAc;AACrD,WAAK,eAAe;AACpB,YAAM,QAAQ,KAAK,kBAAkB,IAAI,YAAY;AACrD,aAAO,MAAM;AACT,cAAM;AACN,aAAK,iBAAiB;AAAA,MAE1B;AAAA,IACJ;AAEA,IAAAA,aAAY,UAAU,YAAY,SAAU,cAAc;AACtD,aAAO,KAAK,SAAS,YAAY;AAAA,IACrC;AAEA,IAAAA,aAAY,UAAU,iBAAiB,WAAY;AAC/C,WAAK,kBAAkB,MAAM;AAC7B,WAAK,iBAAiB;AAAA,IAC1B;AASA,IAAAA,aAAY,UAAU,kBAAkB,SAAU,cAAc;AAC5D,WAAK,eAAe;AAEpB,mBAAa,KAAK,IAAI,CAAC;AACvB,YAAM,QAAQ,KAAK,kBAAkB,IAAI,YAAY;AACrD,aAAO,MAAM;AACT,cAAM;AACN,aAAK,iBAAiB;AAAA,MAC1B;AAAA,IACJ;AAMA,IAAAA,aAAY,UAAU,SAAS,SAAU,eAAe;AACpD,WAAK,gBAAgB;AAAA,IACzB;AAgBA,IAAAA,aAAY,UAAU,MAAM,SAAU,GAAG,QAAQ;AAC7C,UAAI,WAAW,QAAQ;AAAE,iBAAS;AAAA,MAAM;AACxC,UAAI,CAAC,UAAU,CAAC,KAAK,eAAe;AAChC,aAAK,gBAAgB,GAAG,MAAM;AAAA,MAClC,OACK;AACD,aAAK,cAAc,GAAG,KAAK,eAAe;AAAA,MAC9C;AAAA,IACJ;AAEA,IAAAA,aAAY,UAAU,SAAS,SAAU,GAAG;AACxC,WAAK,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC;AAAA,IAC1B;AAQA,IAAAA,aAAY,UAAU,MAAM,WAAY;AACpC,WAAK,eAAe;AACpB,YAAM,OAAO,KAAK;AAClB,WAAK,iBAAiB;AACtB,aAAO;AAAA,IACX;AAIA,IAAAA,aAAY,UAAU,cAAc,WAAY;AAC5C,aAAO,KAAK;AAAA,IAChB;AAQA,IAAAA,aAAY,UAAU,cAAc,WAAY;AAE5C,WAAK,eAAe;AACpB,YAAM,MAAM,KAAK;AAAA;AAAA,QAEb,kBAAkB,WAAW,KAAK,OAAO,IACrC,WAAW,KAAK,IAAI,GAAG,KAAK,SAAS;AAAA,UACvC;AACN,WAAK,iBAAiB;AACtB,aAAO;AAAA,IACX;AAaA,IAAAA,aAAY,UAAU,QAAQ,SAAU,WAAW;AAC/C,UAAI,QAAQ;AACZ,WAAK,KAAK;AACV,aAAO,IAAI,QAAQ,SAAU,SAAS;AAClC,cAAM,cAAc;AACpB,cAAM,gBAAgB,UAAU,OAAO;AAAA,MAC3C,CAAC,EAAE,KAAK,WAAY;AAAE,eAAO,MAAM,eAAe;AAAA,MAAG,CAAC;AAAA,IAC1D;AAMA,IAAAA,aAAY,UAAU,OAAO,WAAY;AACrC,UAAI,KAAK;AACL,aAAK,cAAc;AACvB,WAAK,eAAe;AAAA,IACxB;AAMA,IAAAA,aAAY,UAAU,cAAc,WAAY;AAC5C,aAAO,CAAC,CAAC,KAAK;AAAA,IAClB;AACA,IAAAA,aAAY,UAAU,iBAAiB,WAAY;AAC/C,WAAK,gBAAgB;AAAA,IACzB;AAUA,IAAAA,aAAY,UAAU,UAAU,WAAY;AACxC,WAAK,kBAAkB,MAAM;AAC7B,WAAK,kBAAkB,MAAM;AAC7B,WAAK,KAAK;AACV,WAAK,iBAAiB;AAAA,IAC1B;AACA,WAAOA;AAAA,EACX,GAAE;AAAA;AAIF,SAAS,YAAYC,OAAM,mBAAmB;AAC1C,SAAO,IAAI,YAAYA,OAAM,iBAAiB;AAClD;;;ACzWO,IAAM,gBAAgB,CAAC,MAAK,OAAO;AACtC,MAAI,CAAC,MAAM,CAAC,QAAO;AACf,WAAO;AAAA,EACX;AACA,MAAI,MAAM;AACV,SAAM,MAAM,IAAI,YAAW;AACvB,QAAI,IAAI,oBAAoB,IAAI,iBAAiB,IAAI,IAAI,GAAE;AACvD,aAAO,IAAI,iBAAiB,IAAI,IAAI;AAAA,IACxC;AAAA,EACJ;AACA,SAAO;AACX;AAEO,IAAM,gBAAgB,CAAC,MAAK,IAAG,UAAU;AAC5C,MAAI,MAAM,QAAO;AACb,QAAI,CAAC,GAAG,kBAAiB;AACrB,SAAG,mBAAmB,oBAAI,IAAI;AAAA,IAClC;AACA,OAAG,iBAAiB,IAAI,MAAK,KAAK;AAAA,EACtC;AACJ;;;ACbA,IAAI,sBAAsB,CAAC,MAAK,cAAc,gBAAe,CAAC,KAAG,SAAS;AAAA,EACtE,oBAAoB,SAAU,GAAG;AAAE,WAAO;AAAA,EAAG;AAAA,EAC7C,UAAU;AACd,CAAC;;;;ICNgB,yBAAsB,CAAI,aAAa,cAAc,mBAAkB,QAAQ,KAAG,SAAQ,CAAA,CAAA;IAC1F,+BAA4B,MAAS,SAAQ,CAAA,CAAA;IAE7C,yBAAsB,CAAI,aAAa;QAC1C,aACF,WAAW,sBAAsB,KAAK,uBAAuB,QAAQ;QAEnE,MAAM,uBAAsB;AAClC,aAAW,wBAAwB,GAAG;AACtC,gBAAc,mBAAmB,UAAU,GAAG;AAE9C,aAAW,8BAA8B,UAAU;AAEvD;oDAjBJ;;;MAqBe,WAAQ,KAAA,SAAA,YAAA,CAAA;AACnB,yBAAuB,SAAQ,CAAA;;;;;;;;;;;;;;;;;;ACd5B,IAAM,kBAAkB,MAAM;AAEjC,QAAM,yBAAyB,WAAW,sBAAsB;AAChE,QAAM,+BAA+B;AAAA,IACjC;AAAA,EACJ;AACA,QAAM,SAAS,CAAC,KAAK,UAAU;AAE3B,UAAM,MAAME,KAAI,sBAAsB;AAGtC,QAAI,QAAQ,CAAC,GAAG,MAAM;AAClB,QAAE,SAAS,IAAI;AAAA,IACnB,CAAC;AAAA,EACL;AAEA,QAAM,UAAU,MAAM;AAElB,IAAAA,KAAI,sBAAsB,EAAE,QAAQ,CAAC,MAAM;AACvC,QAAE,UAAU,IAAI;AAAA,IACpB,CAAC;AAAA,EACL;AAEA,+BAA6B;AAAA,IAAO,CAAC,MACjC,EAAE,OAAO;AAAA,MACL;AAAA,QACI;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAEA,SAAO;AAAA,IACH,QAAQ;AAAA,EACR;AACJ;;;;yCC3CJ;;;;;;MAae,qBAAkB,KAAA,SAAA,sBAAA,GAAG,MAAS,GACrC,WAAQ,KAAA,SAAA,YAAA,GAAG,MAAS,GACpB,aAAU,KAAA,SAAA,cAAA,GAAG,MAAS,GACtB,WAAQ,KAAA,SAAA,YAAA,GAAG,KAAK;QACd,MAAM,WAAW,mBAAmB,KAAK,oBAAoB,SAAQ,CAAA;MAIvE,SAAM,eAAA;OAAQC,KAAI,GAAG;;MAAQ,oBAAA,mBAAkB;MAAE,UAAA,SAAQ;MAAE,YAAA,WAAU;;;AAIzE,yBAAsB;MAgBlB,UAAU,SAAQ,IAAC,MAAM,CAAA;AAC7B,aAAW,qBAAqB,OAAO;AACvC,gBAAc,UAAS,SAAQ,GAAC,OAAO;QACjC,OAAI,MAAA,IAAS,MAAM;QACnB,iBAAiB,gBAAe;;;;UAvBnC,QAAM;WAAQ,KAAI;;UAAO,oBAAA,mBAAkB;UAAE,UAAA,SAAQ;UAAE,YAAA,WAAU;;;;;;QAchE,sBAAoB,cAAA,OAAA,IACb,MAAM,EAAC,YAAe,QAAQ,IAAA,IAC/B,MAAM,EAAC,WAAW,SAAQ,IAC1B,EAAE;;;AAQR,YAAQ,IAAI,KAAI,IAAC,oBAAoB,GAAA,IAAE,MAAM,EAAC,kBAAkB,CAAA;AAChE,mBAAe,OAAM;;;;;;;;;;;;;;;;;;;;;;AC5C7B;;;ACCA;;;ACKA,IAAI,wBAAwB,SAAU,SAAS;AAAE,SAAO,UAAU;AAAM;;;ACJxE;AAIA,IAAI,eAAe;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,IAAI,6BAA6B,SAAU,YAAY;AACnD,MAAI,MAAM,QAAQ,UAAU,GAAG;AAG3B,QAAI,KAAK,OAAO,YAAY,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC;AAC7E,WAAO,YAAY,IAAI,IAAI,IAAI,EAAE;AAAA,EACrC,WACS,OAAO,eAAe,UAAU;AAGrC,WAAO,aAAa,UAAU;AAAA,EAClC;AACA,SAAO;AACX;AACA,IAAI,gBAAgB,SAAU,MAAM;AAChC,SAAO,MAAM,QAAQ,IAAI,KAAK,OAAO,KAAK,CAAC,MAAM;AACrD;;;AC1BA,IAAI,eAAe,SAAU,KAAK,OAAO;AAErC,MAAI,QAAQ;AACR,WAAO;AAIX,MAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK;AAChD,WAAO;AACX,MAAI,OAAO,UAAU;AAAA,EACjB,QAAQ,KAAK,KAAK;AAAA,EAClB,CAAC,MAAM,WAAW,MAAM,GAC1B;AACE,WAAO;AAAA,EACX;AACA,SAAO;AACX;;;AC3BA,IAAI,oBAAoB,SAAU,GAAG;AACjC,SAAO,MAAM,QAAQ,CAAC;AAC1B;;;ACAA,IAAI,oBAAoB,WAAY;AAAE,SAAQ;AAAA,IAC1C,MAAM;AAAA,IACN,WAAW;AAAA,IACX,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,EACf;AAAI;AACJ,IAAI,yBAAyB,SAAU,IAAI;AAAE,SAAQ;AAAA,IACjD,MAAM;AAAA,IACN,WAAW;AAAA,IACX,SAAS,OAAO,IAAI,IAAI,KAAK,KAAK,GAAG,IAAI;AAAA,IACzC,WAAW;AAAA,IACX,WAAW;AAAA,EACf;AAAI;AACJ,IAAI,cAAc,WAAY;AAAE,SAAQ;AAAA,IACpC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,EACd;AAAI;AACJ,IAAI,YAAY,SAAU,QAAQ;AAAE,SAAQ;AAAA,IACxC,MAAM;AAAA,IACN,UAAU;AAAA,IACV;AAAA,EACJ;AAAI;AACJ,IAAI,qBAAqB;AAAA,EACrB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,OAAO;AAAA,EACP,SAAS;AACb;AACA,IAAI,uBAAuB,SAAU,UAAU,IAAI;AAC/C,MAAI;AACJ,MAAI,kBAAkB,EAAE,GAAG;AACvB,wBAAoB;AAAA,EACxB,OACK;AACD,wBACI,mBAAmB,QAAQ,KAAK,mBAAmB;AAAA,EAC3D;AACA,SAAO,OAAO,OAAO,EAAE,GAAO,GAAG,kBAAkB,EAAE,CAAC;AAC1D;;;AClDA,IAAI,MAAM,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,EAAE,WAAW,KAAK,MAAM,CAAC;;;ACC5E,IAAI,mBAAmB;AAAA;AAAA,EAEnB,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,mBAAmB;AAAA,EACnB,iBAAiB;AAAA,EACjB,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,qBAAqB;AAAA,EACrB,sBAAsB;AAAA,EACtB,yBAAyB;AAAA,EACzB,wBAAwB;AAAA;AAAA,EAExB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,MAAM;AAAA,EACN,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA;AAAA,EAEN,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,eAAe;AAAA,EACf,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,aAAa;AAAA,EACb,cAAc;AAAA,EACd,YAAY;AAAA;AAAA,EAEZ,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT;AAAA,EACA,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,aAAa;AAAA,EACb,sBAAsB;AAAA,EACtB,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA;AAAA,EAET,QAAQ;AAAA;AAAA,EAER,aAAa;AAAA,EACb,eAAe;AAAA,EACf,YAAY;AAChB;;;AC9DA,IAAI,oBAAoB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,gBAAgB,GAAG;AAAA;AAAA,EAEvE;AAAA,EAAc,iBAAiB;AAAA,EAAO,cAAc;AAAA,EAAO,MAAM;AAAA,EAAO,QAAQ;AAAA;AAAA,EAEhF,aAAa;AAAA,EAAO,gBAAgB;AAAA,EAAO,kBAAkB;AAAA,EAAO,mBAAmB;AAAA,EAAO,iBAAiB;AAAA,EAAO;AAAA,EAAgB,cAAc;AAAO,CAAC;AAIhK,IAAI,sBAAsB,SAAU,KAAK;AAAE,SAAO,kBAAkB,GAAG;AAAG;;;ACX1E,SAAS,kBAAkB,KAAK,OAAO;AACnC,MAAI;AACJ,MAAI,mBAAmB,oBAAoB,GAAG;AAC9C,MAAI,qBAAqB;AACrB,uBAAmB;AAEvB,UAAQ,KAAK,iBAAiB,uBAAuB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,kBAAkB,KAAK;AACzH;;;ATIA,SAAS,oBAAoB,IAAI;AAC7B,KAAG;AAAM,KAAG;AAAO,KAAG;AAAe,KAAG;AAAiB,KAAG;AAAkB,KAAG;AAAQ,KAAG;AAAY,KAAG;AAAa,KAAG;AAAM,MAAI,aAAa,OAAO,IAAI,CAAC,QAAQ,SAAS,iBAAiB,mBAAmB,oBAAoB,UAAU,cAAc,eAAe,MAAM,CAAC;AACrR,SAAO,CAAC,CAAC,OAAO,KAAK,UAAU,EAAE;AACrC;AACA,IAAI,sBAAsB;AAI1B,SAAS,oCAAoC,IAAI;AAC7C,MAAI,OAAO,GAAG,MAAM,QAAQ,GAAG,OAAO,OAAO,GAAG,MAAM,OAAO,GAAG,MAAM,OAAO,GAAG,MAAM,aAAa,OAAO,IAAI,CAAC,QAAQ,SAAS,QAAQ,QAAQ,MAAM,CAAC;AACvJ,MAAI,UAAU,OAAO,OAAO,CAAC,GAAG,UAAU;AAC1C,MAAI;AACA,YAAQ,QAAQ,IAAI;AAIxB,MAAI,WAAW;AACX,YAAQ,UAAU,IAAI,sBAAsB,WAAW,QAAQ;AACnE,MAAI,WAAW;AACX,YAAQ,cAAc,sBAAsB,WAAW,WAAW;AAItE,MAAI,MAAM;AACN,YAAQ,MAAM,IAAI,cAAc,IAAI,IAC9B,KAAK,IAAI,0BAA0B,IACnC,2BAA2B,IAAI;AAAA,EACzC;AAIA,MAAI,WAAW,SAAS;AACpB,YAAQ,OAAO;AAInB,MAAI,QAAQ,QAAQ,MAAM;AACtB,YAAQ,CAAC,qBAAqB,iGAAiG;AAC/H,0BAAsB;AACtB,QAAI,MAAM;AACN,cAAQ,aAAa;AAAA,IACzB,WACS,MAAM;AACX,cAAQ,aAAa;AAAA,IACzB,WACS,MAAM;AACX,cAAQ,aAAa;AAAA,IACzB;AACA,YAAQ,SAAS,QAAQ,QAAQ,QAAQ,WAAW;AAAA,EACxD;AAMA,MAAI,WAAW,SAAS;AACpB,YAAQ,OAAO;AACnB,SAAO;AACX;AAIA,SAAS,uBAAuB,YAAY,KAAK;AAC7C,MAAI;AACJ,MAAI,kBAAkB,mBAAmB,YAAY,GAAG,KAAK,CAAC;AAC9D,UAAQ,KAAK,gBAAgB,WAAW,QAAQ,OAAO,SAAS,KAAK;AACzE;AACA,SAAS,iBAAiB,SAAS;AAC/B,MAAI,MAAM,QAAQ,QAAQ,EAAE,KAAK,QAAQ,GAAG,CAAC,MAAM,MAAM;AACrD,YAAQ,KAAK,cAAc,CAAC,GAAG,OAAO,QAAQ,EAAE,CAAC;AACjD,YAAQ,GAAG,CAAC,IAAI,QAAQ;AAAA,EAC5B;AACA,SAAO;AACX;AACA,SAAS,6BAA6B,YAAY,SAAS,KAAK;AAC5D,MAAI;AACJ,MAAI,MAAM,QAAQ,QAAQ,EAAE,GAAG;AAC3B,KAAC,KAAK,WAAW,cAAc,QAAQ,OAAO,SAAS,KAAM,WAAW,WAAW;AAAA,EACvF;AACA,mBAAiB,OAAO;AAIxB,MAAI,CAAC,oBAAoB,UAAU,GAAG;AAClC,iBAAa,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,UAAU,GAAG,qBAAqB,KAAK,QAAQ,EAAE,CAAC;AAAA,EACnG;AACA,SAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,GAAG,oCAAoC,UAAU,CAAC;AACpG;AAIA,SAAS,aAAa,KAAK,OAAO,QAAQ,YAAY,YAAY;AAC9D,MAAI;AACJ,MAAI,kBAAkB,mBAAmB,YAAY,GAAG;AACxD,MAAI,UAAU,KAAK,gBAAgB,UAAU,QAAQ,OAAO,SAAS,KAAK,MAAM,IAAI;AACpF,MAAI,qBAAqB,aAAa,KAAK,MAAM;AACjD,MAAI,WAAW,UAAU,sBAAsB,OAAO,WAAW,UAAU;AAKvE,aAAS,kBAAkB,KAAK,MAAM;AAAA,EAC1C,WACS,OAAO,MAAM,KAAK,OAAO,WAAW,UAAU;AACnD,aAAS,YAAY,MAAM;AAAA,EAC/B,WACS,CAAC,MAAM,QAAQ,MAAM,KAC1B,OAAO,MAAM,KACb,OAAO,WAAW,UAAU;AAC5B,aAAS,YAAY,MAAM;AAAA,EAC/B;AACA,MAAI,qBAAqB,aAAa,KAAK,MAAM;AACjD,UAAQ,uBAAuB,oBAAoB,+BAA+B,MAAM,YAAa,SAAS,WAAa,SAAS,QAAS,SAAS,gEAAgE,SAAS,+BAA+B,SAAS,4BAA4B;AACnS,WAAS,QAAQ;AACb,QAAI,UAAU;AAAA,MACV,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,UAAU,MAAM,YAAY;AAAA,MAC5B;AAAA,MACA,UAAU,SAAU,GAAG;AAAE,eAAO,MAAM,IAAI,CAAC;AAAA,MAAG;AAAA,IAClD;AACA,WAAO,gBAAgB,SAAS,aAC5B,gBAAgB,SAAS,UACvB,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,GAAG,eAAe,CAAC,IAClE,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,6BAA6B,iBAAiB,SAAS,GAAG,CAAC,GAAG,EAAE,UAAU,SAAU,GAAG;AACzH,UAAIC;AACJ,cAAQ,SAAS,CAAC;AAClB,OAACA,MAAK,gBAAgB,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,iBAAiB,CAAC;AAAA,IACnG,GAAG,YAAY,WAAY;AACvB,UAAIA;AACJ,cAAQ,WAAW;AACnB,OAACA,MAAK,gBAAgB,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,eAAe;AAAA,IAClG,EAAE,CAAC,CAAC;AAAA,EAChB;AACA,WAASC,OAAM;AACX,QAAID;AACJ,UAAM,IAAI,MAAM;AAChB,eAAW;AACX,KAACA,MAAK,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,eAAe;AAChK,WAAO,EAAE,MAAM,WAAY;AAAA,IAAE,EAAE;AAAA,EACnC;AACA,SAAO,CAAC,sBACJ,CAAC,sBACD,gBAAgB,SAAS,QACvBC,OACA;AACV;AACA,SAAS,OAAO,OAAO;AACnB,SAAQ,UAAU,KACb,OAAO,UAAU,YACd,WAAW,KAAK,MAAM,KACtB,MAAM,QAAQ,GAAG,MAAM;AACnC;AACA,SAAS,YAAY,mBAAmB;AACpC,SAAO,OAAO,sBAAsB,WAC9B,IACA,kBAAkB,IAAI,iBAAiB;AACjD;AACA,SAAS,mBAAmB,YAAY,KAAK;AACzC,SAAO,WAAW,GAAG,KAAK,WAAW,SAAS,KAAK;AACvD;AAOA,SAAS,eAAe,KAAK,OAAO,QAAQ,YAAY;AACpD,MAAI,eAAe,QAAQ;AAAE,iBAAa,CAAC;AAAA,EAAG;AAC9C,SAAO,MAAM,MAAM,SAAU,YAAY;AACrC,QAAI;AACJ,QAAI;AACJ,QAAI,YAAY,aAAa,KAAK,OAAO,QAAQ,YAAY,UAAU;AACvE,QAAI,QAAQ,uBAAuB,YAAY,GAAG;AAClD,QAAI,QAAQ,WAAY;AAAE,aAAQ,WAAW,UAAU;AAAA,IAAI;AAC3D,QAAI,OAAO;AACP,mBAAa,WAAW,OAAO,sBAAsB,KAAK,CAAC;AAAA,IAC/D,OACK;AACD,YAAM;AAAA,IACV;AACA,WAAO,WAAY;AACf,mBAAa,UAAU;AACvB,mBAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,KAAK;AAAA,IACtE;AAAA,EACJ,CAAC;AACL;;;AUxMA;;;ACEA,IAAI,oBAAoB,SAAU,GAAG;AAAE,SAAO,iBAAiB,KAAK,CAAC;AAAG;;;ACDxE,IAAI,gBAAgB,SAAU,GAAG;AAC7B,SAAO,QAAQ,KAAK,OAAO,MAAM,YAAY,EAAE,OAAO,EAAE,OAAO;AACnE;AACA,IAAI,+BAA+B,SAAU,GAAG;AAE5C,SAAO,kBAAkB,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,KAAK,IAAI;AACzD;;;ACPA;;;ACEA,IAAI,gBAAgB,SAAU,GAAG;AAAE,SAAO,SAAU,MAAM;AAAE,WAAO,KAAK,KAAK,CAAC;AAAA,EAAG;AAAG;;;ACCpF,IAAI,OAAO;AAAA,EACP,MAAM,SAAU,GAAG;AAAE,WAAO,MAAM;AAAA,EAAQ;AAAA,EAC1C,OAAO,SAAU,GAAG;AAAE,WAAO;AAAA,EAAG;AACpC;;;ACCA,IAAI,sBAAsB,CAAC,QAAQ,IAAI,SAAS,SAAS,IAAI,IAAI,IAAI;AAIrE,IAAI,yBAAyB,SAAU,GAAG;AACtC,SAAO,oBAAoB,KAAK,cAAc,CAAC,CAAC;AACpD;;;AHLA,IAAI,aAAa,cAAc,cAAc,CAAC,GAAG,OAAO,mBAAmB,CAAC,GAAG,CAAC,OAAO,OAAO,CAAC;AAI/F,IAAI,gBAAgB,SAAU,GAAG;AAAE,SAAO,WAAW,KAAK,cAAc,CAAC,CAAC;AAAG;;;AIV7E,SAAS,gBAAgB,GAAG;AACxB,SAAO,MAAM,QAAQ,CAAC;AAC1B;AAIA,SAAS,eAAe,GAAG;AACvB,SAAO,OAAO,MAAM,YAAY,gBAAgB,CAAC;AACrD;AAIA,SAAS,WAAWC,gBAAe;AAC/B,MAAI,UAAU,CAAC;AACf,EAAAA,eAAc,aAAa,SAAU,OAAO,KAAK;AAAE,WAAQ,QAAQ,GAAG,IAAI,MAAM,IAAI;AAAA,EAAI,CAAC;AACzF,SAAO;AACX;AAIA,SAAS,YAAYA,gBAAe;AAChC,MAAI,WAAW,CAAC;AAChB,EAAAA,eAAc,aAAa,SAAU,OAAO,KAAK;AAAE,WAAQ,SAAS,GAAG,IAAI,MAAM,YAAY;AAAA,EAAI,CAAC;AAClG,SAAO;AACX;AACA,SAAS,wBAAwB,OAAO,YAAY,QAAQ,eAAe,iBAAiB;AACxF,MAAI;AACJ,MAAI,kBAAkB,QAAQ;AAAE,oBAAgB,CAAC;AAAA,EAAG;AACpD,MAAI,oBAAoB,QAAQ;AAAE,sBAAkB,CAAC;AAAA,EAAG;AACxD,MAAI,OAAO,eAAe,UAAU;AAChC,kBAAc,KAAK,MAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,GAAG,UAAU;AAAA,EACzF;AACA,SAAO,OAAO,eAAe,aACvB,WAAW,WAAW,QAAQ,WAAW,SAAS,SAAS,MAAM,QAAQ,eAAe,eAAe,IACvG;AACV;AACA,SAAS,eAAeA,gBAAe,YAAY,QAAQ;AACvD,MAAI,QAAQA,eAAc,SAAS;AACnC,SAAO,wBAAwB,OAAO,YAAY,WAAW,QAAQ,WAAW,SAAS,SAAS,MAAM,QAAQ,WAAWA,cAAa,GAAG,YAAYA,cAAa,CAAC;AACzK;AACA,SAAS,2BAA2B,OAAO;AACvC,MAAI;AACJ,SAAQ,SAAS,KAAK,MAAM,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,WAAW,cACpF,eAAe,MAAM,OAAO,KAC5B,eAAe,MAAM,OAAO,KAC5B,eAAe,MAAM,UAAU,KAC/B,eAAe,MAAM,SAAS,KAC9B,eAAe,MAAM,QAAQ,KAC7B,eAAe,MAAM,UAAU,KAC/B,eAAe,MAAM,IAAI;AACjC;AACA,SAAS,mBAAmB,OAAO;AAC/B,SAAO,QAAQ,2BAA2B,KAAK,KAAK,MAAM,QAAQ;AACtE;;;AP1CA,SAAS,eAAeC,gBAAe,KAAK,OAAO;AAC/C,MAAIA,eAAc,SAAS,GAAG,GAAG;AAC7B,IAAAA,eAAc,SAAS,GAAG,EAAE,IAAI,KAAK;AAAA,EACzC,OACK;AACD,IAAAA,eAAc,SAAS,KAAK,YAAY,KAAK,CAAC;AAAA,EAClD;AACJ;AACA,SAAS,UAAUA,gBAAe,YAAY;AAC1C,MAAI,WAAW,eAAeA,gBAAe,UAAU;AACvD,MAAI,KAAK,WACHA,eAAc,qBAAqB,UAAU,KAAK,IAClD,CAAC,GAAG,KAAK,GAAG,eAAe,gBAAgB,OAAO,SAAS,CAAC,IAAI;AAAI,KAAG;AAAY,MAAI,SAAS,OAAO,IAAI,CAAC,iBAAiB,YAAY,CAAC;AAChJ,WAAS,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,aAAa;AAC/D,WAAS,OAAO,QAAQ;AACpB,QAAI,QAAQ,6BAA6B,OAAO,GAAG,CAAC;AACpD,mBAAeA,gBAAe,KAAK,KAAK;AAAA,EAC5C;AACJ;AACA,SAAS,YAAYA,gBAAe,eAAe;AAC/C,MAAI,iBAAiB,cAAc,CAAC,GAAG,OAAO,aAAa,CAAC,EAAE,QAAQ;AACtE,iBAAe,QAAQ,SAAU,KAAK;AAClC,QAAI;AACJ,QAAI,UAAUA,eAAc,WAAW,GAAG;AAC1C,eAAW,UAAUA,gBAAe,OAAO;AAC3C,KAAC,KAAKA,eAAc,qBAAqB,QAAQ,OAAO,SAAS,SAAS,GAAG,QAAQ,SAAUC,QAAO;AAClG,kBAAYA,QAAO,aAAa;AAAA,IACpC,CAAC;AAAA,EACL,CAAC;AACL;AACA,SAAS,UAAUD,gBAAe,YAAY;AAC1C,MAAI,MAAM,QAAQ,UAAU,GAAG;AAC3B,WAAO,YAAYA,gBAAe,UAAU;AAAA,EAChD,WACS,OAAO,eAAe,UAAU;AACrC,WAAO,YAAYA,gBAAe,CAAC,UAAU,CAAC;AAAA,EAClD,OACK;AACD,cAAUA,gBAAe,UAAU;AAAA,EACvC;AACJ;AACA,SAAS,wBAAwBA,gBAAe,QAAQ,QAAQ;AAC5D,MAAI,IAAI,IAAI;AACZ,MAAI;AACJ,MAAI,eAAe,OAAO,KAAK,MAAM,EAAE,OAAO,SAAUE,MAAK;AAAE,WAAO,CAACF,eAAc,SAASE,IAAG;AAAA,EAAG,CAAC;AACrG,MAAI,eAAe,aAAa;AAChC,MAAI,CAAC;AACD;AACJ,WAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACnC,QAAI,MAAM,aAAa,CAAC;AACxB,QAAI,cAAc,OAAO,GAAG;AAC5B,QAAI,QAAQ;AAKZ,QAAI,MAAM,QAAQ,WAAW,GAAG;AAC5B,cAAQ,YAAY,CAAC;AAAA,IACzB;AAMA,QAAI,UAAU,MAAM;AAChB,eAAS,MAAM,KAAK,OAAO,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAKF,eAAc,UAAU,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAK,OAAO,GAAG;AAAA,IAC/I;AAKA,QAAI,UAAU,UAAa,UAAU;AACjC;AACJ,QAAI,OAAO,UAAU,YAAY,kBAAkB,KAAK,GAAG;AAEvD,cAAQ,WAAW,KAAK;AAAA,IAC5B,WACS,CAAC,cAAc,KAAK,KAAK,QAAQ,KAAK,WAAW,GAAG;AACzD,cAAQ,kBAAkB,KAAK,WAAW;AAAA,IAC9C;AACA,IAAAA,eAAc,SAAS,KAAK,YAAY,KAAK,CAAC;AAC9C,KAAC,MAAM,KAAK,QAAQ,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAM,GAAG,GAAG,IAAI;AACtE,IAAAA,eAAc,cAAc,KAAK,KAAK;AAAA,EAC1C;AACJ;AACA,SAAS,wBAAwB,KAAK,YAAY;AAC9C,MAAI,CAAC;AACD;AACJ,MAAI,kBAAkB,WAAW,GAAG,KAAK,WAAW,SAAS,KAAK;AAClE,SAAO,gBAAgB;AAC3B;AACA,SAAS,UAAU,QAAQ,YAAYA,gBAAe;AAClD,MAAI,IAAI;AACR,MAAI,SAAS,CAAC;AACd,WAAS,OAAO,QAAQ;AACpB,WAAO,GAAG,KACL,KAAK,wBAAwB,KAAK,UAAU,OAAO,QAAQ,OAAO,SAAS,MAAM,KAAKA,eAAc,SAAS,GAAG,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAI;AAAA,EACxK;AACA,SAAO;AACX;;;AXzGA,SAAS,qBAAqBG,gBAAe,YAAY,SAAS;AAC9D,MAAI,YAAY,QAAQ;AAAE,cAAU,CAAC;AAAA,EAAG;AACxC,EAAAA,eAAc,qBAAqB;AACnC,MAAI;AACJ,MAAI,MAAM,QAAQ,UAAU,GAAG;AAC3B,QAAIC,cAAa,WAAW,IAAI,SAAU,SAAS;AAC/C,aAAO,eAAeD,gBAAe,SAAS,OAAO;AAAA,IACzD,CAAC;AACD,gBAAY,QAAQ,IAAIC,WAAU;AAAA,EACtC,WACS,OAAO,eAAe,UAAU;AACrC,gBAAY,eAAeD,gBAAe,YAAY,OAAO;AAAA,EACjE,OACK;AACD,QAAI,qBAAqB,OAAO,eAAe,aACzC,eAAeA,gBAAe,YAAY,QAAQ,MAAM,IACxD;AACN,gBAAY,cAAcA,gBAAe,oBAAoB,OAAO;AAAA,EACxE;AACA,SAAO,UAAU,KAAK,WAAY;AAC9B,WAAOA,eAAc,wBAAwB,UAAU;AAAA,EAC3D,CAAC;AACL;AACA,SAAS,eAAeA,gBAAe,SAAS,SAAS;AACrD,MAAI;AACJ,MAAI,YAAY,QAAQ;AAAE,cAAU,CAAC;AAAA,EAAG;AACxC,MAAI,WAAW,eAAeA,gBAAe,SAAS,QAAQ,MAAM;AACpE,MAAI,MAAM,YAAY,CAAC,GAAG,YAAY,aAAa,OAAO,SAASA,eAAc,qBAAqB,KAAK,CAAC,IAAI;AAChH,MAAI,QAAQ,oBAAoB;AAC5B,iBAAa,QAAQ;AAAA,EACzB;AAKA,MAAIE,gBAAe,WACb,WAAY;AAAE,WAAO,cAAcF,gBAAe,UAAU,OAAO;AAAA,EAAG,IACtE,WAAY;AAAE,WAAO,QAAQ,QAAQ;AAAA,EAAG;AAK9C,MAAI,uBAAuB,KAAKA,eAAc,qBAAqB,QAAQ,OAAO,SAAS,SAAS,GAAG,QACjG,SAAU,cAAc;AACtB,QAAI,iBAAiB,QAAQ;AAAE,qBAAe;AAAA,IAAG;AACjD,QAAIG,MAAK,WAAW,eAAe,gBAAgBA,QAAO,SAAS,IAAIA,KAAI,kBAAkB,WAAW,iBAAiB,mBAAmB,WAAW;AACvJ,WAAO,gBAAgBH,gBAAe,SAAS,gBAAgB,cAAc,iBAAiB,kBAAkB,OAAO;AAAA,EAC3H,IACE,WAAY;AAAE,WAAO,QAAQ,QAAQ;AAAA,EAAG;AAK9C,MAAI,OAAO,WAAW;AACtB,MAAI,MAAM;AACN,QAAI,KAAK,OAAO,SAAS,mBACnB,CAACE,eAAc,kBAAkB,IACjC,CAAC,oBAAoBA,aAAY,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC;AACxE,WAAO,MAAM,EAAE,KAAK,IAAI;AAAA,EAC5B,OACK;AACD,WAAO,QAAQ,IAAI,CAACA,cAAa,GAAG,mBAAmB,QAAQ,KAAK,CAAC,CAAC;AAAA,EAC1E;AACJ;AAIA,SAAS,cAAcF,gBAAe,YAAY,IAAI;AAClD,MAAI;AACJ,MAAI,KAAK,OAAO,SAAS,CAAC,IAAI,IAAI,KAAK,GAAG,OAAO,QAAQ,OAAO,SAAS,IAAI,IAAI,qBAAqB,GAAG,oBAAoB,OAAO,GAAG;AACvI,MAAI,KAAKA,eAAc,qBAAqB,UAAU,GAAG,KAAK,GAAG,YAAY,aAAa,OAAO,SAASA,eAAc,qBAAqB,IAAI,IAAI,gBAAgB,GAAG,eAAe,SAAS,OAAO,IAAI,CAAC,cAAc,eAAe,CAAC;AAC1O,MAAI;AACA,iBAAa;AACjB,MAAIC,cAAa,CAAC;AAClB,MAAI,qBAAqB,UAAU,KAAKD,eAAc,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG,SAAS,EAAE,IAAI;AAC7H,WAAS,OAAO,QAAQ;AACpB,QAAI,QAAQA,eAAc,SAAS,GAAG;AACtC,QAAI,cAAc,OAAO,GAAG;AAC5B,QAAI,CAAC,SACD,gBAAgB,UACf,sBACG,qBAAqB,oBAAoB,GAAG,GAAI;AACpD;AAAA,IACJ;AACA,QAAI,YAAY,eAAe,KAAK,OAAO,aAAa,OAAO,OAAO,EAAE,MAAa,GAAG,UAAU,CAAC;AACnG,IAAAC,YAAW,KAAK,SAAS;AAAA,EAC7B;AACA,SAAO,QAAQ,IAAIA,WAAU,EAAE,KAAK,WAAY;AAC5C,qBAAiB,UAAUD,gBAAe,aAAa;AAAA,EAC3D,CAAC;AACL;AACA,SAAS,gBAAgBA,gBAAe,SAAS,eAAe,iBAAiB,kBAAkB,SAAS;AACxG,MAAI,kBAAkB,QAAQ;AAAE,oBAAgB;AAAA,EAAG;AACnD,MAAI,oBAAoB,QAAQ;AAAE,sBAAkB;AAAA,EAAG;AACvD,MAAI,qBAAqB,QAAQ;AAAE,uBAAmB;AAAA,EAAG;AACzD,MAAIC,cAAa,CAAC;AAClB,MAAI,sBAAsBD,eAAc,gBAAgB,OAAO,KAAK;AACpE,MAAI,0BAA0B,qBAAqB,IAC7C,SAAU,GAAG;AACX,QAAI,MAAM,QAAQ;AAAE,UAAI;AAAA,IAAG;AAC3B,WAAO,IAAI;AAAA,EACf,IACE,SAAU,GAAG;AACX,QAAI,MAAM,QAAQ;AAAE,UAAI;AAAA,IAAG;AAC3B,WAAO,qBAAqB,IAAI;AAAA,EACpC;AACJ,QAAM,KAAKA,eAAc,eAAe,EACnC,KAAK,eAAe,EACpB,QAAQ,SAAUI,QAAO,GAAG;AAC7B,IAAAH,YAAW,KAAK,eAAeG,QAAO,SAAS,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,OAAO,gBAAgB,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,WAAY;AAAE,aAAOA,OAAM,wBAAwB,OAAO;AAAA,IAAG,CAAC,CAAC;AAAA,EACzN,CAAC;AACD,SAAO,QAAQ,IAAIH,WAAU;AACjC;AACA,SAAS,cAAcD,gBAAe;AAClC,EAAAA,eAAc,aAAa,SAAU,OAAO;AAAE,WAAO,MAAM,KAAK;AAAA,EAAG,CAAC;AACxE;AACA,SAAS,gBAAgB,GAAG,GAAG;AAC3B,SAAO,EAAE,iBAAiB,CAAC;AAC/B;AAOA,SAAS,qBAAqB,IAAI,KAAK;AAEnC,MAAI,gBAAgB,GAAG,eAAe,iBAAiB,GAAG;AAC1D,MAAI,cAAc,cAAc,eAAe,GAAG,KAAK,eAAe,GAAG,MAAM;AAC/E,iBAAe,GAAG,IAAI;AACtB,SAAO;AACX;;;AmB1IA;AAQA,SAAS,kBAAkB,mBAAmB;AAI1C,MAAI,aAAa;AAKjB,MAAI,oBAAoB,CAAC;AAIzB,MAAI,cAAc,oBAAI,IAAI;AAC1B,MAAI;AACJ,MAAI,WAAW;AAAA,IACX,WAAW,SAAUK,gBAAe;AAChC,UAAI,YAAY,SAAS,GAAE;AACvB,2BAAmB,oBAAoB;AAAA,MAC3C;AACA,kBAAY,IAAIA,cAAa;AAC7B,aAAO,WAAY;AACf,oBAAY,OAAOA,cAAa;AAChC,YAAI,YAAY,SAAO,GAAE;AACrB,6BAAmB;AAAA,QACvB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,OAAO,SAAU,YAAY,oBAAoB;AAO7C,UAAI,YAAY;AACZ,YAAI,eAAe,CAAC;AACpB,oBAAY,QAAQ,SAAUA,gBAAe;AACzC,uBAAa,KAAK,qBAAqBA,gBAAe,YAAY;AAAA,YAC9D;AAAA,UACJ,CAAC,CAAC;AAAA,QACN,CAAC;AACD,eAAO,QAAQ,IAAI,YAAY;AAAA,MACnC,OACK;AACD,eAAO,IAAI,QAAQ,SAAU,SAAS;AAClC,4BAAkB,KAAK;AAAA,YACnB,WAAW,CAAC,YAAY,kBAAkB;AAAA,YAC1C;AAAA,UACJ,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,IACA,KAAK,SAAU,YAAY;AAEvB,aAAO,YAAY,QAAQ,SAAUA,gBAAe;AAChD,kBAAUA,gBAAe,UAAU;AAAA,MACvC,CAAC;AAAA,IACL;AAAA,IACA,MAAM,WAAY;AACd,kBAAY,QAAQ,SAAUA,gBAAe;AACzC,sBAAcA,cAAa;AAAA,MAC/B,CAAC;AAAA,IACL;AAAA,IACA,OAAO,WAAY;AACf,mBAAa;AACb,wBAAkB,QAAQ,SAAU,IAAI;AACpC,YAAI,YAAY,GAAG,WAAW,UAAU,GAAG;AAC3C,iBAAS,MAAM,MAAM,UAAU,cAAc,CAAC,GAAG,OAAO,SAAS,CAAC,CAAC,EAAE,KAAK,OAAO;AAAA,MACrF,CAAC;AACD,aAAO,WAAY;AACf,qBAAa;AACb,iBAAS,KAAK;AAAA,MAClB;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;;;ACtFA,IAAI,uBAAuB,CAAC;AAI5B,SAAS,mBAAmB,YAAY;AACpC,WAAS,OAAO,YAAY;AACxB,yBAAqB,GAAG,IAAI,WAAW,GAAG;AAAA,EAC9C;AACJ;;;ACPA;;;ACAA,SAAS,SAAS,SAAS;AACvB,SAAO,CAAC,QAAQ,GAAG,GAAG,QAAQ,GAAG,CAAC;AACtC;;;ACHA,SAAS,KAAK,KAAK;AACf,SAAO;AACX;;;ACKA,SAAS,4BAA4B,IAAI;AACrC,MAAI,MAAM,GAAG,KAAK,OAAO,GAAG,MAAM,QAAQ,GAAG,OAAO,SAAS,GAAG;AAChE,SAAO;AAAA,IACH,GAAG,EAAE,KAAK,MAAM,KAAK,MAAM;AAAA,IAC3B,GAAG,EAAE,KAAK,KAAK,KAAK,OAAO;AAAA,EAC/B;AACJ;AACA,SAAS,4BAA4B,IAAI;AACrC,MAAI,IAAI,GAAG,GAAG,IAAI,GAAG;AACrB,SAAO;AAAA,IACH,KAAK,EAAE;AAAA,IACP,QAAQ,EAAE;AAAA,IACV,MAAM,EAAE;AAAA,IACR,OAAO,EAAE;AAAA,EACb;AACJ;AAMA,SAAS,qBAAqB,IAAIC,iBAAgB;AAC9C,MAAI,MAAM,GAAG,KAAK,OAAO,GAAG,MAAM,SAAS,GAAG,QAAQ,QAAQ,GAAG;AACjE,MAAIA,oBAAmB,QAAQ;AAAE,IAAAA,kBAAiB;AAAA,EAAM;AACxD,MAAI,UAAUA,gBAAe,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;AAChD,MAAI,cAAcA,gBAAe,EAAE,GAAG,OAAO,GAAG,OAAO,CAAC;AACxD,SAAO;AAAA,IACH,KAAK,QAAQ;AAAA,IACb,MAAM,QAAQ;AAAA,IACd,QAAQ,YAAY;AAAA,IACpB,OAAO,YAAY;AAAA,EACvB;AACJ;AAIA,SAAS,UAAU;AACf,SAAO,EAAE,GAAG,EAAE,KAAK,GAAG,KAAK,EAAE,GAAG,GAAG,EAAE,KAAK,GAAG,KAAK,EAAE,EAAE;AAC1D;AACA,SAAS,YAAY,KAAK;AACtB,SAAO;AAAA,IACH,GAAG,OAAO,OAAO,CAAC,GAAG,IAAI,CAAC;AAAA,IAC1B,GAAG,OAAO,OAAO,CAAC,GAAG,IAAI,CAAC;AAAA,EAC9B;AACJ;AAIA,IAAI,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,aAAa;AACjB;AACA,SAAS,QAAQ;AACb,SAAO;AAAA,IACH,GAAG,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,IAC9B,GAAG,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,EAClC;AACJ;;;ACjEA;;;ACDA,SAAS,YAAYC,gBAAe;AAChC,MAAI,KAAKA,eAAc,SAAS,GAAGC,QAAO,GAAG,MAAM,SAAS,GAAG;AAC/D,SAAOA,SAAQ,CAAC;AACpB;;;ADOA,SAAS,UAAU,MAAM,YAAY;AACjC,OAAK,MAAM,WAAW;AACtB,OAAK,MAAM,WAAW;AAC1B;AAMA,SAAS,SAAS,KAAK,WAAW;AAC9B,YAAU,IAAI,GAAG,UAAU,CAAC;AAC5B,YAAU,IAAI,GAAG,UAAU,CAAC;AAChC;AAIA,SAAS,WAAW,OAAOC,QAAO,aAAa;AAC3C,MAAI,qBAAqB,QAAQ;AACjC,MAAI,SAASA,SAAQ;AACrB,SAAO,cAAc;AACzB;AAIA,SAAS,gBAAgB,OAAO,WAAWA,QAAO,aAAa,UAAU;AACrE,MAAI,aAAa,QAAW;AACxB,YAAQ,WAAW,OAAO,UAAU,WAAW;AAAA,EACnD;AACA,SAAO,WAAW,OAAOA,QAAO,WAAW,IAAI;AACnD;AAIA,SAAS,eAAe,MAAM,WAAWA,QAAO,aAAa,UAAU;AACnE,MAAI,cAAc,QAAQ;AAAE,gBAAY;AAAA,EAAG;AAC3C,MAAIA,WAAU,QAAQ;AAAE,IAAAA,SAAQ;AAAA,EAAG;AACnC,OAAK,MAAM,gBAAgB,KAAK,KAAK,WAAWA,QAAO,aAAa,QAAQ;AAC5E,OAAK,MAAM,gBAAgB,KAAK,KAAK,WAAWA,QAAO,aAAa,QAAQ;AAChF;AAIA,SAAS,cAAc,KAAK,IAAI;AAC5B,MAAI,IAAI,GAAG,GAAG,IAAI,GAAG;AACrB,iBAAe,IAAI,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW;AACzD,iBAAe,IAAI,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW;AAC7D;AAMA,SAAS,oBAAoB,OAAO,MAAM,YAAY,IAAI;AACtD,MAAI,KAAK,OAAO,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC;AAEvE,QAAM,MAAM,KAAK;AACjB,QAAM,MAAM,KAAK;AACjB,MAAI,aAAa,WAAW,SAAS,MAAM,SAAY,WAAW,SAAS,IAAI;AAC/E,MAAI,cAAc,IAAI,KAAK,KAAK,KAAK,KAAK,UAAU;AAEpD,iBAAe,OAAO,WAAW,GAAG,GAAG,WAAW,QAAQ,GAAG,aAAa,WAAW,KAAK;AAC9F;AAIA,IAAI,QAAQ,CAAC,KAAK,UAAU,SAAS;AACrC,IAAI,QAAQ,CAAC,KAAK,UAAU,SAAS;AAIrC,SAAS,mBAAmB,UAAU,KAAK,YAAY;AACnD,sBAAoB,SAAS,GAAG,IAAI,GAAG,YAAY,KAAK;AACxD,sBAAoB,SAAS,GAAG,IAAI,GAAG,YAAY,KAAK;AAC5D;AAIA,SAAS,iBAAiB,OAAO,WAAWA,QAAO,aAAa,UAAU;AACtE,WAAS;AACT,UAAQ,WAAW,OAAO,IAAIA,QAAO,WAAW;AAChD,MAAI,aAAa,QAAW;AACxB,YAAQ,WAAW,OAAO,IAAI,UAAU,WAAW;AAAA,EACvD;AACA,SAAO;AACX;AAIA,SAAS,gBAAgB,MAAM,WAAWA,QAAO,QAAQ,UAAU;AAC/D,MAAI,cAAc,QAAQ;AAAE,gBAAY;AAAA,EAAG;AAC3C,MAAIA,WAAU,QAAQ;AAAE,IAAAA,SAAQ;AAAA,EAAG;AACnC,MAAI,WAAW,QAAQ;AAAE,aAAS;AAAA,EAAK;AACvC,MAAI,cAAc,IAAI,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI;AACpD,OAAK,MAAM,iBAAiB,KAAK,KAAK,WAAWA,QAAO,aAAa,QAAQ;AAC7E,OAAK,MAAM,iBAAiB,KAAK,KAAK,WAAWA,QAAO,aAAa,QAAQ;AACjF;AAKA,SAAS,qBAAqB,MAAM,YAAY,IAAI;AAChD,MAAI,KAAK,OAAO,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC;AACvE,kBAAgB,MAAM,WAAW,GAAG,GAAG,WAAW,QAAQ,GAAG,WAAW,SAAS,GAAG,WAAW,KAAK;AACxG;AAKA,SAAS,oBAAoB,KAAK,YAAY;AAC1C,uBAAqB,IAAI,GAAG,YAAY,KAAK;AAC7C,uBAAqB,IAAI,GAAG,YAAY,KAAK;AACjD;AAOA,SAAS,gBAAgB,KAAK,WAAW,UAAU;AAC/C,MAAI,aAAa,SAAS;AAC1B,MAAI,CAAC;AACD;AAEJ,YAAU,IAAI,UAAU,IAAI;AAC5B,MAAI;AACJ,MAAIC;AACJ,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,WAAO,SAAS,CAAC;AACjB,IAAAA,SAAQ,KAAK,eAAe,EAAE;AAE9B,cAAU,KAAKA,OAAM,EAAE;AACvB,cAAU,KAAKA,OAAM,EAAE;AAEvB,kBAAc,KAAKA,MAAK;AAExB,QAAI,YAAY,IAAI,GAAG;AACnB,yBAAmB,KAAK,KAAK,KAAK,gBAAgB,CAAC;AAAA,IACvD;AAAA,EACJ;AACJ;;;AElJA,IAAI,gBAAgB,SAAU,GAAG;AAAE,SAAO,MAAM,GAAG,GAAG,CAAC;AAAG;AAI1D,SAAS,OAAO,OAAO,QAAQ,aAAa;AACxC,MAAI,WAAW,QAAQ;AAAE,aAAS;AAAA,EAAG;AACrC,MAAI,gBAAgB,QAAQ;AAAE,kBAAc;AAAA,EAAM;AAClD,SAAO,SAAS,OAAO,MAAM,IAAI;AACrC;AACA,SAAS,WAAW,MAAM;AACtB,SAAO,KAAK,MAAM,KAAK;AAC3B;AAKA,SAAS,WAAW,QAAQ,QAAQ;AAChC,MAAI,SAAS;AACb,MAAI,eAAe,WAAW,MAAM;AACpC,MAAI,eAAe,WAAW,MAAM;AACpC,MAAI,eAAe,cAAc;AAC7B,aAAS,SAAS,OAAO,KAAK,OAAO,MAAM,cAAc,OAAO,GAAG;AAAA,EACvE,WACS,eAAe,cAAc;AAClC,aAAS,SAAS,OAAO,KAAK,OAAO,MAAM,cAAc,OAAO,GAAG;AAAA,EACvE;AACA,SAAO,cAAc,MAAM;AAC/B;AAOA,SAAS,gBAAgBC,QAAO,QAAQ,QAAQ,QAAQ;AACpD,MAAI,WAAW,QAAQ;AAAE,aAAS;AAAA,EAAK;AACvC,EAAAA,OAAM,SAAS;AACf,EAAAA,OAAM,cAAc,IAAI,OAAO,KAAK,OAAO,KAAKA,OAAM,MAAM;AAC5D,EAAAA,OAAM,QAAQ,WAAW,MAAM,IAAI,WAAW,MAAM;AACpD,MAAI,OAAOA,OAAM,OAAO,GAAG,IAAM;AAC7B,IAAAA,OAAM,QAAQ;AAClB,EAAAA,OAAM,YACF,IAAI,OAAO,KAAK,OAAO,KAAKA,OAAM,MAAM,IAAIA,OAAM;AACtD,MAAI,OAAOA,OAAM,SAAS;AACtB,IAAAA,OAAM,YAAY;AAC1B;AAOA,SAAS,eAAeA,QAAO,QAAQ,QAAQ,QAAQ;AACnD,kBAAgBA,OAAM,GAAG,OAAO,GAAG,OAAO,GAAG,cAAc,OAAO,OAAO,CAAC;AAC1E,kBAAgBA,OAAM,GAAG,OAAO,GAAG,OAAO,GAAG,cAAc,OAAO,OAAO,CAAC;AAC9E;AAKA,SAAS,cAAc,QAAQ;AAC3B,SAAO,OAAO,WAAW,WAAW,SAAS;AACjD;AACA,SAAS,iBAAiB,QAAQ,UAAU,QAAQ;AAChD,SAAO,MAAM,OAAO,MAAM,SAAS;AACnC,SAAO,MAAM,OAAO,MAAM,WAAW,QAAQ;AACjD;AACA,SAAS,gBAAgB,YAAY,kBAAkB;AACnD,mBAAiB,WAAW,OAAO,GAAG,WAAW,eAAe,GAAG,iBAAiB,OAAO,CAAC;AAC5F,mBAAiB,WAAW,OAAO,GAAG,WAAW,eAAe,GAAG,iBAAiB,OAAO,CAAC;AAChG;;;ACzEA,IAAI,gBAAgB,SAAU,OAAO;AACjC,SAAO,UAAU,QAAQ,OAAO,UAAU,YAAY,MAAM;AAChE;;;ACAA,IAAI,wBAAwB,WAAY;AAAE,SAAQ;AAAA,IAC9C,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,QAAQ,QAAQ;AAAA,IAChB,aAAa,QAAQ;AAAA,EACzB;AAAI;AACJ,SAAS,oBAAoB;AACzB,SAAO;AAAA,IACH,YAAY;AAAA,IACZ,QAAQ,QAAQ;AAAA,IAChB,iBAAiB,QAAQ;AAAA,IACzB,WAAW,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IACxB,OAAO,MAAM;AAAA,IACb,YAAY,MAAM;AAAA,IAClB,gBAAgB;AAAA,EACpB;AACJ;AACA,IAAI,aAAa,kBAAkB;;;ACbnC,SAAS,+BAA+B,IAAI,WAAW,iBAAiB;AACpE,MAAI,IAAI,GAAG,GAAG,IAAI,GAAG;AAOrB,MAAI,aAAa,EAAE,YAAY,UAAU;AACzC,MAAI,aAAa,EAAE,YAAY,UAAU;AACzC,MAAIC,aAAY,iBAAiB,aAAa,SAAS,aAAa;AACpE,MAAI,iBAAiB;AACjB,QAAI,SAAS,gBAAgB,QAAQ,UAAU,gBAAgB,SAAS,UAAU,gBAAgB;AAClG,QAAI;AACA,MAAAA,cAAa,YAAY,SAAS;AACtC,QAAI;AACA,MAAAA,cAAa,aAAa,UAAU;AACxC,QAAI;AACA,MAAAA,cAAa,aAAa,UAAU;AAAA,EAC5C;AACA,EAAAA,cAAa,WAAW,EAAE,QAAQ,OAAO,EAAE,QAAQ;AACnD,SAAO,CAAC,mBAAmBA,eAAc,qBAAqB,KAAKA;AACvE;AAIA,SAAS,qCAAqC,IAAI;AAC9C,MAAI,aAAa,GAAG;AACpB,SAAO,WAAW,EAAE,SAAS,MAAM,OAAO,WAAW,EAAE,SAAS,MAAM;AAC1E;AACA,IAAI,qBAAqB,+BAA+B,WAAW,OAAO,WAAW,WAAW,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;;;ACpC9G;;;ACCA,IAAI,sBAAsB,SAAU,GAAG;AACnC,SAAO,OAAO,MAAM,YAAY,OAAQ,EAAG,UAAU;AACzD;;;ACHA,SAAS,eAAe,MAAM,MAAM;AAChC,MAAI,CAAC,MAAM,QAAQ,IAAI;AACnB,WAAO;AACX,MAAI,aAAa,KAAK;AACtB,MAAI,eAAe,KAAK;AACpB,WAAO;AACX,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,QAAI,KAAK,CAAC,MAAM,KAAK,CAAC;AAClB,aAAO;AAAA,EACf;AACA,SAAO;AACX;;;ACXA,IAAI;AAAA,CACH,SAAUC,gBAAe;AACtB,EAAAA,eAAc,SAAS,IAAI;AAC3B,EAAAA,eAAc,OAAO,IAAI;AACzB,EAAAA,eAAc,KAAK,IAAI;AACvB,EAAAA,eAAc,MAAM,IAAI;AACxB,EAAAA,eAAc,OAAO,IAAI;AACzB,EAAAA,eAAc,MAAM,IAAI;AAC5B,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;;;AHAxC,IAAI,uBAAuB;AAAA,EACvB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAClB;AACA,IAAI,uBAAuB,cAAc,CAAC,GAAG,OAAO,oBAAoB,CAAC,EAAE,QAAQ;AACnF,IAAI,oBAAoB,qBAAqB;AAC7C,SAAS,YAAYC,gBAAe;AAChC,SAAO,SAAUC,aAAY;AACzB,WAAO,QAAQ,IAAIA,YAAW,IAAI,SAAU,IAAI;AAC5C,UAAI,YAAY,GAAG,WAAW,UAAU,GAAG;AAC3C,aAAO,qBAAqBD,gBAAe,WAAW,OAAO;AAAA,IACjE,CAAC,CAAC;AAAA,EACN;AACJ;AACA,SAAS,qBAAqBA,gBAAe;AACzC,MAAIE,WAAU,YAAYF,cAAa;AACvC,MAAI,QAAQ,YAAY;AACxB,MAAI,kBAAkB,CAAC;AACvB,MAAI,kBAAkB;AAKtB,MAAI,0BAA0B,SAAU,KAAK,YAAY;AACrD,QAAI,WAAW,eAAeA,gBAAe,UAAU;AACvD,QAAI,UAAU;AACV,eAAS;AAAY,UAAI,gBAAgB,SAAS,eAAe,SAAS,OAAO,UAAU,CAAC,cAAc,eAAe,CAAC;AAC1H,YAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,aAAa;AAAA,IACpF;AACA,WAAO;AAAA,EACX;AACA,WAAS,WAAW,KAAK;AACrB,WAAO,gBAAgB,GAAG,MAAM;AAAA,EACpC;AAKA,WAAS,mBAAmB,cAAc;AACtC,IAAAE,WAAU,aAAaF,cAAa;AAAA,EACxC;AAWA,WAAS,eAAe,SAAS,mBAAmB;AAChD,QAAI;AACJ,QAAI,QAAQA,eAAc,SAAS;AACnC,QAAI,UAAUA,eAAc,kBAAkB,IAAI,KAAK,CAAC;AAKxD,QAAIC,cAAa,CAAC;AAKlB,QAAI,cAAc,oBAAI,IAAI;AAM1B,QAAI,kBAAkB,CAAC;AAKvB,QAAI,sBAAsB;AAC1B,QAAI,UAAU,SAAUE,IAAG;AACvB,UAAI,OAAO,qBAAqBA,EAAC;AACjC,UAAI,YAAY,MAAM,IAAI;AAC1B,UAAIC,SAAQ,KAAK,MAAM,IAAI,OAAO,QAAQ,OAAO,SAAS,KAAK,QAAQ,IAAI;AAC3E,UAAI,gBAAgB,eAAeA,KAAI;AAKvC,UAAI,cAAc,SAAS,oBAAoB,UAAU,WAAW;AACpE,UAAI,gBAAgB;AAChB,8BAAsBD;AAO1B,UAAI,cAAcC,UAAS,QAAQ,IAAI,KAAKA,UAAS,MAAM,IAAI,KAAK;AAIpE,UAAI,eACA,mBACAJ,eAAc,wBAAwB;AACtC,sBAAc;AAAA,MAClB;AAKA,gBAAU,gBAAgB,OAAO,OAAO,CAAC,GAAG,eAAe;AAE3D;AAAA;AAAA,QAEC,CAAC,UAAU,YAAY,gBAAgB;AAAA,QAEnC,CAACI,SAAQ,CAAC,UAAU;AAAA,QAErB,oBAAoBA,KAAI,KACxB,OAAOA,UAAS;AAAA,QAAW;AAC3B,eAAO;AAAA,MACX;AAMA,UAAI,oBAAoB,oBAAoB,UAAU,UAAUA,KAAI;AAAA,MAE/D,SAAS,qBACN,UAAU,YACV,CAAC,eACD;AAAA,MAEHD,KAAI,uBAAuB;AAKhC,UAAI,iBAAiB,MAAM,QAAQC,KAAI,IAAIA,QAAO,CAACA,KAAI;AAKvD,UAAI,iBAAiB,eAAe,OAAO,yBAAyB,CAAC,CAAC;AACtE,UAAI,gBAAgB;AAChB,yBAAiB,CAAC;AAUtB,UAAI,KAAK,UAAU,oBAAoB,qBAAqB,OAAO,SAAS,CAAC,IAAI;AACjF,UAAI,UAAU,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,kBAAkB,GAAG,cAAc;AACjF,UAAI,gBAAgB,SAAUC,MAAK;AAC/B,4BAAoB;AACpB,oBAAY,OAAOA,IAAG;AACtB,kBAAU,eAAeA,IAAG,IAAI;AAAA,MACpC;AACA,eAAS,OAAO,SAAS;AACrB,YAAI,OAAO,eAAe,GAAG;AAC7B,YAAI,OAAO,mBAAmB,GAAG;AAEjC,YAAI,gBAAgB,eAAe,GAAG;AAClC;AAIJ,YAAI,SAAS,MAAM;AAKf,cAAI,kBAAkB,IAAI,KAAK,kBAAkB,IAAI,GAAG;AACpD,gBAAI,CAAC,eAAe,MAAM,IAAI,GAAG;AAC7B,4BAAc,GAAG;AAAA,YACrB,OACK;AAKD,wBAAU,cAAc,GAAG,IAAI;AAAA,YACnC;AAAA,UACJ,WACS,SAAS,QAAW;AAEzB,0BAAc,GAAG;AAAA,UACrB,OACK;AAED,wBAAY,IAAI,GAAG;AAAA,UACvB;AAAA,QACJ,WACS,SAAS,UAAa,YAAY,IAAI,GAAG,GAAG;AAKjD,wBAAc,GAAG;AAAA,QACrB,OACK;AAKD,oBAAU,cAAc,GAAG,IAAI;AAAA,QACnC;AAAA,MACJ;AAKA,gBAAU,WAAWD;AACrB,gBAAU,qBAAqB;AAI/B,UAAI,UAAU,UAAU;AACpB,0BAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,eAAe,GAAG,cAAc;AAAA,MACtF;AACA,UAAI,mBAAmBJ,eAAc,uBAAuB;AACxD,4BAAoB;AAAA,MACxB;AAMA,UAAI,qBAAqB,CAAC,aAAa;AACnC,QAAAC,YAAW,KAAK,MAAMA,aAAY,cAAc,CAAC,GAAG,OAAO,eAAe,IAAI,SAAU,WAAW;AAAE,iBAAQ;AAAA,YACzG;AAAA,YACA,SAAS,OAAO,OAAO,EAAE,KAAW,GAAG,OAAO;AAAA,UAClD;AAAA,QAAI,CAAC,CAAC,CAAC,CAAC;AAAA,MACZ;AAAA,IACJ;AAOA,aAAS,IAAI,GAAG,IAAI,mBAAmB,KAAK;AACxC,cAAQ,CAAC;AAAA,IACb;AACA,sBAAkB,OAAO,OAAO,CAAC,GAAG,eAAe;AAMnD,QAAI,YAAY,MAAM;AAClB,UAAI,sBAAsB,CAAC;AAC3B,kBAAY,QAAQ,SAAU,KAAK;AAC/B,YAAI,iBAAiBD,eAAc,cAAc,GAAG;AACpD,YAAI,mBAAmB,QAAW;AAC9B,8BAAoB,GAAG,IAAI;AAAA,QAC/B;AAAA,MACJ,CAAC;AACD,MAAAC,YAAW,KAAK,EAAE,WAAW,oBAAoB,CAAC;AAAA,IACtD;AACA,QAAI,gBAAgB,QAAQA,YAAW,MAAM;AAC7C,QAAI,mBACA,MAAM,YAAY,SAClB,CAACD,eAAc,wBAAwB;AACvC,sBAAgB;AAAA,IACpB;AACA,sBAAkB;AAClB,WAAO,gBAAgBE,SAAQD,WAAU,IAAI,QAAQ,QAAQ;AAAA,EACjE;AAIA,WAAS,UAAU,MAAM,UAAU,SAAS;AACxC,QAAI;AAEJ,QAAI,MAAM,IAAI,EAAE,aAAa;AACzB,aAAO,QAAQ,QAAQ;AAE3B,KAAC,KAAKD,eAAc,qBAAqB,QAAQ,OAAO,SAAS,SAAS,GAAG,QAAQ,SAAUM,QAAO;AAAE,UAAIC;AAAI,cAAQA,MAAKD,OAAM,oBAAoB,QAAQC,QAAO,SAAS,SAASA,IAAG,UAAU,MAAM,QAAQ;AAAA,IAAG,CAAC;AACvN,UAAM,IAAI,EAAE,WAAW;AACvB,WAAO,eAAe,SAAS,IAAI;AAAA,EACvC;AACA,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU,WAAY;AAAE,aAAO;AAAA,IAAO;AAAA,EAC1C;AACJ;AACA,SAAS,oBAAoB,MAAM,MAAM;AACrC,MAAI,OAAO,SAAS,UAAU;AAC1B,WAAO,SAAS;AAAA,EACpB,WACS,gBAAgB,IAAI,GAAG;AAC5B,WAAO,CAAC,eAAe,MAAM,IAAI;AAAA,EACrC;AACA,SAAO;AACX;AACA,SAAS,gBAAgB,UAAU;AAC/B,MAAI,aAAa,QAAQ;AAAE,eAAW;AAAA,EAAO;AAC7C,SAAO;AAAA,IACH;AAAA,IACA,eAAe,CAAC;AAAA,IAChB,gBAAgB,CAAC;AAAA,IACjB,oBAAoB,CAAC;AAAA,EACzB;AACJ;AACA,SAAS,cAAc;AACnB,MAAI;AACJ,SAAO,KAAK,CAAC,GACT,GAAG,cAAc,OAAO,IAAI,gBAAgB,IAAI,GAChD,GAAG,cAAc,KAAK,IAAI,gBAAgB,GAC1C,GAAG,cAAc,GAAG,IAAI,gBAAgB,GACxC,GAAG,cAAc,IAAI,IAAI,gBAAgB,GACzC,GAAG,cAAc,KAAK,IAAI,gBAAgB,GAC1C,GAAG,cAAc,IAAI,IAAI,gBAAgB,GACzC;AACR;;;AI5UA;AAGA,IAAI,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,SAAS,mBAAmB;AACxB,MAAI,WAAW,MAAM,IAAI,WAAY;AAAE,WAAO,IAAI,oBAAoB;AAAA,EAAG,CAAC;AAC1E,MAAI,oBAAoB,CAAC;AACzB,MAAI,aAAa;AAAA,IACb,mBAAmB,WAAY;AAAE,aAAO,SAAS,QAAQ,SAAU,SAAS;AAAE,eAAO,QAAQ,MAAM;AAAA,MAAG,CAAC;AAAA,IAAG;AAAA,IAC1G,qBAAqB,SAAU,OAAO;AAClC,aAAO,MAAM,QAAQ,SAAU,MAAM;AACjC,YAAI;AACJ,SAAC,KAAK,kBAAkB,IAAI,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,iBAAiB;AAC7F,YAAI,KAAK,OAAO;AAChB,YAAI,eAAe,MAAM,EAAE;AAC3B,YAAI,cAAc;AACd,4BAAkB,IAAI,IAAI,WAAW,EAAE,EAAE,YAAY;AAAA,QACzD;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AACA,WAAS,QAAQ,SAAU,SAAS,GAAG;AACnC,eAAW,OAAO,MAAM,CAAC,CAAC,IAAI,SAAU,SAAS;AAAE,aAAO,QAAQ,IAAI,OAAO;AAAA,IAAG;AAChF,eAAW,WAAW,MAAM,CAAC,CAAC,IAAI,WAAY;AAC1C,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MAC3B;AACA,aAAO,QAAQ,OAAO,MAAM,SAAS,cAAc,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC;AAAA,IACxE;AAAA,EACJ,CAAC;AACD,SAAO;AACX;;;ACzCA,SAAS,4BAA4BC,UAAS,MAAM,MAAM;AACtD,MAAI;AACJ,WAAS,OAAO,MAAM;AAClB,QAAI,YAAY,KAAK,GAAG;AACxB,QAAI,YAAY,KAAK,GAAG;AACxB,QAAI,cAAc,SAAS,GAAG;AAK1B,MAAAA,SAAQ,SAAS,KAAK,SAAS;AAAA,IACnC,WACS,cAAc,SAAS,GAAG;AAK/B,MAAAA,SAAQ,SAAS,KAAK,YAAY,SAAS,CAAC;AAAA,IAChD,WACS,cAAc,WAAW;AAM9B,UAAIA,SAAQ,SAAS,GAAG,GAAG;AACvB,YAAI,gBAAgBA,SAAQ,SAAS,GAAG;AAExC,SAAC,cAAc,eAAe,cAAc,IAAI,SAAS;AAAA,MAC7D,OACK;AACD,QAAAA,SAAQ,SAAS,KAAK,aAAa,KAAKA,SAAQ,eAAe,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAK,SAAS,CAAC;AAAA,MACpH;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,OAAO,MAAM;AAClB,QAAI,KAAK,GAAG,MAAM;AACd,MAAAA,SAAQ,YAAY,GAAG;AAAA,EAC/B;AACA,SAAO;AACX;;;ACzCA,SAAS,mBAAmB,IAAI,IAAI,UAAU,iBAAiB;AAC3D,MAAIC,SAAQ,GAAG,OAAO,SAAS,GAAG,QAAQ,kBAAkB,GAAG,iBAAiB,YAAY,GAAG;AAC/F,MAAI,SAAS,GAAG;AAKhB,WAAS,iBAAiB,MAAM;AAKhC,kBAAgB,iBAAiB,WAAW,QAAQ;AAUpD,iBAAeA,QAAO,iBAAiB,QAAQ,eAAe;AAClE;;;AC1BA,IAAI,iBAAiB,SAAU,GAAG,GAAG;AACjC,SAAO,EAAE,QAAQ,EAAE;AACvB;;;ACCA,IAAI;AAAA;AAAA,GAA0B,WAAY;AACtC,aAASC,YAAW;AAChB,WAAK,WAAW,CAAC;AACjB,WAAK,UAAU;AAAA,IACnB;AACA,IAAAA,UAAS,UAAU,MAAM,SAAUC,QAAO;AACtC,oBAAc,KAAK,UAAUA,MAAK;AAClC,WAAK,UAAU;AAAA,IACnB;AACA,IAAAD,UAAS,UAAU,SAAS,SAAUC,QAAO;AACzC,iBAAW,KAAK,UAAUA,MAAK;AAC/B,WAAK,UAAU;AAAA,IACnB;AACA,IAAAD,UAAS,UAAU,UAAU,SAAU,UAAU;AAC7C,WAAK,WAAW,KAAK,SAAS,KAAK,cAAc;AACjD,UAAI,cAAc,KAAK,SAAS;AAChC,eAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,iBAAS,KAAK,SAAS,CAAC,CAAC;AAAA,MAC7B;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,GAAE;AAAA;;;ACrBF,SAAS,UAAU,QAAQ,MAAM,MAAM,GAAG;AACtC,SAAO,MAAM,IAAI,KAAK,KAAK,KAAK,KAAK,CAAC;AACtC,SAAO,MAAM,IAAI,KAAK,KAAK,KAAK,KAAK,CAAC;AAC1C;AACA,SAAS,uBAAuB,QAAQE,QAAO;AAC3C,SAAO;AAAA,IACH,KAAKA,OAAM,MAAM,OAAO;AAAA,IACxB,KAAKA,OAAM,MAAM,OAAO;AAAA,EAC5B;AACJ;AACA,SAAS,mBAAmB,QAAQA,QAAO;AACvC,SAAO;AAAA,IACH,GAAG,uBAAuB,OAAO,GAAGA,OAAM,CAAC;AAAA,IAC3C,GAAG,uBAAuB,OAAO,GAAGA,OAAM,CAAC;AAAA,EAC/C;AACJ;;;ACfA,SAAS,sBAAsBC,gBAAe;AAC1C,MAAI,mBAAmBA,eAAc,oBAAoB;AACzD,MAAI,CAAC,kBAAkB;AACnB,IAAAA,eAAc,uBAAuB;AACrC;AAAA,EACJ;AACA,MAAI,iBAAiB,mBAAmB,iBAAiB,eAAe,EAAE,QAAQA,eAAc,eAAe,EAAE,MAAM;AACvH,WAAS,SAAU,MAAM;AACrB,IAAAA,eAAc,wBAAwB,MAAM,eAAe,IAAI,EAAE,KAAK,eAAe,IAAI,EAAE,KAAK,IAAI;AAAA,EACxG,CAAC;AACL;;;ApBSA,IAAI,gBAAgB,SAAU,IAAI;AAC9B,MAAI,KAAK,GAAG,UAAU,WAAW,OAAO,SAAS,KAAK,IAAI,QAAQ,GAAG,OAAO,gBAAgB,GAAG,eAAe,uBAAuB,GAAG,sBAAsB,qBAAqB,GAAG,oBAAoB,iBAAiB,GAAG,QAAQ,wBAAwB,GAAG,uBAAuB,iBAAiB,GAAG,gBAAgB,mBAAmB,GAAG,kBAAkB,6BAA6B,GAAG,4BAA4B,mBAAmB,GAAG,kBAAkBC,+BAA8B,GAAG;AACze,SAAO,SAAUC,KAAI,SAAS;AAC1B,QAAI,SAASA,IAAG,QAAQ,QAAQA,IAAG,OAAOC,cAAaD,IAAG,YAAY,wBAAwBA,IAAG,uBAAuB,cAAcA,IAAG;AACzI,QAAI,YAAY,QAAQ;AAAE,gBAAU,CAAC;AAAA,IAAG;AACxC,QAAI,eAAe,YAAY,cAAc,cAAc,YAAY;AAOvE,QAAI;AAKJ,QAAI,aAAa,iBAAiB;AAIlC,QAAI,aAAa,sBAAsB;AAOvC,QAAI;AAQJ,QAAI,iBAAiB;AACrB,QAAI,mBAAmB;AACvB,QAAI;AAQJ,QAAIE,eAAc,kBAAkB;AAIpC,QAAI;AAKJ,QAAI,wBAAwB;AAM5B,QAAI,SAAS,oBAAI,IAAI;AAKrB,QAAI,qBAAqB,oBAAI,IAAI;AAMjC,QAAI,mBAAmB,CAAC;AAOxB,QAAI;AAKJ,QAAI,aAAa,OAAO,OAAO,CAAC,GAAG,YAAY;AAM/C,QAAI;AAIJ,aAAS,SAAS;AACd,UAAI,CAAC;AACD;AACJ,UAAIC,SAAQ,kBAAkB,GAAG;AAM7B,2BAAmB,eAAe,aAAa,eAAe,QAAQ,gBAAgB;AAOtF,uBAAeD,aAAY,YAAYA,aAAY,iBAAiB,eAAe,aAAa,YAAY;AAAA,MAChH;AACA,mBAAa;AACb,qBAAe,UAAU,WAAW;AAAA,IACxC;AACA,aAAS,eAAe;AACpB,UAAI,iBAAiB;AACrB,UAAI,cAAc,WAAW,SAAS,GAAG;AACrC,YAAI,mBAAmB,WAAW,kBAAkBC,QAAO;AAC3D,YAAI;AACA,2BAAiB;AAAA,MACzB;AACA,YAAMA,UAAS,aAAa,gBAAgB,gBAAgBD,cAAa,SAAS,KAAK;AAAA,IAC3F;AACA,aAAS,SAAS;AACd,iBAAW,aAAa,YAAY;AAAA,IACxC;AACA,aAAS,yBAAyB;AAC9B,UAAI,CAACC,SAAQ,kBAAkB;AAC3B;AACJ,UAAIC,SAAQF,aAAY,OAAO,YAAYA,aAAY;AACvD,UAAI,iBAAiB,UAAU;AAC/B,UAAI,iBAAiB,UAAU;AAC/B,UAAI,qBAAqBA,aAAY;AACrC,yBAAmBA,cAAa,gBAAgBC,SAAQ,MAAM,YAAY;AAC1E,+BACIA,SAAQ,wBAAwB,eAAe,QAAQC,MAAK;AAChE,8BAAwB;AACxB,UAAI,iBAAiB,+BAA+BA,QAAO,SAAS;AACpE,UAAI,mBAAmB;AAAA,MAEnB,mBAAmB,UAAU,KAC7B,mBAAmB,UAAU,GAAG;AAChC,QAAAD,SAAQ,eAAe;AAAA,MAC3B;AACA,MAAAD,aAAY,iBAAiB;AAAA,IACjC;AACA,aAAS,6BAA6B;AAClC,MAAAC,SAAQ,WAAW,QAAQ,0BAA0B;AAAA,IACzD;AAIA,aAAS,kBAAkBE,MAAKC,QAAO;AACnC,UAAI,iBAAiBA,OAAM,SAAS,SAAU,aAAa;AACvD,qBAAaD,IAAG,IAAI;AACpB,cAAM,YAAY,WAAK,OAAO,QAAQ,OAAO,IAAI;AAAA,MACrD,CAAC;AACD,UAAI,wBAAwBC,OAAM,gBAAgBH,SAAQ,cAAc;AACxE,yBAAmB,IAAIE,MAAK,WAAY;AACpC,uBAAe;AACf,8BAAsB;AAAA,MAC1B,CAAC;AAAA,IACL;AAWA,QAAI,sBAAsBN,6BAA4B,KAAK;AAC3D,aAAS,OAAO,qBAAqB;AACjC,UAAI,QAAQ,oBAAoB,GAAG;AACnC,UAAI,aAAa,GAAG,MAAM,UAAa,cAAc,KAAK,GAAG;AACzD,cAAM,IAAI,aAAa,GAAG,GAAG,KAAK;AAAA,MACtC;AAAA,IACJ;AAIA,QAAI,wBAAwB,2BAA2B,KAAK;AAC5D,QAAI,gBAAgB,mBAAmB,KAAK;AAC5C,QAAII,WAAU,OAAO,OAAO,OAAO,OAAO;AAAA,MAAE;AAAA;AAAA;AAAA;AAAA;AAAA,MAKxC,SAAS;AAAA;AAAA;AAAA;AAAA,MAIT,OAAO,SAAS,OAAO,QAAQ,IAAI;AAAA,MAAG;AAAA,MAAgB,UAAU,oBAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,MAKxE,MAAM,SAAS,cAAc,cAAc,CAAC,GAAG,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;AAAA,MAAG,YAAY,SAAS,OAAO,aAAa,IAAI,SAAS;AAAA;AAAA;AAAA;AAAA,MAI3I,YAAYF;AAAA,MACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,iBAAiB,gBAAgB,oBAAI,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAO7C,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASX,wBAAwB,QAAQ,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,MAKlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,WAAW,WAAY;AAAE,eAAO,QAAQ,QAAQ;AAAA,MAAG;AAAA,MAAG,OAAO,SAAU,aAAa;AAChF,mBAAWE,SAAQ,UAAU;AAC7B,QAAAA,SAAQ,QAAQA,QAAO;AACvB,YAAI,iBAAiB,UAAU,CAAC,uBAAuB;AACnD,kCAAwB,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,gBAAgBA,QAAO;AAAA,QAC1G;AACA,mBAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,SAAS,IAAIA,QAAO;AAAA,MAC/E;AAAA;AAAA;AAAA;AAAA,MAIA,SAAS,WAAY;AACjB,mBAAW,OAAO,MAAM;AACxB,mBAAW,OAAO,MAAM;AACxB,mBAAW,UAAUA,SAAQ,sBAAsB;AACnD,2BAAmB,QAAQ,SAAU,QAAQ;AAAE,iBAAO,OAAO;AAAA,QAAG,CAAC;AACjE,QAAAA,SAAQ,oBAAoB;AAC5B,QAAAA,SAAQ,WAAW,OAAOA,QAAO;AACjC,kCAA0B,QAAQ,0BAA0B,SAAS,SAAS,sBAAsB;AACpG,mBAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,SAAS,OAAOA,QAAO;AAC9E,6CAAqC,QAAQ,qCAAqC,SAAS,SAAS,iCAAiC;AACrI,mBAAW,kBAAkB;AAAA,MACjC;AAAA;AAAA;AAAA;AAAA,MAIA,iBAAiB,SAAUI,QAAO;AAC9B,YAAIP;AACJ,YAAI,qBAAqBG,SAAQ,sBAAsB;AACvD,YAAI,oBAAoB;AACpB,WAACH,MAAK,mBAAmB,qBAAqB,QAAQA,QAAO,SAAS,SAASA,IAAG,IAAIO,MAAK;AAC3F,iBAAO,WAAY;AAAE,mBAAO,mBAAmB,gBAAgB,OAAOA,MAAK;AAAA,UAAG;AAAA,QAClF;AAAA,MACJ;AAAA,MACA,kBAAkB,SAAU,OAAO;AAI/B,YAAI,CAAC,oBAAoB,aAAa,MAAM;AACxC,iBAAO;AACX,eAAO,iBAAiBJ,SAAQ,YAAY,GAAG,MAAM,YAAY,CAAC;AAAA,MACtE;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,uBAAuB,WAAY;AAC/B,eAAO,gBAAgBA,WAAU,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,sBAAsB;AAAA,MAClH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,gCAAgC,SAC1B,OAAO,iCACP,WAAY;AACV,eAAO,WAAK,UAAUA,SAAQ,4BAA4B,OAAO,IAAI;AAAA,MACzE;AAAA;AAAA;AAAA;AAAA,MAIJ,aAAa,WAAY;AAAE,eAAO,MAAM;AAAA,MAAU;AAAA;AAAA;AAAA;AAAA,MAIlD,aAAa,WAAY;AAAE,eAAO;AAAA,MAAU;AAAA;AAAA;AAAA;AAAA,MAI5C,gBAAgB,SAAUE,MAAK;AAAE,eAAO,aAAaA,IAAG;AAAA,MAAG;AAAA,MAAG,gBAAgB,SAAUA,MAAKC,QAAO;AAAE,eAAQ,aAAaD,IAAG,IAAIC;AAAA,MAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1I,iBAAiB,WAAY;AAAE,eAAO;AAAA,MAAc;AAAA;AAAA;AAAA;AAAA;AAAA,MAKpD,eAAe,SAAU,YAAY;AACjC,YAAIH,SAAQ,cAAc;AACtB;AACJ,QAAAA,SAAQ,YAAY;AACpB,QAAAA,SAAQ,eAAe;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,sBAAsB,SAAU,QAAQ,WAAW;AAC/C,YAAI,cAAc,QAAQ;AAAE,sBAAY;AAAA,QAAM;AAC9C,eAAO,qBAAqBA,UAAS,QAAQ,OAAO,SAAS;AAAA,MACjE;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,UAAU,SAAUE,MAAKC,QAAO;AAE5B,YAAIH,SAAQ,SAASE,IAAG;AACpB,UAAAF,SAAQ,YAAYE,IAAG;AAC3B,eAAO,IAAIA,MAAKC,MAAK;AACrB,qBAAaD,IAAG,IAAIC,OAAM,IAAI;AAC9B,0BAAkBD,MAAKC,MAAK;AAAA,MAChC;AAAA;AAAA;AAAA;AAAA,MAIA,aAAa,SAAUD,MAAK;AACxB,YAAIL;AACJ,eAAO,OAAOK,IAAG;AACjB,SAACL,MAAK,mBAAmB,IAAIK,IAAG,OAAO,QAAQL,QAAO,SAAS,SAASA,IAAG;AAC3E,2BAAmB,OAAOK,IAAG;AAC7B,eAAO,aAAaA,IAAG;AACvB,mCAA2BA,MAAK,WAAW;AAAA,MAC/C;AAAA;AAAA;AAAA;AAAA,MAIA,UAAU,SAAUA,MAAK;AAAE,eAAO,OAAO,IAAIA,IAAG;AAAA,MAAG;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnD,UAAU,SAAUA,MAAK,cAAc;AACnC,YAAIC,SAAQ,OAAO,IAAID,IAAG;AAC1B,YAAIC,WAAU,UAAa,iBAAiB,QAAW;AACnD,UAAAA,SAAQ,YAAY,YAAY;AAChC,UAAAH,SAAQ,SAASE,MAAKC,MAAK;AAAA,QAC/B;AACA,eAAOA;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,cAAc,SAAU,UAAU;AAAE,eAAO,OAAO,QAAQ,QAAQ;AAAA,MAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMrE,WAAW,SAAUD,MAAK;AAAE,YAAIL;AAAI,gBAAQA,MAAK,aAAaK,IAAG,OAAO,QAAQL,QAAO,SAASA,MAAK,sBAAsB,UAAUK,MAAK,OAAO;AAAA,MAAG;AAAA;AAAA;AAAA;AAAA;AAAA,MAKpJ,eAAe,SAAUA,MAAKC,QAAO;AACjC,mBAAWD,IAAG,IAAIC;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,eAAe,SAAUD,MAAK;AAC1B,YAAI,eAAe;AACf,cAAI,SAAS,cAAc,OAAOA,IAAG;AACrC,cAAI,WAAW,UAAa,CAAC,cAAc,MAAM;AAC7C,mBAAO;AAAA,QACf;AACA,eAAO,WAAWA,IAAG;AAAA,MACzB;AAAA,IAAE,GAAG,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA,MAIlB,OAAO,WAAY;AACf,qBAAa;AACb,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,gBAAgB,WAAY;AACxB,mBAAK,OAAO,QAAQ,OAAO,IAAI;AAAA,MACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,MAKZ,UAAU,SAAU,UAAU;AAC1B,gBAAQ;AACR,mBAAW,oBAAoB,QAAQ;AACvC,2BAAmB,4BAA4BF,UAASJ,6BAA4B,KAAK,GAAG,gBAAgB;AAAA,MAChH;AAAA,MAAG,UAAU,WAAY;AAAE,eAAO;AAAA,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKzC,YAAY,SAAU,MAAM;AAAE,YAAIC;AAAI,gBAAQA,MAAK,MAAM,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,IAAI;AAAA,MAAG;AAAA;AAAA;AAAA;AAAA,MAIlH,sBAAsB,WAAY;AAAE,eAAO,MAAM;AAAA,MAAY;AAAA;AAAA;AAAA;AAAA,MAI7D,mBAAmB,SAAU,eAAe;AACxC,YAAI,kBAAkB,QAAQ;AAAE,0BAAgB;AAAA,QAAO;AACvD,YAAI;AACA,iBAAO,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,kBAAkB;AACpF,YAAI,CAAC,uBAAuB;AACxB,cAAI,aAAa,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,kBAAkB,MAAM,CAAC;AACjG,cAAI,MAAM,YAAY,QAAW;AAC7B,sBAAU,UAAU,MAAM;AAAA,UAC9B;AACA,iBAAO;AAAA,QACX;AACA,YAAI,UAAU,CAAC;AACf,iBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACtC,cAAI,SAAS,aAAa,CAAC;AAC3B,cAAIQ,QAAO,MAAM,MAAM;AACvB,cAAI,eAAeA,KAAI,KAAKA,UAAS,OAAO;AACxC,oBAAQ,MAAM,IAAIA;AAAA,UACtB;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,wBAAwB,WAAY;AAChC,mBAAW,YAAY;AACvB,QAAAL,SAAQ,WAAW,IAAIA,QAAO;AAAA,MAClC;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,sBAAsB,WAAY;AAC9B,mBAAW,iBAAiB;AAAA,MAChC;AAAA,MACA,wBAAwB,WAAY;AAChC,QAAAA,SAAQ,oBAAoB;AAC5B,mBAAW,iBAAiB;AAAA,MAChC;AAAA,MAAG,gBAAgB,WAAY;AAAE,eAAOD;AAAA,MAAa;AAAA,MAAG,eAAe,SAAU,eAAe;AAC5F,qBAAa;AAAA,MACjB;AAAA,MAAG,mBAAmB,WAAY;AAC9B,eAAO,WAAW,aACd,WAAW,cACXA,aAAY;AAAA,MACpB;AAAA;AAAA;AAAA;AAAA,MAIA,sBAAsB,SAAU,MAAM,YAAY,YAAY;AAC1D,YAAI,eAAe,QAAQ;AAAE,uBAAa;AAAA,QAAO;AACjD,YAAIO,YAAWN,SAAQ,+BAA+B,EAAE,IAAI;AAC5D,YAAIH,MAAK,aACH,WAAW,eAAe,IAAI,IAC9B,WAAW,OAAO,IAAI,GAAG,MAAMA,IAAG,KAAK,MAAMA,IAAG;AACtD,YAAI,SAAS,MAAM;AACnB,QAAAS,UAAS,eAAe;AACxB,QAAAA,UAAS,IAAI,GAAG;AAChB,QAAAA,UAAS,IAAI,GAAG;AAChB,QAAAA,UAAS,SAAS,SAAU,GAAG;AAC3B,UAAAN,SAAQ,wBAAwB,MAAM,GAAG,IAAI,QAAQ,UAAU;AAAA,QACnE,CAAC;AACD,eAAOA,SAAQ,mBAAmB,MAAMM,WAAU,GAAG,UAAU;AAAA,MACnE;AAAA;AAAA;AAAA;AAAA,MAIA,qBAAqB,WAAY;AAC7B,iBAAS,SAAU,MAAM;AACrB,iBAAON,SAAQ,+BAA+B,EAAE,IAAI,EAAE,KAAK;AAAA,QAC/D,CAAC;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,oBAAoB,SAAU,eAAe;AACzC,YAAI,kBAAkB,QAAQ;AAAE,0BAAgB;AAAA,QAAM;AACtD,YAAI,cAAc,mBAAmB,UAAU,OAAO;AACtD,YAAI,CAAC;AACD,8BAAoB,aAAa,YAAY;AACjD,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,gCAAgC,WAAY;AACxC,qCAA6B,2BAA2B;AAAA,UACpD,GAAG,YAAY,CAAC;AAAA,UAChB,GAAG,YAAY,CAAC;AAAA,QACpB;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,yBAAyB,SAAU,MAAM,KAAK,KAAK,YAAY;AAC3D,YAAI,eAAe,QAAQ;AAAE,uBAAa;AAAA,QAAO;AACjD,YAAI;AACJ,YAAI,YAAY;AACZ,cAAI,CAAC,WAAW,gBAAgB;AAC5B,uBAAW,iBAAiB,QAAQ;AAAA,UACxC;AACA,mBAAS,WAAW,eAAe,IAAI;AAAA,QAC3C,OACK;AACD,qBAAW,iBAAiB;AAC5B,mBAAS,WAAW,OAAO,IAAI;AAAA,QACnC;AACA,mBAAW,aAAa;AACxB,eAAO,MAAM;AACb,eAAO,MAAM;AAEb,gCAAwB;AACxB,mBAAW,oBAAoB;AAAA,MACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,wBAAwB,SAAU,OAAO,KAAK;AAC1C,YAAI,QAAQ,QAAQ;AAAE,gBAAMD,aAAY;AAAA,QAAQ;AAChD,YAAIF,MAAKG,SAAQ,+BAA+B,GAAG,IAAIH,IAAG,GAAG,IAAIA,IAAG;AACpE,YAAI,eAAe,CAAC,WAAW,kBAC3B,CAAC,WAAW,kBACZ,CAAC,EAAE,YAAY,KACf,CAAC,EAAE,YAAY;AACnB,YAAI,SAAS,cAAc;AACvB,mBAAS,SAAU,MAAM;AACrB,gBAAIA,MAAK,IAAI,IAAI,GAAG,MAAMA,IAAG,KAAK,MAAMA,IAAG;AAC3C,YAAAG,SAAQ,wBAAwB,MAAM,KAAK,GAAG;AAAA,UAClD,CAAC;AAAA,QACL;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,mBAAmB,SAAU,QAAQ;AACjC,8BAAsBA,QAAO;AAC7B,QAAAA,SAAQ,mBAAmBD,aAAY,QAAQC,SAAQ,mBAAmBD,aAAY,QAAQ,MAAM;AAAA,MACxG;AAAA;AAAA;AAAA;AAAA,MAIA,gBAAgB,WAAY;AAAE,eAAO,eAAeC,UAAS,UAAU,KAAK;AAAA,MAAG;AAAA,MAAG,kBAAkB,WAAY;AAAE,eAAO,iBAAiB,UAAU,WAAW;AAAA,MAAG;AAAA,MAAG;AAAA,MACrK,4BAA4B,WAAY;AACpC,QAAAA,SAAQ,WAAW,QAAQ,4BAA4B;AAOvD,mBAAK,UAAU,4BAA4B,OAAO,IAAI;AAAA,MAE1D;AAAA,MACA,qBAAqB,WAAY;AAC7B,YAAI,qBAAqB,QAAW;AAChC,cAAI,cAAc;AAElB,mBAAS,IAAIA,SAAQ,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AAC/C,gBAAI,WAAWA,SAAQ,KAAK,CAAC;AAC7B,gBAAI,SAAS,WAAW,WAAW;AAC/B,4BAAc;AACd;AAAA,YACJ;AAAA,UACJ;AACA,6BAAmB;AAAA,QACvB;AACA,eAAO;AAAA,MACX;AAAA,MACA,0BAA0B,WAAY;AAClC,YAAI,iBAAiBA,SAAQ,oBAAoB;AACjD,YAAI,CAAC,WAAW,kBAAkB,CAAC;AAC/B;AACJ,wBAAgB,YAAY,eAAe,UAAU;AACrD,YAAI,YAAY,cAAc,GAAG;AAC7B,cAAI,SAAS,WAAW;AACxB,6BAAmB,QAAQ,QAAQ,eAAe,gBAAgB,CAAC;AAAA,QACvE;AAAA,MACJ;AAAA,MACA,sBAAsB,WAAY;AAC9B,eAAO,QAAQ,MAAM,qBAAqB;AAAA,MAC9C;AAAA;AAAA;AAAA;AAAA,MAIA,SAAS,SAAU,SAAS;AACxB,yBAAiB,QAAQ;AACzB,2BAAmB,QAAQ,gBAAgB;AAI3C,6CAAqC,QAAQ,qCAAqC,SAAS,SAAS,iCAAiC;AACrI,2CAAmC,KAAK,QAAQ,gBAAgBA,SAAQ,8BAA8B,GAAG,QAAQ,0BAA0B,WAAY;AACnJ,cAAIH;AACJ,cAAIG,SAAQ,WAAW;AACnB,YAAAA,SAAQ,WAAW,SAAS;AAAA,UAChC,OACK;AACD,aAACH,MAAKG,SAAQ,wBAAwB,QAAQH,QAAO,SAAS,SAASA,IAAG,KAAKG,QAAO;AAAA,UAC1F;AAAA,QACJ,CAAC,CAAC;AAAA,MACN;AAAA;AAAA,MAEA,WAAW;AAAA,MAAM,UAAU,SAAS;AAAA,IAAS,CAAC;AAClD,WAAOA;AAAA,EACX;AACJ;AACA,SAAS,6BAA6BI,QAAO;AACzC,EAAAA,OAAM,yBAAyB;AACnC;AACA,SAAS,2BAA2BA,QAAO;AACvC,EAAAA,OAAM,uBAAuB;AACjC;AACA,IAAI,eAAe,cAAc,CAAC,SAAS,GAAG,OAAO,oBAAoB,CAAC;AAC1E,IAAI,kBAAkB,aAAa;;;AqB7qBnC,IAAI,mBAAmB,okBAAkB,KAAK;AAC5B,SAAO,iBAAiB,IAAI,GAAG;AACnC;;;AChEO,IAAM,kBAAkB,CAAC,MAAK,cAAc,YAAW,CAAC,KAAG,SAAS,IAAI;;;ACE/E,IAAI,UAAU;AACd,IAAM,cAAc,MAAM;AAE1B,SAAS,UAAU,SAAS;AACxB,SAAO,YAAY,OAAO,OAAO,QAAQ;AAC7C;AAEO,IAAM,eAAe,CAAC,WAAS,UAAU;AAC5C,MAAI,kBAAkB,WAAW,eAAe,KAAK,gBAAgB,QAAQ;AAC7E,SAAO,QAAQ,iBAAiB,QAAM,OAAO,OAAO,OAAO,GAAG,SAAS;AAC3E;AAEO,IAAM,cAAc,CAAC,WAAS,UAAU;AAE3C,QAAM,UAAU,WAAW,eAAe,KAAG,gBAAgB,QAAQ;AACrE,QAAM,KAAKG,KAAI,OAAO,MAAM,OAAO,SAAY,YAAY;AAC3D,UAAQ,MAAI;AACR,QAAIA,KAAI,OAAO,MAAI,MAAK;AACpB,MAAAA,KAAI,OAAO,EAAE,SAAS,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AAED,MAAIA,KAAI,OAAO,MAAM,MAAK;AACtB,WAAO,SAAS,CAAC,MAAK,IAAI,CAAC;AAAA,EAC/B;AACA,SAAO;AAAA,IAAQ;AAAA,IAAQ,QAClB,CAAC,GAAG,aAAa,GAAG,iBACjB,CAAC,OAAO,MAAI,GAAG,iBAAiB,EAAE,CAAC,IACnC,CAAC,IAAI;AAAA,EACb;AACJ;;;ACjCO,IAAM,qBAAqB,CAAC,MAAI,cAAc,eAAc,CAAC,KAAG,SAAS,IAAI;;;ACDpF;;;ACIA,SAAS,aAAaC,gBAAe;AACjC,MAAI,YAAYA,eAAc,WAAW;AACzC,SAAO,aAAaA,eAAc,qBAAqB;AAC3D;AACA,SAAS,2BAA2BA,gBAAe,WAAW;AAC1D,MAAI,cAAc,QAAQ;AAAE,gBAAY,CAAC;AAAA,EAAG;AAC5C,MAAI,SAASA,eAAc;AAC3B,MAAI;AACA,+BAA2B,QAAQ,SAAS;AAChD,MAAI,aAAaA,cAAa;AAC1B,cAAU,KAAKA,cAAa;AAChC,SAAO;AACX;AACA,SAAS,0BAA0BA,gBAAe;AAC9C,MAAI,WAAW,CAAC;AAChB,MAAI,WAAW,SAAUC,QAAO;AAC5B,QAAI,aAAaA,MAAK;AAClB,eAAS,KAAKA,MAAK;AACvB,IAAAA,OAAM,SAAS,QAAQ,QAAQ;AAAA,EACnC;AACA,EAAAD,eAAc,SAAS,QAAQ,QAAQ;AACvC,SAAO,SAAS,KAAK,cAAc;AACvC;AAKA,SAAS,wBAAwBA,gBAAe;AAC5C,MAAIA,eAAc,qBAAqB;AACnC;AACJ,MAAIE,eAAcF,eAAc,eAAe;AAC/C,EAAAA,eAAc,0BAA0BE,aAAY,MAAM;AAC1D,EAAAA,aAAY,aAAa;AACzB,EAAAA,aAAY,SAASF,eAAc,mBAAmB;AACtD,EAAAE,aAAY,kBAAkB,YAAYA,aAAY,MAAM;AAC5D,EAAAF,eAAc,oBAAoBE,aAAY,QAAQF,eAAc,mBAAmBE,aAAY,MAAM;AACzG,aAAK,OAAO,WAAY;AAAE,WAAOF,eAAc,uBAAuB;AAAA,EAAG,CAAC;AAC9E;AAIA,SAAS,oBAAoBA,gBAAc,IAAI;AAC3C,MAAIA,eAAc,qBAAqB;AACnC;AACJ,MAAI,CAAC,GAAI,CAAAA,eAAc,kBAAkBA,eAAc,mBAAmB,KAAK;AAK/E,EAAAA,eAAc,uBAAuB,OAAOA,eAAc,eAAe;AAC7E;;;ACrDA,IAAI,iBAAiB,oBAAI,IAAI;AAC7B,IAAI,cAAc;AAAA,EACd,mBAAmB;AACvB;AACA,SAAS,QAAQ,OAAO,KAAK,SAAS;AAClC,MAAI,CAAC,MAAM,OAAO;AACd,UAAM,OAAO,IAAI,CAAC;AACtB,QAAM,OAAO,EAAE,KAAK,GAAG;AAC3B;AACA,SAAS,YAAY,UAAU;AAC3B,iBAAe,IAAI,QAAQ;AAC3B,SAAO,WAAY;AAAE,WAAO,eAAe,OAAO,QAAQ;AAAA,EAAG;AACjE;AACA,SAAS,cAAc;AACnB,MAAI,CAAC,eAAe;AAChB;AACJ,MAAI,UAAU;AACd,MAAI,QAAQ,CAAC,CAAC,CAAC;AACf,MAAI,SAAS,CAAC;AACd,MAAI,UAAU,SAAU,KAAK;AAAE,WAAO,QAAQ,OAAO,KAAK,OAAO;AAAA,EAAG;AACpE,MAAI,WAAW,SAAU,KAAK;AAC1B,YAAQ,QAAQ,KAAK,OAAO;AAC5B;AAAA,EACJ;AAIA,iBAAe,QAAQ,SAAU,UAAU;AACvC,aAAS,SAAS,QAAQ;AAC1B,cAAU;AAAA,EACd,CAAC;AACD,iBAAe,MAAM;AAerB,cAAY,oBAAoB;AAChC,aAAK,WAAW,WAAY;AACxB,eAAW,WAAY;AAAE,aAAQ,YAAY,oBAAoB;AAAA,IAAQ,GAAG,EAAE;AAAA,EAClF,CAAC;AAID,MAAI,YAAY,OAAO;AACvB,WAAS,IAAI,GAAG,KAAK,WAAW,KAAK;AACjC,UAAM,CAAC,KAAK,MAAM,CAAC,EAAE,QAAQ,UAAU;AACvC,WAAO,CAAC,KAAK,OAAO,CAAC,EAAE,QAAQ,UAAU;AAAA,EAC7C;AACJ;AACA,IAAI,aAAa,SAAU,KAAK;AAAE,SAAO,IAAI;AAAG;;;AFlDhD,IAAI,iBAAiB;AAAA,EACjB,aAAa,SAAUG,QAAO;AAAE,WAAOA,OAAM,kBAAkB;AAAA,EAAG;AACtE;AAIA,SAAS,gBAAgB;AACrB,MAAI,QAAQ,oBAAI,IAAI;AACpB,SAAO;AAAA,IACH,KAAK,SAAUA,QAAO;AAAE,aAAO,MAAM,IAAIA,MAAK;AAAA,IAAG;AAAA,IACjD,OAAO,SAAU,IAAI;AACjB,UAAI,KAAK,OAAO,SAAS,iBAAiB,IAAI,cAAc,GAAG,aAAa,SAAS,GAAG;AACxF,kBAAY,SAAU,MAAM,OAAO;AAC/B,YAAIC,SAAQ,MAAM,KAAK,KAAK,EAAE,KAAK,cAAc;AACjD,YAAI,YAAY,SACV,2BAA2B,MAAM,IACjC,CAAC;AACP,cAAM,WAAY;AACd,cAAI,cAAc,cAAc,cAAc,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAOA,MAAK,CAAC;AACnF,sBAAY,QAAQ,SAAUC,UAAS;AAAE,mBAAOA,SAAQ,eAAe;AAAA,UAAG,CAAC;AAAA,QAC/E,CAAC;AACD,aAAK,WAAY;AACb,UAAAD,OAAM,QAAQ,uBAAuB;AAAA,QACzC,CAAC;AACD,cAAM,WAAY;AACd,oBAAU,QAAQ,SAAUC,UAAS;AAAE,mBAAOA,SAAQ,iBAAiB;AAAA,UAAG,CAAC;AAC3E,UAAAD,OAAM,QAAQ,WAAW;AAAA,QAC7B,CAAC;AACD,aAAK,WAAY;AAOb,UAAAA,OAAM,QAAQ,SAAUD,QAAO;AAC3B,gBAAIA,OAAM;AACN,cAAAA,OAAM,WAAW,SAAS;AAAA,UAClC,CAAC;AAAA,QACL,CAAC;AACD,cAAM,WAAY;AAOd,oBAAU,UAAU;AACpB,oBAAU,OAAO;AAAA,QACrB,CAAC;AACD,aAAK,WAAY;AASb,qBAAK,WAAW,WAAY;AACxB,mBAAOC,OAAM,QAAQ,0BAA0B;AAAA,UACnD,CAAC;AACD,gBAAM,MAAM;AAAA,QAChB,CAAC;AAAA,MACL,CAAC;AAED,kBAAY;AAAA,IAChB;AAAA,EACJ;AACJ;AACA,SAAS,2BAA2BD,QAAO;AACvC,EAAAA,OAAM,kBAAkBA,OAAM,WAAW;AAC7C;;;AG9EA,IAAI,sBAAsB,CAAC,WAAW,cAAc,gBAAe,MAAM,KAAG,SAAS,cAAc,CAAC;AAIpG,IAAI,0BAA0B,MAAK,SAAS,cAAc,CAAC;AAE3D,SAAS,eAAe,SAAS;AAC7B,SAAO,CAAC,CAAC,QAAQ;AACrB;;;ACbA,IAAM,cAAc,CAAC,MAAM,cAAc,QAAO,CAAC,KAAK,SAAS,EAAE,QAAQ,MAAM,CAAC;;;;ICE/D,gBAAa,CAAI,MAAM,cAAc,UAAS,CAAC,KAAG,SAAQ,CAAA,CAAA;4CAN3E;;;;;MAee,WAAQ,KAAA,SAAA,YAAA,CAAA;QACb,gBAAgB,WAAW,aAAa,KAAG,cAAc,SAAQ,CAAA;;;;;;;;;;+CAE7D,eAAc,EAAC,aAAa;;;;;;;;;;;;;;;;;A;;;6CClB1C;;;;;;;;;MAkBe,sBAAmB,KAAA,SAAA,uBAAA,IAAC,MAAS,GACpC,QAAK,KAAA,SAAA,SAAA,CAAA,GACL,YAAS,KAAA,SAAA,aAAA,CAAA,GACT,cAAW,KAAA,SAAA,eAAA,CAAA,GACX,WAAQ,KAAA,SAAA,YAAA,CAAA;QAEN,SAAS,WAAW,mBAAmB,KAAK,oBAAoB,SAAQ,CAAA;QACxE,kBAAkB,WAAW,eAAe,KAAK,gBAAgB,SAAQ,CAAA;QACzE,cAAc,WAAW,WAAW,KAAK,YAAY,SAAQ,CAAA;QAC7D,KAAK,WAAW,aAAa,KAAK,cAAc,SAAQ,CAAA;MAC1D,SAAM,eAAGG,KAAI,EAAE,EAAE,aAAa;QAE5B,gBACF,WAAW,kBAAkB,KAAK,mBAAmB,SAAQ,CAAA;MAC7D,WAAQ,eAAG,eAAc,KAAA,cAAI,MAAK,EAAC,UAAa,QAAS,KAAA,IACnD,eAAc,IAAG,MAAM,MAAK,EAAC,WAC7B,MAAK,EAAC,QAAQ;MAMpB,mBAAgB,eAAG,MAAS;OAI3B,oBAAmB,GAAE;AACtB,wBAAsB,aAAY,EAAC,QAAQ;EAC/C;MAYIC,iBAAa,eAAA,IAAG,gBAAgB,CAAA;AAmBpC,cAAW,MAAK;AACZ,SAAI,EAAG,KAAI,MAAK;UACXA,cAAa,EAAC,gBAAgB,eAAc;IAChD,CAAC;EACN,CAAC;AAED,YAAS,MAAK;QACVA,cAAa,GAAE,cAAa;EAEhC,CAAC;;QAzDG,QAAS,IAAG,EAAC,aAAa;;;QAM1B,UACA,eAAc,KAAA,cAAI,MAAK,EAAC,UAAa,QAAS,KAAA,IACxC,eAAc,IAAG,MAAM,MAAK,EAAC,WAC7B,MAAK,EAAC,QAAQ;;;;;eAUhB,gBAAgB,KAAI,oBAAmB,GAAE;YAE7C,kBAAmB,oBAAmB,EAAC,UAAS,GAAA;UAC5C,aAAA,YAAW;UACX,QAAM,IAAC,MAAM;UACb,OAAK,EAAA,GAAO,MAAK,GAAE,UAAQ,IAAR,QAAQ,EAAA;UAC3B,YAAY,iBAAgB,GAAE;UAC9B,uBAAqB,cAAE,iBAAgB,GAAE,SAAY,KAAK;;MAElE;;;;QAEIA,gBAAa,IAAG,gBAAgB,CAAA;;;;;cAE7BA,cAAa,GAAC;YACjBA,cAAa,EAAC,SAAQ,EAAA,GACf,QAAO,GAAA,GACP,MAAK,GACR,UAAQ,IAAR,QAAQ,EAAA,CAAA;eAEZA,gBAAa,IAAbA,cAAa,EAAC,YAAY,UAAU,iBAAgB,CAAA,CAAA;eACpDA,gBAAa,IAAbA,cAAa,EAAC,iBAAc,CAAA,IACvB,MAAM,KAAA,cAAA,IAAI,MAAM,EAAC,YAAe,iBAAgB,GAAE,IAAE,KAAA,CAAA;YAKxDA,cAAa,EAAC,WAAU;MAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEJ,IAAI,mBAAmB,SAAU,WAAW;AAAE,SAAQ;AAAA,IAClD,WAAW,SAAU,OAAO;AAAE,aAAO,UAAU,KAAK,SAAU,MAAM;AAAE,eAAO,CAAC,CAAC,MAAM,IAAI;AAAA,MAAG,CAAC;AAAA,IAAG;AAAA,EACpG;AAAI;AACJ,IAAI,qBAAqB;AAAA,EACrB,eAAe,iBAAiB,CAAC,UAAU,YAAY,MAAM,CAAC;AAAA,EAC9D,WAAW,iBAAiB;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,CAAC;AAAA,EACD,MAAM,iBAAiB,CAAC,MAAM,CAAC;AAAA,EAC/B,MAAM,iBAAiB,CAAC,QAAQ,cAAc,CAAC;AAAA,EAC/C,OAAO,iBAAiB,CAAC,YAAY,CAAC;AAAA,EACtC,OAAO,iBAAiB,CAAC,cAAc,gBAAgB,YAAY,CAAC;AAAA,EACpE,KAAK,iBAAiB,CAAC,YAAY,SAAS,cAAc,aAAa,CAAC;AAAA,EACxE,KAAK,iBAAiB;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,CAAC;AAAA,EACD,iBAAiB,iBAAiB,CAAC,UAAU,UAAU,CAAC;AAC5D;AACA,SAAS,aAAa,UAAU;AAC5B,WAAS,OAAO,UAAU;AACtB,QAAI,YAAY,SAAS,GAAG;AAC5B,QAAI,cAAc,MAAK;AACnB,yBAAmB,GAAG,EAAE,YAAY;AAAA,IACxC;AAAA,EACJ;AACJ;;;;wCCvCA;;;QAOU,eAAe,OAAO,KAAK,kBAAkB;QAC7C,cAAc,aAAa;MACtBC,iBAAa,KAAA,SAAA,iBAAA,CAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA;MAG3B,WAAQ,eAAA,CAAA,CAAA;;;;UAMR,UAAQ,CAAA,CAAA;eACC,IAAI,GAAG,IAAI,aAAa,KAAK;cAC5B,OAAO,aAAa,CAAC;gBACnB,WAAW,UAAS,IAAK,mBAAmB,IAAI;YAMpD,UAAU,MAAK,CAAA,KAAK,WAAW;cAC/B,QAAQ,EAAC,KAAI;YACE;YACX,KAAK;YACL,OAAA,MAAK;YACL,eAAAA,eAAa;;QAErB;MACJ;;;;;;;;;;;;;;;;;;;;;;;;;;YAIHA,eAAa,EAAA,UAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;kDCvClB;;;MAUe,QAAK,KAAA,SAAA,SAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA;MACtB,QAAQ,SAAS,MAAK,CAAA;AAE1B,aAAW,eAAc,KAAK;AAC9B,gBAAc,UAAS,SAAQ,GAAC,KAAK;AAGrC,YAAS,MAAK;AAEV,UAAK,GAAE,eAAe,QAAO;EACjC,CAAC;;AARE,UAAM,IAAI,MAAK,CAAA;;;;;;;;;;;;;;;;;;;;ACRtB,IAAI,wBAAwB,WAAY;AAAE,SAAQ;AAAA,IAC9C,OAAO,CAAC;AAAA,IACR,WAAW,CAAC;AAAA,IACZ,eAAe,CAAC;AAAA,IAChB,iBAAiB,CAAC;AAAA,IAClB,MAAM,CAAC;AAAA,EACX;AAAI;;;ACJJ,IAAI,uBAAuB,WAAY;AAAE,SAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,sBAAsB,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC;AAAI;;;ACG5H,IAAI,gBAAgB,CAAC,IAAI,KAAK,KAAK,GAAG;AAKtC,IAAI,QAAQ,CAAC,aAAa,SAAS,UAAU,MAAM;AAInD,IAAI,iBAAiB,CAAC,wBAAwB,KAAK,KAAK,GAAG;AAC3D,MAAM,QAAQ,SAAU,cAAc;AAClC,SAAO,cAAc,QAAQ,SAAU,SAAS;AAC5C,WAAO,eAAe,KAAK,eAAe,OAAO;AAAA,EACrD,CAAC;AACL,CAAC;AAID,SAAS,mBAAmB,GAAG,GAAG;AAC9B,SAAO,eAAe,QAAQ,CAAC,IAAI,eAAe,QAAQ,CAAC;AAC/D;AAIA,IAAI,mBAAmB,IAAI,IAAI,cAAc;AAC7C,SAAS,gBAAgB,KAAK;AAC1B,SAAO,iBAAiB,IAAI,GAAG;AACnC;AAIA,IAAI,uBAAuB,oBAAI,IAAI,CAAC,WAAW,WAAW,SAAS,CAAC;AACpE,SAAS,sBAAsB,KAAK;AAChC,SAAO,qBAAqB,IAAI,GAAG;AACvC;;;ACpCA,SAAS,oBAAoB,KAAK,IAAI;AAClC,MAAI,SAAS,GAAG,QAAQ,WAAW,GAAG;AACtC,SAAQ,gBAAgB,GAAG,KACvB,sBAAsB,GAAG,MACvB,UAAU,aAAa,WAAc,CAAC,CAAC,qBAAqB,GAAG;AACzE;;;ACNA,IAAI,iBAAiB;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,sBAAsB;AAC1B;AAOA,SAAS,eAAe,IAAI,IAAI,oBAAoB,mBAAmB;AACnE,MAAIC,aAAY,GAAG,WAAWC,iBAAgB,GAAG;AACjD,MAAI,KAAK,GAAG,4BAA4B,6BAA6B,OAAO,SAAS,OAAO,IAAI,KAAK,GAAG,oBAAoB,qBAAqB,OAAO,SAAS,OAAO;AAExK,MAAI,kBAAkB;AAEtB,EAAAA,eAAc,KAAK,kBAAkB;AAGrC,MAAI,gBAAgB;AAEpB,MAAI,mBAAmBA,eAAc;AACrC,WAAS,IAAI,GAAG,IAAI,kBAAkB,KAAK;AACvC,QAAI,MAAMA,eAAc,CAAC;AACzB,wBAAoB,eAAe,GAAG,KAAK,OAAO,MAAMD,WAAU,GAAG,IAAI;AACzE,QAAI,QAAQ;AACR,sBAAgB;AAAA,EACxB;AACA,MAAI,CAAC,iBAAiB,4BAA4B;AAC9C,uBAAmB;AAAA,EACvB,OACK;AACD,sBAAkB,gBAAgB,KAAK;AAAA,EAC3C;AAGA,MAAI,mBAAmB;AACnB,sBAAkB,kBAAkBA,YAAW,qBAAqB,KAAK,eAAe;AAAA,EAC5F,WACS,sBAAsB,oBAAoB;AAC/C,sBAAkB;AAAA,EACtB;AACA,SAAO;AACX;AAKA,SAAS,qBAAqB,IAAI;AAC9B,MAAI,KAAK,GAAG,SAAS,UAAU,OAAO,SAAS,QAAQ,IAAI,KAAK,GAAG,SAAS,UAAU,OAAO,SAAS,QAAQ,IAAI,KAAK,GAAG,SAAS,UAAU,OAAO,SAAS,IAAI;AACjK,SAAO,UAAU,MAAM,UAAU,MAAM;AAC3C;;;ACpDA,SAAS,cAAc,KAAK;AACxB,SAAO,IAAI,WAAW,IAAI;AAC9B;;;ACFA,IAAI,iBAAiB,SAAU,OAAO,MAAM;AACxC,SAAO,QAAQ,OAAO,UAAU,WAC1B,KAAK,UAAU,KAAK,IACpB;AACV;;;ACAA,SAAS,gBAAgB,OAAO,cAAc,YAAYE,cAAa,SAAS,mBAAmB,0BAA0B,gCAAgC;AACzJ,MAAI;AACJ,MAAI,QAAQ,MAAM,OAAO,OAAO,MAAM,MAAMC,aAAY,MAAM,WAAWC,iBAAgB,MAAM,eAAe,kBAAkB,MAAM;AAItI,EAAAA,eAAc,SAAS;AAEvB,MAAI,eAAe;AACnB,MAAI,qBAAqB;AAEzB,MAAI,kBAAkB;AAOtB,WAAS,OAAO,cAAc;AAC1B,QAAI,QAAQ,aAAa,GAAG;AAI5B,QAAI,cAAc,GAAG,GAAG;AACpB,WAAK,GAAG,IAAI;AACZ;AAAA,IACJ;AAEA,QAAI,YAAY,iBAAiB,GAAG;AACpC,QAAI,cAAc,eAAe,OAAO,SAAS;AACjD,QAAI,gBAAgB,GAAG,GAAG;AAEtB,qBAAe;AACf,MAAAD,WAAU,GAAG,IAAI;AACjB,MAAAC,eAAc,KAAK,GAAG;AAEtB,UAAI,CAAC;AACD;AAEJ,UAAI,YAAY,KAAK,UAAU,aAAa,QAAQ,OAAO,SAAS,KAAK;AACrE,0BAAkB;AAAA,IAC1B,WACS,sBAAsB,GAAG,GAAG;AACjC,sBAAgB,GAAG,IAAI;AAEvB,2BAAqB;AAAA,IACzB,OACK;AAKD,UAAIF,gBACA,cACAA,aAAY,cACZ,qBAAqB,GAAG,GAAG;AAC3B,YAAI,iBAAiB,qBAAqB,GAAG,EAAE,QAAQ,OAAOA,cAAa,UAAU;AAKrF,YAAI,UAAU,qBAAqB,GAAG,EAAE;AACxC,YAAI,SAAS;AACT,cAAI,MAAM,QAAQ;AAClB,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,kBAAM,QAAQ,CAAC,CAAC,IAAI;AAAA,UACxB;AAAA,QACJ,OACK;AACD,gBAAM,GAAG,IAAI;AAAA,QACjB;AAAA,MACJ,OACK;AACD,cAAM,GAAG,IAAI;AAAA,MACjB;AAAA,IACJ;AAAA,EACJ;AACA,MAAIA,gBACA,cACA,4BACA,gCAAgC;AAChC,UAAM,YAAY,yBAAyBA,aAAY,YAAYA,aAAY,WAAW,eAAeC,aAAY,MAAS;AAC9H,QAAI,mBAAmB;AACnB,YAAM,YAAY,kBAAkBA,YAAW,MAAM,SAAS;AAAA,IAClE;AACA,UAAM,kBAAkB,+BAA+BD,YAAW;AAAA,EACtE,OACK;AACD,QAAI,cAAc;AACd,YAAM,YAAY,eAAe,OAAO,SAAS,iBAAiB,iBAAiB;AAAA,IACvF;AACA,QAAI,oBAAoB;AACpB,YAAM,kBAAkB,qBAAqB,eAAe;AAAA,IAChE;AAAA,EACJ;AACJ;;;;mDC1GA;;;;MAQe,cAAW,KAAA,SAAA,eAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA;QACjC,OAAI,MAAO;QACT,QAAQ,sBAAqB;AAEjC,oBACI,OACA,YAAW,GACX,QACA,QAAS,EACP,4BAA0B,CAAG,SAAQ,EAAA,GACvC,MAAK,EAAC,iBAAiB;YAGnB,MAAM,MAAK,IAAK;gBACZ,MAAI,GAAK,MAAK;EAC9B;;QACI,QAAS,KAAK,YAAW,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCnBb,kBAChB,QACA,QACA,OACF;aACa,OAAO,QAAQ;SACjB,cAAc,OAAO,GAAG,CAAA,KAAA,CAAO,oBAAoB,KAAK,KAAK,GAAG;AACjE,aAAO,GAAG,IAAI,OAAO,GAAG;IAC5B;EACJ;AACJ;qCAfA;;;;MAqBe,cAAW,KAAA,SAAA,eAAA,CAAA,GAClB,QAAK,KAAA,SAAA,SAAA,CAAA,GAAC,WAAQ,KAAA,SAAA,YAAA,CAAA;MAEd,QAAK,eAAA,CAAA,CAAA;QAIH,OAAO;QAGP,UAAO,CAAE,OAAK;AAChB,WAAO,OAAM,IAAC,KAAK,GAAC,EAAE;QAClB,MAAK,EAAC,iBAAgB;UACtB,OAAQ,MAAK,EAAC,gBAAe,IAAC,KAAK,CAAA,CAAA;IACvC;eAEO,KAAK;EAChB;;QAfI,WAAY,MAAK,EAAC,SAAK,CAAA,CAAA;;;AAMxB,SAAI,IAAC,KAAK,GAAA,IAAC,SAAS,GAAC,MAAK,CAAA;;;;;;;;;;;;;;;;;;;;;;;;mEAWoC,EAAE,CAAA,mBAlB/D,MAAK,CAAA,OAEL,KAAK,iBAiBK,QAAO,IAAC,EAAE,GAAC,MAAK,GAAA,IAAC,KAAK,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCCzCxC;;;MAOe,QAAK,KAAA,SAAA,SAAA,CAAA,GACZ,cAAW,KAAA,SAAA,eAAA,CAAA,GACX,WAAQ,KAAA,SAAA,YAAA,CAAA;QAGN,eAAY,CAAI,OAAOG,WAAU;QAC/B,YAAS,CAAA;QACT,QAAQA,OAAM,IAAI,GAAG;AAGrB,gBAAU,YAAY;AAGtB,YAAM,aAAU,OAAG,OAAK,oBAAA,OAAoB,OAAK,sBAC7C,QAAM,2EAAA,GAAA,2EAAA;AAGV,YAAM,cAAW,cACbA,OAAM,MAAS,IAAI,IACb,8BACOA,OAAM,MAAS,GAAG,IAAG,MAAM,GAAG;IACnD;AAEA,cAAU,QAAQ;WACX;EACX;;;;;;;;;;;;;;;;;;;;;6FAzBW,MAAK,CAAA,iBA6BG,aAAY,IAAC,MAAM,GAAC,MAAK,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChChD;;;ACGA,SAASC,YAAW,QAAQ,QAAQ,MAAM;AACtC,SAAO,OAAO,WAAW,WACnB,SACA,GAAG,UAAU,SAAS,OAAO,MAAM;AAC7C;AAKA,SAAS,uBAAuB,YAAY,SAAS,SAAS;AAC1D,MAAI,YAAYA,YAAW,SAAS,WAAW,GAAG,WAAW,KAAK;AAClE,MAAI,YAAYA,YAAW,SAAS,WAAW,GAAG,WAAW,MAAM;AACnE,SAAO,YAAY,MAAM;AAC7B;;;ACZA,IAAI,mBAAmB,SAAUC,WAAU,QAAQ;AAC/C,SAAO,GAAG,UAAUA,YAAW,MAAM;AACzC;AACA,IAAI,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,OAAO;AACX;AACA,IAAI,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,OAAO;AACX;AAQA,SAAS,aAAa,OAAO,aAAa,QAAQ,SAAS,QAAQ,aAAa;AAC5E,MAAI,YAAY,QAAQ;AAAE,cAAU;AAAA,EAAG;AACvC,MAAI,WAAW,QAAQ;AAAE,aAAS;AAAA,EAAG;AACrC,MAAI,gBAAgB,QAAQ;AAAE,kBAAc;AAAA,EAAM;AAGlD,MAAI,OAAO,cAAc,WAAW;AAEpC,QAAM,KAAK,MAAM,IAAI,iBAAiB,CAAC,QAAQ,WAAW;AAE1D,MAAI,aAAa,iBAAiB,QAAQ,WAAW;AACrD,MAAI,cAAc,iBAAiB,SAAS,WAAW;AACvD,QAAM,KAAK,KAAK,IAAI,aAAa,MAAM;AAC3C;;;AF3BA,SAAS,cAAc,OAAO,IAAI,YAAYC,cAAa,SAAS,mBAAmB,0BAA0B,gCAAgC;AAC7I,MAAI,QAAQ,GAAG,OAAO,QAAQ,GAAG,OAAO,UAAU,GAAG,SAAS,UAAU,GAAG,SAAS,aAAa,GAAG,YAAY,KAAK,GAAG,aAAa,cAAc,OAAO,SAAS,IAAI,IAAI,KAAK,GAAG,YAAY,aAAa,OAAO,SAAS,IAAI,IAEhO,SAAS,OAAO,IAAI,CAAC,SAAS,SAAS,WAAW,WAAW,cAAc,eAAe,YAAY,CAAC;AACvG,kBAAgB,OAAO,QAAQ,YAAYA,cAAa,SAAS,mBAAmB,0BAA0B,8BAA8B;AAC5I,QAAM,QAAQ,MAAM;AACpB,QAAM,QAAQ,CAAC;AACf,MAAI,QAAQ,MAAM,OAAO,QAAQ,MAAM,OAAO,aAAa,MAAM,YAAY,kBAAkB,MAAM;AAKrG,MAAI,MAAM,WAAW;AACjB,QAAI;AACA,YAAM,YAAY,MAAM;AAC5B,WAAO,MAAM;AAAA,EACjB;AAEA,MAAI,eACC,YAAY,UAAa,YAAY,UAAa,MAAM,YAAY;AACrE,UAAM,kBAAkB,uBAAuB,YAAY,YAAY,SAAY,UAAU,KAAK,YAAY,SAAY,UAAU,GAAG;AAAA,EAC3I;AAEA,MAAI,UAAU;AACV,UAAM,IAAI;AACd,MAAI,UAAU;AACV,UAAM,IAAI;AAEd,MAAI,oBAAoB,UAAa,eAAe,QAAW;AAC3D,iBAAa,OAAO,iBAAiB,YAAY,aAAa,YAAY,KAAK;AAAA,EACnF;AACJ;;;;wCG3CA;;;;MASe,cAAW,KAAA,SAAA,eAAA,CAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA;MACzB,OAAI,MAAS;UACP,QAAQ,qBAAoB;AAClC,kBACI,OACA,YAAW,GACX,QACA,QAAS,EACP,4BAA4B,MAAK,GACnC,MAAK,EAAC,iBAAiB;gBAGpB,MAAM,OACT,OAAK,EAAA,GAAO,MAAM,MAAK,EAAA;EAE/B;;QACG,aAAc,KAAK,YAAW,CAAA,CAAA;;;;;UAE1B,MAAK,EAAC,OAAO;cACN,YAAS,CAAA;AACf,0BAAkB,WAAW,MAAK,EAAC,OAAO,MAAK,CAAA;eAC/C,aAAW,IAAX,WAAW,EAAC,QAAK,EAAA,GAAQ,WAAS,GAAA,IAAK,WAAW,EAAC,MAAK,CAAA;MAC5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBR,IAAI,gBAAgB,SAAU,KAAK;AAAE,SAAO,CAAC,kBAAkB,GAAG;AAAG;AAcrE,IAAI;AACI,yBAAuB,UAAQ,wBAAwB,EAAE;AAC7D,kBAAgB,SAAU,KAAK;AAE3B,QAAI,IAAI,WAAW,IAAI,GAAG;AACtB,aAAO,CAAC,kBAAkB,GAAG;AAAA,IACjC,OACK;AACD,aAAO,qBAAqB,GAAG;AAAA,IACnC;AAAA,EACJ;AACJ,SACO,IAAI;AAEX;AAbQ;AAcR,SAAS,YAAY,OAAO,OAAO,oBAAoB;AACnD,MAAI,gBAAgB,CAAC;AACrB,WAAS,OAAO,OAAO;AACnB,QAAI,cAAc,GAAG,KAChB,uBAAuB,QAAQ,kBAAkB,GAAG,KACpD,CAAC,SAAS,CAAC,kBAAkB,GAAG,GAAI;AACrC,oBAAc,GAAG,IAAI,MAAM,GAAG;AAAA,IAClC;AAAA,EACJ;AACA,SAAO;AACX;;;;sCC7CA;;;;MAWe,QAAK,KAAA,SAAA,SAAA,CAAA,GACZ,cAAW,KAAA,SAAA,eAAA,CAAA,GACX,YAAS,KAAA,SAAA,aAAA,CAAA,GACT,qBAAkB,KAAA,SAAA,sBAAA,GAAG,KAAK,GAC1B,WAAQ,KAAA,SAAA,YAAA,CAAA,GACR,MAAG,KAAA,SAAA,OAAA,CAAA,GACH,WAAQ,KAAA,SAAA,YAAA,GAAC,MAAS;QAChBC,UAAM,CAAI,SAAO;AAEnB,QAAG,EAAC,IAAI;EACZ;;;;UACI,eAAgB,YACZ,MAAK,GAAA,cAAA,OACE,UAAS,GAAK,QAAQ,GAC7B,mBAAkB,CAAA,CAAA;;;;QAEnB,SAAQ,GAAC;AACR,MAAAA,QAAO,SAAQ,CAAA;IACvB;;;;;;;gDAIM,UAAS,GAAK,KAAK,IAAG,sBAAc,sBAAY,CAAAC,WAAA,gBAAA;;;;;;;;;;;;;;;;;;qDAXlD,aAAa,8DAmBF,aAAa,GAAA,GAAA,IAAI,WAAW,EAAA,EAAA;;;;;;kBAD/B,QAAAD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpChB;;;ACWA,SAAS,eAAeE,UAAS,oBAAoB;AACjD,MAAI,MAAMA,SAAQ,sBAAsB;AACxC,SAAO,4BAA4B,qBAAqB,KAAK,kBAAkB,CAAC;AACpF;;;ACdA;AAGA,SAASC,eAAc,OAAO;AAC1B,SAAO,OAAO,UAAU,YAAY,MAAM,WAAW,QAAQ;AACjE;AAUA,IAAI,mBAAmB;AACvB,SAAS,iBAAiB,SAAS;AAC/B,MAAI,QAAQ,iBAAiB,KAAK,OAAO;AACzC,MAAI,CAAC;AACD,WAAO,CAAC,CAAC;AACb,MAAI,KAAK,OAAO,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC;AACzD,SAAO,CAAC,OAAO,QAAQ;AAC3B;AAEA,SAAS,iBAAiB,SAASC,UAAS,OAAO;AAC/C,MAAI,UAAU,QAAQ;AAAE,YAAQ;AAAA,EAAG;AAEnC,MAAI,KAAK,OAAO,iBAAiB,OAAO,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC;AAE7E,MAAI,CAAC;AACD;AAEJ,MAAI,WAAW,OAAO,iBAAiBA,QAAO,EAAE,iBAAiB,KAAK;AACtE,MAAI,UAAU;AACV,WAAO,SAAS,KAAK;AAAA,EACzB,WACSC,eAAc,QAAQ,GAAG;AAE9B,WAAO,iBAAiB,UAAUD,UAAS,QAAQ,CAAC;AAAA,EACxD,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAMA,SAAS,oBAAoBE,gBAAe,IAAI,eAAe;AAC3D,MAAI;AACJ,MAAI,SAAS,OAAO,IAAI,CAAC,CAAC;AAC1B,MAAIF,WAAUE,eAAc,YAAY;AACxC,MAAI,EAAEF,oBAAmB;AACrB,WAAO,EAAE,QAAgB,cAA6B;AAG1D,MAAI,eAAe;AACf,oBAAgB,OAAO,OAAO,CAAC,GAAG,aAAa;AAAA,EACnD;AAEA,EAAAE,eAAc,aAAa,SAAU,OAAO;AACxC,QAAIC,WAAU,MAAM,IAAI;AACxB,QAAI,CAACF,eAAcE,QAAO;AACtB;AACJ,QAAIC,YAAW,iBAAiBD,UAASH,QAAO;AAChD,QAAII;AACA,YAAM,IAAIA,SAAQ;AAAA,EAC1B,CAAC;AAGD,WAAS,OAAO,QAAQ;AACpB,QAAI,UAAU,OAAO,GAAG;AACxB,QAAI,CAACH,eAAc,OAAO;AACtB;AACJ,QAAI,WAAW,iBAAiB,SAASD,QAAO;AAChD,QAAI,CAAC;AACD;AAEJ,WAAO,GAAG,IAAI;AAId,QAAI;AACA,OAAC,KAAK,cAAc,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAM,cAAc,GAAG,IAAI;AAAA,EACzF;AACA,SAAO,EAAE,QAAgB,cAA6B;AAC1D;;;ACtFA;AAOA,IAAI,iBAAiB,oBAAI,IAAI;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACD,IAAI,kBAAkB,SAAU,KAAK;AAAE,SAAO,eAAe,IAAI,GAAG;AAAG;AACvE,IAAI,mBAAmB,SAAU,QAAQ;AACrC,SAAO,OAAO,KAAK,MAAM,EAAE,KAAK,eAAe;AACnD;AACA,IAAI,sBAAsB,SAAU,OAAO,IAAI;AAG3C,QAAM,IAAI,IAAI,KAAK;AACnB,QAAM,IAAI,EAAE;AAChB;AACA,IAAI,gBAAgB,SAAU,GAAG;AAC7B,SAAO,MAAM,UAAU,MAAM;AACjC;AACA,IAAI;AAAA,CACH,SAAUK,uBAAsB;AAC7B,EAAAA,sBAAqB,OAAO,IAAI;AAChC,EAAAA,sBAAqB,QAAQ,IAAI;AACjC,EAAAA,sBAAqB,MAAM,IAAI;AAC/B,EAAAA,sBAAqB,OAAO,IAAI;AAChC,EAAAA,sBAAqB,KAAK,IAAI;AAC9B,EAAAA,sBAAqB,QAAQ,IAAI;AACrC,GAAG,yBAAyB,uBAAuB,CAAC,EAAE;AACtD,IAAI,mBAAmB,SAAU,QAAQ,KAAK;AAC1C,SAAO,WAAW,OAAO,MAAM,IAAI,EAAE,GAAG,CAAC;AAC7C;AACA,IAAI,yBAAyB,SAAU,MAAM,MAAM;AAAE,SAAO,SAAU,OAAO,IAAI;AAC7E,QAAIC,aAAY,GAAG;AACnB,QAAIA,eAAc,UAAU,CAACA;AACzB,aAAO;AACX,QAAI,WAAWA,WAAU,MAAM,oBAAoB;AACnD,QAAI,UAAU;AACV,aAAO,iBAAiB,SAAS,CAAC,GAAG,IAAI;AAAA,IAC7C,OACK;AACD,UAAI,SAASA,WAAU,MAAM,kBAAkB;AAC/C,UAAI,QAAQ;AACR,eAAO,iBAAiB,OAAO,CAAC,GAAG,IAAI;AAAA,MAC3C,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAG;AACH,IAAI,gBAAgB,oBAAI,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC;AAC3C,IAAI,gCAAgC,eAAe,OAAO,SAAU,KAAK;AAAE,SAAO,CAAC,cAAc,IAAI,GAAG;AAAG,CAAC;AAC5G,SAAS,gCAAgCC,gBAAe;AACpD,MAAI,oBAAoB,CAAC;AACzB,gCAA8B,QAAQ,SAAU,KAAK;AACjD,QAAI,QAAQA,eAAc,SAAS,GAAG;AACtC,QAAI,UAAU,QAAW;AACrB,wBAAkB,KAAK,CAAC,KAAK,MAAM,IAAI,CAAC,CAAC;AACzC,YAAM,IAAI,IAAI,WAAW,OAAO,IAAI,IAAI,CAAC;AAAA,IAC7C;AAAA,EACJ,CAAC;AAED,MAAI,kBAAkB;AAClB,IAAAA,eAAc,WAAW;AAC7B,SAAO;AACX;AACA,IAAI,mBAAmB;AAAA;AAAA,EAEnB,OAAO,SAAU,IAAI;AACjB,QAAI,IAAI,GAAG;AACX,WAAO,EAAE,MAAM,EAAE;AAAA,EACrB;AAAA,EACA,QAAQ,SAAU,IAAI;AAClB,QAAI,IAAI,GAAG;AACX,WAAO,EAAE,MAAM,EAAE;AAAA,EACrB;AAAA,EACA,KAAK,SAAU,OAAO,IAAI;AACtB,QAAI,MAAM,GAAG;AACb,WAAO,WAAW,GAAG;AAAA,EACzB;AAAA,EACA,MAAM,SAAU,OAAO,IAAI;AACvB,QAAI,OAAO,GAAG;AACd,WAAO,WAAW,IAAI;AAAA,EAC1B;AAAA,EACA,QAAQ,SAAU,IAAI,IAAI;AACtB,QAAI,IAAI,GAAG;AACX,QAAI,MAAM,GAAG;AACb,WAAO,WAAW,GAAG,KAAK,EAAE,MAAM,EAAE;AAAA,EACxC;AAAA,EACA,OAAO,SAAU,IAAI,IAAI;AACrB,QAAI,IAAI,GAAG;AACX,QAAI,OAAO,GAAG;AACd,WAAO,WAAW,IAAI,KAAK,EAAE,MAAM,EAAE;AAAA,EACzC;AAAA;AAAA,EAEA,GAAG,uBAAuB,GAAG,EAAE;AAAA,EAC/B,GAAG,uBAAuB,GAAG,EAAE;AACnC;AACA,IAAI,2BAA2B,SAAU,QAAQA,gBAAe,aAAa;AACzE,MAAI,aAAaA,eAAc,mBAAmB;AAClD,MAAIC,WAAUD,eAAc,YAAY;AACxC,MAAI,uBAAuB,iBAAiBC,QAAO;AACnD,MAAI,UAAU,qBAAqB,SAAS,MAAM,qBAAqB,KAAK,OAAO,qBAAqB,MAAM,SAAS,qBAAqB,QAAQ,QAAQ,qBAAqB,OAAOF,aAAY,qBAAqB;AACzN,MAAI,sBAAsB,EAAE,KAAU,MAAY,QAAgB,OAAc,WAAWA,WAAU;AAGrG,MAAI,YAAY,QAAQ;AACpB,IAAAC,eAAc,eAAe,WAAW,OAAO,WAAW,OAAO;AAAA,EACrE;AAEA,EAAAA,eAAc,WAAW;AACzB,MAAI,aAAaA,eAAc,mBAAmB;AAClD,cAAY,QAAQ,SAAU,KAAK;AAG/B,QAAI,QAAQA,eAAc,SAAS,GAAG;AACtC,wBAAoB,OAAO,iBAAiB,GAAG,EAAE,YAAY,mBAAmB,CAAC;AACjF,WAAO,GAAG,IAAI,iBAAiB,GAAG,EAAE,YAAY,oBAAoB;AAAA,EACxE,CAAC;AACD,SAAO;AACX;AACA,IAAI,mCAAmC,SAAUA,gBAAe,QAAQ,QAAQ,eAAe;AAC3F,MAAI,WAAW,QAAQ;AAAE,aAAS,CAAC;AAAA,EAAG;AACtC,MAAI,kBAAkB,QAAQ;AAAE,oBAAgB,CAAC;AAAA,EAAG;AACpD,WAAS,OAAO,OAAO,CAAC,GAAG,MAAM;AACjC,kBAAgB,OAAO,OAAO,CAAC,GAAG,aAAa;AAC/C,MAAI,uBAAuB,OAAO,KAAK,MAAM,EAAE,OAAO,eAAe;AAGrE,MAAI,yBAAyB,CAAC;AAC9B,MAAI,sCAAsC;AAC1C,MAAI,uBAAuB,CAAC;AAC5B,uBAAqB,QAAQ,SAAU,KAAK;AACxC,QAAI,QAAQA,eAAc,SAAS,GAAG;AACtC,QAAI,CAACA,eAAc,SAAS,GAAG;AAC3B;AACJ,QAAI,OAAO,OAAO,GAAG;AACrB,QAAI,KAAK,OAAO,GAAG;AACnB,QAAI,WAAW,uBAAuB,IAAI;AAC1C,QAAI;AAKJ,QAAI,kBAAkB,EAAE,GAAG;AACvB,UAAI,eAAe,GAAG;AACtB,eAAS,IAAI,GAAG,CAAC,MAAM,OAAO,IAAI,GAAG,IAAI,cAAc,KAAK;AACxD,YAAI,CAAC,QAAQ;AACT,mBAAS,uBAAuB,GAAG,CAAC,CAAC;AAAA,QAGzC;AAAA,MAIJ;AAAA,IACJ,OACK;AACD,eAAS,uBAAuB,EAAE;AAAA,IACtC;AACA,QAAI,aAAa,QAAQ;AAGrB,UAAI,cAAc,QAAQ,KAAK,cAAc,MAAM,GAAG;AAClD,YAAI,UAAU,MAAM,IAAI;AACxB,YAAI,OAAO,YAAY,UAAU;AAC7B,gBAAM,IAAI,WAAW,OAAO,CAAC;AAAA,QACjC;AACA,YAAI,OAAO,OAAO,UAAU;AACxB,iBAAO,GAAG,IAAI,WAAW,EAAE;AAAA,QAC/B,WACS,MAAM,QAAQ,EAAE,KAAK,WAAW,IAAI;AACzC,iBAAO,GAAG,IAAI,GAAG,IAAI,UAAU;AAAA,QACnC;AAAA,MACJ,YACU,aAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,eAClE,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,eACvD,SAAS,KAAK,OAAO,IAAI;AAG1B,YAAI,SAAS,GAAG;AACZ,gBAAM,IAAI,OAAO,UAAU,IAAI,CAAC;AAAA,QACpC,OACK;AACD,iBAAO,GAAG,IAAI,SAAS,UAAU,EAAE;AAAA,QACvC;AAAA,MACJ,OACK;AAGD,YAAI,CAAC,qCAAqC;AACtC,mCAAyB,gCAAgCA,cAAa;AACtE,gDAAsC;AAAA,QAC1C;AACA,6BAAqB,KAAK,GAAG;AAC7B,sBAAc,GAAG,IACb,cAAc,GAAG,MAAM,SACjB,cAAc,GAAG,IACjB,OAAO,GAAG;AACpB,4BAAoB,OAAO,EAAE;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ,CAAC;AACD,MAAI,qBAAqB,QAAQ;AAC7B,QAAI,kBAAkB,yBAAyB,QAAQA,gBAAe,oBAAoB;AAE1F,QAAI,uBAAuB,QAAQ;AAC/B,6BAAuB,QAAQ,SAAU,IAAI;AACzC,YAAI,KAAK,OAAO,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC;AACjD,QAAAA,eAAc,SAAS,GAAG,EAAE,IAAI,KAAK;AAAA,MACzC,CAAC;AAAA,IACL;AAEA,IAAAA,eAAc,WAAW;AACzB,WAAO,EAAE,QAAQ,iBAAiB,cAA6B;AAAA,EACnE,OACK;AACD,WAAO,EAAE,QAAgB,cAA6B;AAAA,EAC1D;AACJ;AAQA,SAAS,eAAeA,gBAAe,QAAQ,QAAQ,eAAe;AAClE,SAAO,iBAAiB,MAAM,IACxB,iCAAiCA,gBAAe,QAAQ,QAAQ,aAAa,IAC7E,EAAE,QAAgB,cAA6B;AACzD;;;AC3OA,IAAI,kBAAkB,SAAUE,gBAAe,QAAQ,QAAQ,eAAe;AAC1E,MAAI,WAAW,oBAAoBA,gBAAe,QAAQ,aAAa;AACvE,WAAS,SAAS;AAClB,kBAAgB,SAAS;AACzB,SAAO,eAAeA,gBAAe,QAAQ,QAAQ,aAAa;AACtE;;;ACTA,SAAS,4BAA4B,OAAO;AACxC,MAAI,QAAQ,MAAM;AAClB,MAAI,YAAY,CAAC;AACjB,WAAS,OAAO,OAAO;AACnB,QAAI,cAAc,MAAM,GAAG,CAAC,KAAK,oBAAoB,KAAK,KAAK,GAAG;AAC9D,gBAAU,GAAG,IAAI,MAAM,GAAG;AAAA,IAC9B;AAAA,EACJ;AACA,SAAO;AACX;;;ACZA,SAAS,WAAWC,UAAS,IAAI;AAC7B,MAAI,QAAQ,GAAG,OAAO,OAAO,GAAG;AAGhC,SAAO,OAAOA,SAAQ,OAAO,KAAK;AAElC,WAAS,OAAO,MAAM;AAClB,IAAAA,SAAQ,MAAM,YAAY,KAAK,KAAK,GAAG,CAAC;AAAA,EAC5C;AACJ;;;ANIA,SAASC,kBAAiBC,UAAS;AAC/B,SAAO,OAAO,iBAAiBA,QAAO;AAC1C;AACA,IAAI,aAAa;AAAA,EACb,UAAU;AAAA,EACV,uBAAuB,SAAU,YAAY,KAAK;AAC9C,QAAI,gBAAgB,GAAG,GAAG;AACtB,UAAI,cAAc,oBAAoB,GAAG;AACzC,aAAO,cAAc,YAAY,WAAW,IAAI;AAAA,IACpD,OACK;AACD,UAAI,gBAAgBD,kBAAiB,UAAU;AAC/C,cAAS,cAAc,GAAG,IACpB,cAAc,iBAAiB,GAAG,IAClC,cAAc,GAAG,MAAM;AAAA,IACjC;AAAA,EACJ;AAAA,EACA,kBAAkB,SAAU,GAAG,GAAG;AAM9B,WAAO,EAAE,wBAAwB,CAAC,IAAI,IAAI,IAAI;AAAA,EAClD;AAAA,EACA,eAAe,SAAU,OAAO,KAAK;AACjC,QAAI;AACJ,YAAQ,KAAK,MAAM,WAAW,QAAQ,OAAO,SAAS,SAAS,GAAG,GAAG;AAAA,EACzE;AAAA,EACA,oBAAoB,SAAUC,UAAS,IAAI;AACvC,QAAI,qBAAqB,GAAG;AAC5B,WAAO,eAAeA,UAAS,kBAAkB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,gBAAgB,SAAUA,UAAS,YAAY,OAAO;AAClD,QAAI,oBAAoB,MAAM;AAC9B,eAAW,MAAM,YAAY,oBACvB,kBAAkB,CAAC,GAAG,EAAE,IACxB;AAEN,IAAAA,SAAQ,eAAe;AAAA,EAC3B;AAAA,EACA,kBAAkB,SAAU,UAAU,cAAc;AAChD,aAAS,MAAM,YAAY,aAAa,MAAM;AAAA,EAClD;AAAA,EACA,4BAA4B,SAAU,KAAK,IAAI;AAC3C,QAAI,OAAO,GAAG,MAAM,QAAQ,GAAG;AAC/B,WAAO,KAAK,GAAG;AACf,WAAO,MAAM,GAAG;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB,SAAUA,UAAS,IAAI,IAAI,WAAW;AACxD,QAAI,kBAAkB,GAAG;AACzB,QAAI,cAAc,QAAQ;AAAE,kBAAY;AAAA,IAAM;AAC9C,QAAI,aAAa,GAAG,YAAY,gBAAgB,GAAG,eAAe,SAAS,OAAO,IAAI,CAAC,cAAc,eAAe,CAAC;AACrH,QAAI,SAAS,UAAU,QAAQ,cAAc,CAAC,GAAGA,QAAO;AAIxD,QAAI,iBAAiB;AACjB,UAAI;AACA,wBAAgB,gBAAgB,aAAa;AACjD,UAAI;AACA,iBAAS,gBAAgB,MAAM;AACnC,UAAI;AACA,iBAAS,gBAAgB,MAAM;AAAA,IACvC;AACA,QAAI,WAAW;AACX,8BAAwBA,UAAS,QAAQ,MAAM;AAC/C,UAAI,SAAS,gBAAgBA,UAAS,QAAQ,QAAQ,aAAa;AACnE,sBAAgB,OAAO;AACvB,eAAS,OAAO;AAAA,IACpB;AACA,WAAO,OAAO,OAAO;AAAA,MAAE;AAAA,MACnB;AAAA,IAA6B,GAAG,MAAM;AAAA,EAC9C;AAAA,EACA;AAAA,EACA,OAAO,SAAUA,UAAS,aAAa,cAAc,YAAYC,cAAa,SAAS,OAAO;AAC1F,QAAID,SAAQ,cAAc,QAAW;AACjC,kBAAY,MAAM,aAAaA,SAAQ,YACjC,YACA;AAAA,IACV;AACA,QAAI,uBAAuB,WAAW,aAAaC,aAAY;AAC/D,oBAAgB,aAAa,cAAc,YAAYA,cAAa,SAAS,MAAM,mBAAmB,uBAAuB,iCAAiC,QAAW,uBACnK,uCACA,MAAS;AAAA,EACnB;AAAA,EACA,QAAQ;AACZ;AACA,IAAI,oBAAoB,cAAc,UAAU;;;AO7GhD,SAASC,6BAA4B,OAAO;AACxC,MAAI,YAAY,4BAA8B,KAAK;AACnD,WAAS,OAAO,OAAO;AACnB,QAAI,cAAc,MAAM,GAAG,CAAC,GAAG;AAC3B,UAAI,YAAY,QAAQ,OAAO,QAAQ,MAAM,SAAS,IAAI,YAAY,IAAI;AAC1E,gBAAU,SAAS,IAAI,MAAM,GAAG;AAAA,IACpC;AAAA,EACJ;AACA,SAAO;AACX;;;ACZA,IAAI,qBAAqB;AACzB,IAAI,mBAAmB;AAIvB,IAAI,cAAc,SAAU,KAAK;AAC7B,SAAO,IAAI,QAAQ,oBAAoB,gBAAgB,EAAE,YAAY;AACzE;;;ACJA,IAAI,sBAAsB,oBAAI,IAAI;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;;;AClBD,SAAS,UAAUC,UAAS,aAAa;AACrC,aAAWA,UAAS,WAAW;AAC/B,WAAS,OAAO,YAAY,OAAO;AAC/B,IAAAA,SAAQ,aAAa,CAAC,oBAAoB,IAAI,GAAG,IAAI,YAAY,GAAG,IAAI,KAAK,YAAY,MAAM,GAAG,CAAC;AAAA,EACvG;AACJ;;;ACEA,IAAI,mBAAmB,cAAc,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,UAAU,GAAG;AAAA,EAAE,eAAe,SAAU,OAAO,KAAK;AACjH,WAAO,MAAM,GAAG;AAAA,EACpB;AAAA,EACA,uBAAuB,SAAU,YAAY,KAAK;AAC9C,QAAI;AACJ,QAAI,gBAAgB,GAAG,GAAG;AACtB,eAAS,KAAK,oBAAoB,GAAG,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY;AAAA,IAChG;AACA,UAAM,CAAC,oBAAoB,IAAI,GAAG,IAAI,YAAY,GAAG,IAAI;AACzD,WAAO,WAAW,aAAa,GAAG;AAAA,EACtC;AAAA,EACA,6BAA6BC;AAAA,EAC7B,OAAO,SAAU,UAAU,aAAa,cAAc,YAAYC,cAAa,SAAS,OAAO;AAC3F,QAAI,uBAAuB,WAAW,aAAaA,aAAY;AAC/D,kBAAc,aAAa,cAAc,YAAYA,cAAa,SAAS,MAAM,mBAAmB,uBAAuB,iCAAiC,QAAW,uBACjK,uCACA,MAAS;AAAA,EACnB;AAAA,EAAG,QAAQ;AAAU,CAAC,CAAC;;;ACxB3B,IAAI,yBAAyB,SAAU,WAAW,SAAS;AAEvD,SAAO,cAAc,QACf,iBAAiB,SAAS,EAAE,4BAA4B,MAAM,CAAC,IAC/D,kBAAkB,SAAS,EAAE,4BAA4B,KAAK,CAAC;AACzE;;;ACJA,IAAI,kBAAkB;AAAA,EACd,6BAA6BC;AAAA,EAC7B,mBAAmB;AAAA,EACnB,SAAS,SAAU,OAAO,UAAU,IAAI;AACpC,QAAI,cAAc,GAAG,aAAa,eAAe,GAAG;AACpD,QAAI;AACA,kBAAY,aACR,OAAO,SAAS,YACZ,aACE,SAAS,QAAQ,IACjB,SAAS,sBAAsB;AAAA,IAC7C,SACO,GAAG;AAEN,kBAAY,aAAa;AAAA,QACrB,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ;AAAA,IACJ;AACA,QAAI,OAAO,QAAQ,GAAG;AAClB,kBAAY,kBAAkB,SAAS,eAAe;AAAA,IAC1D;AACA,kBAAc,aAAa,cAAc,QAAW,QAAW,EAAE,4BAA4B,MAAM,GAAG,MAAM,iBAAiB;AAE7H,cAAU,UAAU,WAAW;AAAA,EACnC;AACJ;AACJ,SAAS,OAAOC,UAAS;AACrB,SAAOA,SAAQ,YAAY;AAC/B;;;ACjCA,IAAI,mBAAmB;AAAA,EACf;AAAA,EACA,mBAAmB;AAC3B;;;ACHA,SAAS,uBAAuB,OAAO,SAAS;AAC5C,MAAI,2BAA2B,KAAK,GAAG;AACnC,QAAI,UAAU,MAAM,SAASC,WAAU,MAAM;AAC7C,WAAO;AAAA,MACH,SAAS,YAAY,SAAS,eAAe,OAAO,IAC9C,UACA;AAAA,MACN,SAAS,eAAeA,QAAO,IAAIA,WAAU;AAAA,IACjD;AAAA,EACJ;AACA,SAAO,MAAM,YAAY,QAAS,WAAS,CAAC,IAAK,CAAC;AACtD;;;;mDClBA;;;;;MAUe,QAAK,KAAA,SAAA,SAAA,CAAA,GACZ,WAAQ,KAAA,SAAA,YAAA,CAAA,GACR,WAAQ,KAAA,SAAA,YAAA,CAAA;MACJ,KAAK,WAAW,aAAa,KAAG,cAAc,SAAQ,CAAA;YACjC,uBAAuB,MAAK,GAAEC,KAAI,EAAE,CAAA,GAAxD,UAAO,eAAA,IAAP,OAAO,GAAEC,WAAO,eAAA,IAAP,OAAO;QAGnB,4BAAyB,CAAIC,UAAS;WACjC,MAAM,QAAQA,KAAI,IAAIA,MAAK,KAAK,GAAG,IAAIA;EAClD;QAEM,OAAI,MAAS;aACb,SAAO,IAAE,OAAO,GAAE,SAAO,IAAED,QAAO,EAAA;EAExC;MAIK,QAAK,eAAG,KAAI,CAAA;;;;;YAbR,SAAO,QAAP,OAAO;YAACA,UAAO,QAAP,OAAO;SAAI,uBAAuB,MAAK,GAAE,IAAG,CAAA,CAAA;;;;;;UAcrD,SAAQ,GAAC;YACZ,OAAQ,KAAK,0BAAyB,IAAC,OAAO,CAAA,GAAE,0BAAyB,IAACA,QAAO,CAAA,CAAA,CAAA;MACrF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBL,SAAS,mBAAmB,OAAO;AAC/B,MAAI,iBAAiB,cAAc,KAAK,IAAI,MAAM,IAAI,IAAI;AAC1D,SAAO,cAAc,cAAc,IAC7B,eAAe,QAAQ,IACvB;AACV;;;;ICNU,YAAS,GACT,6BAAAE,8BAA6B,mBAAmB,SAAAC,SAAO,GACzD,OACA,SACA,oBACC;QACK,QAAK;IACP,cAAc,iBACV,OACA,SACA,iBACAD,4BAA2B;IAE/B,aAAa,kBAAiB;;MAG9BC,UAAS;AACT,UAAM,QAAK,CAAI,aAAaA,SAAQ,OAAO,UAAU,KAAK;EAC9D;SAEO;AACX;SACS,iBACL,OACA,SACA,iBACA,oBACF;QACQ,SAAM,CAAA;QACN,wBAAqB,cAAG,iBAAiB,SAAY,KAAK;QAE1D,eAAe,mBAAmB,KAAK;aAClC,OAAO,cAAc;AAC5B,WAAO,GAAG,IAAI,mBAAmB,aAAa,GAAG,CAAA;EACrD;QAEM,SAAS,SAAAC,SAAO,IAAK;QACrB,wBAAwB,2BAA2B,KAAK;QACxD,gBAAgB,mBAAmB,KAAK;MAE1C,WACJ,iBAAa,CACZ,yBAAqB,cACtB,MAAM,SAAY,OAAK,KAAA,GAAE;kBACzB,SAAY,MAAI,KAAA,KAAA,cAAI,SAAO,QAAW,KAAA,IAAG,UAAW,UAAU,QAAQ;kBACtEA,UAAY,MAAI,KAAA,KAAA,cAAIA,UAAO,QAAW,KAAA,IAAGA,WAAWA,WAAU,QAAQ;EAC1E;QAEU,eACF,yBAAqB,cAAI,SAAY,KAAK,IAAGA,WAAU;MAGvD,gBAAY,cAAA,OACL,cAAiB,WAAS,KAAA,KAAA,CAChC,oBAAoB,YAAY,GACnC;UACQ,OAAO,MAAM,QAAQ,YAAY,IACjC,eAAY,CACX,YAAY;AACnB,SAAK,QAAO,CAAE,eAAe;YACnB,WAAW,wBAAwB,OAAO,UAAU;WACrD,SAAQ;cAEL,eAAe,YAAU,GAAK,OAAM,IAAK;iBAEtC,OAAO,OAAQ,QAAO,GAAG,IAAI,OAAO,GAAG;iBACvC,OAAO,cACd,QAAO,GAAG,IAAI,cAAc,GAAG;IACvC,CAAC;EACL;SAEO;AACX;2CArFJ;;;;;;MA8Fe,SAAM,KAAA,SAAA,UAAA,CAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA;QAEtC,UAAU,WAAW,aAAa,KAAK,cAAc,SAAQ,CAAA;QAC7D,kBAAkB,WAAW,eAAe,KAAK,gBAAgB,SAAQ,CAAA;MAC3E,QAAK,eAAG,UAAU,OAAM,GAAE,MAAK,GAAEC,KAAI,OAAO,GAAGA,KAAI,eAAe,CAAA,CAAA;QAChE,KAAK;;;;UACJ,SAAQ,GAAE;YACb,OAAQ,GAAG,OAAM,GAAE,MAAK,GAAE,SAAQ,GAAE,iBAAgB,CAAA,CAAA;MACxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGJ,SAAS,YAAY,KAAK;AACtB,SAAQ,OAAO,QAAQ,YACnB,OAAO,UAAU,eAAe,KAAK,KAAK,SAAS;AAC3D;;;ACIA,SAAS,aAAa,aAAaC,gBAAe,aAAa;AAC3D,SAAO,SAAU,UAAU;AACvB,QAAI;AACJ,kBAAc,KAAK,YAAY,WAAW,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,aAAa,QAAQ;AACxG,QAAIA,gBAAe;AACf,iBACMA,eAAc,MAAM,QAAQ,IAC5BA,eAAc,QAAQ;AAAA,IAChC;AACA,QAAI,aAAa;AACb,UAAI,OAAO,gBAAgB,YAAY;AACnC,oBAAY,QAAQ;AAAA,MACxB,WACS,YAAY,WAAW,GAAG;AAC/B,oBAAY,UAAU;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AACJ;;;;;mCC7BA;;;;;;;;;MAoBe,QAAK,KAAA,SAAA,SAAA,GAAG,KAAK,GACpB,qBAAkB,KAAA,SAAA,sBAAA,GAAG,KAAK,GAC1B,cAAW,KAAA,SAAA,eAAA,GAAG,MAAS,GACvB,WAAQ;IAAA;IAAA;IAAA;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA+HP,WAAW,SAAQ;MACrB,YAAY,MAAK,IAAG,QAAQ;MAC5B,sBAAsB;MACtB,oBAAoB,MAAK,IAAG,kBAAkB;QAQ5C,IAAI,WAAW,mBAAmB,KAAK,oBAAoB,QAAQ;MAGrE,UAAO,eAAG,KAAK;QACbC,cAAU,CAAI,GAAG,MAAM;AACzB,MAAE,gBAAgB;WACX;EACX;AACA,UAAO,MAAA,IAAQ,SAAU,IAAI,CAAA;;QAlF1B,aAAc,WAAW;;;;UA2EtB,UAAQ,QAAR,QAAQ;OAAK,GAAE,KAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;yBAWU,WAAW;;;;;;;;;;;;;;;;;6BAE1B;;;iCACD,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;yCAQP,WAAW;;;;;;;;;;;;yFAXoC,OAAO,CAAA,uDAe1CA,YAAU,IAAC,OAAO,GAAA,IAAEC,cAAa,CAAA,CAAA;;;;;;;mDACzC,WAAW;;;;;;;;;;;2DAEY,OAAO;;;;;;;;;sGA/K5C,YAAY,uBAmKF,WAAW,CAAA,uBANoC,OAAO,CAAA,mBAvJrE,YAAW,CAAA,iBA6Kc,aAAY,IAAC,WAAW,GAAA,IAAE,OAAO,EAAC,eAAe,YAAW,CAAA,CAAA;;;;;;;mEAD1D,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2EAOI,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2EAK9B,SAAS,GAAA,CAAI,SAAM,KAAK,GAAG;;gFAA3B,SAAS,GAAA,CAAI,SAAM,KAAK,KAAG,CAAAC,WAAd,SAAI;;;;uFAEV,IAAI,EAAC,WAAS,CAAAA,WAAA,gBAAA;;;qEAFR,IAAI,GAAA,QAAA,MAAA,IAGT,IAAI,EAAC,KAAK;;;qEAHL,IAAI,GAAA,QAAA,MAAA,IAID,IAAI,EAAC,aAAa;;;;;;;;;;;;;;;;;;;;;;;;wDALxC,OAAO,EAAA,UAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtMzB,IAAM,wBAAwB,CACjC;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAEJ,MACC;AACD,uBAAqB,aAAa,iBAAiB;AACnD,SAAO,MAAM,wBAAwB,eAAO;AAAA,IACxC,YAAY,SAAS;AACjB,YAAM,QAAQ,QAAQ;AACtB,cAAQ,QAAQ;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AACA,YAAM,OAAO;AAAA,IACjB;AAAA,EACJ;AACJ;;;;SC1BoB,YAAY,QAAQ,WAAW,SAAS,SAAS;AAE7D,SAAO,iBAAiB,WAAW,SAAS,OAAO;oBAChC;WACR,OAAO,oBAAoB,WAAW,SAAS,OAAO;EACjE;AACJ;wCAZJ;;;MAyCe,MAAG,KAAA,SAAA,OAAA,CAAA,GACV,YAAS,KAAA,SAAA,aAAA,CAAA,GACL,UAAO,KAAA,SAAA,WAAA,GAAC,MAAS,GACjB,UAAO,KAAA,SAAA,WAAA,GAAC,MAAS;MACrB,UAAO,eAAA,MAAO;EAAC,CAAC;QACd,SAAM,MAAO;QACf,OAAO,EAAA;SACF,IAAG,GAAC;mBACM;MAAC;IAChB;UACMC,WAAU,IAAG,EAAC;QAEhB,QAAO,KAAIA,UAAS;aACb,YAAYA,UAAS,UAAS,GAAE,QAAO,GAAE,QAAO,CAAA;IAC3D;iBACW;IAAC;EAChB;AAGA,YAAS,IAAC,OAAO,CAAA;;;;UADb,SAAU,OAAO,IAAG,GAAE,UAAS,GAAE,QAAO,GAAE,QAAO,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;ACtDzD,SAAS,aAAa,OAAO;AAEzB,MAAI,OAAO,iBAAiB,eAAe,iBAAiB,cAAc;AACtE,WAAO,CAAC,EAAE,MAAM,gBAAgB;AAAA,EACpC;AACA,SAAO,iBAAiB;AAC5B;AACA,SAAS,aAAa,OAAO;AACzB,MAAI,aAAa,CAAC,CAAC,MAAM;AACzB,SAAO;AACX;;;ACJA,SAAS,qBAAqB,cAAc;AACxC,SAAO,SAAU,OAAO;AACpB,QAAIC,gBAAe,iBAAiB;AACpC,QAAI,mBAAmB,CAACA,iBACnBA,iBAAgB,MAAM,WAAW;AACtC,QAAI,kBAAkB;AAClB,mBAAa,KAAK;AAAA,IACtB;AAAA,EACJ;AACJ;AACA,IAAI,mBAAmB,EAAE,OAAO,GAAG,OAAO,EAAE;AAC5C,SAAS,eAAe,GAAG,WAAW;AAClC,MAAI,cAAc,QAAQ;AAAE,gBAAY;AAAA,EAAQ;AAChD,MAAI,eAAe,EAAE,QAAQ,CAAC,KAAK,EAAE,eAAe,CAAC;AACrD,MAAI,QAAQ,gBAAgB;AAC5B,SAAO;AAAA,IACH,GAAG,MAAM,YAAY,GAAG;AAAA,IACxB,GAAG,MAAM,YAAY,GAAG;AAAA,EAC5B;AACJ;AACA,SAAS,eAAe,OAAO,WAAW;AACtC,MAAI,cAAc,QAAQ;AAAE,gBAAY;AAAA,EAAQ;AAChD,SAAO;AAAA,IACH,GAAG,MAAM,YAAY,GAAG;AAAA,IACxB,GAAG,MAAM,YAAY,GAAG;AAAA,EAC5B;AACJ;AACA,SAAS,iBAAiB,OAAO,WAAW;AACxC,MAAI,cAAc,QAAQ;AAAE,gBAAY;AAAA,EAAQ;AAChD,SAAO;AAAA,IACH,OAAO,aAAa,KAAK,IACnB,eAAe,OAAO,SAAS,IAC/B,eAAe,OAAO,SAAS;AAAA,EACzC;AACJ;AACA,SAAS,0BAA0B,OAAO;AACtC,SAAO,iBAAiB,OAAO,QAAQ;AAC3C;AACA,IAAI,cAAc,SAAU,SAAS,4BAA4B;AAC7D,MAAI,+BAA+B,QAAQ;AAAE,iCAA6B;AAAA,EAAO;AACjF,MAAI,WAAW,SAAU,OAAO;AAC5B,WAAO,QAAQ,OAAO,iBAAiB,KAAK,CAAC;AAAA,EACjD;AACA,SAAO,6BACD,qBAAqB,QAAQ,IAC7B;AACV;;;ACrDA,IAAI,YAAY,OAAO,WAAW;;;ACIlC,IAAI,wBAAwB,WAAY;AACpC,SAAO,aAAa,OAAO,kBAAkB;AACjD;AACA,IAAI,sBAAsB,WAAY;AAClC,SAAO,aAAa,OAAO,iBAAiB;AAChD;AACA,IAAI,sBAAsB,WAAY;AAClC,SAAO,aAAa,OAAO,gBAAgB;AAC/C;;;;ICHU,kBAAe;EACrB,aAAa;EACb,aAAa;EACb,WAAW;EACX,eAAe;EACf,aAAa;EACb,YAAY;EACZ,cAAc;EACd,cAAc;;IAGZ,kBAAe;EACjB,aAAa;EACb,aAAa;EACb,WAAW;EACX,eAAe;;SAEV,oBAAoB,MAAM;MAC3B,sBAAqB,GAAI;WAClB;EACX,WAAW,oBAAmB,GAAI;WACvB,gBAAgB,IAAI;EAC/B,WAAW,oBAAmB,GAAI;WACvB,gBAAgB,IAAI;EAC/B;SAEO;AACX;SACgB,gBACZ,QACA,WACA,SACA,SACF;SACS,YACH,QACA,oBAAoB,SAAS,GAC7B,YAAY,SAAO,cAAE,WAAc,aAAa,CAAA,GAChD,OAAO;AAEf;4CArDA;;;MA2De,MAAG,KAAA,SAAA,OAAA,CAAA,GACV,YAAS,KAAA,SAAA,aAAA,CAAA,GACT,UAAO,KAAA,SAAA,WAAA,GAAC,MAAS,GACjB,UAAO,KAAA,SAAA,WAAA,GAAC,MAAS;;;;;uDAFjB,UAAS,CAAA,iBAKN,oBAAoB,UAAS,CAAA,CAAA;uDAJhC,QAAO,CAAA,mBALN,WAAW,mBAIZ,UAAS,CAAA,iBAMR,QAAO,KAAI,YAAY,QAAO,GAAA,cAAE,UAAS,GAAK,aAAa,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDpE,IAAI;AAAA;AAAA,GAA4B,WAAY;AACxC,aAASC,YAAW,OAAO,UAAU,IAAI;AACrC,UAAI,QAAQ;AACZ,UAAI,KAAK,OAAO,SAAS,CAAC,IAAI,IAAI,qBAAqB,GAAG;AAI1D,WAAK,aAAa;AAIlB,WAAK,gBAAgB;AAIrB,WAAK,oBAAoB;AAIzB,WAAK,WAAW,CAAC;AACjB,WAAK,cAAc,WAAY;AAC3B,YAAI,EAAE,MAAM,iBAAiB,MAAM;AAC/B;AACJ,YAAIC,QAAO,WAAW,MAAM,mBAAmB,MAAM,OAAO;AAC5D,YAAI,eAAe,MAAM,eAAe;AAIxC,YAAI,0BAA0B,SAASA,MAAK,QAAQ,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,KAAK;AACvE,YAAI,CAAC,gBAAgB,CAAC;AAClB;AACJ,YAAIC,SAAQD,MAAK;AACjB,YAAIE,aAAY,aAAa,EAAE;AAC/B,cAAM,QAAQ,KAAK,OAAO,OAAO,OAAO,OAAO,CAAC,GAAGD,MAAK,GAAG,EAAE,WAAWC,WAAU,CAAC,CAAC;AACpF,YAAIC,MAAK,MAAM,UAAU,UAAUA,IAAG,SAAS,SAASA,IAAG;AAC3D,YAAI,CAAC,cAAc;AACf,qBAAW,QAAQ,MAAM,eAAeH,KAAI;AAC5C,gBAAM,aAAa,MAAM;AAAA,QAC7B;AACA,kBAAU,OAAO,MAAM,eAAeA,KAAI;AAAA,MAC9C;AACA,WAAK,oBAAoB,SAAUI,QAAOJ,OAAM;AAC5C,cAAM,gBAAgBI;AACtB,cAAM,oBAAoB,eAAeJ,OAAM,MAAM,kBAAkB;AAEvE,YAAI,aAAaI,MAAK,KAAKA,OAAM,YAAY,GAAG;AAC5C,gBAAM,gBAAgBA,QAAOJ,KAAI;AACjC;AAAA,QACJ;AAEA,mBAAK,OAAO,MAAM,aAAa,IAAI;AAAA,MACvC;AACA,WAAK,kBAAkB,SAAUI,QAAOJ,OAAM;AAC1C,cAAM,IAAI;AACV,YAAIG,MAAK,MAAM,UAAU,QAAQA,IAAG,OAAO,eAAeA,IAAG;AAC7D,YAAI,UAAU,WAAW,eAAeH,OAAM,MAAM,kBAAkB,GAAG,MAAM,OAAO;AACtF,YAAI,MAAM,cAAc,OAAO;AAC3B,gBAAMI,QAAO,OAAO;AAAA,QACxB;AACA,wBAAgB,aAAaA,QAAO,OAAO;AAAA,MAC/C;AAEA,UAAI,aAAa,KAAK,KAAK,MAAM,QAAQ,SAAS;AAC9C;AACJ,WAAK,WAAW;AAChB,WAAK,qBAAqB;AAC1B,UAAI,OAAO,iBAAiB,KAAK;AACjC,UAAI,cAAc,eAAe,MAAM,KAAK,kBAAkB;AAC9D,UAAI,QAAQ,YAAY;AACxB,UAAI,YAAY,aAAa,EAAE;AAC/B,WAAK,UAAU,CAAC,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE,UAAqB,CAAC,CAAC;AACjF,UAAI,iBAAiB,SAAS;AAC9B,wBACI,eAAe,OAAO,WAAW,aAAa,KAAK,OAAO,CAAC;AAC/D,WAAK,kBAAkB,KAAK,gBAAgB,QAAQ,eAAe,KAAK,iBAAiB,GAAG,gBAAgB,QAAQ,aAAa,KAAK,eAAe,GAAG,gBAAgB,QAAQ,iBAAiB,KAAK,eAAe,CAAC;AAAA,IAC1N;AACA,IAAAL,YAAW,UAAU,iBAAiB,SAAU,UAAU;AACtD,WAAK,WAAW;AAAA,IACpB;AACA,IAAAA,YAAW,UAAU,MAAM,WAAY;AACnC,WAAK,mBAAmB,KAAK,gBAAgB;AAC7C,iBAAW,OAAO,KAAK,WAAW;AAAA,IACtC;AACA,WAAOA;AAAA,EACX,GAAE;AAAA;AACF,SAAS,eAAe,MAAM,oBAAoB;AAC9C,SAAO,qBAAqB,EAAE,OAAO,mBAAmB,KAAK,KAAK,EAAE,IAAI;AAC5E;AACA,SAAS,cAAc,GAAG,GAAG;AACzB,SAAO,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE;AACxC;AACA,SAAS,WAAW,IAAI,SAAS;AAC7B,MAAI,QAAQ,GAAG;AACf,SAAO;AAAA,IACH;AAAA,IACA,OAAO,cAAc,OAAO,gBAAgB,OAAO,CAAC;AAAA,IACpD,QAAQ,cAAc,OAAO,iBAAiB,OAAO,CAAC;AAAA,IACtD,UAAUM,aAAY,SAAS,GAAG;AAAA,EACtC;AACJ;AACA,SAAS,iBAAiB,SAAS;AAC/B,SAAO,QAAQ,CAAC;AACpB;AACA,SAAS,gBAAgB,SAAS;AAC9B,SAAO,QAAQ,QAAQ,SAAS,CAAC;AACrC;AACA,SAASA,aAAY,SAAS,WAAW;AACrC,MAAI,QAAQ,SAAS,GAAG;AACpB,WAAO,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,EACxB;AACA,MAAI,IAAI,QAAQ,SAAS;AACzB,MAAI,mBAAmB;AACvB,MAAI,YAAY,gBAAgB,OAAO;AACvC,SAAO,KAAK,GAAG;AACX,uBAAmB,QAAQ,CAAC;AAC5B,QAAI,UAAU,YAAY,iBAAiB,YACvC,sBAAsB,SAAS,GAAG;AAClC;AAAA,IACJ;AACA;AAAA,EACJ;AACA,MAAI,CAAC,kBAAkB;AACnB,WAAO,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,EACxB;AACA,MAAI,QAAQ,UAAU,YAAY,iBAAiB,aAAa;AAChE,MAAI,SAAS,GAAG;AACZ,WAAO,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,EACxB;AACA,MAAI,kBAAkB;AAAA,IAClB,IAAI,UAAU,IAAI,iBAAiB,KAAK;AAAA,IACxC,IAAI,UAAU,IAAI,iBAAiB,KAAK;AAAA,EAC5C;AACA,MAAI,gBAAgB,MAAM,UAAU;AAChC,oBAAgB,IAAI;AAAA,EACxB;AACA,MAAI,gBAAgB,MAAM,UAAU;AAChC,oBAAgB,IAAI;AAAA,EACxB;AACA,SAAO;AACX;;;;0CC1JA;;;;;;MAae,QAAK,KAAA,SAAA,SAAA,CAAA,GACZC,iBAAa,KAAA,SAAA,iBAAA,CAAA,GACb,WAAQ,KAAA,SAAA,YAAA,CAAA;YAC6C,MAAK,GAAxD,QAAK,eAAA,IAAL,KAAK,GAAE,aAAU,eAAA,IAAV,UAAU,GAAE,WAAQ,eAAA,IAAR,QAAQ,GAAE,oBAAiB,eAAA,IAAjB,iBAAiB;MAGhD,aAAU,eAAG,IAAI;QACf,MAAM,WAAW,mBAAmB,KAAG,oBAAoB,SAAQ,CAAA;cAC9CC,KAAI,GAAG,GAA7B,qBAAkB,eAAA,MAAlB,kBAAkB;MAEnB,WAAQ,eAAA;IACR,gBAAc,IAAE,iBAAiB;IACjC,SAAO,IAAE,UAAU;IACnB,QAAM,IAAE,KAAK;IACb,OAAK,CACD,OACA,SACC;UACD,YAAa,IAAI;UACjB,QAAQ,KAAA,IAAI,QAAQ,EAAC,OAAO,IAAI;IACpC;;WAcK,cAAc,OAAO;QAC1B,YAAU,IAAO,WAAW,OAAK,IAAE,QAAQ,GAAA,EACvC,oBAAkB,IAAlB,kBAAkB,EAAA,CAAA,CAAA;EAE1B;AACA,cAAW,MAAK;0BACR,UAAU,GAAK,MAAI,KAAA,GAAE;UACrB,UAAU,EAAC,eAAc,IAAC,QAAQ,CAAA;IACtC;EACJ,CAAC;AACD,YAAS,MAAA,IAAO,UAAU,KAAA,IAAI,UAAU,EAAC,IAAG,CAAA;;;;;YAxCtC,OAAK,QAAL,KAAK;YAAE,YAAU,QAAV,UAAU;YAAE,UAAQ,QAAR,QAAQ;YAAE,mBAAiB,QAAjB,iBAAiB;SAAK,MAAK,CAAA;;;;;;UAC1D,cAAY,IAAG,KAAK,KAAA,IAAI,UAAU,KAAA,IAAI,QAAQ,KAAA,IAAI,iBAAiB,CAAA;;;;;UAIlE,oBAAkB,QAAlB,kBAAkB;OAAI,KAAI,CAAA;;;;;UAa3B,UAAQ;QACR,gBAAc,IAAE,iBAAiB;QACjC,SAAO,IAAE,UAAU;QACnB,QAAM,IAAE,KAAK;QACb,OAAK,CACD,OACA,SACC;cACD,YAAa,IAAI;cACjB,QAAQ,KAAA,IAAI,QAAQ,EAAC,OAAO,IAAI;QACpC;;;;;;;;;0CAe8D,YAAY,KAAI,aAAa;;;;iBAA7ED,eAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDnC,IAAI,gBAAgB,SAAU,QAAQE,QAAO;AACzC,MAAI,CAACA,QAAO;AACR,WAAO;AAAA,EACX,WACS,WAAWA,QAAO;AACvB,WAAO;AAAA,EACX,OACK;AACD,WAAO,cAAc,QAAQA,OAAM,aAAa;AAAA,EACpD;AACJ;;;ACjBA,SAAS,WAAW,MAAM;AACtB,MAAI,OAAO;AACX,SAAO,WAAY;AACf,QAAI,WAAW,WAAY;AACvB,aAAO;AAAA,IACX;AAEA,QAAI,SAAS,MAAM;AACf,aAAO;AACP,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AACJ;AACA,IAAI,uBAAuB,WAAW,gBAAgB;AACtD,IAAI,qBAAqB,WAAW,cAAc;AAClD,SAAS,cAAcC,OAAM;AACzB,MAAI,OAAO;AACX,MAAIA,UAAS,KAAK;AAEd,WAAO,mBAAmB;AAAA,EAC9B,WACSA,UAAS,KAAK;AAEnB,WAAO,qBAAqB;AAAA,EAChC,OACK;AACD,QAAI,mBAAmB,qBAAqB;AAC5C,QAAI,iBAAiB,mBAAmB;AACxC,QAAI,oBAAoB,gBAAgB;AACpC,aAAO,WAAY;AACf,yBAAiB;AACjB,uBAAe;AAAA,MACnB;AAAA,IACJ,OACK;AAED,UAAI;AACA,yBAAiB;AACrB,UAAI;AACA,uBAAe;AAAA,IACvB;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,eAAe;AAGpB,MAAI,kBAAkB,cAAc,IAAI;AACxC,MAAI,CAAC;AACD,WAAO;AACX,kBAAgB;AAChB,SAAO;AACX;;;;0CC1DA;;;;;;;;MAYe,QAAK,KAAA,SAAA,SAAA,CAAA,GAAEC,iBAAa,KAAA,SAAA,iBAAA,CAAA;MAK3B,aAAa;MACb,4BAA4B;WAEvB,2BAA2B;AAChC,gCAAyB;AACzB,gCAA4B;EAChC;WAES,kBAAkB;AACvB,6BAAwB;AACxB,iBAAa;AACb,IAAAA,eAAa,EAAC,gBAAgB,UAAU,cAAc,KAAK,KAAK;YACxD,aAAY;EACxB;WAES,YAAY,OAAO,MAAM;SAEzB,gBAAe,EAAA;KAMnB,cAAcA,eAAa,EAAC,YAAW,GAAI,MAAM,MAAM,QAClD,WAAW,IAAG,OAAO,IAAI,QACzB,KAAK,IAAG,OAAO,IAAI;EAC7B;WAES,gBAAgB,OAAO,MAAM;SAC7B,gBAAe,EAAA;QAEpB,WAAW,IAAG,OAAO,IAAI;EAC7B;WAES,cAAc,OAAO,MAAM;QAI5B,WAAU;AACd,6BAAwB;AACxB,iBAAa;AAEb,gCAA4B,KACxB,gBAAgB,QAAQ,aAAa,WAAW,GAChD,gBAAgB,QAAQ,iBAAiB,eAAe,CAAA;QAG5D,UAAU,IAAG,OAAO,IAAI;AAExB,IAAAA,eAAa,EAAC,gBAAgB,UAAU,cAAc,KAAK,IAAI;EACnE;AAEA,YAAU,wBAAwB;;;;;YAvD5B,OAAK,QAAL,KAAK;YAAE,YAAU,QAAV,UAAU;YAAE,aAAW,QAAX,WAAW;YAAE,UAAQ,QAAR,QAAQ;SAAK,MAAK,CAAA;;;;;;UACrD,mBAAiB,IAAG,KAAK,KAAA,IAAI,UAAU,KAAA,IAAI,WAAW,KAAA,IAAI,QAAQ,CAAA;;;;;;;;0CA4D5D,iBAAiB,IAAG,gBAAgB,MAAS;;;;iBAFjDA,eAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SClET,iBACTC,gBACA,UACA,UACF;UACU,OAAO,SAAS;SACf,aAAa,KAAK,KAAK,aAAY,EAAA;AACxC,eAAW,OAAO,IAAI;AAEtB,IAAAA,eAAc,gBAAgB,UAAU,cAAc,OAAO,QAAQ;EACzE;AACJ;;4CAlBA;;;MAyBe,QAAK,KAAA,SAAA,SAAA,CAAA,GACZA,iBAAa,KAAA,SAAA,iBAAA,CAAA;YAC4B,MAAK,GAA7C,eAAY,eAAA,IAAZ,YAAY,GAAE,aAAU,eAAA,IAAV,UAAU,GAAE,aAAU,eAAA,IAAV,UAAU;;;;;YACpC,cAAY,QAAZ,YAAY;YAAE,YAAU,QAAV,UAAU;YAAE,YAAU,QAAV,UAAU;SAAI,MAAK,CAAA;;;;;;;;2CAD7C,YAAY,OAAc,UAAU,mBADrCA,eAAa,CAAA,qBAImD,YAAY,KAAA,IAAI,UAAU,IAC5F,iBAAiBA,eAAa,GAAE,MAAI,IAAE,YAAY,CAAA,IAClD,MAAS;;;;iBAFOA,eAAa;;;;;;;;;;;;;;;;2CAHZ,UAAU,OAAE,UAAU,mBADrCA,eAAa,CAAA,qBAOmD,UAAU,KAAA,IAAI,UAAU,IAC1F,iBAAiBA,eAAa,GAAE,OAAK,IAAE,UAAU,CAAA,IACjD,MAAS;;;;iBAFOA,eAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CCjCnC;;;;MASe,QAAK,KAAA,SAAA,SAAA,CAAA,GACZC,iBAAa,KAAA,SAAA,iBAAA,CAAA;QAEX,UAAO,MAAS;AAClB,IAAAA,eAAa,EAAC,gBAAgB,UAAU,cAAc,OAAO,IAAI;EACrE;QAEM,SAAM,MAAS;AACjB,IAAAA,eAAa,EAAC,gBAAgB,UAAU,cAAc,OAAO,KAAK;EACtE;;;UAPM,YAAU,QAAV,UAAU;OAAI,MAAK,CAAA;;;;;;;0CAS+B,UAAU,IAAG,UAAU,MAAS;;;;iBAA1EA,eAAa;;;;;;;;;;mDACgC,UAAU,IAAG,SAAS,MAAS;;;;yBAAxEA,eAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCCrBnC;;;MAWe,QAAK,KAAA,SAAA,SAAA,CAAA,GACZC,iBAAa,KAAA,SAAA,iBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJd,IAAM,oBAAoB,CAAC,aAAW;AACzC,cAAY,aAAa,QAAQ;AACjC,SAAO;AACX;;;ACAA,IAAM,oBAAoB;AAAA,EACtB,KAAK;AAAA,EACL,OAAO;AAAA,EACP,OAAO;AACX;;;ACVA;;;ACAA;AAQA,SAAS,iBAAiB,OAAO,IAAI,SAAS;AAC1C,MAAI,MAAM,GAAG,KAAK,MAAM,GAAG;AAC3B,MAAI,QAAQ,UAAa,QAAQ,KAAK;AAElC,YAAQ,UAAU,IAAI,KAAK,OAAO,QAAQ,GAAG,IAAI,KAAK,IAAI,OAAO,GAAG;AAAA,EACxE,WACS,QAAQ,UAAa,QAAQ,KAAK;AAEvC,YAAQ,UAAU,IAAI,KAAK,OAAO,QAAQ,GAAG,IAAI,KAAK,IAAI,OAAO,GAAG;AAAA,EACxE;AACA,SAAO;AACX;AASA,SAAS,wBAAwB,OAAO,QAAQC,WAAU,aAAa,SAAS;AAE5E,MAAI,MAAM,QAAQ,SAASA;AAC3B,SAAO,cAAc,iBAAiB,KAAK,aAAa,OAAO,IAAI;AACvE;AAMA,SAAS,4BAA4B,MAAM,KAAK,KAAK;AACjD,SAAO;AAAA,IACH,KAAK,QAAQ,SAAY,KAAK,MAAM,MAAM;AAAA,IAC1C,KAAK,QAAQ,SACP,KAAK,MAAM,OAAO,KAAK,MAAM,KAAK,OAClC;AAAA,EACV;AACJ;AAKA,SAAS,wBAAwB,WAAW,IAAI;AAC5C,MAAI,MAAM,GAAG,KAAK,OAAO,GAAG,MAAM,SAAS,GAAG,QAAQ,QAAQ,GAAG;AACjE,SAAO;AAAA,IACH,GAAG,4BAA4B,UAAU,GAAG,MAAM,KAAK;AAAA,IACvD,GAAG,4BAA4B,UAAU,GAAG,KAAK,MAAM;AAAA,EAC3D;AACJ;AAIA,SAAS,4BAA4B,YAAY,iBAAiB;AAC9D,MAAI;AACJ,MAAI,MAAM,gBAAgB,MAAM,WAAW;AAC3C,MAAI,MAAM,gBAAgB,MAAM,WAAW;AAG3C,MAAI,gBAAgB,MAAM,gBAAgB,MACtC,WAAW,MAAM,WAAW,KAAK;AACjC,SAAK,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC;AAAA,EACvD;AACA,SAAO;AAAA,IACH,KAAK,WAAW,MAAM;AAAA,IACtB,KAAK,WAAW,MAAM;AAAA,EAC1B;AACJ;AAIA,SAAS,wBAAwB,WAAW,gBAAgB;AACxD,SAAO;AAAA,IACH,GAAG,4BAA4B,UAAU,GAAG,eAAe,CAAC;AAAA,IAC5D,GAAG,4BAA4B,UAAU,GAAG,eAAe,CAAC;AAAA,EAChE;AACJ;AAIA,SAAS,yBAAyB,MAAM,aAAaA,WAAU;AAC3D,MAAI,aAAa,KAAK,MAAM,KAAK;AACjC,MAAI,MAAM,IAAI,YAAY,KAAK,YAAY,MAAM,YAAYA,SAAQ;AACrE,SAAO,EAAE,KAAU,KAAK,MAAM,WAAW;AAC7C;AAIA,SAAS,sBAAsB,QAAQ,aAAa;AAChD,MAAI,sBAAsB,CAAC;AAC3B,MAAI,YAAY,QAAQ,QAAW;AAC/B,wBAAoB,MAAM,YAAY,MAAM,OAAO;AAAA,EACvD;AACA,MAAI,YAAY,QAAQ,QAAW;AAC/B,wBAAoB,MAAM,YAAY,MAAM,OAAO;AAAA,EACvD;AACA,SAAO;AACX;AACA,IAAI,iBAAiB;AAIrB,SAAS,mBAAmB,aAAa;AACrC,MAAI,gBAAgB,OAAO;AACvB,kBAAc;AAAA,EAClB,WACS,gBAAgB,MAAM;AAC3B,kBAAc;AAAA,EAClB;AACA,SAAO;AAAA,IACH,GAAG,mBAAmB,aAAa,QAAQ,OAAO;AAAA,IAClD,GAAG,mBAAmB,aAAa,OAAO,QAAQ;AAAA,EACtD;AACJ;AACA,SAAS,mBAAmB,aAAa,UAAU,UAAU;AACzD,SAAO;AAAA,IACH,KAAK,oBAAoB,aAAa,QAAQ;AAAA,IAC9C,KAAK,oBAAoB,aAAa,QAAQ;AAAA,EAClD;AACJ;AACA,SAAS,oBAAoB,aAAa,OAAO;AAC7C,MAAI;AACJ,SAAO,OAAO,gBAAgB,WACxB,eACC,KAAK,YAAY,KAAK,OAAO,QAAQ,OAAO,SAAS,KAAK;AACrE;;;AC5HA,SAAS,4BAA4BC,gBAAe,cAAc;AAC9D,MAAI,iBAAiB,QAAQ;AAAE,mBAAe;AAAA,EAAM;AACpD,MAAI,mBAAmBA,eAAc,oBAAoB;AACzD,MAAI,CAAC;AACD,WAAO;AACX,MAAI;AACJ,MAAI,cAAc;AACd,aAAS,mBAAmB,iBAAiB,WAAW,QAAQA,eAAc,WAAW,MAAM;AAC/F,wBAAoB,QAAQ,iBAAiB,gBAAgB,CAAC;AAAA,EAClE,OACK;AACD,aAAS,mBAAmB,iBAAiB,eAAe,EAAE,QAAQA,eAAc,eAAe,EAAE,MAAM;AAAA,EAC/G;AACA,WAAS,SAAU,MAAM;AACrB,WAAOA,eAAc,wBAAwB,MAAM,OAAO,IAAI,EAAE,KAAK,OAAO,IAAI,EAAE,KAAK,IAAI;AAAA,EAC/F,CAAC;AACD,SAAO;AACX;;;AFHA,IAAI,sBAAsB,oBAAI,QAAQ;AAItC,IAAI;AACJ,IAAI;AAAA;AAAA,GAA2C,WAAY;AACvD,aAASC,2BAA0B,IAAI;AACnC,UAAIC,iBAAgB,GAAG;AAMvB,WAAK,aAAa;AAMlB,WAAK,mBAAmB;AAMxB,WAAK,cAAc;AAMnB,WAAK,UAAU,QAAQ;AAMvB,WAAK,QAAQ,CAAC;AAId,WAAK,wBAAwB;AAQ7B,WAAK,iBAAiB;AAAA,QAClB,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAGA,WAAK,cAAc,CAAC;AAIpB,WAAK,iBAAiB;AAItB,WAAK,aAAa;AAClB,WAAK,gBAAgBA;AACrB,WAAK,cAAc,uBAAuB;AAC1C,0BAAoB,IAAIA,gBAAe,IAAI;AAAA,IAC/C;AAMA,IAAAD,2BAA0B,UAAU,QAAQ,SAAU,aAAa,IAAI;AACnE,UAAI,QAAQ;AACZ,UAAI,KAAK,OAAO,SAAS,CAAC,IAAI,IAAI,KAAK,GAAG,cAAc,eAAe,OAAO,SAAS,QAAQ,IAAI,iBAAiB,GAAG;AACvH,UAAI,iBAAiB,SAAU,OAAO;AAClC,YAAIE;AAGJ,cAAM,WAAW;AAMjB,YAAI,eAAe,0BAA0B,KAAK,EAAE;AACpD,SAACA,MAAK,MAAM,kBAAkB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,KAAK;AAC5E,cAAM,eAAe,YAAY,SAAU,MAAM,OAAO;AACpD,cAAI,YAAY,2BAA2B,MAAM,aAAa;AAC9D,cAAI,WAAW,0BAA0B,MAAM,aAAa;AAC5D,cAAI,OAAO,cAAc,cAAc,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,QAAQ,CAAC;AAC/E,cAAI,6BAA6B;AAKjC,gBAAM,aAAa,KAAK,MAAM,cAAc,qBAAqB;AACjE,gBAAM,WAAY;AACd,iBAAK,QAAQ,SAAUC,UAAS;AAAE,qBAAOA,SAAQ,eAAe;AAAA,YAAG,CAAC;AAAA,UACxE,CAAC;AACD,eAAK,WAAY;AACb,oCAAwB,MAAM,aAAa;AAC3C,qBAAS,QAAQ,uBAAuB;AAAA,UAC5C,CAAC;AACD,gBAAM,WAAY;AACd,iBAAK,QAAQ,SAAUA,UAAS;AAAE,qBAAOA,SAAQ,iBAAiB;AAAA,YAAG,CAAC;AACtE,gBAAI,cAAc;AACd,2CAA6B,MAAM,aAAa,YAAY;AAAA,YAChE;AAAA,UACJ,CAAC;AACD,eAAK,WAAY;AACb,gBAAI,iBAAiB,QAAQ,MAAM,mBAAmB,GAAG,KAAK,CAAC,MAAM,eAAe,CAAC;AACrF,gBAAI,CAAC,gBAAgB;AACjB,oBAAM,cAAc,uBAAuB,MAAM,MAAM,cAAc,mBAAmB,KAAK,CAAC;AAAA,YAClG;AACA,kBAAM,cAAc,+BAA+B;AAYnD,gBAAI,aAAa,MAAM,cAAc;AACrC,qBAAS,SAAU,MAAM;AACrB,kBAAI,CAAC,4BAA4B;AAC7B,oBAAID,MAAK,WAAW,OAAO,IAAI,GAAG,MAAMA,IAAG,KAAK,MAAMA,IAAG;AACzD,sBAAM,eAAe,IAAI,IAAI,iBACvB,eAAe,IAAI,IACnB,SAAS,KAAK,KAAK,aAAa,IAAI,CAAC;AAAA,cAC/C;AAKA,kBAAI,YAAY,MAAM,mBAAmB,IAAI;AAC7C,kBAAI,WAAW;AACX,sBAAM,YAAY,IAAI,IAAI,UAAU,IAAI;AAAA,cAC5C;AAAA,YACJ,CAAC;AAAA,UACL,CAAC;AACD,gBAAM,WAAY;AACd,sBAAU,OAAO;AACjB,sBAAU,UAAU;AACpB,sBAAU,OAAO;AACjB,sBAAU,WAAW;AAAA,UACzB,CAAC;AACD,eAAK,WAAY;AAAE,mBAAO,MAAM,uBAAuB;AAAA,UAAG,CAAC;AAAA,QAC/D,CAAC;AAAA,MACL;AACA,UAAI,UAAU,SAAU,OAAO,MAAM;AACjC,YAAIA,KAAIE,KAAIC;AAEZ,YAAI,KAAK,MAAM,OAAOC,QAAO,GAAG,MAAM,kBAAkB,GAAG;AAC3D,YAAIA,SAAQ,CAAC,iBAAiB;AAC1B,cAAI,MAAM;AACN,kBAAM,eAAe;AACzB,gBAAM,iBAAiB,cAAcA,KAAI;AAEzC,cAAI,CAAC,MAAM;AACP;AAAA,QACR;AACA,oBAAY;AAEZ,cAAM,aAAa;AACnB,cAAM,mBAAmB;AAEzB,SAACF,OAAMF,MAAK,MAAM,OAAO,iBAAiB,QAAQE,QAAO,SAAS,SAASA,IAAG,KAAKF,KAAI,OAAO,IAAI;AAClG,SAACG,MAAK,MAAM,cAAc,oBAAoB,QAAQA,QAAO,SAAS,SAASA,IAAG,UAAU,cAAc,MAAM,IAAI;AAAA,MACxH;AACA,UAAI,SAAS,SAAU,OAAO,MAAM;AAChC,YAAIH,KAAIE,KAAIC,KAAI;AAChB,YAAI,KAAK,MAAM,OAAO,kBAAkB,GAAG,iBAAiB,oBAAoB,GAAG;AAEnF,YAAI,CAAC,mBAAmB,CAAC,MAAM;AAC3B;AACJ,YAAI,SAAS,KAAK;AAElB,YAAI,qBAAqB,MAAM,qBAAqB,MAAM;AACtD,gBAAM,mBAAmB,oBAAoB,MAAM;AAEnD,cAAI,MAAM,qBAAqB,MAAM;AACjC,aAACD,OAAMF,MAAK,MAAM,OAAO,qBAAqB,QAAQE,QAAO,SAAS,SAASA,IAAG,KAAKF,KAAI,MAAM,gBAAgB;AAAA,UACrH;AACA;AAAA,QACJ;AAEA,cAAM,WAAW,KAAK,KAAK,OAAO,MAAM;AACxC,cAAM,WAAW,KAAK,KAAK,OAAO,MAAM;AAExC,SAAC,MAAMG,MAAK,MAAM,OAAO,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,OAAO,IAAI;AAE7F,2BAAmB;AAAA,MACvB;AACA,UAAI,eAAe,SAAU,OAAO,MAAM;AACtC,eAAO,MAAM,KAAK,OAAO,IAAI;AAAA,MACjC;AACA,UAAI,qBAAqB,KAAK,MAAM;AACpC,WAAK,aAAa,IAAI,WAAW,aAAa;AAAA,QAC1C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ,GAAG,EAAE,mBAAuC,CAAC;AAAA,IACjD;AACA,IAAAL,2BAA0B,UAAU,yBAAyB,WAAY;AACrE,UAAI,QAAQ;AACZ,UAAI,KAAK,KAAK,OAAO,kBAAkB,GAAG,iBAAiB,cAAc,GAAG;AAC5E,UAAI,SAAS,KAAK,cAAc,eAAe,EAAE;AACjD,UAAI,iBAAiB;AACjB,aAAK,cAAc,YAAY,eAAe,IACxC,KAAK,sBAAsB,QAAQ,eAAe,IAClD,wBAAwB,QAAQ,eAAe;AAAA,MACzD,OACK;AACD,aAAK,cAAc;AAAA,MACvB;AACA,WAAK,UAAU,mBAAmB,WAAW;AAK7C,UAAI,KAAK,eAAe,CAAC,KAAK,uBAAuB;AACjD,iBAAS,SAAU,MAAM;AACrB,cAAI,MAAM,mBAAmB,IAAI,GAAG;AAChC,kBAAM,YAAY,IAAI,IAAI,sBAAsB,OAAO,IAAI,GAAG,MAAM,YAAY,IAAI,CAAC;AAAA,UACzF;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,IAAAA,2BAA0B,UAAU,wBAAwB,SAAU,WAAW,aAAa;AAC1F,UAAI,KAAK,KAAK,OAAO,2BAA2B,GAAG,0BAA0B,qBAAqB,GAAG;AACrG,UAAI,qBAAqB,YAAY;AACrC,gBAAU,uBAAuB,MAAM,wGAAwG;AAC/I,WAAK,iBAAiB,eAAe,oBAAoB,kBAAkB;AAC3E,UAAI,sBAAsB,wBAAwB,WAAW,KAAK,cAAc;AAKhF,UAAI,0BAA0B;AAC1B,YAAI,kBAAkB,yBAAyB,4BAA4B,mBAAmB,CAAC;AAC/F,aAAK,wBAAwB,CAAC,CAAC;AAC/B,YAAI,iBAAiB;AACjB,gCAAsB,4BAA4B,eAAe;AAAA,QACrE;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,IAAAA,2BAA0B,UAAU,aAAa,WAAY;AACzD,UAAI,IAAI;AACR,WAAK,cAAc,uBAAuB;AAC1C,OAAC,KAAK,KAAK,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,IAAI;AAC1E,WAAK,aAAa;AAClB,WAAK,cAAc,KAAK,WAAW,IAAI;AACvC,WAAK,aAAa;AAClB,UAAI,CAAC,KAAK,MAAM,mBAAmB,KAAK,gBAAgB;AACpD,aAAK,eAAe;AACpB,aAAK,iBAAiB;AAAA,MAC1B;AACA,OAAC,KAAK,KAAK,cAAc,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG,UAAU,cAAc,MAAM,KAAK;AAAA,IACxH;AACA,IAAAA,2BAA0B,UAAU,OAAO,SAAU,OAAO,MAAM;AAC9D,UAAI,IAAI,IAAI;AACZ,OAAC,KAAK,KAAK,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAI;AACnE,WAAK,aAAa;AAClB,UAAI,aAAa,KAAK;AACtB,WAAK,WAAW;AAChB,UAAI,CAAC;AACD;AACJ,UAAI,WAAW,KAAK;AACpB,WAAK,eAAe,QAAQ;AAC5B,OAAC,MAAM,KAAK,KAAK,OAAO,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,IAAI,OAAO,IAAI;AAAA,IACnG;AACA,IAAAA,2BAA0B,UAAU,eAAe,SAAU,OAAO;AAChE,UAAI,QAAQ;AACZ,aAAO,SAAS,SAAU,MAAM;AAC5B,YAAIM,QAAO,MAAM,MAAM;AAEvB,YAAI,CAAC,WAAW,MAAMA,OAAM,MAAM,gBAAgB;AAC9C;AACJ,YAAI,YAAY,MAAM,mBAAmB,IAAI;AAC7C,YAAI,WAAW;AACX,cAAI,MAAM,MAAM,cAAc,eAAe,EAAE;AAC/C,cAAI,WAAW,IAAI,IAAI,EAAE,MAAM,IAAI,IAAI,EAAE;AACzC,cAAI,SAAS,IAAI,IAAI,EAAE,MAAM,WAAW;AACxC,cAAI,SAAS,MAAM,IAAI,IAAI;AAC3B,gBAAM,YAAY,IAAI,IAAI,MAAM,IAAI;AACpC,oBAAU,IAAI,MAAM;AAAA,QACxB,OACK;AACD,gBAAM,eAAe,IAAI,IAAI;AAC7B,iBAAO;AAAA,QACX;AAAA,MACJ,CAAC,EAAE,SAAS,IAAI;AAAA,IACpB;AAIA,IAAAN,2BAA0B,UAAU,aAAa,SAAU,MAAM,OAAO,QAAQ;AAC5E,UAAIM,QAAO,KAAK,MAAM;AAEtB,UAAI,CAAC,WAAW,MAAMA,OAAM,KAAK,gBAAgB;AAC7C;AACJ,aAAO,KAAK,mBAAmB,IAAI,IAC7B,KAAK,sBAAsB,MAAM,MAAM,IACvC,KAAK,wBAAwB,MAAM,KAAK;AAAA,IAClD;AACA,IAAAN,2BAA0B,UAAU,wBAAwB,SAAU,MAAM,QAAQ;AAChF,UAAI,YAAY,KAAK,mBAAmB,IAAI;AAC5C,UAAI,CAAC,UAAU,CAAC;AACZ;AACJ,UAAI,YAAY,KAAK,YAAY,IAAI,IAAI,OAAO,IAAI;AACpD,UAAI,SAAS,KAAK,cACZ,iBAAiB,WAAW,KAAK,YAAY,IAAI,GAAG,KAAK,QAAQ,IAAI,CAAC,IACtE;AACN,gBAAU,IAAI,MAAM;AAAA,IACxB;AACA,IAAAA,2BAA0B,UAAU,0BAA0B,SAAU,MAAM,OAAO;AACjF,UAAI;AAEJ,UAAI,aAAa,KAAK,cAAc,eAAe,EAAE,OAAO,IAAI;AAGhE,UAAI,aAAa,WAAW,MAAM,WAAW;AAE7C,UAAI,eAAe,KAAK,eAAe,IAAI;AAE3C,UAAI,MAAM,wBAAwB,MAAM,IAAI,GAAG,YAAY,eAAe,KAAK,KAAK,iBAAiB,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAI,GAAG,KAAK,QAAQ,IAAI,CAAC;AAElK,WAAK,cAAc,wBAAwB,MAAM,KAAK,MAAM,UAAU;AAAA,IAC1E;AACA,IAAAA,2BAA0B,UAAU,WAAW,SAAU,IAAI;AACzD,UAAI,KAAK,GAAG,MAAMM,QAAO,OAAO,SAAS,QAAQ,IAAI,KAAK,GAAG,mBAAmB,oBAAoB,OAAO,SAAS,QAAQ,IAAI,KAAK,GAAG,iBAAiB,kBAAkB,OAAO,SAAS,QAAQ,IAAI,KAAK,GAAG,iBAAiB,kBAAkB,OAAO,SAAS,QAAQ,IAAI,KAAK,GAAG,aAAa,cAAc,OAAO,SAAS,iBAAiB,IAAI,KAAK,GAAG,cAAc,eAAe,OAAO,SAAS,OAAO,IAAI,iBAAiB,OAAO,IAAI,CAAC,QAAQ,qBAAqB,mBAAmB,mBAAmB,eAAe,cAAc,CAAC;AACphB,WAAK,QAAQ,OAAO,OAAO;AAAA,QAAE,MAAMA;AAAA,QAC/B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAA2B,GAAG,cAAc;AAAA,IACpD;AASA,IAAAN,2BAA0B,UAAU,qBAAqB,SAAU,MAAM;AACrE,UAAI,KAAK,KAAK,OAAO,SAAS,GAAG,QAAQ,WAAW,GAAG;AACvD,UAAI,UAAU,UAAU,KAAK,YAAY;AACzC,UAAI,KAAK,MAAM,OAAO,GAAG;AACrB,eAAO,KAAK,MAAM,OAAO;AAAA,MAC7B,WACS,CAAC,UAAU,aAAa,QAAW;AACxC,eAAO,KAAK,cAAc,SAAS,MAAM,CAAC;AAAA,MAC9C;AAAA,IACJ;AACA,IAAAA,2BAA0B,UAAU,eAAe,WAAY;AAC3D,aAAO,CAAC,KAAK,mBAAmB,GAAG;AAAA,IACvC;AACA,IAAAA,2BAA0B,UAAU,iBAAiB,WAAY;AAC7D,UAAI,KAAK,KAAK,OAAO,SAAS,GAAG,QAAQ,SAAS,GAAG;AACrD,aAAO,UAAU;AAAA,IACrB;AACA,IAAAA,2BAA0B,UAAU,iBAAiB,SAAU,UAAU;AACrE,UAAI,QAAQ;AACZ,UAAI,KAAK,KAAK,OAAOM,QAAO,GAAG,MAAM,eAAe,GAAG,cAAc,cAAc,GAAG,aAAa,iBAAiB,GAAG;AAKvH,UAAI,aAAa,4BAA4B,KAAK,eAAe,KAAK,aAAa,KAAK,CAAC,KAAK,eAAe,CAAC;AAK9G,UAAI,cAAc,KAAK,eAAe,CAAC;AACvC,UAAI,cACA,OAAO,KAAK,WAAW,EAAE,UACzB,KAAK,aAAa,GAAG;AACrB,YAAI,mBAAmB,KAAK,cAAc,oBAAoB;AAC9D,YAAI,kBAAkB;AAClB,cAAI,wBAAwB,mBAAmB,iBAAiB,WAAW,aAAa,WAAW;AACnG,mBAAS,SAAU,MAAM;AACrB,gBAAIJ,MAAK,sBAAsB,IAAI,GAAG,MAAMA,IAAG,KAAK,MAAMA,IAAG;AAC7D,wBAAY,IAAI,IAAI;AAAA,cAChB,KAAK,MAAM,GAAG,IAAI,SAAY;AAAA,cAC9B,KAAK,MAAM,GAAG,IAAI,SAAY;AAAA,YAClC;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AACA,UAAI,qBAAqB,SAAS,SAAU,MAAM;AAC9C,YAAIA;AACJ,YAAI,CAAC,WAAW,MAAMI,OAAM,MAAM,gBAAgB,GAAG;AACjD;AAAA,QACJ;AACA,YAAI,cAAcJ,MAAK,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,IAAI,OAAO,QAAQA,QAAO,SAASA,MAAK,CAAC;AAOtI,YAAI,kBAAkB,cAAc,MAAM;AAC1C,YAAI,gBAAgB,cAAc,KAAK;AACvC,YAAIK,WAAU,OAAO,OAAO,OAAO,OAAO;AAAA,UAAE,MAAM;AAAA,UAAW,UAAU,eAAe,SAAS,IAAI,IAAI;AAAA,UAAG;AAAA,UACtG;AAAA,UAA8B,cAAc;AAAA,UAAK,WAAW;AAAA,UAAG,WAAW;AAAA,QAAG,GAAG,cAAc,GAAG,UAAU;AAI/G,eAAO,MAAM,mBAAmB,IAAI,IAC9B,MAAM,wBAAwB,MAAMA,QAAO,IAC3C,MAAM,cAAc,qBAAqB,MAAMA,UAAS,UAAU;AAAA,MAC5E,CAAC;AAED,aAAO,QAAQ,IAAI,kBAAkB,EAAE,KAAK,WAAY;AACpD,YAAIL,KAAI;AACR,SAAC,MAAMA,MAAK,MAAM,OAAO,yBAAyB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,GAAE;AAAA,MACjG,CAAC;AAAA,IACL;AACA,IAAAF,2BAA0B,UAAU,aAAa,WAAY;AACzD,UAAI,QAAQ;AACZ,eAAS,SAAU,MAAM;AACrB,YAAI,YAAY,MAAM,mBAAmB,IAAI;AAC7C,oBACM,UAAU,KAAK,IACf,MAAM,cAAc,oBAAoB;AAAA,MAClD,CAAC;AAAA,IACL;AACA,IAAAA,2BAA0B,UAAU,0BAA0B,SAAU,MAAM,YAAY;AACtF,UAAI,YAAY,KAAK,mBAAmB,IAAI;AAC5C,UAAI,CAAC;AACD;AACJ,UAAI,eAAe,UAAU,IAAI;AACjC,gBAAU,IAAI,YAAY;AAC1B,gBAAU,IAAI,YAAY;AAC1B,aAAO,eAAe,MAAM,WAAW,GAAG,UAAU;AAAA,IACxD;AACA,IAAAA,2BAA0B,UAAU,aAAa,WAAY;AACzD,UAAI,QAAQ;AACZ,UAAI,KAAK,KAAK,OAAOM,QAAO,GAAG,MAAM,kBAAkB,GAAG;AAC1D,UAAI,CAAC,YAAY,eAAe,KAAK,CAAC,KAAK;AACvC;AAEJ,WAAK,WAAW;AAEhB,UAAI,cAAc,EAAE,GAAG,GAAG,GAAG,EAAE;AAC/B,eAAS,SAAU,MAAM;AACrB,oBAAY,IAAI,IAAI,WAAW,MAAM,cAAc,WAAW,OAAO,IAAI,GAAG,MAAM,eAAe,IAAI,CAAC;AAAA,MAC1G,CAAC;AAMD,WAAK,kBAAkB,WAAY;AAC/B,iBAAS,SAAU,MAAM;AACrB,cAAI,CAAC,WAAW,MAAMA,OAAM,IAAI;AAC5B;AAGJ,cAAIJ,MAAK,yBAAyB,MAAM,cAAc,WAAW,OAAO,IAAI,GAAG,MAAM,eAAe,IAAI,GAAG,YAAY,IAAI,CAAC,GAAG,MAAMA,IAAG,KAAK,MAAMA,IAAG;AACtJ,gBAAM,cAAc,wBAAwB,MAAM,KAAK,GAAG;AAAA,QAC9D,CAAC;AAAA,MACL,CAAC;AAKD,iBAAW,aAAa,CAAC;AAAA,IAC7B;AACA,IAAAF,2BAA0B,UAAU,oBAAoB,SAAU,SAAS;AACvE,UAAI,QAAQ;AACZ,WAAK,eAAe,YAAY,SAAU,MAAM,OAAO;AACnD,YAAI,YAAY,2BAA2B,MAAM,aAAa;AAC9D,cAAM,WAAY;AACd,iBAAO,UAAU,QAAQ,SAAUG,UAAS;AAAE,mBAAOA,SAAQ,eAAe;AAAA,UAAG,CAAC;AAAA,QACpF,CAAC;AACD,aAAK,WAAY;AAAE,iBAAO,wBAAwB,MAAM,aAAa;AAAA,QAAG,CAAC;AACzE,cAAM,WAAY;AACd,iBAAO,UAAU,QAAQ,SAAUA,UAAS;AAAE,mBAAOA,SAAQ,iBAAiB;AAAA,UAAG,CAAC;AAAA,QACtF,CAAC;AACD,aAAK,WAAY;AACb,gBAAM,uBAAuB;AAAA,QACjC,CAAC;AACD,YAAI;AACA,gBAAM,OAAO;AAAA,MACrB,CAAC;AAAA,IACL;AACA,IAAAH,2BAA0B,UAAU,QAAQ,SAAUC,gBAAe;AACjE,UAAI,QAAQ;AACZ,UAAIE,WAAUF,eAAc,YAAY;AAIxC,UAAI,sBAAsB,gBAAgBE,UAAS,eAAe,SAAU,OAAO;AAC/E,YAAI,KAAK,MAAM,OAAOG,QAAO,GAAG,MAAM,KAAK,GAAG,cAAc,eAAe,OAAO,SAAS,OAAO;AAClG,QAAAA,SAAQ,gBAAgB,MAAM,MAAM,KAAK;AAAA,MAC7C,CAAC;AAKD,UAAI,qBAAqB,YAAY,QAAQ,UAAU,WAAY;AAC/D,cAAM,WAAW;AAAA,MACrB,CAAC;AAKD,UAAI,2BAA2BL,eAAc,eAAe,WAAY;AACpE,YAAI,MAAM,YAAY;AAClB,gBAAM,uBAAuB;AAAA,QACjC;AAAA,MACJ,CAAC;AAKD,UAAI,iBAAiBA,eAAc;AACnC,UAAI,gBAAgB;AAChB,aAAK,MAAM,kBAAkB,EAAE,gBAAgB,eAAe,CAAC;AAAA,MACnE;AAIA,aAAO,WAAY;AACf,gCAAwB,QAAQ,wBAAwB,SAAS,SAAS,oBAAoB;AAC9F,+BAAuB,QAAQ,uBAAuB,SAAS,SAAS,mBAAmB;AAC3F,qCAA6B,QAAQ,6BAA6B,SAAS,SAAS,yBAAyB;AAC7G,cAAM,WAAW;AAAA,MACrB;AAAA,IACJ;AACA,WAAOD;AAAA,EACX,GAAE;AAAA;AACF,SAAS,WAAW,WAAWM,OAAM,kBAAkB;AACnD,UAASA,UAAS,QAAQA,UAAS,eAC9B,qBAAqB,QAAQ,qBAAqB;AAC3D;AAQA,SAAS,oBAAoB,QAAQ,eAAe;AAChD,MAAI,kBAAkB,QAAQ;AAAE,oBAAgB;AAAA,EAAI;AACpD,MAAI,YAAY;AAChB,MAAI,KAAK,IAAI,OAAO,CAAC,IAAI,eAAe;AACpC,gBAAY;AAAA,EAChB,WACS,KAAK,IAAI,OAAO,CAAC,IAAI,eAAe;AACzC,gBAAY;AAAA,EAChB;AACA,SAAO;AACX;;;;oCG/kBA;;;;;MAWeE,iBAAa,KAAA,SAAA,iBAAA,CAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA;QAEnC,MAAM,WAAW,mBAAmB,KAAK,oBAAoB,SAAQ,CAAA;MAEvE,eAAY,IAAO,0BAAyB,EAC5C,eAAAA,eAAa,EAAA,CAAA;MAKb;QACE,aAAU,MAAS;QACjB,SAAS;AACT,cAAO;IACX;YACI,iBAAiB,GAAE;AACnB,gBAAO,IAAG,iBAAiB,EAAC,UAAU,YAAY;IACtD;EACJ;YAC0C,MAAK,GAA3B,oBAAiB,eAAA,IAA/B,YAAY;cACWC,KAAI,GAAG,GAA9B,qBAAkB,eAAA,MAAlB,kBAAkB;AAKxB,eAAa,SAAQ,EAAA,GAAM,MAAK,GAAE,oBAAkB,IAAlB,kBAAkB,EAAA,CAAA;AAQpD,YAAS,MAAO;QACR,SAAS;AACT,cAAO;IACX;EACJ,CAAC;AACD,UAAO,MAAO,aAAa,MAAMD,eAAa,CAAA,CAAA;;;UAhB1B,mBAAiB,QAA/B,YAAY;OAAwB,MAAK,CAAA;;;;UAEzC,oBAAkB,QAAlB,kBAAkB;OAAK,KAAI,CAAA;;;AAK9B,iBAAa,SAAQ,EAAA,GAAM,MAAK,GAAE,oBAAkB,IAAlB,kBAAkB,EAAA,CAAA;;;;AAEpD,eAAW,YAAY;;;;;;;;;;;;;;;;;;;;;;AC/B9B,IAAM,OAAO;AAAA,EACT,KAAK;AAAA,EACL,MAAM;AACV;;;ACLA,SAAS,gBAAgB,QAAQ,MAAM;AACnC,SAAQ,UAAU,KAAK,MAAM,KAAK,OAAQ;AAC9C;AAQA,SAAS,oBAAoB,QAAQ,cAAc,IAAI;AACnD,MAAI,SAAS,GAAG;AAKhB,MAAI,OAAO,WAAW,UAAU;AAC5B,QAAI,GAAG,KAAK,MAAM,GAAG;AACjB,eAAS,WAAW,MAAM;AAAA,IAC9B,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AAKA,MAAI,IAAI,gBAAgB,QAAQ,OAAO,CAAC;AACxC,MAAI,IAAI,gBAAgB,QAAQ,OAAO,CAAC;AACxC,SAAO,IAAI,OAAO,IAAI;AAC1B;AACA,IAAI,WAAW;AACf,SAAS,iBAAiB,QAAQ,IAAI;AAClC,MAAIE,SAAQ,GAAG,OAAO,YAAY,GAAG;AACrC,MAAI,WAAW;AAIf,MAAI,uBAAuB,OAAO,SAAS,MAAM;AACjD,MAAI,eAAe,CAAC;AACpB,MAAI,sBAAsB;AACtB,aAAS,OAAO,QAAQ,kBAAkB,SAAU,OAAO;AACvD,mBAAa,KAAK,KAAK;AACvB,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AACA,MAAI,SAAS,QAAQ,MAAM,MAAM;AAEjC,MAAI,OAAO,SAAS;AAChB,WAAO;AACX,MAAI,WAAW,QAAQ,kBAAkB,MAAM;AAC/C,MAAI,SAAS,OAAO,OAAO,CAAC,MAAM,WAAW,IAAI;AAEjD,MAAI,SAASA,OAAM,EAAE,QAAQ,UAAU;AACvC,MAAI,SAASA,OAAM,EAAE,QAAQ,UAAU;AACvC,SAAO,IAAI,MAAM,KAAK;AACtB,SAAO,IAAI,MAAM,KAAK;AAOtB,MAAI,eAAe,IAAI,QAAQ,QAAQ,GAAG;AAE1C,MAAI,OAAO,OAAO,IAAI,MAAM,MAAM;AAC9B,WAAO,IAAI,MAAM,KAAK;AAE1B,MAAI,OAAO,OAAO,IAAI,MAAM,MAAM;AAC9B,WAAO,IAAI,MAAM,KAAK;AAC1B,MAAI,SAAS,SAAS,MAAM;AAC5B,MAAI,sBAAsB;AACtB,QAAI,MAAM;AACV,aAAS,OAAO,QAAQ,UAAU,WAAY;AAC1C,UAAI,cAAc,aAAa,GAAG;AAClC;AACA,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AACA,SAAO;AACX;AACA,IAAI,6BAA6B;AAAA,EAC7B,SAAS;AACb;AACA,IAAI,yBAAyB;AAAA,EACzB,cAAc,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,0BAA0B,GAAG,EAAE,SAAS;AAAA,IAC9E;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,EAAE,CAAC;AAAA,EACP,qBAAqB;AAAA,EACrB,sBAAsB;AAAA,EACtB,wBAAwB;AAAA,EACxB,yBAAyB;AAAA,EACzB,WAAW;AAAA,IACP,SAAS;AAAA,EACb;AACJ;;;;ICtGU,iBAAiB;SAEd,SAAS,GAAG,GAAG;UAEf,UAAU,CAAC,KAAA,CACX,UAAU,CAAC,MAAA,CACV,YAAY,EAAE,GAAG,EAAE,CAAC,KAAA,CAAM,YAAY,EAAE,GAAG,EAAE,CAAC;AAExD;IAEM,WAAQ,EAAK,KAAK,GAAG,KAAK,EAAC;SACxB,UAAU,GAAG;SACX,YAAY,EAAE,GAAG,QAAQ,KAAK,YAAY,EAAE,GAAG,QAAQ;AAClE;SAES,YAAY,GAAG,GAAG;uBAChB,EAAE,KAAQ,EAAE,GAAG,KAAA,cAAI,EAAE,KAAQ,EAAE,GAAG;AAC7C;IAEM,0BAAuB,EACzB,UAAU,MACV,MAAI,CAAG,KAAK,GAAG,KAAK,CAAC,EAAA;oCA3B7B;;;;MA2CeC,iBAAa,KAAA,SAAA,iBAAA,EAAA,GAwDpB,SAAM,KAAA,SAAA,UAAA,GAAG,MAAS,GAKlB,eAAY,KAAA,SAAA,gBAAA,CAAA;MAMZ,cAAc,QAAO;MAKrB,yBAAyB,QAAO;MAIhC,cAAW,EACX,GAAG,OACH,GAAG,MAAK;MAER,oBAAiB,EACjB,GAAG,QACH,GAAG,OAAS;MAGZ;MAEA,kBAAkB;AAEtB,UAAO,MAAO;kFACVA,eAAAA,eAAa,EAAC,qBAAqB,gBAAc,IAAA,GAAA,KAAA,CAAA;AACjD,IAAAA,eAAa,EAAC,uBAAsB;AACpC,uBAAmBA,eAAa,EAAC,eAAe,QAAQ;;;;MACxDA;QAAAA,eAAa,EAAC,qBAAkB,WAAe;AAC3C,uBAAY,EAAA;QAChB;;;;;;AAEA,uBAAmB,sBAAsB;EAC7C,CAAC;AAED,YAAS,MAAO;AACZ,qBAAgB;AAChB,aAAQ,CAAE,SAAS,kBAAkB,IAAI,IAAA,CAAA;EAC7C,CAAC;QAEK,WAAQ,CACV,QACA;IAEI;IACA;IACA;IACA;IACA;OACG;aAEN;sBAIG,oBAAuB,KAAK,GAAE;AAC9B,wBAAkB;aACX,aAAY,EAAA;IACvB;QAKI,mBAAe,cAAI,oBAAuB,MAAI,KAAA,GAAE;;IAEpD,WAAW,oBAAoB;AAC3B,wBAAkB;IACtB;AAMA,aAAS,aAAa;AACtB,aAAS,aAAa;UAEhB,cAAc,SAAS,QAAQ,MAAM;UAErCC,cAAa,SAAQ,CAAE,SAAS;wBAK9B,OAAM,GAAK,UAAU,GAAE;cACjB,eAAe,OAAO,IAAI,EAAE,MAAM,OAAO,IAAI,EAAE;AACrD,eAAO,IAAI,EAAE,MAAM,OAAO,IAAI,EAAE,MAAM;MAC1C;UAEID,eAAa,EAAC,WAAW,gBAAgB;;MAE7C,WAAC,cAAU,kBAAqB,QAAS,KAAA,GAAE;AACvC,QAAAA,eAAa,EAAC,cAAa,cACvB,kBAAqB,iBAAiB,IAAI,CAAA;MAElD,WAAW,aAAa;eAGb,YAAY,MAAM,OAAO,IAAI,GAAG,OAAO,IAAI,GAAG,MAAM;MAC/D,OAAO;eAGIA,eAAa,EAAC,wBACjB,MACA,OAAO,IAAI,EAAE,KACb,OAAO,IAAI,EAAE,GAAG;MAExB;IACJ,CAAC;AAGD,IAAAA,eAAa,EAAC,WAAU;WAOjB,QAAQ,IAAIC,WAAU,EAAE,KAAI,MAAO;AACtC,wBAAkB;AAClB,oBAAc,WAAU;AACxB,MAAAD,eAAa,EAAC,8BAA6B;IAC/C,CAAC;EACL;QAOM,cAAW,CACb,MACA,QACA,QAAM,EACJ,YAAY,YAAW,IAAA,CAAA,MACxB;AACD,sBAAkB,IAAI,IAAA;QAKlB,YAAY,IAAI,KAChB,YAAY,QAAQ,uBAAuB,IAAI,CAAA,GACjD;;IAEF;AAEA,sBAAkB,IAAI,IAAA;AACtB,gBAAY,IAAI,IAAI;UAEd,eAAe,YAAY,IAAI;UAC/B,iBACFA,eAAa,EAAC,+BAA8B,EAAG,IAAI;AAMvD,mBAAe,eAAc;AAC7B,mBAAe,IAAI,CAAC;AACpB,mBAAe,IAAI,CAAC;UAMd,QAAK,MAAS;YAEV,IAAI,eAAe,IAAG,IAAK;AAGjC,gBAAU,cAAc,QAAQ,QAAQ,CAAC;AACzC,MAAAA,eAAa,EAAC,wBACV,MACA,aAAa,KACb,aAAa,GAAG;IAExB;AAGA,UAAK;UAMC,sBAAsB,eAAe,SAAS,KAAK;AAEzD,sBAAkB,IAAI,IAAA,MAAU;AAC5B,kBAAY,IAAI,IAAI;AACpB,qBAAe,KAAI;AACnB,0BAAmB;IACvB;AAEA,2BAAuB,IAAI,IAAI;UAEzB,mBACF,eACAA,eAAa,EAAC,qBAAoB,KAClC;UAGE,YAAY,eAAc,cAC5B,MAAS,GAAG,IAAG,YAAY,WAC3B,gBACA,gBACA,oBAAoB,mBAAmB,kBAAkB,QAAQ,CAAA,EACnE,KAAK,kBAAkB,IAAI,CAAA;WAEtB;EACX;;;;;;;;;;;;;;;yDC7TJ;;;;;MAQeE,iBAAa,KAAA,SAAA,iBAAA,CAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA;YAExB,MAAK,GAAhB,SAAM,eAAA,IAAN,MAAM;QAEN,WAAW,YAAY,SAAQ,CAAA;;;UAD/B,QAAM,QAAN,MAAM;OAAK,MAAK,CAAA;;;;;;;;;;;;;;;0CAIsB,UAAS,EAAC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;oCCf3D;;;MAoBeC,iBAAa,KAAA,SAAA,iBAAA,CAAA,GAAE,aAAU,KAAA,SAAA,cAAA,CAAA,GAAE,mBAAgB,KAAA,SAAA,oBAAA,CAAA,GAAE,SAAM,KAAA,SAAA,UAAA,CAAA;QAExD,yBAAyB,WAAW,sBAAsB;QAC1D,+BAA+B,WACjC,4BAA4B;AAGhC,UAAO,MAAO;AACV,mBAAe,WAAU,CAAA,KAAK,WAAU,EAAC,SAASA,eAAa,CAAA;AAC/D,mBAAe,iBAAgB,CAAA,KAC3B,iBAAgB,EAAC,SAASA,eAAa,CAAA;AAE3C,IAAAA,eAAa,EAAC,UAAS,MAAO;UACtB,eAAe,WAAU,CAAA,GAAG;AAC5B,mBAAU,EAAC,OAAOA,eAAa,CAAA;MACnC;UAEI,eAAe,iBAAgB,CAAA,GAAG;AAClC,yBAAgB,EAAC,OAAOA,eAAa,CAAA;MACzC;IACJ,CAAC;EACL,CAAC;MAQG,UAAQ;QACN,UAAO,CAAI,KAAG,UAAU;QACtB,SAAQ;aACD;IACX;AACA,cAAQ;AAGR,IAAAC,KAAI,sBAAsB,EAAE,QAAO,CAAE,MAAK;AACtC,QAAE,UAAU,IAAI;IACpB,CAAC;QAEG,eAAe,WAAU,CAAA,GAAG;AAC5B,iBAAU,EAAC,WAAU;IACzB,OAAO;AACH,0BAAoBD,eAAa,GAAC,EAAE;AACpC,iBAAU,EAAC,IAAIA,eAAa,CAAA;IAEhC;WAEO;EACX;oBAMI,OAAM,GAAK,MAAS,GAAE;AACtB,iBAAa,OAAO;EACxB;QACM,SAAM,CAAI,KAAI,UAAQ;AACxB,cAAQ;UAEF,MAAMC,KAAI,sBAAsB;AAEtC,QAAI,QAAO,CAAE,GAAE,MAAM;AACjB,QAAE,SAAS,IAAI;IACnB,CAAC;SAEI,eAAe,WAAU,CAAA,GAAG;AAC7B,iBAAU,EAAC,MAAK;IACpB;EAUJ;AACA,+BAA6B,OAAM,CAAE,MACjC,EAAE,OAAM,CAAA,EACJ,SACA,OAAM,CAAA,CAAA,CAAA;AAGd,cAAY,MAAM;;kBAjCf,OAAM,GAAK,QAAS,KAAA,KAAI,QAAQ,OAAM,CAAA;;;;;;;;;;;;;;;;;mDC1E7C;;;;;;;MAaeC,iBAAa,KAAA,SAAA,iBAAA,CAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA;QAGnC,aAAa,WAAW,mBAAmB,KAAK,oBAAoB,SAAQ,CAAA;QAE5E,mBACF,WAAW,uBAAuB,KAAK,wBAAwB,SAAQ,CAAA;;;UAJrE,QAAM,QAAN,MAAM;OAAK,MAAK,CAAA;;;;;;;;;eAQV,YAAW;;;eACL,kBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBvC,IAAI,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,iBAAiB;AACrB;;;;2CCXA;;;;MAUeC,iBAAa,KAAA,SAAA,iBAAA,EAAA,GAAE,QAAK,KAAA,SAAA,SAAA,CAAA;YAEf,MAAK,GAAhBC,WAAO,eAAA,IAAP,OAAO;;;UACPA,UAAO,QAAP,OAAO;OAAI,MAAK,CAAA;;;8EAMjBD,eAAAA,eAAa,EAAC,iBACdA,eAAa,EAAC,kBAAkB,qBAAqBA,eAAa,CAAA,GAAA,IAAA,GAAA,IAAA,CAAA;;;;;UAM/D,oBAAmB,IAACC,QAAO,CAAA,GAAG;AACjC,aAAI,EAAG,KAAI,MAAA;UAAOA;;QAAO,EAAC,UAAUD,eAAa,CAAA,CAAA;MACrD;;;;;;;;;;;;;;;;;;iCC5BJ;;;;;;;MAWe,QAAK,KAAA,SAAA,SAAA,CAAA,GAAEE,iBAAa,KAAA,SAAA,iBAAA,CAAA,GAAE,WAAQ,KAAA,SAAA,YAAA,CAAA;QAGnC,kBAAkB,WAAW,eAAe,KAAK,gBAAgB,SAAQ,CAAA;QACzE,WAAW,YAAY,SAAQ,CAAA;QAE/B,SAAM,CAAI,SAAS;WACdC,YAAW,cAAc,IAAI;UAE9B,YAAYD,eAAa,EAAC,gBAAgB,UAC5C,cAAc,MAAI,CACjBC,YAAS,EACR,QAAQ,iBAAgB,GAAE,UAAM,IAAI,MAAM,EAAA,CAAA;KAG/CA,cAAa,WAAW,KAAK,cAAc;WACrC;EACX;;;UAhBM,QAAM,QAAN,MAAM;OAAK,MAAK,CAAA;;;AAiBnB,WAAO,UAAS,CAAA;;;;;;;;;;;;;;;;;;;;;;ACnBvB,IAAM,aAAa;AAAA,EACf,WAAW;AAAA,EACX,MAAK;AACT;;;ACJO,IAAM,gBAAgB;AAAA,EACzB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACP;;;ACIA,IAAI;AAAA;AAAA,EACA,kBAAkB,aAAa;AAAA;;;ACXnC,IAAI,uBAAuB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;AC5BA,SAAS,eAAe,WAAW;AAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,OAAO,cAAc;AAAA;AAAA;AAAA,IAIjB,UAAU,SAAS,GAAG;AAAA,IAAG;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,IAKA,qBAAqB,QAAQ,SAAS,IAAI;AAAA;AAAA;AAAA,IAItC,QAAQ,KAAK,SAAS;AAAA,IAAG;AACzB,WAAO;AAAA,EACX;AACA,SAAO;AACX;;;;8BC/BA;;;;;MAEe,SAAM,KAAA,SAAA,UAAA,CAAA;;;;kDAGT,aAAW;;;;;;;;;0CACG,MAAM;yCAAN,MAAM;;;cAAN;;;;4DAAuB,KAAK,EAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBtD,SAAS,kBAAkB,iBAAiB;AAWxC,SAAO,IAAI,MAAM,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMjB,KAAK,SAAU,SAAS,KAAK;AASzB,UAAI,OAAO;AACX,UAAI,IAAI,MAAM,GAAG,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC,EAAE,YAAY,GAAG;AACnD,eAAO,eAAe,GAAG,IAAI,QAAQ;AAAA,MACzC;AACA,YAAM,MAAM,IAAI,MAAM,WAAG;AAAA,QACrB,UAAU,QAAQ,MAAM;AACpB,cAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAE;AAClB,iBAAK,KAAK,CAAC,CAAC;AAAA,UAChB;AACA,cAAI,CAAC,KAAK,CAAC,EAAE,OAAM;AACf,iBAAK,CAAC,EAAE,QAAO,EAAC,QAAO,KAAI,OAAM,SAAO,MAAK;AAAA,UACjD,OAAK;AACD,iBAAK,CAAC,EAAE,MAAM,SAAS;AACvB,iBAAK,CAAC,EAAE,MAAM,QAAQ,SAAO;AAAA,UACjC;AACA,iBAAO,IAAI,OAAO,GAAG,IAAI;AAAA,QAC3B;AAAA,MACN,CAAC;AAED,aAAO;AAAA,IACX;AAAA,EACJ,CAAC;AACL;AAEA,IAAMC,KAAI,kBAAkB;;;;;sCCxE5B;;;;;;;;;MAqBe,QAAK,KAAA,SAAA,SAAA,GAAG,KAAK,GACpB,qBAAkB,KAAA,SAAA,sBAAA,GAAG,KAAK,GAC1B,cAAW,KAAA,SAAA,eAAA,GAAG,MAAS,GACvB,WAAQ;IAAA;IAAA;IAAA;IAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIf,eAAa,aAAa;MAEtB,YAAY,MAAK,IAAG,QAAQ;MAC5B,WAAW,SAAQ,KAAI;MACvB,sBAAsB;MACtB,oBAAoB,MAAK,IAAG,kBAAkB;QAQ5C,IAAI,WAAW,mBAAmB,KAAK,oBAAoB,QAAQ;MAGrE,UAAO,eAAG,KAAK;QACbC,cAAU,CAAI,GAAG,MAAM;AACzB,MAAE,gBAAgB;WACX;EACX;AAEA,UAAO,MAAO;QACV,SAAU,IAAI;EAClB,CAAC;;QA1FE,aAAc,WAAW;;;;UAiFtB,UAAQ,QAAR,QAAQ;OAAK,GAAE,KAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;yBAaU,WAAW;;;;;;;;;;;;;;6BAE1B;;;iCACD,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;yCASP,WAAW;;;;;;;;;;;;yFAZoC,OAAO,CAAA,uDAiB1CA,YAAU,IAAC,OAAO,GAAA,IAAEC,cAAa,CAAA,CAAA;;;;;;;mDACzC,WAAW;;;;;;;;;;;2DAGY,OAAO;;;;;;;;;sGA3L5C,YAAY,uBA4KF,WAAW,CAAA,uBANoC,OAAO,CAAA,mBA/JrE,YAAW,CAAA,iBAwLc,aAAY,IACb,WAAW,GAAA,IACX,OAAO,EAAC,eACR,YAAW,CAAA,CAAA;;;;;;;mEAJR,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2EAaI,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2EAK9B,SAAS,GAAA,CAAI,SAAM,KAAK,GAAG;;gFAA3B,SAAS,GAAA,CAAI,SAAM,KAAK,KAAG,CAAAC,WAAd,SAAI;;;;uFAEV,IAAI,EAAC,WAAS,CAAAA,WAAA,gBAAA;;;qEAFR,IAAI,GAAA,QAAA,MAAA,IAGT,IAAI,EAAC,KAAK;;;qEAHL,IAAI,GAAA,QAAA,MAAA,IAID,IAAI,EAAC,aAAa;;;;;;;;;;;;;;;;;;;;;;;;wDALxC,OAAO,EAAA,UAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICzNxB,aAAa;SACR,gBAAgB;QACf,KAAK;AACX;SACO;AACX;SACS,iBAAiB;6BACX,IAAG;AAClB;0CAdJ;;;;MAqBeC,aAAS,KAAA,SAAA,aAAA,CAAA,GAChB,iBAAc,KAAA,SAAA,kBAAA,GAAG,MAAS,GAC1B,UAAO,KAAA,SAAA,WAAA,CAAA,GACP,SAAM,KAAA,SAAA,UAAA,GAAG,MAAS,GAClB,wBAAqB,KAAA,SAAA,yBAAA,CAAA,GACrB,WAAQ,KAAA,SAAA,YAAA,CAAA;QAEN,mBAAgB,IAAO,eAAc;QACrC,KAAK,cAAa;QAIlB,cAAW,MAAS;;MAElB;MACA,SAAA,QAAO;MACP,WAAAA,WAAS;MACT,QAAA,OAAM;MACN,gBAAc,CAAG,YAAY;AACzB,yBAAiB,IAAI,SAAS,IAAI;YAC9B,cAAc;AAClB,yBAAiB,QAAO,CAAE,eAAe;eAChC,WAAY,eAAc;QACnC,CAAC;AAED,uBAAe,eAAc,IAAA;MACjC;MACA,UAAQ,CAAG,YAAY;AACnB,yBAAiB,IAAI,SAAS,KAAK;qBACtB,iBAAiB,OAAO,OAAO;MAChD;;EAER;MACI,UAAU,gBAAe;AAE7B,cAAW,MAAO;QACV,sBAAqB,GAAE;AACvB,cAAQ,IAAI,YAAW,CAAA;IAC3B;EACJ,CAAC;QAIK,SAAM,MAAS;AACjB,qBAAiB,QAAO,CAAE,GAAG,QAAQ,iBAAiB,IAAI,KAAK,KAAK,CAAA;EACxE;AAKA,aAAW,iBAAiB,OAAO;AACnC,gBAAc,YAAW,SAAQ,GAAC,OAAO;;;;UAzCtC,SAAU,sBAAqB,IAAG,SAAYA,WAAS,CAAA;;;;AA+BvD,YAAQ,IAAI,YAAW,IAAC,OAAO,CAAA,CAAA;;;AAK/B,WAAOA,WAAS,CAAA;;;;;AAChB,WAAI,EAAG,KAAI,MAAO;SAChBA,WAAS,KAAA,CAAK,iBAAiB,QAAQ,eAAc,IAAA;MAC1D,CAAC;;;;;;;;;;;;;;;;;;;;;;4CCtEL;;;;;;;MAae,OAAI,KAAA,SAAA,QAAA,GAAG,MAAS,GACvB,SAAM,KAAA,SAAA,UAAA,GAAG,MAAS,GAClB,UAAO,KAAA,SAAA,WAAA,GAAG,IAAI,GACd,iBAAc,KAAA,SAAA,kBAAA,GAAG,MAAS,GAC1B,kBAAe,KAAA,SAAA,mBAAA,GAAG,MAAS,GAC3B,wBAAqB,KAAA,SAAA,yBAAA,GAAG,IAAI,GAC5B,OAAI,KAAA,SAAA,QAAA,GAAG,MAAS,GAChB,WAAQ,KAAA,SAAA,YAAA,GAAC,KAAK;MAEd,QAAK,eAAA,cAAG,KAAI,GAAK,QAAS,KAAA,IAAG,KAAI,IAAG,KAAI,IAAA,CAAA,EAAM,KAAK,EAAC,CAAA,IAAA,CAAA,CAAA;QAGlD,gBACF,WAAW,mBAAmB,KAAK,oBAAoB,SAAQ,CAAA;WAW1D,YAAYC,QAAO;WACjBA,OAAM,OAAO;EACxB;MAEI,kBAAe,eAAG,IAAI;MACtB,mBAAgB,eAAA,IAAG,KAAK,CAAA;MAGxB,kBAAe,eAAA,IAAG,gBAAgB,CAAA;MAClC,cAAW,oBAAO,IAAG;MACrB,UAAO,oBAAO,IAAG;QACf,oBAAiB,CAAI,UAAU,aAAa;AAC9C,aAAS,QAAO,CAAEA,WAAU;YAClB,MAAM,YAAYA,MAAK;AAC7B,eAAS,IAAI,KAAKA,MAAK;IAC3B,CAAC;EACL;MAGI,mBAAgB,eAAA;WACb,gBAAgB,EAAC,IAAG,CAAE,OAAC,EACtB,SAAS,MACT,MAAM,GACN,KAAK,EAAE,IAAG,EAAA;;;QArCf,OAAK,cAAG,KAAI,GAAK,QAAS,KAAA,IAAG,KAAI,IAAG,KAAI,IAAA,CAAA,EAAM,KAAK,EAAC,CAAA,IAAA,CAAA,CAAA;;;QAKnD,KAAM,eAAe,eAAc,CAAA,CAAA;;;QAEpC,aAAW,MAAS;cACf,GAAG,GAAE;AACL,uBAAc,EAAC,YAAW;MAC9B;UACA,OAAK,CAAA,GAAA,IAAO,KAAK,CAAA,CAAA;IACrB,CAAC;;;QAQE,kBAAgB,IAAG,KAAK,CAAA;;;AAWxB,sBAAiB,IAAC,gBAAgB,GAAE,WAAW;;;;;eAU1C,eAAe,GAAE;YAErB,kBAAgB;iBACT,gBAAgB,EAAC,IAAG,CAAE,OAAC,EACtB,SAAS,MACT,MAAM,GACN,KAAK,EAAE,IAAG,EAAA;;cAMZ,cAAW,IAAG,eAAe,EAAC,IAAI,WAAW;cAC7C,aAAU,IAAG,gBAAgB,EAAC,IAAI,WAAW;cAE7C,aAAa,YAAY;iBACtB,IAAI,GAAG,IAAI,YAAY,KAAK;gBAC3B,MAAM,YAAY,CAAC;4BACrB,WAAW,QAAQ,GAAG,GAAA,EAAQ,GAAE;AAChC,oBAAQ,IAAI,GAAG;UACnB,OAAO;AAEH,oBAAQ,OAAO,GAAG;UACtB;QACJ;YAII,gBAAe,KAAI,QAAQ,MAAM;cACjC,kBAAgB,CAAA,CAAA;QACpB;AAGA,gBAAQ,QAAO,CAAE,QAAQ;4BAEjB,WAAW,QAAQ,GAAG,GAAA,IAAQ,KAAA,EAAA;gBAE5BA,SAAQ,YAAY,IAAI,GAAG;eAC5BA,OAAK;gBAEJ,iBAAiB,YAAY,QAAQ,GAAG;gBAExC,SAAM,MAAS;AACjB,wBAAY,OAAO,GAAG;AACtB,oBAAQ,OAAO,GAAG;kBAGZ,cAAW,IAAG,eAAe,EAAC,UAAS,CACxC,iBAAY,cAAK,aAAa,KAAQ,GAAG,CAAA;gBAG1C,cAAc,GAAG;;YAErB;gBACA,eAAe,EAAC,OAAO,aAAa,CAAC;iBAGhC,QAAQ,MAAM;kBACf,iBAAe,CAAA,GAAA,IAAO,gBAAgB,CAAA,CAAA;kBACtC,WAAW,EAAA;AACX,6BAAc,KAAI,eAAc,EAAA;YACpC;UACJ;cAEA,gBAAgB,EAAC,OAAO,gBAAgB,GAAC,EACrC,SAAS,OACT,MAAMA,QACN,KAAK,YAAYA,MAAK,GACtB,OAAM,CAAA;QAEd,CAAC;YAoBD,iBAAe,IAAG,gBAAgB,CAAA;MACtC,OAAO;YACH,iBAAkB,KAAK;MAC3B;;;;;;;+BAGG,gBAAgB,GAAA,CAAIA,WAAO,YAAYA,MAAK,CAAA;;kCAA5C,gBAAgB,GAAA,CAAIA,WAAO,YAAYA,MAAK,GAAA,CAAAC,WAAxBD,WAAK;;;;0CAGf,QAAO,IAAG,SAAY,KAAK;+CAHjBA,MAAK,mBAlJxB,OAAM,CAAA,qBAsJEA,MAAK,EAAC,SAAS,OAAM,IAAG,MAAS;;;;yBAJtBA,MAAK,GAAA,QAAA,MAAA,IAEbA,MAAK,EAAC,OAAO;;;;;;;;;;;;yBAFLA,MAAK,GAAA,QAAA,MAAA,IAMRA,MAAK,EAAC,MAAM;;;;;;;;;;;;;;+BANTA,MAAK,GAAA,QAAA,MAAA,IAQfA,MAAK,EAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpI3B,SAASE,SAAQ,MAAM,IAAI,YAAY;AACnC,MAAI,eAAe,QAAQ;AAAE,iBAAa,CAAC;AAAA,EAAG;AAC9C,MAAI,QAAQ,cAAc,IAAI,IAAI,OAAO,YAAY,IAAI;AACzD,iBAAe,IAAI,OAAO,IAAI,UAAU;AACxC,SAAO;AAAA,IACH,MAAM,WAAY;AAAE,aAAO,MAAM,KAAK;AAAA,IAAG;AAAA,EAC7C;AACJ;;;AChCA,SAAS,mBAAmB;AAIxB,MAAIC,YAAW,YAAY,CAAC;AAC5B,MAAI,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,uBAAuB;AAAA,EAC3B;AACA,MAAI,cAAc,OAAO,OAAO,CAAC,GAAG,OAAO;AAC3C,MAAI,YAAY,CAAC;AACjB,MAAI,cAAc,CAAC;AAInB,MAAI,WAAW;AAIf,MAAI,sBAAsB;AAI1B,MAAI,aAAa;AACjB,WAAS,wBAAwB,QAAQ,YAAY;AACjD,QAAI,OAAO,QAAQ,MAAM,SAAS,QAAQ;AAC1C,eAAW;AACX,0BAAsB;AACtB,QAAI,aAAa;AACjB,QAAI,WAAW,WAAY;AACvB,mBAAa;AACb,cAAQ,KAAK,eAAe;AAC5B,gBAAU,OAAO,eAAe;AAAA,IACpC;AACA,QAAI,aAAa,WAAY;AACzB,iBAAW;AAKX,4BAAsB,aAAa,EAAE;AAAA,IACzC;AACA,iBAAa,cAAc,mBAAmB,YAAY,WAAW;AACrE,WAAOC,SAAQD,WAAU,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,UAAU,GAAG,EAAE,UAAoB,YAAY,WAAY;AACpH,UAAI,CAAC,YAAY;AACb,QAAAA,UAAS,IAAI,MAAM;AAKnB,mBAAK,KAAK,UAAU;AAAA,MACxB,OACK;AACD,mBAAW;AAAA,MACf;AACA,eAAS;AAAA,IACb,EAAE,CAAC,CAAC;AAAA,EACZ;AACA,WAAS,kBAAkB;AACvB,QAAI,IAAI;AAMR,QAAI,YAAY,aAAa,EAAE;AAC/B,QAAI,OAAO,QAAQ,MAAM,SAAS,QAAQ;AAC1C,QAAI,cAAc,cAAc,CAAC;AAC7B;AACJ,iBAAa;AAKb,QAAI,mBAAmB,KAAK,gBAAgB;AAC5C,WAAO,OAAO,WAAW,gBAAgB;AACzC,QAAI,qBAAqB,SACnB,OAAO,gBAAgB,IACvB,QAAQ;AACd,WAAO,OAAO,aAAa,kBAAkB;AAC7C,QAAI,IAAIA,UAAS,IAAI;AAKrB,QAAI,qBAAqB,KAAK,iBAAiB,aAAa,QAAQ,OAAO,SAAS,KAAK;AACzF,QAAI,uBAAuB,KAAK,uBAAuB,QAAQ,uBAAuB,SAAS,SAAS,mBAAmB,aAAa,QAAQ,OAAO,SAAS,KAAK;AACrK,QAAI,QAAQ,oBAAoB,QAAQ;AACpC,gBAAU,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,QAKpB,OAAO,cAAc,QAAQ,IAAI;AAAA,QAAqB;AAAA,QAAmB,gBAAgB,CAAC;AAAA,MAAC;AAC3F,kBAAY,UAAU,QAAQ,wBACxB,sBACA,IAAI,qBAAqB,GAAG,iBAAiB,CAAC,CAAC;AAAA,IACzD,WACS,CAAC,QAAQ;AACd,gBAAU,UAAU,IAAI,qBAAqB,mBAAmB,CAAC;AAAA,IACrE;AACA,cAAU,WAAW,aAAa,kBAAkB,sBAAsB,CAAC,GAAG,QAAQ,MAAM,GAAG,CAAC;AAAA,EACpG;AACA,SAAO;AAAA,IACH,UAAU,WAAY;AAClB,aAAO,cACF,YAAY,aAAa,EAAE,cAAc;AAAA,IAClD;AAAA,IACA,UAAU,SAAU,YAAY;AAC5B,aAAO,wBAAwB,GAAG,UAAU;AAAA,IAChD;AAAA,IACA,QAAQ,SAAU,YAAY;AAC1B,UAAI,kBAAkB;AACtB,UAAI,CAAC,QAAQ,cAAc,CAAC,QAAQ,QAAQ;AAIxC,0BAAkB;AAAA,MACtB,WACS,YAAY,SAAS,QAAQ,UAClC,YAAY,WAAW,QAAQ,MAAM;AAIrC,0BAAkB,IAAIA,UAAS,IAAI;AAAA,MACvC;AACA,MAAAA,UAAS,IAAI,eAAe;AAC5B,aAAO,wBAAwB,GAAG,UAAU;AAAA,IAChD;AAAA,IACA,OAAO,WAAY;AAAE,aAAOA,UAAS,IAAI,CAAC;AAAA,IAAG;AAAA,IAC7C,MAAM,WAAY;AAAE,aAAOA,UAAS,KAAK;AAAA,IAAG;AAAA,IAC5C,mBAAmB,SAAUE,UAAS;AAClC,sBAAgB;AAChB,UAAIA,aAAY,QAAQ,MAAM;AAC1B,eAAO;AAAA,MACX,WACSA,aAAY,QAAQ,QAAQ;AACjC,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,IACA,YAAY,SAAU,YAAY;AAC9B,oBAAc;AACd,gBAAU;AACV,kBAAY,CAAC;AACb,oBAAc,CAAC;AAAA,IACnB;AAAA,IACA,iBAAiB,WAAY;AACzB,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AACA,IAAI,kBAAkB,SAAS,GAAG,KAAK,OAAO;AAC9C,IAAI,mBAAmB,SAAS,KAAK,MAAM,MAAM;AACjD,SAAS,SAAS,KAAK,KAAK,QAAQ;AAChC,SAAO,SAAU,GAAG;AAEhB,QAAI,IAAI;AACJ,aAAO;AACX,QAAI,IAAI;AACJ,aAAO;AACX,WAAO,OAAO,SAAS,KAAK,KAAK,CAAC,CAAC;AAAA,EACvC;AACJ;AACA,IAAI,UAAU,CAAC,WAAW,YAAY,cAAc,aAAa;AACjE,IAAI,aAAa,QAAQ;AACzB,SAAS,UAAU,WAAW,aAAa,kBAAkB,oBAAoB,kBAAkB,GAAG;AAIlG,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,QAAI,cAAc,WAAW,QAAQ,CAAC,IAAI;AAC1C,QAAI,eAAe,UAAU,oBAAoB,WAAW;AAC5D,QAAI,aAAa,UAAU,kBAAkB,WAAW;AACxD,QAAI,iBAAiB,UAAa,eAAe;AAC7C;AACJ,qBAAiB,eAAe;AAChC,mBAAe,aAAa;AAM5B,QAAI,OAAO,iBAAiB,YACxB,OAAO,eAAe,UAAU;AAChC,UAAI,SAAS,KAAK,IAAI,IAAI,cAAc,YAAY,CAAC,GAAG,CAAC;AACzD,gBAAU,WAAW,IAAI,YAAY,WAAW,IAAI;AAAA,IACxD;AAAA,EACJ;AAIA,MAAI,mBAAmB,UAAU,iBAAiB,QAAQ;AACtD,QAAI,SAAS,IAAI,mBAAmB,UAAU,GAAG,iBAAiB,UAAU,GAAG,CAAC;AAChF,cAAU,SAAS,YAAY,SAAS;AAAA,EAC5C;AAQA,MAAI,CAAC,oBACD,iBAAiB,mBACjB,mBAAmB,iBAAiB;AAOpC,cAAU,kBAAkB,YAAY,kBAAkB,SAAS,mBAAmB,iBAAiB,iBAAiB,eAAe,EAAE,CAAC;AAAA,EAC9I;AACJ;AACA,SAAS,UAAU,QAAQ,YAAY;AACnC,MAAI;AACJ,UAAQ,KAAK,OAAO,UAAU,OAAO,QAAQ,OAAO,SAAS,KAAK,OAAO;AAC7E;;;AC7NA,SAAS,cAAc;AACnB,MAAI,QAAQ,oBAAI,IAAI;AACpB,MAAI,QAAQ,EAAE,eAAe,MAAM;AACnC,MAAI,YAAY,OAAO,OAAO,CAAC,GAAG,KAAK;AACvC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,aAAa,iBAAiB;AAClC,MAAI,0BAA0B;AAC9B,WAAS,uBAAuB;AAC5B,WAAO,MAAM,SAAS,MAAM,OAAO,kBAAkB;AAAA,EACzD;AACA,WAAS,kBAAkB;AACvB,QAAI;AACJ,YAAQ,KAAK,MAAM,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG,eAAe,EAAE;AAAA,EACxF;AACA,SAAO;AAAA,IACH,KAAK,SAAUC,UAAS;AACpB,MAAAA,SAAQ,cAAc,UAAU;AAChC,YAAM,IAAIA,QAAO;AAIjB,UAAI;AACA,QAAAA,SAAQ,iBAAiB;AAC7B,UAAI,CAAC,MAAM;AACP,cAAM,OAAOA;AAAA,IACrB;AAAA,IACA,QAAQ,SAAUA,UAAS;AACvB,YAAM,OAAOA,QAAO;AAAA,IACxB;AAAA,IACA,SAAS,WAAY;AAAE,aAAO,MAAM;AAAA,IAAM;AAAA,IAC1C,gBAAgB,WAAY;AACxB,UAAI,CAAC,MAAM;AACP;AACJ,mBAAa,WAAW,SAAS,IAC3B,WAAW,gBAAgB,IAC3B,MAAM,KAAK,gBAAgB;AACjC,wBAAkB,MAAM,KAAK;AAC7B,UAAI,eAAe,oBAAoB,IAAI,MAAM,IAAI;AACrD,UAAI,gBAAgB,aAAa,YAAY;AACzC,yBAAiB,aAAa;AAAA,MAClC;AAAA,IACJ;AAAA,IACA,eAAe,WAAY;AACvB,uBAAiB,kBAAkB;AAAA,IACvC;AAAA,IACA,qBAAqB,WAAY;AAC7B,UAAI;AACJ,kBAAY,OAAO,OAAO,CAAC,GAAG,KAAK;AACnC,UAAI;AACJ,UAAI;AACJ,UAAIC,SAAQ,MAAM,KAAK,KAAK;AAC5B,eAAS,IAAIA,OAAM,QAAQ,KAAK,KAAK,GAAG;AACpC,YAAID,WAAUC,OAAM,CAAC;AACrB,YAAI;AACA,qBAAW,QAAQ,WAAW,SAAS,SAAU,SAASD;AAC9D,iBAAS,QAAQ,SAAS,SAAS,OAAQ,OAAOA;AAClD,YAAI,QAAQ;AACR;AAAA,MACR;AACA,YAAM,OAAO;AACb,YAAM,SAAS;AACf,YAAM,kBAAkB,KAAK,MAAM,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,SAAS;AACxG,iBAAW,WAAW;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA,mBAAmB,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,oBAAoB,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AAAA,MACnJ,CAAC;AACD;AAAA;AAAA;AAAA,QAGA,MAAM,SAAS,UAAU,WACpB,UAAU,SAAS,MAAM,QACtB,UAAU,kBAAkB,MAAM;AAAA,QAAgB;AACtD,kCAA0B;AAAA,MAC9B;AAAA,IACJ;AAAA,IACA,SAAS,SAAUE,QAAO,iBAAiB;AACvC,UAAI;AACJ,UAAI,oBAAoB,QAAQ;AAAE,0BAAkB;AAAA,MAAO;AAC3D,UAAIA,WAAU,MAAM,MAAM;AACtB,YAAI,iBAAiB;AAKjB,UAAAA,OAAM,QAAQ,MAAM,IAAI;AAAA,QAC5B,OACK;AACD,UAAAA,OAAM,cAAc,IAAI;AAAA,QAC5B;AACA,YAAI,SAAS,CAAC;AACd,YAAI,cAAc,KAAK,MAAM,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG,oBAAoB;AACjG,YAAI,YAAY;AAIZ,iBAAO,aAAa;AAAA,QACxB;AACA,YAAIA,OAAM,aAAa,SAAS,UAAU;AACtC,iBAAO,YAAY,qBAAqB;AAAA,QAC5C,WACSA,OAAM,aAAa,SAAS,SAAS;AAC1C,iBAAO,YAAY,gBAAgB;AAAA,QACvC;AACA,YAAI,yBAAyB;AACzB,oCAA0B;AAC1B,cAAI,aAAaA,OAAM,qBAAqB;AAC5C,UAAAA,OAAM,aAAa,SAAS,WACtB,WAAW,OAAO,UAAU,IAC5B,WAAW,SAAS,UAAU;AAAA,QACxC;AACA,QAAAA,OAAM,kBAAkB,MAAM;AAAA,MAClC,OACK;AACD,YAAI,iBAAiB;AACjB,gBAAM,QAAQA,OAAM,QAAQ,MAAM,IAAI;AAAA,QAC1C,OACK;AACD,UAAAA,OAAM,cAAc,KAAK;AAAA,QAC7B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;;;AChIA,SAAS,YAAYC,QAAO;AAExB,MAAI,YAAY;AAEhB,MAAI,cAAc,CAAC;AAEnB,WAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC3C,QAAI,OAAO,cAAc,CAAC;AAC1B,QAAI,MAAM,WAAW;AAGrB,QAAI,CAACA,OAAM,SAAS,GAAG,KAAKA,OAAM,eAAe,GAAG,MAAM;AACtD;AACJ,gBAAY;AAEZ,gBAAY,GAAG,IAAIA,OAAM,eAAe,GAAG;AAC3C,IAAAA,OAAM,eAAe,KAAK,CAAC;AAAA,EAC/B;AAEA,MAAI,CAAC;AACD;AAGJ,EAAAA,OAAM,WAAW;AAEjB,WAAS,OAAO,aAAa;AACzB,IAAAA,OAAM,eAAe,KAAK,YAAY,GAAG,CAAC;AAAA,EAC9C;AAGA,EAAAA,OAAM,eAAe;AACzB;;;;gDCtCA;;;MAmBe,OAAI,KAAA,SAAA,QAAA,GAAG,MAAS,GAAC,WAAQ,KAAA,SAAA,YAAA,GAAC,KAAK;QAEpC,UAAU,WAAW,aAAa,KAAK,cAAc,SAAQ,CAAA;MAM/D,aAAa;MAIb,WAAQ,oBAAO,IAAG;MAMlB,SAAM,oBAAO,IAAG;MAKhB,kBAAkB;MAIlB,kBAAe,eAAG,KAAK;MAEvB,SAAS;MAWT,cAAW;OACR,cAAa;IAChB,YAAU,CAAG,UAAU,eAAe,KAAK;IAC3C,aAAW,MAAQ;AAOf,qBAAc;AAEd,eAAS;IACb;IACA,UAAQ,CAAGC,WAAU,SAASA,MAAK;IACnC,QAAM,CAAGA,WAAU;AACf,kBAAYA,MAAK;IACrB;;QAGE,uBAAoB,MAAS;QAI/B,iBAAkB,kBAAkB,KAAK;AAMzC,aAAS,QAAO,CAAEA,WAAU;WACnBA,OAAM,WAAW;AAClB,QAAAA,OAAM,WAAW,SAAS;MAC9B,WAAC,cAAUA,OAAM,UAAa,SAAS,UAAQ,KAAA,GAAE;AAC7C,QAAAA,OAAM,WAAQ,cACVA,OAAM,UAAa,SAAS,OAAO,IAC7B,SAAS,WACT,SAAS;MACvB;IACJ,CAAC;AAED,iBAAY;UAKN,UAAO;MACT,eAAa,CAAGA,WAAUA,OAAM,wBAAuB;MACvD,aAAW,CAAGA,WAAU;0BAChBA,OAAM,YAAW,GAAO,QAAS,KAAA,GAAE;gBAC7B,QAAQ,SAASA,MAAK;AAC5B,gBAAM,QAAQA,QAAK,cAAE,KAAI,GAAK,WAAW,CAAA;QAC7C,OAAO;AACH,UAAAA,OAAM,kBAAiB;QAC3B;MACJ;MACA,QAAQC,KAAI,OAAO,EAAE;;AASzB,aAAS,QAAO,CAAED,WAAU,YAAY,IAAIA,MAAK,CAAA;AACjD,gBAAY,MAAM,OAAO;AAKzB,WAAO,QAAO,CAAE,UAAU,MAAM,cAAa,CAAA;EACjD;QAEM,eAAY,MAAS;AACvB,WAAO,QAAO,CAAE,UAAU,MAAM,oBAAmB,CAAA;EACvD;QAEM,iBAAc,CAAI,QAAQ,UAAU;UAChC,SAAK,CAAK,iBAAe;AAK/B,sBAAkB;AAKlB,aAAS,QAAO,CAAEA,WAAU,YAAYA,MAAK,CAAA;AAK7C,aAAS,QAAO,CAAEA,WAAU,oBAAoBA,MAAK,CAAA;AAUrD,WAAO,QAAO,CAAE,UAAU,MAAM,eAAc,CAAA;QAK1C,SAAK,CAAA,IAAK,eAAe,GAAE;UAC3B,iBAAkB,IAAI;AACtB,eAAS;IACb;EACJ;QAEM,WAAQ,CAAIA,WAAU;AACxB,aAAS,IAAIA,MAAK;AAClB,eAAWA,MAAK;AAEhB,IAAAA,OAAM,WAAW,aAAa,SAAS,WAAW,SAAS;EAC/D;QAEM,cAAW,CAAIA,WAAU;AAC3B,mBAAc;AACd,aAAS,OAAOA,MAAK;AACrB,oBAAgBA,MAAK;EACzB;QAEM,aAAU,CAAIA,WAAU;UACpB,QAAQ,SAASA,MAAK;AAC5B,WAAO,IAAIA,MAAK;EACpB;QAEM,kBAAe,CAAIA,WAAU;UACzB,QAAQ,SAASA,MAAK;AAC5B,WAAO,OAAOA,MAAK;EACvB;QAMM,WAAQ,CAAIA,WAAU;UAClB,KAAKA,OAAM,YAAW;sBACxB,IAAO,MAAS,EAAA;KAGnB,OAAO,IAAI,EAAE,KAAK,OAAO,IAAI,IAAI,YAAW,CAAA;WAEtC,OAAO,IAAI,EAAE;EACxB;MACI,KAAK,SAAS,WAAW;QAEvB,iBAAc,MAAS;AACzB,kBAAW,EAAA,GAAQ,YAAW;AAC9B,OAAG,IAAI,WAAW;EAEtB;AAEA,aAAW,qBAAqB,EAAE;AAClC,gBAAc,gBAAe,SAAQ,GAAC,EAAE;AAExC,UAAO,MAAO;AACV,iBAAa;EACjB,CAAC;;YAMM,eAAe,GAAE;AACpB,WAAI,EAAG,KAAI,MAAO;AACd,6BAAoB;MACxB,CAAC;IACL;;;;;;;;;;;;;;;;;;;;AClOG,IAAM,yBAAyB,CAAC,QAAQ,kBAAkB;AAE/D,MAAI,gBAAgB,CAAC;AACrB,MAAI,OAAO;AAGX,QAAM,cAAc,MAAI;AACtB,kBAAc,QAAQ,CAACE,iBAAgBA,aAAY,CAAC;AAAA,EACtD;AACA,QAAM,YAAY,MAAM;AACtB,oBAAgB,KAAK,IAAI,CAAC,QAAQ,IAAI,SAAS,OAAO,CAAC;AACvD,gBAAY;AAAA,EACd;AACA,QAAM,QAAQ,YAAY,cAAc,GAAG,MAAM;AAC/C,gBAAY;AACZ,cAAU;AACV,WAAO;AAAA,EACT,CAAC;AAED,MAAI,cAAc,MAAM;AACtB,UAAM,IAAI,cAAc,CAAC;AAAA,EAC3B;AAEA,QAAM,UAAU,MAAM;AACpB,eAAK,OAAO,aAAa,OAAO,IAAI;AAAA,EACtC;AAEA,QAAM,QAAQ,CAAC,SAAS,mBAAmB;AACzC,WAAK;AAEL,gBAAY;AACZ,kBAAc,MAAM;AAClB,YAAM,IAAI,eAAe,CAAC;AAAA,IAC5B;AACA,cAAU;AAAA,EACZ;AAEA,SAAO;AACT;;;ACpBO,IAAM,oBAAoB,CAAC,cAAc,WAAW;AAIvD,MAAI,eAAe,UAAU;AAC7B,QAAM,aAAa,MAAM;AACrB,QAAI,SAAS;AAEb,aAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACnC,gBAAU,UAAU,CAAC;AACrB,YAAMC,SAAQ,OAAO,CAAC;AACtB,UAAIA,OAAO,WAAU,OAAO,CAAC,EAAE,IAAI;AAAA,IACvC;AAEA,WAAO;AAAA,EACX;AACA,QAAM,QAAQ,uBAAuB,QAAQ,UAAU;AACvD,QAAM,aAAa,MAAM;AAEzB,QAAM,QAAQ,CAAC,MAAM,OAAO;AACxB,mBAAe,EAAE;AACjB,UAAM,WAAW,IAAG,UAAU;AAAA,EAClC;AAEA,SAAO;AACX;;;AC3CA,IAAI,oBAAoB,SAAU,GAAG;AACjC,SAAO,OAAO,MAAM,YAAY,EAAE;AACtC;AACA,IAAI,WAAW,SAAU,GAAG;AAAE,SAAQ,kBAAkB,CAAC,IAAI,EAAE,MAAM;AAAY;AACjF,SAAS,YAAY;AACjB,MAAI,OAAO,CAAC;AACZ,WAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,SAAK,EAAE,IAAI,UAAU,EAAE;AAAA,EAC3B;AACA,MAAI,eAAe,CAAC,MAAM,QAAQ,KAAK,CAAC,CAAC;AACzC,MAAI,YAAY,eAAe,IAAI;AACnC,MAAI,aAAa,KAAK,IAAI,SAAS;AACnC,MAAI,aAAa,KAAK,IAAI,SAAS;AACnC,MAAI,cAAc,KAAK,IAAI,SAAS;AACpC,MAAI,UAAU,KAAK,IAAI,SAAS;AAChC,MAAI,eAAe,YAAY,YAAY,aAAa,OAAO,OAAO,EAAE,OAAO,SAAS,YAAY,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC;AACnH,SAAO,eAAe,aAAa,UAAU,IAAI;AACrD;;;ACrBO,IAAM,eAAe,CACxB,OACA,yBACA,aACA,YACC;AAED,MAAI,SAAS,CAAC;AAEd,QAAM,SAAS,CACXC,QACAC,0BACAC,cACAC,aACC;AACD,UAAM,cAAc,OAAOF,6BAA4B,aACjDA,2BACA,UAAUA,0BAAyBC,cAAaC,QAAO;AAC7D,UAAM,SAAS,MAAM,QAAQH,MAAK,IAAIA,SAAQ,CAACA,MAAK;AACpD,UAAM,eAAe,MAAM,QAAQA,MAAK,IAAI,cACxC,CAAC,CAACI,OAAM,MACJ,YAAYA,OAAM;AAC1B,WAAO,CAAC,QAAQ,MAAM;AAClB,aAAO,SAAS;AAChB,YAAM,YAAY,OAAO;AACzB,eAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,eAAO,CAAC,IAAI,OAAO,CAAC,EAAE,IAAI;AAAA,MAC9B;AAEA,aAAO,aAAa,MAAM;AAAA,IAC9B,CAAC;AAAA,EAEL;AACA,QAAM,OAAO,uBAAuB,GAAG;AAAA,IAAO;AAAA,IAC1C;AAAA,IACA;AAAA,IACA;AAAA,EAAO,CAAC;AAEZ,OAAK,cAAc,KAAK;AAExB,OAAK,QAAQ,CACTJ,QACAC,0BACAC,cACAC,aACC,KAAK;AAAA,IACN,GAAG;AAAA,MACCH;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;;;ACzBO,IAAM,YAAY,CAAC,QAAQ,SAAS,CAAC,GAAG,WAAS,UAAU;AAE9D,QAAM,MAAM,WAAW,mBAAmB,KAAK,oBAAoB,QAAQ;AAE3E,MAAI,wBAAwB;AAE5B,MAAI,QAAQ,YAAe,cAAc,MAAM,IAAI,OAAO,IAAI,IAAI,MAAM;AAExE,MAAI;AACJ,QAAM,SAAS,CAAC,SAAS,YAAY;AACjC,UAAM,OAAO,CAAC,GAAGE,SAAQ;AAGrB,YAAM,EAAE,SAAS,IAAIC,KAAI,GAAG;AAE5B,UAAI,UAAU;AACV,eAAOD,KAAI,CAAC;AAAA,MAChB;AACA,UAAI,uBAAuB;AACvB,8BAAsB,KAAK;AAAA,MAC/B;AACA,8BAAwB,QAAQ;AAAA,QAC5B,MAAM,MAAM,IAAI;AAAA,QAChB,IAAI;AAAA,QACJ,UAAU,MAAM,YAAY;AAAA,QAC5B,GAAG;AAAA,QACH,UAAUA;AAAA,MACd,CAAC;AAED,aAAO,MAAM,IAAI;AAAA,IACrB,CAAC;AACD,cAAU;AACV,WAAO,cAAc,OAAO,IACxB,QAAQ,SAAS,OAAK,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,IAC9C;AAAA,EACR;AAEA,SAAO,QAAQ,MAAM;AAErB,QAAM,QAAQ;AAEd,SAAO;AACX;;;ACpEA,SAAS,yBAAyB,mBAAmB;AACjD,QAAM,cAAc,EAAE,GAAG,OAAO,GAAG,OAAO,IAAI,OAAO,IAAI,MAAM;AAC/D,MAAI;AACJ,QAAM,gBAAgB,oBAAoB,CAAC,SAAS,MAAI;AACpD,QAAI,CAAC,YAAY,KAAK,CAAC,YAAY,KAAK,CAAC,YAAY,MAAM,CAAC,YAAY,IAAI;AACxE,aAAO,kBAAkB;AAAA,IAC7B;AACA,gBAAY,IAAI,IAAI;AACpB,WAAO,MAAM;AACT,kBAAY,IAAI,IAAI;AACpB,UAAI,CAAC,YAAY,KAAK,CAAC,YAAY,KAAK,CAAC,YAAY,MAAM,CAAC,YAAY,IAAI;AACxE,YAAI,MAAK;AACL,eAAK,KAAK,OAAG,EAAE,CAAC;AAAA,QACpB;AAAA,MACJ;AAAA,IACJ;AAAA,EAGJ,IAAI,MAAI,MAAM;AAAA,EAAE;AAEhB,QAAM,OAAO;AAAA,IACT,SAAS,YAAY,GAAE,cAAc,GAAG,CAAC;AAAA,IACzC,SAAS,YAAY,GAAE,cAAc,GAAG,CAAC;AAAA,IACzC,iBAAiB,YAAY,GAAE,cAAc,IAAI,CAAC;AAAA,IAClD,iBAAiB,YAAY,GAAE,cAAc,IAAI,CAAC;AAAA,EACtD;AAEA,SAAO;AACX;AACA,SAAS,YAAY,QAAQ,WAAW,OAAO;AAC3C,QAAM,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,SAAS,SAAS;AAC5D;AACA,SAAS,oBAAoB,QAAQ,YAAY;AAC7C,MAAI,SAAS,WAAY;AACrB,QAAI,KAAK,WAAW,GAAG,UAAU,GAAG,SAAS,UAAU,GAAG,SAAS,aAAa,GAAG,YAAY,aAAa,GAAG;AAE/G,WAAO,QAAQ,IAAI,OAAO;AAC1B,WAAO,QAAQ,IAAI,OAAO;AAE1B,gBAAY,SAAS,YAAY,OAAO,eAAe;AACvD,gBAAY,SAAS,YAAY,OAAO,eAAe;AAAA,EAC3D;AACA,SAAO;AACP,SAAO;AACX;;;ACvCA,IAAM,0BAA0B,CAACE,aAAY,MAAM;AAC/C,SAAO;AAAA,IACH,SAASA,SAAQ;AAAA,IACjB,SAASA,SAAQ;AAAA,IACjB,YAAYA,SAAQ,cAAcA,SAAQ;AAAA,IAC1C,YAAYA,SAAQ,eAAeA,SAAQ;AAAA,EAC/C;AACJ;AAEO,IAAM,mBAAmB,CAAC,QAAQ;AAErC,QAAM,SAAS,CAAC;AAEhB,QAAM,YAAY,YAAY;AAC1B,QAAI,OAAO,WAAW,YAAa,QAAO,MAAI;AAAA,IAAC;AAE/C,QAAI,QAAQ;AACZ,YAAS,CAAC,OAAO,CAAC,IAAI,YAAY,CAAC,OAAO,KAAK;AAC3C,UAAG,UAAU,GAAE;AACX,eAAO,MAAI;AAAA,QAAC;AAAA,MAChB;AAAC;AAED,YAAM,IAAI,QAAQ,OAAG,WAAW,MAAI,EAAE,GAAE,GAAG,CAAC;AAAA,IAChD;AACA,UAAMA,WAAW,OAAO,IAAI,UAAW,MAAM,OAAO;AAEpD,UAAM,qBAAqB;AAAA,MACvB;AAAA,MACA,wBAAwBA,QAAO;AAAA,IACnC;AAEA,UAAM,iBAAiB;AAAA,MACnBA;AAAA,MACA;AAAA,MACA;AAAA,MACA,EAAE,SAAS,KAAK;AAAA,IACpB;AAEA,UAAM,iBAAiB;AAAA,MACnBA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,WAAO,MAAI;AACP,wBAAkB,eAAe;AACjC,wBAAkB,eAAe;AAAA,IACrC;AAAA,EACJ;AACA,SAAO,OAAO,QAAO,yBAAyB,SAAS,CAAC;AAExD,SAAO;AACX;;;ACnDA,IAAI;AAGJ,SAAS,2BAA2B;AAChC,SAAO;AAAA,IACH,SAAS,OAAO;AAAA,IAChB,SAAS,OAAO;AAAA,IAChB,YAAY,SAAS,KAAK,cAAc,OAAO;AAAA,IAC/C,YAAY,SAAS,KAAK,eAAe,OAAO;AAAA,EACpD;AACJ;AAEA,IAAI,eAAe;AAEnB,SAAS,oBAAoB;AACzB,iBAAe;AACf,MAAI,OAAO,WAAW,YAAa;AAEnC,QAAM,qBAAqB;AAAA,IACvB;AAAA,IACA;AAAA,EACJ;AAEA,cAAY,QAAQ,UAAU,oBAAoB,EAAE,SAAS,KAAK,CAAC;AACnE,cAAY,QAAQ,UAAU,kBAAkB;AACpD;AAwBO,SAAS,oBAAoB;AAIhC,MAAI,CAAC,sBAAsB;AACvB,2BAAuB,yBAAyB;AAAA,EACpD;AAEA,OAAK,EAAE,KAAK,OAAG;AACX,KAAC,gBAAgB,kBAAkB;AAAA,EACvC,CAAC;AAED,SAAO;AACX;;;AClEA,IAAI;AAEJ,SAAS,2BAA2B;AAChC,yBAAuB,YAAY,IAAI;AAEvC,MAAI,OAAO,WAAW,YAAa;AAEnC,MAAI,OAAO,YAAY;AACnB,UAAM,mBAAmB,OAAO;AAAA,MAC5B;AAAA,IACJ;AAEA,UAAM,8BAA8B,MAChC,qBAAqB,IAAI,iBAAiB,OAAO;AAErD,qBAAiB,YAAY,2BAA2B;AAExD,gCAA4B;AAAA,EAChC,OAAO;AACH,yBAAqB,IAAI,KAAK;AAAA,EAClC;AACJ;AA8BO,IAAM,mBAAmB,MAAI;AAChC,GAAC,wBAAwB,yBAAyB;AAElD,SAAO,QAAQ,sBAAqB,QAAI,EAAE;AAC9C;;;;yCC9DA;;;MA2DI,WAAW,kBAAiB;AAChC,UAAQ,SAAS,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHf,IAAM,eAAe,MAAK;AAE7B,QAAM,WAAY,kBAAkB,MAAI;AAEpC,UAAM,UAAU,CAAC;AACjB,SAAK,EAAE,KAAK,OAAK,QAAQ,QAAQ,SAAS,MAAM,CAAC;AACjD,WAAO,MAAI;AACP,cAAQ,QAAQ;AAAA,IACpB;AAAA,EACJ,CAAC;AAED,SAAO;AACX;;;ACdO,IAAM,WAAW,IAAI,UAAU;AAClC,MAAI,QAAQ;AACZ,QAAM,IAAI,SAAS,MAAM,KAAK,CAAC;AAC/B,QAAM,OAAO,CAAC,MAAM;AAChB,YAAQ,OAAO,MAAM,WACjB,KAAK,GAAG,MAAM,QAAQ,QAAQ,CAAC,IAC/B;AACJ,MAAE,IAAI,MAAM,KAAK,CAAC;AAAA,EACtB;AACA,IAAE,OAAK;AACP,SAAO;AACX;;;ACrBO,IAAM;AAAA;AAAA,GAA8B,WAAY;AACnD,aAASC,gBAAe;AACpB,WAAK,oBAAoB,oBAAI,IAAI;AAAA,IACrC;AAMA,IAAAA,cAAa,UAAU,YAAY,SAAU,UAAU;AACnD,UAAI,QAAQ;AACZ,WAAK,kBAAkB,IAAI,QAAQ;AACnC,aAAO,WAAY;AACf,eAAO,MAAM,kBAAkB,OAAO,QAAQ;AAAA,MAClD;AAAA,IACJ;AAgBA,IAAAA,cAAa,UAAU,QAAQ,SAAU,OAAO,SAAS;AACrD,WAAK,kBAAkB,QAAQ,SAAU,UAAU;AAC/C,iBAAS,MAAM,MAAM,eAAe,OAAO,OAAO;AAAA,MACtD,CAAC;AAAA,IACL;AACA,IAAAA,cAAa,UAAU,oBAAoB,WAAY;AACnD,WAAK,kBAAkB,QAAQ,SAAU,UAAU;AAC/C,iBAAS,mBAAmB;AAC5B,iBAAS,uBAAuB;AAAA,MACpC,CAAC;AAAA,IACL;AACA,WAAOA;AAAA,EACX,GAAG;AAAA;AACH,IAAM,qBAAqB,WAAY;AACnC,SAAO,IAAI,aAAa;AAC5B;AA+CO,IAAM,kBAAkB;;;AC1HxB,IAAM,cAAc,CAAC,UAAU;AAClC,MAAI,MAAM;AACV,MAAI;AAEJ,QAAM,WAAW,YAAe,MAAM,YAAY,GAAE,MAAI;AACpD,cAAU;AACV,cAAU,IAAI,0BAA0B,IAAI,CAAC,gBAAgB;AACzD,eAAS,IAAI,WAAW;AAAA,IAC5B,CAAC;AACD,WAAO,MAAI;AACP,gBAAU;AAAA,IACd;AAAA,EACJ,CAAC;AAGD,QAAMC,SAAQ,CAAC,SAAS;AACpB,cAAU;AACV,UAAM;AACN,cAAU,IAAI,0BAA0B,IAAI,CAAC,gBAAgB;AACzD,eAAS,IAAI,WAAW;AAAA,IAC5B,CAAC;AAAA,EACL;AAEA,WAAS,QAAQA;AAEjB,SAAO;AACX;;;;;sCC1CA;;;;;MAEe,MAAG,KAAA,SAAA,OAAA,IAAA,OAAA,CAAA,EAAA;;;;qDAGN,aAAW;;;;;;;kDACb,KAAK,GAAA,GAAM,IAAG,EAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "names": ["Presence", "VisibilityAction", "SubscriptionManager", "MotionValue", "init", "delta", "get", "get", "_a", "set", "visualElement", "visualElement", "child", "key", "visualElement", "animations", "getAnimation", "_a", "child", "visualElement", "transformPoint", "visualElement", "drag", "scale", "delta", "delta", "transform", "AnimationType", "visualElement", "animations", "animate", "i", "prop", "key", "child", "_a", "element", "delta", "FlatTree", "child", "child", "visualElement", "scrapeMotionValuesFromProps", "_a", "presenceId", "layoutState", "element", "delta", "key", "value", "child", "prop", "progress", "get", "visualElement", "child", "layoutState", "child", "order", "element", "get", "visualElement", "visualElement", "transform", "transformKeys", "layoutState", "transform", "transformKeys", "props", "calcOrigin", "progress", "layoutState", "motion", "$$anchor", "element", "isCSSVariable", "element", "isCSSVariable", "visualElement", "current", "resolved", "BoundingBoxDimension", "transform", "visualElement", "element", "visualElement", "element", "getComputedStyle", "element", "layoutState", "scrapeMotionValuesFromProps", "element", "scrapeMotionValuesFromProps", "layoutState", "scrapeMotionValuesFromProps", "element", "animate", "get", "animate", "prop", "scrapeMotionValuesFromProps", "onMount", "animate", "get", "visualElement", "setContext", "visualElement", "$$anchor", "element", "isMouseEvent", "PanSession", "info", "point", "timestamp", "_a", "event", "getVelocity", "visualElement", "get", "child", "drag", "visualElement", "visualElement", "visualElement", "visualElement", "progress", "visualElement", "VisualElementDragControls", "visualElement", "_a", "element", "_b", "_c", "drag", "inertia", "visualElement", "get", "delta", "visualElement", "animations", "visualElement", "visualElement", "get", "visualElement", "visualElement", "animate", "visualElement", "isPresent", "M", "setContext", "visualElement", "$$anchor", "isPresent", "child", "$$anchor", "animate", "progress", "animate", "element", "element", "order", "child", "child", "child", "get", "unsubscribe", "value", "input", "inputRangeOrTransformer", "outputRange", "options", "latest", "set", "get", "element", "DragControls", "reset"]
}
