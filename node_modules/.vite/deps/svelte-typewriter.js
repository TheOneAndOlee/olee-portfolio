import {
  scramble_default
} from "./chunk-CG6VRIST.js";
import {
  concurrent_default
} from "./chunk-CYVPZRO2.js";
import {
  cascade_default
} from "./chunk-GRBGEPM7.js";
import {
  loop_default
} from "./chunk-RILXRNJS.js";
import {
  loopOnce_default
} from "./chunk-7PRMUXNY.js";
import {
  loopRandom_default
} from "./chunk-O3OMBR44.js";
import "./chunk-EPRWBC4I.js";
import "./chunk-57MTFHUK.js";
import "./chunk-6H73DAVV.js";
import "./chunk-WE4CA4G7.js";
import "./chunk-VDI3ZIWR.js";
import {
  action,
  add_locations,
  append_styles,
  await_block,
  check_target,
  cleanup_styles,
  element,
  hmr,
  if_block,
  init,
  key,
  legacy_api,
  legacy_rest_props,
  prop,
  set_class,
  slot,
  validate_dynamic_element_tag,
  validate_void_dynamic_element
} from "./chunk-LDGESZ4W.js";
import "./chunk-U7P2NEEE.js";
import {
  append,
  comment,
  from_html
} from "./chunk-P3CBPN3Y.js";
import {
  FILENAME,
  HMR,
  add_svelte_meta,
  child,
  deep_read_state,
  first_child,
  get,
  legacy_pre_effect,
  legacy_pre_effect_reset,
  mutable_source,
  pop,
  push,
  reset,
  set,
  sibling,
  strict_equals,
  template_effect,
  untrack
} from "./chunk-YYYSR75L.js";
import "./chunk-JZ2QQNGC.js";
import "./chunk-XYY4MB77.js";
import "./chunk-4GBHW5UE.js";
import {
  require_polyfill
} from "./chunk-ELC2JPDM.js";
import "./chunk-PV3IOU2H.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/svelte-typewriter/package/Typewriter.svelte
var import_polyfill = __toESM(require_polyfill());
Typewriter[FILENAME] = "node_modules/svelte-typewriter/package/Typewriter.svelte";
var root_2 = add_locations(from_html(`<div class="typewriter-container s-2T4i7Kdb9jsZ"><!></div>`), Typewriter[FILENAME], [[102, 8]]);
var root_8 = add_locations(from_html(`<div class="typewriter-container cursor s-2T4i7Kdb9jsZ"><p class="typing s-2T4i7Kdb9jsZ"></p></div>`), Typewriter[FILENAME], [[108, 16, [[109, 20]]]]);
var root = add_locations(from_html(`<noscript></noscript> <!>`, 1), Typewriter[FILENAME], [[96, 0]]);
var $$css = {
  hash: "s-2T4i7Kdb9jsZ",
  code: "\r\n	@keyframes s-2T4i7Kdb9jsZ-cursorFade {\r\n		0%,\r\n		100% {\r\n			opacity: 1;\r\n		}\r\n\r\n		50% {\r\n			opacity: 0;\r\n		}\r\n	}\r\n\r\n	.typewriter-container.s-2T4i7Kdb9jsZ *:not(.typing):not(.finished-typing):not([data-static]) {\r\n		display: none;\r\n	}\r\n\r\n	.typewriter-container.s-2T4i7Kdb9jsZ .finished-typing::after {\r\n		content: none;\r\n	}\r\n\r\n    .cursor.s-2T4i7Kdb9jsZ .typing::after {\r\n        content: '';\r\n        width: var(--cursor-width, 1ch);\r\n        height: 2ch;\r\n        display: inline-block;\r\n        vertical-align: text-top;\r\n        background-color: var(--cursor-color, #000000);\r\n        animation: s-2T4i7Kdb9jsZ-cursorFade 1.25s infinite;\r\n    }\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHlwZXdyaXRlci5zdmVsdGUiLCJzb3VyY2VzIjpbIlR5cGV3cml0ZXIuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XHJcbiAgICBpbXBvcnQgJ0Bmb3JtYXRqcy9pbnRsLXNlZ21lbnRlci9wb2x5ZmlsbCdcclxuXHJcbiAgICBleHBvcnQgbGV0IG1vZGUgPSBcImNvbmN1cnJlbnRcIlxyXG5cclxuICAgIC8vIGdlbmVyYWwtcHVycG9zZSBwcm9wc1xyXG5cdGV4cG9ydCBsZXQgaW50ZXJ2YWwgPSAzMFxyXG5cdGV4cG9ydCBsZXQgY3Vyc29yID0gdHJ1ZVxyXG4gICAgZXhwb3J0IGxldCBrZWVwQ3Vyc29yT25GaW5pc2ggPSBmYWxzZVxyXG5cdGV4cG9ydCBsZXQgZGVsYXkgPSAwXHJcbiAgICBleHBvcnQgbGV0IHNob3dDdXJzb3JPbkRlbGF5ID0gZmFsc2VcclxuICAgIGV4cG9ydCBsZXQgZGlzYWJsZWQgPSBmYWxzZVxyXG4gICAgZXhwb3J0IGxldCBlbGVtZW50ID0gXCJkaXZcIlxyXG5cclxuICAgIC8vIG1vZGUtc3BlY2lmaWMgcHJvcHNcclxuICAgIGV4cG9ydCBsZXQgc2NyYW1ibGVEdXJhdGlvbiA9IDMwMDBcclxuICAgIGV4cG9ydCBsZXQgc2NyYW1ibGVTbG93ZG93biA9IHRydWVcclxuXHRleHBvcnQgbGV0IHVud3JpdGVJbnRlcnZhbCA9IDMwXHJcbiAgICBleHBvcnQgbGV0IHdvcmRJbnRlcnZhbCA9IDE1MDBcclxuXHJcbiAgICAkOiBpc0xvb3BNb2RlID0gL15sb29wKE9uY2V8UmFuZG9tKT8kLy50ZXN0KG1vZGUpXHJcblxyXG4gICAgLy8gdGhlc2UgbW9kZXMgc3RvcCBvbmNlIGFsbCBnaXZlbiBlbGVtZW50cyBoYXZlIGZpbmlzaGVkIHRoZWlyIGFuaW1hdGlvbnNcclxuICAgIC8vIGFuZCBzdXBwb3J0IHRoZSBjdXJzb3JcclxuICAgICQ6IGlzRmluaXRlQ3Vyc29yTW9kZSA9IFtcImNvbmN1cnJlbnRcIiwgXCJjYXNjYWRlXCIsIFwibG9vcE9uY2VcIl0uaW5jbHVkZXMobW9kZSlcclxuXHJcbiAgICAkOiBpbnZhbGlkQ3Vyc29yT25GaW5pc2ggPSAhaXNGaW5pdGVDdXJzb3JNb2RlICYmIGtlZXBDdXJzb3JPbkZpbmlzaFxyXG4gICAgJDogaW52YWxpZEN1cnNvck9uRGVsYXkgPSBkZWxheSA8IDEgJiYgc2hvd0N1cnNvck9uRGVsYXlcclxuICAgICQ6IGludmFsaWRMb29wUHJvcHMgPSAhaXNMb29wTW9kZSAmJiAoJCRwcm9wcy51bndyaXRlSW50ZXJ2YWwgfHwgJCRwcm9wcy53b3JkSW50ZXJ2YWwpXHJcbiAgICAkOiBpbnZhbGlkU2NyYW1ibGVQcm9wcyA9IG1vZGUgIT09IFwic2NyYW1ibGVcIiAmJiAoJCRwcm9wcy5zY3JhbWJsZUR1cmF0aW9uIHx8ICQkcHJvcHMuc2NyYW1ibGVTbG93ZG93bilcclxuICAgICQ6IHVubmVjZXNzYXJ5Q3Vyc29yT25GaW5pc2ggPSB0eXBlb2Yga2VlcEN1cnNvck9uRmluaXNoID09PSAnbnVtYmVyJyAmJiBrZWVwQ3Vyc29yT25GaW5pc2ggPCAxXHJcblxyXG4gICAgY29uc3QgbW9kZXMgPSB7XHJcbiAgICAgICAgY29uY3VycmVudDogKCkgPT4gaW1wb3J0KFwiLi9tb2Rlcy9jb25jdXJyZW50XCIpLFxyXG4gICAgICAgIGNhc2NhZGU6ICgpID0+IGltcG9ydChcIi4vbW9kZXMvY2FzY2FkZVwiKSxcclxuICAgICAgICBsb29wOiAoKSA9PiBpbXBvcnQoXCIuL21vZGVzL2xvb3BcIiksXHJcbiAgICAgICAgbG9vcE9uY2U6ICgpID0+IGltcG9ydChcIi4vbW9kZXMvbG9vcE9uY2VcIiksXHJcbiAgICAgICAgbG9vcFJhbmRvbTogKCkgPT4gaW1wb3J0KFwiLi9tb2Rlcy9sb29wUmFuZG9tXCIpLFxyXG4gICAgICAgIHNjcmFtYmxlOiAoKSA9PiBpbXBvcnQoXCIuL21vZGVzL3NjcmFtYmxlXCIpXHJcbiAgICB9XHJcblxyXG4gICAgJDogaW52YWxpZEN1cnNvck9uRmluaXNoICYmIGNvbnNvbGUud2FybihcIltzdmVsdGUtdHlwZXdyaXRlcl0gVGhlIHByb3AgJ2tlZXBDdXJzb3JPbkZpbmlzaCcgaXMgY29tcGF0aWJsZSBvbmx5IHdpdGggZmluaXRlIG1vZGVzXCIpXHJcbiAgICAkOiBpbnZhbGlkQ3Vyc29yT25EZWxheSAmJiBjb25zb2xlLndhcm4oXCJbc3ZlbHRlLXR5cGV3cml0ZXJdIFRoZSBwcm9wICdzaG93Q3Vyc29yT25EZWxheScgaGFzIG5vIGVmZmVjdCBpZiB0aGUgZGVsYXkgaXMgMFwiKVxyXG4gICAgJDogaW52YWxpZExvb3BQcm9wcyAmJiBjb25zb2xlLndhcm4oXCJbc3ZlbHRlLXR5cGV3cml0ZXJdIFRoZSBwcm9wcyAndW53cml0ZUludGVydmFsJyBhbmQgJ3dvcmRJbnRlcnZhbCcgYXJlIG9ubHkgY29tcGF0aWJsZSB3aXRoIGxvb3AgbW9kZXNcIilcclxuICAgICQ6IGludmFsaWRTY3JhbWJsZVByb3BzICYmIGNvbnNvbGUud2FybihcIltzdmVsdGUtdHlwZXdyaXRlcl0gVGhlIHByb3BzICdzY3JhbWJsZUR1cmF0aW9uJyBhbmQgJ3NjcmFtYmxlU2xvd2Rvd24nIGFyZSBvbmx5IGNvbXBhdGlibGUgd2l0aCBzY3JhbWJsZSBtb2RlXCIpXHJcbiAgICAkOiB1bm5lY2Vzc2FyeUN1cnNvck9uRmluaXNoICYmIGNvbnNvbGUud2FybihcIltzdmVsdGUtdHlwZXdyaXRlcl0gVGhlIHByb3AgJ2tlZXBDdXJzb3JPbkZpbmlzaCcgaGFzIG5vIGVmZmVjdCB3aXRoIHZhbHVlcyBsb3dlciB0aGFuIDFcIilcclxuXHJcbiAgICAkOiBkZWxheVByb21pc2UgPSAoKSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZShkZWxheSksIGRlbGF5KSlcclxuXHJcbiAgICAkOiBwcm9wcyA9IHtcclxuICAgICAgICBpbnRlcnZhbCxcclxuICAgICAgICBjdXJzb3IsXHJcbiAgICAgICAga2VlcEN1cnNvck9uRmluaXNoLFxyXG4gICAgICAgIGRlbGF5LFxyXG4gICAgICAgIHNob3dDdXJzb3JPbkRlbGF5LFxyXG4gICAgICAgIGRpc2FibGVkLFxyXG4gICAgICAgIGVsZW1lbnQsXHJcbiAgICAgICAgc2NyYW1ibGVEdXJhdGlvbixcclxuICAgICAgICBzY3JhbWJsZVNsb3dkb3duLFxyXG4gICAgICAgIHVud3JpdGVJbnRlcnZhbCxcclxuICAgICAgICB3b3JkSW50ZXJ2YWxcclxuICAgIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGU+XHJcblx0QGtleWZyYW1lcyBjdXJzb3JGYWRlIHtcclxuXHRcdDAlLFxyXG5cdFx0MTAwJSB7XHJcblx0XHRcdG9wYWNpdHk6IDE7XHJcblx0XHR9XHJcblxyXG5cdFx0NTAlIHtcclxuXHRcdFx0b3BhY2l0eTogMDtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC50eXBld3JpdGVyLWNvbnRhaW5lciA6Z2xvYmFsKCo6bm90KC50eXBpbmcpOm5vdCguZmluaXNoZWQtdHlwaW5nKTpub3QoW2RhdGEtc3RhdGljXSkpIHtcclxuXHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0fVxyXG5cclxuXHQudHlwZXdyaXRlci1jb250YWluZXIgOmdsb2JhbCguZmluaXNoZWQtdHlwaW5nOjphZnRlcikge1xyXG5cdFx0Y29udGVudDogbm9uZTtcclxuXHR9XHJcblxyXG4gICAgLmN1cnNvciA6Z2xvYmFsKC50eXBpbmc6OmFmdGVyKSB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgd2lkdGg6IHZhcigtLWN1cnNvci13aWR0aCwgMWNoKTtcclxuICAgICAgICBoZWlnaHQ6IDJjaDtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN1cnNvci1jb2xvciwgIzAwMDAwMCk7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBjdXJzb3JGYWRlIDEuMjVzIGluZmluaXRlO1xyXG4gICAgfVxyXG48L3N0eWxlPlxyXG5cclxuPG5vc2NyaXB0PlxyXG4gICAgPHNsb3QgLz5cclxuPC9ub3NjcmlwdD5cclxuXHJcbnsja2V5ICQkcHJvcHN9XHJcbiAgICB7I2lmIGRpc2FibGVkfVxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0eXBld3JpdGVyLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8c2xvdCAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgezplbHNlfVxyXG4gICAgICAgIHsjYXdhaXQgZGVsYXlQcm9taXNlKCl9XHJcbiAgICAgICAgICAgIHsjaWYgc2hvd0N1cnNvck9uRGVsYXl9XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidHlwZXdyaXRlci1jb250YWluZXIgY3Vyc29yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0eXBpbmdcIj48L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgey9pZn1cclxuICAgICAgICB7OnRoZW59XHJcbiAgICAgICAgICAgIHsjYXdhaXQgbW9kZXNbbW9kZV0oKSB0aGVuIHNlbGVjdGVkTW9kZX1cclxuICAgICAgICAgICAgICAgIDxzdmVsdGU6ZWxlbWVudCB0aGlzPXtlbGVtZW50fSB1c2U6c2VsZWN0ZWRNb2RlLmRlZmF1bHQ9e3Byb3BzfSBjbGFzczpjdXJzb3IgY2xhc3M9XCJ0eXBld3JpdGVyLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzbG90IC8+XHJcbiAgICAgICAgICAgICAgICA8L3N2ZWx0ZTplbGVtZW50PlxyXG4gICAgICAgICAgICB7L2F3YWl0fVxyXG4gICAgICAgIHsvYXdhaXR9XHJcbiAgICB7L2lmfVxyXG57L2tleX1cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdFTSIsImlnbm9yZUxpc3QiOltdfQ== */"
};
function Typewriter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, ["children", "$$slots", "$$events", "$$legacy"]);
  push($$props, false, Typewriter);
  append_styles($$anchor, $$css);
  const isLoopMode = mutable_source();
  const isFiniteCursorMode = mutable_source();
  const invalidCursorOnFinish = mutable_source();
  const invalidCursorOnDelay = mutable_source();
  const invalidLoopProps = mutable_source();
  const invalidScrambleProps = mutable_source();
  const unnecessaryCursorOnFinish = mutable_source();
  const delayPromise = mutable_source();
  const props = mutable_source();
  let mode = prop($$props, "mode", 8, "concurrent");
  let interval = prop($$props, "interval", 8, 30);
  let cursor = prop($$props, "cursor", 8, true);
  let keepCursorOnFinish = prop($$props, "keepCursorOnFinish", 8, false);
  let delay = prop($$props, "delay", 8, 0);
  let showCursorOnDelay = prop($$props, "showCursorOnDelay", 8, false);
  let disabled = prop($$props, "disabled", 8, false);
  let element2 = prop($$props, "element", 8, "div");
  let scrambleDuration = prop($$props, "scrambleDuration", 8, 3e3);
  let scrambleSlowdown = prop($$props, "scrambleSlowdown", 8, true);
  let unwriteInterval = prop($$props, "unwriteInterval", 8, 30);
  let wordInterval = prop($$props, "wordInterval", 8, 1500);
  const modes = {
    concurrent: () => import("./concurrent-3HZ7CTQG.js"),
    cascade: () => import("./cascade-4USIJGYU.js"),
    loop: () => import("./loop-XT2X7UE5.js"),
    loopOnce: () => import("./loopOnce-XRJ7S7VI.js"),
    loopRandom: () => import("./loopRandom-7ZVAOUXM.js"),
    scramble: () => import("./scramble-LKSQCE6X.js")
  };
  legacy_pre_effect(() => deep_read_state(mode()), () => {
    set(isLoopMode, /^loop(Once|Random)?$/.test(mode()));
  });
  legacy_pre_effect(() => deep_read_state(mode()), () => {
    set(isFiniteCursorMode, ["concurrent", "cascade", "loopOnce"].includes(mode()));
  });
  legacy_pre_effect(
    () => (get(isFiniteCursorMode), deep_read_state(keepCursorOnFinish())),
    () => {
      set(invalidCursorOnFinish, !get(isFiniteCursorMode) && keepCursorOnFinish());
    }
  );
  legacy_pre_effect(
    () => (deep_read_state(delay()), deep_read_state(showCursorOnDelay())),
    () => {
      set(invalidCursorOnDelay, delay() < 1 && showCursorOnDelay());
    }
  );
  legacy_pre_effect(() => (get(isLoopMode), deep_read_state($$sanitized_props)), () => {
    set(invalidLoopProps, !get(isLoopMode) && ($$sanitized_props.unwriteInterval || $$sanitized_props.wordInterval));
  });
  legacy_pre_effect(
    () => (deep_read_state(mode()), deep_read_state($$sanitized_props)),
    () => {
      set(invalidScrambleProps, strict_equals(mode(), "scramble", false) && ($$sanitized_props.scrambleDuration || $$sanitized_props.scrambleSlowdown));
    }
  );
  legacy_pre_effect(() => deep_read_state(keepCursorOnFinish()), () => {
    set(unnecessaryCursorOnFinish, strict_equals(typeof keepCursorOnFinish(), "number") && keepCursorOnFinish() < 1);
  });
  legacy_pre_effect(() => get(invalidCursorOnFinish), () => {
    get(invalidCursorOnFinish) && console.warn("[svelte-typewriter] The prop 'keepCursorOnFinish' is compatible only with finite modes");
  });
  legacy_pre_effect(() => get(invalidCursorOnDelay), () => {
    get(invalidCursorOnDelay) && console.warn("[svelte-typewriter] The prop 'showCursorOnDelay' has no effect if the delay is 0");
  });
  legacy_pre_effect(() => get(invalidLoopProps), () => {
    get(invalidLoopProps) && console.warn("[svelte-typewriter] The props 'unwriteInterval' and 'wordInterval' are only compatible with loop modes");
  });
  legacy_pre_effect(() => get(invalidScrambleProps), () => {
    get(invalidScrambleProps) && console.warn("[svelte-typewriter] The props 'scrambleDuration' and 'scrambleSlowdown' are only compatible with scramble mode");
  });
  legacy_pre_effect(() => get(unnecessaryCursorOnFinish), () => {
    get(unnecessaryCursorOnFinish) && console.warn("[svelte-typewriter] The prop 'keepCursorOnFinish' has no effect with values lower than 1");
  });
  legacy_pre_effect(() => deep_read_state(delay()), () => {
    set(delayPromise, () => new Promise((resolve) => setTimeout(() => resolve(delay()), delay())));
  });
  legacy_pre_effect(
    () => (deep_read_state(interval()), deep_read_state(cursor()), deep_read_state(keepCursorOnFinish()), deep_read_state(delay()), deep_read_state(showCursorOnDelay()), deep_read_state(disabled()), deep_read_state(element2()), deep_read_state(scrambleDuration()), deep_read_state(scrambleSlowdown()), deep_read_state(unwriteInterval()), deep_read_state(wordInterval())),
    () => {
      set(props, {
        interval: interval(),
        cursor: cursor(),
        keepCursorOnFinish: keepCursorOnFinish(),
        delay: delay(),
        showCursorOnDelay: showCursorOnDelay(),
        disabled: disabled(),
        element: element2(),
        scrambleDuration: scrambleDuration(),
        scrambleSlowdown: scrambleSlowdown(),
        unwriteInterval: unwriteInterval(),
        wordInterval: wordInterval()
      });
    }
  );
  legacy_pre_effect_reset();
  init();
  var fragment = root();
  var noscript = first_child(fragment);
  var node = sibling(noscript, 2);
  add_svelte_meta(
    () => key(node, () => $$sanitized_props, ($$anchor2) => {
      var fragment_1 = comment();
      var node_1 = first_child(fragment_1);
      {
        var consequent = ($$anchor3) => {
          var div = root_2();
          var node_2 = child(div);
          slot(node_2, $$props, "default", {}, null);
          reset(div);
          append($$anchor3, div);
        };
        var alternate = ($$anchor3) => {
          var fragment_2 = comment();
          var node_3 = first_child(fragment_2);
          add_svelte_meta(
            () => await_block(
              node_3,
              () => (get(delayPromise), untrack(() => get(delayPromise)())),
              ($$anchor4) => {
                var fragment_6 = comment();
                var node_7 = first_child(fragment_6);
                {
                  var consequent_1 = ($$anchor5) => {
                    var div_1 = root_8();
                    append($$anchor5, div_1);
                  };
                  add_svelte_meta(
                    () => if_block(node_7, ($$render) => {
                      if (showCursorOnDelay()) $$render(consequent_1);
                    }),
                    "if",
                    Typewriter,
                    107,
                    12
                  );
                }
                append($$anchor4, fragment_6);
              },
              ($$anchor4) => {
                var fragment_3 = comment();
                var node_4 = first_child(fragment_3);
                add_svelte_meta(
                  () => await_block(node_4, () => (deep_read_state(mode()), untrack(() => modes[mode()]())), null, ($$anchor5, selectedMode) => {
                    var fragment_4 = comment();
                    var node_5 = first_child(fragment_4);
                    {
                      validate_void_dynamic_element(element2);
                      validate_dynamic_element_tag(element2);
                      element(
                        node_5,
                        element2,
                        false,
                        ($$element, $$anchor6) => {
                          action($$element, ($$node, $$action_arg) => get(selectedMode).default?.($$node, $$action_arg), () => get(props));
                          let classes;
                          template_effect(($0) => classes = set_class($$element, 0, "typewriter-container s-2T4i7Kdb9jsZ", null, classes, $0), [() => ({ cursor: cursor() })]);
                          var fragment_5 = comment();
                          var node_6 = first_child(fragment_5);
                          slot(node_6, $$props, "default", {}, null);
                          append($$anchor6, fragment_5);
                        },
                        void 0,
                        [114, 16]
                      );
                    }
                    append($$anchor5, fragment_4);
                  }),
                  "await",
                  Typewriter,
                  113,
                  12
                );
                append($$anchor4, fragment_3);
              }
            ),
            "await",
            Typewriter,
            106,
            8
          );
          append($$anchor3, fragment_2);
        };
        add_svelte_meta(
          () => if_block(node_1, ($$render) => {
            if (disabled()) $$render(consequent);
            else $$render(alternate, false);
          }),
          "if",
          Typewriter,
          101,
          4
        );
      }
      append($$anchor2, fragment_1);
    }),
    "key",
    Typewriter,
    100,
    0
  );
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  Typewriter = hmr(Typewriter, () => Typewriter[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-2T4i7Kdb9jsZ");
    module.default[HMR].source = Typewriter[HMR].source;
    set(Typewriter[HMR].source, module.default[HMR].original);
  });
}
var Typewriter_default = Typewriter;
export {
  cascade_default as cascade,
  concurrent_default as concurrent,
  Typewriter_default as default,
  loop_default as loop,
  loopOnce_default as loopOnce,
  loopRandom_default as loopRandom,
  scramble_default as scramble
};
//# sourceMappingURL=svelte-typewriter.js.map
