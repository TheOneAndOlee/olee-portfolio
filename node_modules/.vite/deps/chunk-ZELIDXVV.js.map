{
  "version": 3,
  "sources": ["../../svelte-typewriter/package/helpers/sleep.js", "../../svelte-typewriter/package/helpers/rng.js", "../../svelte-typewriter/package/helpers/runOnEveryParentUntil.js", "../../svelte-typewriter/package/helpers/makeNestedStaticElementsVisible.js", "../../svelte-typewriter/package/helpers/hasSingleTextNode.js", "../../svelte-typewriter/package/helpers/createElement.js", "../../svelte-typewriter/package/helpers/getElements.js", "../../svelte-typewriter/package/helpers/animationSetup.js"],
  "sourcesContent": ["/** @type {import(types').Sleep} */\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport { sleep }\r\n", "/** @type {import(types').RandomNumberGenerator} */\r\nconst rng = (min, max) => Math.floor(Math.random() * (max - min) + min)\r\n\r\nexport { rng }\r\n", "export const runOnEveryParentUntil = async (element, parent, callback) => {\r\n\tif (!parent) {\r\n\t\tconsole.error('The specified parent element does not exists!')\r\n\t\treturn\r\n\t}\r\n\r\n\tlet currentElement = element\r\n\tdo {\r\n\t\tif (currentElement === parent) return\r\n\r\n\t\tcallback(currentElement)\r\n\r\n\t\tcurrentElement = currentElement.parentElement || currentElement.parentNode\r\n\t} while (currentElement !== null && currentElement.nodeType === 1)\r\n}\r\n", "import { runOnEveryParentUntil } from '../helpers/runOnEveryParentUntil'\r\n\r\nexport const makeNestedStaticElementsVisible = parentElement => {\r\n\tconst staticElements = [...parentElement.querySelectorAll('[data-static]')]\r\n\tfor (const staticElement of staticElements) {\r\n\t\trunOnEveryParentUntil(staticElement, parentElement, currentStaticElement => {\r\n\t\t\tconst isParentElement = currentStaticElement !== staticElement\r\n\t\t\tisParentElement && currentStaticElement.classList.add('finished-typing')\r\n\t\t})\r\n\t}\r\n}\r\n", "/** @type {import(types').HasSingleTextNode} */\r\nconst hasSingleTextNode = el => el.childNodes.length === 1 && el.childNodes[0].nodeType === 3\r\n\r\nexport { hasSingleTextNode }\r\n", "/** @type {import(types').CreateElement} */\r\nconst createElement = (text, elementTag) => {\r\n\tconst element = document.createElement(elementTag)\r\n\telement.textContent = text\r\n\treturn element\r\n}\r\n\r\nexport { createElement }\r\n", "import { hasSingleTextNode } from './hasSingleTextNode'\r\nimport { createElement } from './createElement'\r\n\r\nconst filterOutStaticElements = child => child.dataset.static === undefined\r\n\r\n/** @type {import(types').GetElements} */\r\nconst getElements = (node, { parentElement }) => {\r\n\tif (hasSingleTextNode(parentElement)) {\r\n\t\tconst text = parentElement.textContent\r\n\t\tconst childNode = createElement(parentElement.textContent, 'p')\r\n\t\tparentElement.textContent = ''\r\n\t\tparentElement.appendChild(childNode)\r\n\t\treturn [{ currentNode: childNode, text }]\r\n\t}\r\n\r\n\tif (hasSingleTextNode(node)) {\r\n\t\tconst textWithFilteredAmpersand = node.innerHTML.replaceAll('&amp;', '&')\r\n\t\treturn [{ currentNode: node, text: textWithFilteredAmpersand }]\r\n\t} else {\r\n\t\tconst children = [...node.children].filter(filterOutStaticElements)\r\n\t\tconst allChildren = children.flatMap(child => getElements(child, { parentElement }))\r\n\t\treturn allChildren\r\n\t}\r\n}\r\n\r\nexport { getElements }\r\n", "import { createEventDispatcher } from 'svelte'\r\n\r\nimport { getElements } from './getElements'\r\nimport { makeNestedStaticElementsVisible } from './makeNestedStaticElementsVisible'\r\n\r\nexport const animationSetup = (node, props) => {\r\n\tconst dispatch = createEventDispatcher()\r\n\tconst options = { parentElement: node, dispatch, ...props }\r\n\tconst elements = getElements(node, options)\r\n\r\n\tmakeNestedStaticElementsVisible(node)\r\n\r\n\treturn { options, elements }\r\n}\r\n"],
  "mappings": ";;;;;AACA,IAAM,QAAQ,QAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,EAAE,CAAC;;;ACAlE,IAAM,MAAM,CAAC,KAAK,QAAQ,KAAK,MAAM,KAAK,OAAO,KAAK,MAAM,OAAO,GAAG;;;ACD/D,IAAM,wBAAwB,OAAO,SAAS,QAAQ,aAAa;AACzE,MAAI,CAAC,QAAQ;AACZ,YAAQ,MAAM,+CAA+C;AAC7D;AAAA,EACD;AAEA,MAAI,iBAAiB;AACrB,KAAG;AACF,QAAI,mBAAmB,OAAQ;AAE/B,aAAS,cAAc;AAEvB,qBAAiB,eAAe,iBAAiB,eAAe;AAAA,EACjE,SAAS,mBAAmB,QAAQ,eAAe,aAAa;AACjE;;;ACZO,IAAM,kCAAkC,mBAAiB;AAC/D,QAAM,iBAAiB,CAAC,GAAG,cAAc,iBAAiB,eAAe,CAAC;AAC1E,aAAW,iBAAiB,gBAAgB;AAC3C,0BAAsB,eAAe,eAAe,0BAAwB;AAC3E,YAAM,kBAAkB,yBAAyB;AACjD,yBAAmB,qBAAqB,UAAU,IAAI,iBAAiB;AAAA,IACxE,CAAC;AAAA,EACF;AACD;;;ACTA,IAAM,oBAAoB,QAAM,GAAG,WAAW,WAAW,KAAK,GAAG,WAAW,CAAC,EAAE,aAAa;;;ACA5F,IAAM,gBAAgB,CAAC,MAAM,eAAe;AAC3C,QAAM,UAAU,SAAS,cAAc,UAAU;AACjD,UAAQ,cAAc;AACtB,SAAO;AACR;;;ACFA,IAAM,0BAA0B,WAAS,MAAM,QAAQ,WAAW;AAGlE,IAAM,cAAc,CAAC,MAAM,EAAE,cAAc,MAAM;AAChD,MAAI,kBAAkB,aAAa,GAAG;AACrC,UAAM,OAAO,cAAc;AAC3B,UAAM,YAAY,cAAc,cAAc,aAAa,GAAG;AAC9D,kBAAc,cAAc;AAC5B,kBAAc,YAAY,SAAS;AACnC,WAAO,CAAC,EAAE,aAAa,WAAW,KAAK,CAAC;AAAA,EACzC;AAEA,MAAI,kBAAkB,IAAI,GAAG;AAC5B,UAAM,4BAA4B,KAAK,UAAU,WAAW,SAAS,GAAG;AACxE,WAAO,CAAC,EAAE,aAAa,MAAM,MAAM,0BAA0B,CAAC;AAAA,EAC/D,OAAO;AACN,UAAM,WAAW,CAAC,GAAG,KAAK,QAAQ,EAAE,OAAO,uBAAuB;AAClE,UAAM,cAAc,SAAS,QAAQ,WAAS,YAAY,OAAO,EAAE,cAAc,CAAC,CAAC;AACnF,WAAO;AAAA,EACR;AACD;;;AClBO,IAAM,iBAAiB,CAAC,MAAM,UAAU;AAC9C,QAAM,WAAW,sBAAsB;AACvC,QAAM,UAAU,EAAE,eAAe,MAAM,UAAU,GAAG,MAAM;AAC1D,QAAM,WAAW,YAAY,MAAM,OAAO;AAE1C,kCAAgC,IAAI;AAEpC,SAAO,EAAE,SAAS,SAAS;AAC5B;",
  "names": []
}
