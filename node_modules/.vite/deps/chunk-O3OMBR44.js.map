{
  "version": 3,
  "sources": ["../../svelte-typewriter/package/helpers/getRandomElement.js", "../../svelte-typewriter/package/modes/loopRandom.js"],
  "sourcesContent": ["import { rng } from './rng'\r\n\r\n/** @type {any[]} */\r\nlet alreadyChoosenTexts = []\r\n\r\n/** @type {import(types').GetRandomText} */\r\nconst getRandomElement = elements => {\r\n\twhile (true) {\r\n\t\tconst randomIndex = rng(0, elements.length)\r\n\t\t// After each iteration, avoid repeating the last text from the last iteration\r\n\t\tconst isTextDifferentFromPrevious =\r\n\t\t\ttypeof alreadyChoosenTexts === 'number' && randomIndex !== alreadyChoosenTexts\r\n\t\tconst isTextFirstTime =\r\n\t\t\tArray.isArray(alreadyChoosenTexts) && !alreadyChoosenTexts.includes(randomIndex)\r\n\t\tconst hasSingleChildElement = elements.length === 1\r\n\t\tconst shouldAnimate =\r\n\t\t\thasSingleChildElement || isTextFirstTime || isTextDifferentFromPrevious\r\n\t\tif (shouldAnimate) {\r\n\t\t\tisTextDifferentFromPrevious && (alreadyChoosenTexts = [])\r\n\t\t\talreadyChoosenTexts.push(randomIndex)\r\n\t\t\tconst randomText = elements[randomIndex]\r\n\t\t\treturn randomText\r\n\t\t}\r\n\t\tconst restartRandomizationCycle = alreadyChoosenTexts.length === elements.length\r\n\t\trestartRandomizationCycle && (alreadyChoosenTexts = alreadyChoosenTexts.pop())\r\n\t}\r\n}\r\n\r\nexport { getRandomElement }\r\n", "import { writeAndUnwriteText } from '../helpers/writeAndUnwriteText'\r\nimport { getRandomElement } from '../helpers/getRandomElement'\r\nimport { animationSetup } from '../helpers/animationSetup'\r\nimport { makeNestedStaticElementsVisible } from '../helpers/makeNestedStaticElementsVisible'\r\n\r\n/**\r\n * @typedef {object} Props\r\n * @property {number} [interval]\r\n * @property {boolean} [cursor]\r\n * @property {boolean} [keepCursorOnFinish]\r\n * @property {number} [delay]\r\n * @property {boolean} [showCursorOnDelay]\r\n * @property {boolean} [disabled]\r\n * @property {string} [element]\r\n * @property {number} [scrambleDuration]\r\n * @property {number} [scrambleSlowdown]\r\n * @property {number} [unwriteInterval]\r\n * @property {number} [wordInterval]\r\n */\r\n\r\n/**\r\n * @typedef {{ update: () => void, destroy: () => void }} SvelteActionReturnType\r\n */\r\n\r\n/**\r\n * @typedef {(node: HTMLElement, props: Props) => SvelteActionReturnType} TypewriterModeFn\r\n */\r\n\r\n/**\r\n * @type {TypewriterModeFn}\r\n */\r\nconst loopRandom = async (node, props) => {\r\n\tconst { options, elements } = animationSetup(node, props)\r\n\r\n\twhile (true) {\r\n\t\tmakeNestedStaticElementsVisible(node)\r\n\t\tconst element = getRandomElement(elements)\r\n\t\tawait writeAndUnwriteText(element, options)\r\n\t}\r\n\r\n\treturn {\r\n\t\tupdate() {},\r\n\t\tdestroy() {}\r\n\t}\r\n}\r\n\r\nexport default loopRandom\r\n"],
  "mappings": ";;;;;;;;;;AAGA,IAAI,sBAAsB,CAAC;AAG3B,IAAM,mBAAmB,cAAY;AACpC,SAAO,MAAM;AACZ,UAAM,cAAc,IAAI,GAAG,SAAS,MAAM;AAE1C,UAAM,8BACL,OAAO,wBAAwB,YAAY,gBAAgB;AAC5D,UAAM,kBACL,MAAM,QAAQ,mBAAmB,KAAK,CAAC,oBAAoB,SAAS,WAAW;AAChF,UAAM,wBAAwB,SAAS,WAAW;AAClD,UAAM,gBACL,yBAAyB,mBAAmB;AAC7C,QAAI,eAAe;AAClB,sCAAgC,sBAAsB,CAAC;AACvD,0BAAoB,KAAK,WAAW;AACpC,YAAM,aAAa,SAAS,WAAW;AACvC,aAAO;AAAA,IACR;AACA,UAAM,4BAA4B,oBAAoB,WAAW,SAAS;AAC1E,kCAA8B,sBAAsB,oBAAoB,IAAI;AAAA,EAC7E;AACD;;;ACKA,IAAM,aAAa,OAAO,MAAM,UAAU;AACzC,QAAM,EAAE,SAAS,SAAS,IAAI,eAAe,MAAM,KAAK;AAExD,SAAO,MAAM;AACZ,oCAAgC,IAAI;AACpC,UAAM,UAAU,iBAAiB,QAAQ;AACzC,UAAM,oBAAoB,SAAS,OAAO;AAAA,EAC3C;AAEA,SAAO;AAAA,IACN,SAAS;AAAA,IAAC;AAAA,IACV,UAAU;AAAA,IAAC;AAAA,EACZ;AACD;AAEA,IAAO,qBAAQ;",
  "names": []
}
