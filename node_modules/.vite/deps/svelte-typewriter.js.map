{
  "version": 3,
  "sources": ["../../tslib/tslib.es6.mjs", "../../@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js", "../../@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js", "../../decimal.js/decimal.mjs", "../../@formatjs/ecma402-abstract/lib/constants.js", "../../@formatjs/fast-memoize/lib/index.js", "../../@formatjs/ecma402-abstract/lib/utils.js", "../../@formatjs/ecma402-abstract/lib/262.js", "../../@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js", "../../@formatjs/ecma402-abstract/lib/DefaultNumberOption.js", "../../@formatjs/ecma402-abstract/lib/GetNumberOption.js", "../../@formatjs/ecma402-abstract/lib/GetOption.js", "../../@formatjs/ecma402-abstract/lib/GetOptionsObject.js", "../../@formatjs/ecma402-abstract/lib/GetStringOrBooleanOption.js", "../../@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js", "../../@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js", "../../@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js", "../../@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/ApplyUnsignedRoundingMode.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/CollapseNumberRange.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/GetUnsignedRoundingMode.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js", "../../@formatjs/ecma402-abstract/lib/regex.generated.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/digit-mapping.generated.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/FormatApproximately.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumeric.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberRangePattern.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRange.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRangeToParts.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js", "../../@formatjs/intl-localematcher/lib/abstract/CanonicalizeLocaleList.js", "../../@formatjs/intl-localematcher/lib/abstract/languageMatching.js", "../../@formatjs/intl-localematcher/lib/abstract/regions.generated.js", "../../@formatjs/intl-localematcher/lib/abstract/utils.js", "../../@formatjs/intl-localematcher/lib/abstract/BestFitMatcher.js", "../../@formatjs/intl-localematcher/lib/abstract/CanonicalizeUValue.js", "../../@formatjs/intl-localematcher/lib/abstract/CanonicalizeUnicodeLocaleId.js", "../../@formatjs/intl-localematcher/lib/abstract/InsertUnicodeExtensionAndCanonicalize.js", "../../@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js", "../../@formatjs/intl-localematcher/lib/abstract/LookupMatcher.js", "../../@formatjs/intl-localematcher/lib/abstract/UnicodeExtensionComponents.js", "../../@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js", "../../@formatjs/intl-localematcher/lib/abstract/LookupSupportedLocales.js", "../../@formatjs/intl-localematcher/lib/index.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js", "../../@formatjs/ecma402-abstract/lib/PartitionPattern.js", "../../@formatjs/ecma402-abstract/lib/SupportedLocales.js", "../../@formatjs/ecma402-abstract/lib/data.js", "../../@formatjs/ecma402-abstract/lib/types/date-time.js", "../../@formatjs/ecma402-abstract/lib/types/displaynames.js", "../../@formatjs/ecma402-abstract/lib/types/list.js", "../../@formatjs/ecma402-abstract/lib/types/number.js", "../../@formatjs/ecma402-abstract/lib/types/plural-rules.js", "../../@formatjs/ecma402-abstract/lib/types/relative-time.js", "../../@formatjs/ecma402-abstract/lib/ToIntlMathematicalValue.js", "../../@formatjs/ecma402-abstract/lib/index.js", "../../@formatjs/intl-segmenter/src/cldr-segmentation-rules.generated.js", "../../@formatjs/intl-segmenter/src/segmentation-utils.js", "../../@formatjs/intl-segmenter/src/segmenter.js", "../../@formatjs/intl-segmenter/should-polyfill.js", "../../@formatjs/intl-segmenter/polyfill.js", "../../svelte-typewriter/package/Typewriter.svelte"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n  extendStatics = Object.setPrototypeOf ||\r\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n  return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n  if (typeof b !== \"function\" && b !== null)\r\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n  extendStatics(d, b);\r\n  function __() { this.constructor = d; }\r\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n  __assign = Object.assign || function __assign(t) {\r\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n          s = arguments[i];\r\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n      }\r\n      return t;\r\n  }\r\n  return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n              t[p[i]] = s[p[i]];\r\n      }\r\n  return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n  return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n  var _, done = false;\r\n  for (var i = decorators.length - 1; i >= 0; i--) {\r\n      var context = {};\r\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n      if (kind === \"accessor\") {\r\n          if (result === void 0) continue;\r\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n          if (_ = accept(result.get)) descriptor.get = _;\r\n          if (_ = accept(result.set)) descriptor.set = _;\r\n          if (_ = accept(result.init)) initializers.unshift(_);\r\n      }\r\n      else if (_ = accept(result)) {\r\n          if (kind === \"field\") initializers.unshift(_);\r\n          else descriptor[key] = _;\r\n      }\r\n  }\r\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n  done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n  var useValue = arguments.length > 2;\r\n  for (var i = 0; i < initializers.length; i++) {\r\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n  }\r\n  return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n  return new (P || (P = Promise))(function (resolve, reject) {\r\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n  });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n  function verb(n) { return function (v) { return step([n, v]); }; }\r\n  function step(op) {\r\n      if (f) throw new TypeError(\"Generator is already executing.\");\r\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n          if (y = 0, t) op = [op[0] & 2, t.value];\r\n          switch (op[0]) {\r\n              case 0: case 1: t = op; break;\r\n              case 4: _.label++; return { value: op[1], done: false };\r\n              case 5: _.label++; y = op[1]; op = [0]; continue;\r\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n              default:\r\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                  if (t[2]) _.ops.pop();\r\n                  _.trys.pop(); continue;\r\n          }\r\n          op = body.call(thisArg, _);\r\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n  }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n  if (k2 === undefined) k2 = k;\r\n  var desc = Object.getOwnPropertyDescriptor(m, k);\r\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n  }\r\n  Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n  if (k2 === undefined) k2 = k;\r\n  o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n  if (m) return m.call(o);\r\n  if (o && typeof o.length === \"number\") return {\r\n      next: function () {\r\n          if (o && i >= o.length) o = void 0;\r\n          return { value: o && o[i++], done: !o };\r\n      }\r\n  };\r\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n  if (!m) return o;\r\n  var i = m.call(o), r, ar = [], e;\r\n  try {\r\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n  }\r\n  catch (error) { e = { error: error }; }\r\n  finally {\r\n      try {\r\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n      }\r\n      finally { if (e) throw e.error; }\r\n  }\r\n  return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n  for (var ar = [], i = 0; i < arguments.length; i++)\r\n      ar = ar.concat(__read(arguments[i]));\r\n  return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n          r[k] = a[j];\r\n  return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n      if (ar || !(i in from)) {\r\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n          ar[i] = from[i];\r\n      }\r\n  }\r\n  return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n  function fulfill(value) { resume(\"next\", value); }\r\n  function reject(value) { resume(\"throw\", value); }\r\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n  var i, p;\r\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n  var m = o[Symbol.asyncIterator], i;\r\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n  return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n  o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n  ownKeys = Object.getOwnPropertyNames || function (o) {\r\n    var ar = [];\r\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n    return ar;\r\n  };\r\n  return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n  if (mod && mod.__esModule) return mod;\r\n  var result = {};\r\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n  __setModuleDefault(result, mod);\r\n  return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n  return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n  if (value !== null && value !== void 0) {\r\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n    var dispose, inner;\r\n    if (async) {\r\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n      dispose = value[Symbol.asyncDispose];\r\n    }\r\n    if (dispose === void 0) {\r\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n      dispose = value[Symbol.dispose];\r\n      if (async) inner = dispose;\r\n    }\r\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n    env.stack.push({ value: value, dispose: dispose, async: async });\r\n  }\r\n  else if (async) {\r\n    env.stack.push({ async: true });\r\n  }\r\n  return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n  var e = new Error(message);\r\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n  function fail(e) {\r\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n    env.hasError = true;\r\n  }\r\n  var r, s = 0;\r\n  function next() {\r\n    while (r = env.stack.pop()) {\r\n      try {\r\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n        if (r.dispose) {\r\n          var result = r.dispose.call(r.value);\r\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n        }\r\n        else s |= 1;\r\n      }\r\n      catch (e) {\r\n        fail(e);\r\n      }\r\n    }\r\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n    if (env.hasError) throw env.error;\r\n  }\r\n  return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n      });\r\n  }\r\n  return path;\r\n}\r\n\r\nexport default {\r\n  __extends,\r\n  __assign,\r\n  __rest,\r\n  __decorate,\r\n  __param,\r\n  __esDecorate,\r\n  __runInitializers,\r\n  __propKey,\r\n  __setFunctionName,\r\n  __metadata,\r\n  __awaiter,\r\n  __generator,\r\n  __createBinding,\r\n  __exportStar,\r\n  __values,\r\n  __read,\r\n  __spread,\r\n  __spreadArrays,\r\n  __spreadArray,\r\n  __await,\r\n  __asyncGenerator,\r\n  __asyncDelegator,\r\n  __asyncValues,\r\n  __makeTemplateObject,\r\n  __importStar,\r\n  __importDefault,\r\n  __classPrivateFieldGet,\r\n  __classPrivateFieldSet,\r\n  __classPrivateFieldIn,\r\n  __addDisposableResource,\r\n  __disposeResources,\r\n  __rewriteRelativeImportExtension,\r\n};\r\n", "/**\r\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\r\n * @param locales\r\n */\r\nexport function CanonicalizeLocaleList(locales) {\r\n    // TODO\r\n    return Intl.getCanonicalLocales(locales);\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\r\n * @param tz\r\n */\r\nexport function CanonicalizeTimeZoneName(tz, _a) {\r\n    var zoneNames = _a.zoneNames, uppercaseLinks = _a.uppercaseLinks;\r\n    var uppercasedTz = tz.toUpperCase();\r\n    var uppercasedZones = zoneNames.reduce(function (all, z) {\r\n        all[z.toUpperCase()] = z;\r\n        return all;\r\n    }, {});\r\n    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\r\n    if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\r\n        return 'UTC';\r\n    }\r\n    return ianaTimeZone;\r\n}\r\n", "/*!\r\n *  decimal.js v10.6.0\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or ±Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  // See https://github.com/MikeMcl/decimal.js/pull/217\r\n  x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, -1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is ±Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with different signs.\r\n    // Return NaN if both are ±Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is ±Infinity or x is ±0.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with the same sign.\r\n    // Return NaN if both are ±Infinity with different signs.\r\n    // Return y if x is finite and y is ±Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, ±Infinity or ±0...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n      ? NaN\r\n\r\n      // Return ±Infinity if either is ±Infinity.\r\n      // Return ±0 if either is ±0.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|bigint|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|bigint|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, ±0)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|bigint|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either ±Infinity, NaN or ±0?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` (`n` is -1) and `min` (`n` is 1).\r\n */\r\nfunction maxOrMin(Ctor, args, n) {\r\n  var k, y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n\r\n    // NaN?\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    }\r\n\r\n    k = x.cmp(y);\r\n\r\n    if (k === n || k === 0 && x.s === n) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(±0)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// ±Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // TODO BigInt str: no need to check for decimal point, exponential form or leading zeros.\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|bigint|Decimal} The y-coordinate.\r\n * x {number|string|bigint|Decimal} The x-coordinate.\r\n *\r\n * atan2(±0, -0)               = ±pi\r\n * atan2(±0, +0)               = ±0\r\n * atan2(±0, -x)               = ±pi for x > 0\r\n * atan2(±0, x)                = ±0 for x > 0\r\n * atan2(-y, ±0)               = -pi/2 for y > 0\r\n * atan2(y, ±0)                = pi/2 for y > 0\r\n * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n * atan2(±Infinity, +Infinity) = ±pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both ±Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is ±Infinity or y is ±0\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is ±Infinity or x is ±0\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|bigint|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Infinity or NaN?\r\n      if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    if (t === 'string') {\r\n      if ((i = v.charCodeAt(0)) === 45) {  // minus sign\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        if (i === 43) v = v.slice(1);  // plus sign\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    if (t === 'bigint') {\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    throw Error(invalidArgument + v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|bigint|Decimal} The argument of the logarithm.\r\n * y {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, -1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The base.\r\n * y {number|string|bigint|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n", "import Decimal from 'decimal.js';\r\nexport var TEN = new Decimal(10);\r\nexport var ZERO = new Decimal(0);\r\nexport var NEGATIVE_ZERO = new Decimal(-0);\r\n", "//\r\n// Main\r\n//\r\nexport function memoize(fn, options) {\r\n    var cache = options && options.cache ? options.cache : cacheDefault;\r\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\r\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\r\n    return strategy(fn, {\r\n        cache: cache,\r\n        serializer: serializer,\r\n    });\r\n}\r\n//\r\n// Strategy\r\n//\r\nfunction isPrimitive(value) {\r\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\r\n}\r\nfunction monadic(fn, cache, serializer, arg) {\r\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\r\n    var computedValue = cache.get(cacheKey);\r\n    if (typeof computedValue === 'undefined') {\r\n        computedValue = fn.call(this, arg);\r\n        cache.set(cacheKey, computedValue);\r\n    }\r\n    return computedValue;\r\n}\r\nfunction variadic(fn, cache, serializer) {\r\n    var args = Array.prototype.slice.call(arguments, 3);\r\n    var cacheKey = serializer(args);\r\n    var computedValue = cache.get(cacheKey);\r\n    if (typeof computedValue === 'undefined') {\r\n        computedValue = fn.apply(this, args);\r\n        cache.set(cacheKey, computedValue);\r\n    }\r\n    return computedValue;\r\n}\r\nfunction assemble(fn, context, strategy, cache, serialize) {\r\n    return strategy.bind(context, fn, cache, serialize);\r\n}\r\nfunction strategyDefault(fn, options) {\r\n    var strategy = fn.length === 1 ? monadic : variadic;\r\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\r\n}\r\nfunction strategyVariadic(fn, options) {\r\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\r\n}\r\nfunction strategyMonadic(fn, options) {\r\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\r\n}\r\n//\r\n// Serializer\r\n//\r\nvar serializerDefault = function () {\r\n    return JSON.stringify(arguments);\r\n};\r\n//\r\n// Cache\r\n//\r\nvar ObjectWithoutPrototypeCache = /** @class */ (function () {\r\n    function ObjectWithoutPrototypeCache() {\r\n        this.cache = Object.create(null);\r\n    }\r\n    ObjectWithoutPrototypeCache.prototype.get = function (key) {\r\n        return this.cache[key];\r\n    };\r\n    ObjectWithoutPrototypeCache.prototype.set = function (key, value) {\r\n        this.cache[key] = value;\r\n    };\r\n    return ObjectWithoutPrototypeCache;\r\n}());\r\nvar cacheDefault = {\r\n    create: function create() {\r\n        return new ObjectWithoutPrototypeCache();\r\n    },\r\n};\r\nexport var strategies = {\r\n    variadic: strategyVariadic,\r\n    monadic: strategyMonadic,\r\n};\r\n", "import { __spreadArray } from \"tslib\";\r\nimport { memoize, strategies } from '@formatjs/fast-memoize';\r\nexport function repeat(s, times) {\r\n    if (typeof s.repeat === 'function') {\r\n        return s.repeat(times);\r\n    }\r\n    var arr = new Array(times);\r\n    for (var i = 0; i < arr.length; i++) {\r\n        arr[i] = s;\r\n    }\r\n    return arr.join('');\r\n}\r\nexport function setInternalSlot(map, pl, field, value) {\r\n    if (!map.get(pl)) {\r\n        map.set(pl, Object.create(null));\r\n    }\r\n    var slots = map.get(pl);\r\n    slots[field] = value;\r\n}\r\nexport function setMultiInternalSlots(map, pl, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var k = _a[_i];\r\n        setInternalSlot(map, pl, k, props[k]);\r\n    }\r\n}\r\nexport function getInternalSlot(map, pl, field) {\r\n    return getMultiInternalSlots(map, pl, field)[field];\r\n}\r\nexport function getMultiInternalSlots(map, pl) {\r\n    var fields = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        fields[_i - 2] = arguments[_i];\r\n    }\r\n    var slots = map.get(pl);\r\n    if (!slots) {\r\n        throw new TypeError(\"\".concat(pl, \" InternalSlot has not been initialized\"));\r\n    }\r\n    return fields.reduce(function (all, f) {\r\n        all[f] = slots[f];\r\n        return all;\r\n    }, Object.create(null));\r\n}\r\nexport function isLiteralPart(patternPart) {\r\n    return patternPart.type === 'literal';\r\n}\r\n/*\r\n  17 ECMAScript Standard Built-in Objects:\r\n    Every built-in Function object, including constructors, that is not\r\n    identified as an anonymous function has a name property whose value\r\n    is a String.\r\n\r\n    Unless otherwise specified, the name property of a built-in Function\r\n    object, if it exists, has the attributes { [[Writable]]: false,\r\n    [[Enumerable]]: false, [[Configurable]]: true }.\r\n*/\r\nexport function defineProperty(target, name, _a) {\r\n    var value = _a.value;\r\n    Object.defineProperty(target, name, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: value,\r\n    });\r\n}\r\n/**\r\n * 7.3.5 CreateDataProperty\r\n * @param target\r\n * @param name\r\n * @param value\r\n */\r\nexport function createDataProperty(target, name, value) {\r\n    Object.defineProperty(target, name, {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: value,\r\n    });\r\n}\r\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\r\nexport function invariant(condition, message, Err) {\r\n    if (Err === void 0) { Err = Error; }\r\n    if (!condition) {\r\n        throw new Err(message);\r\n    }\r\n}\r\nexport var createMemoizedNumberFormat = memoize(function () {\r\n    var _a;\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n}, {\r\n    strategy: strategies.variadic,\r\n});\r\nexport var createMemoizedDateTimeFormat = memoize(function () {\r\n    var _a;\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n}, {\r\n    strategy: strategies.variadic,\r\n});\r\nexport var createMemoizedPluralRules = memoize(function () {\r\n    var _a;\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n}, {\r\n    strategy: strategies.variadic,\r\n});\r\nexport var createMemoizedLocale = memoize(function () {\r\n    var _a;\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return new ((_a = Intl.Locale).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n}, {\r\n    strategy: strategies.variadic,\r\n});\r\nexport var createMemoizedListFormat = memoize(function () {\r\n    var _a;\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return new ((_a = Intl.ListFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n}, {\r\n    strategy: strategies.variadic,\r\n});\r\n", "import { Decimal } from 'decimal.js';\r\nimport { ZERO } from './constants';\r\nimport { invariant } from './utils';\r\n/**\r\n * https://tc39.es/ecma262/#sec-tostring\r\n */\r\nexport function ToString(o) {\r\n    // Only symbol is irregular...\r\n    if (typeof o === 'symbol') {\r\n        throw TypeError('Cannot convert a Symbol value to a string');\r\n    }\r\n    return String(o);\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-tonumber\r\n * @param val\r\n */\r\nexport function ToNumber(arg) {\r\n    if (typeof arg === 'number') {\r\n        return new Decimal(arg);\r\n    }\r\n    invariant(typeof arg !== 'bigint' && typeof arg !== 'symbol', 'BigInt and Symbol are not supported', TypeError);\r\n    if (arg === undefined) {\r\n        return new Decimal(NaN);\r\n    }\r\n    if (arg === null || arg === 0) {\r\n        return ZERO;\r\n    }\r\n    if (arg === true) {\r\n        return new Decimal(1);\r\n    }\r\n    if (typeof arg === 'string') {\r\n        try {\r\n            return new Decimal(arg);\r\n        }\r\n        catch (e) {\r\n            return new Decimal(NaN);\r\n        }\r\n    }\r\n    invariant(typeof arg === 'object', 'object expected', TypeError);\r\n    var primValue = ToPrimitive(arg, 'number');\r\n    invariant(typeof primValue !== 'object', 'object expected', TypeError);\r\n    return ToNumber(primValue);\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-tointeger\r\n * @param n\r\n */\r\nfunction ToInteger(n) {\r\n    var number = ToNumber(n);\r\n    if (number.isNaN() || number.isZero()) {\r\n        return ZERO;\r\n    }\r\n    if (number.isFinite()) {\r\n        return number;\r\n    }\r\n    var integer = number.abs().floor();\r\n    if (number.isNegative()) {\r\n        integer = integer.negated();\r\n    }\r\n    return integer;\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-timeclip\r\n * @param time\r\n */\r\nexport function TimeClip(time) {\r\n    if (!time.isFinite()) {\r\n        return new Decimal(NaN);\r\n    }\r\n    if (time.abs().greaterThan(8.64 * 1e15)) {\r\n        return new Decimal(NaN);\r\n    }\r\n    return ToInteger(time);\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-toobject\r\n * @param arg\r\n */\r\nexport function ToObject(arg) {\r\n    if (arg == null) {\r\n        throw new TypeError('undefined/null cannot be converted to object');\r\n    }\r\n    return Object(arg);\r\n}\r\n/**\r\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\r\n * @param x\r\n * @param y\r\n */\r\nexport function SameValue(x, y) {\r\n    if (Object.is) {\r\n        return Object.is(x, y);\r\n    }\r\n    // SameValue algorithm\r\n    if (x === y) {\r\n        // Steps 1-5, 7-10\r\n        // Steps 6.b-6.e: +0 != -0\r\n        return x !== 0 || 1 / x === 1 / y;\r\n    }\r\n    // Step 6.a: NaN == NaN\r\n    return x !== x && y !== y;\r\n}\r\n/**\r\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\r\n * @param len\r\n */\r\nexport function ArrayCreate(len) {\r\n    return new Array(len);\r\n}\r\n/**\r\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\r\n * @param o\r\n * @param prop\r\n */\r\nexport function HasOwnProperty(o, prop) {\r\n    return Object.prototype.hasOwnProperty.call(o, prop);\r\n}\r\n/**\r\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\r\n * @param x\r\n */\r\nexport function Type(x) {\r\n    if (x === null) {\r\n        return 'Null';\r\n    }\r\n    if (typeof x === 'undefined') {\r\n        return 'Undefined';\r\n    }\r\n    if (typeof x === 'function' || typeof x === 'object') {\r\n        return 'Object';\r\n    }\r\n    if (typeof x === 'number') {\r\n        return 'Number';\r\n    }\r\n    if (typeof x === 'boolean') {\r\n        return 'Boolean';\r\n    }\r\n    if (typeof x === 'string') {\r\n        return 'String';\r\n    }\r\n    if (typeof x === 'symbol') {\r\n        return 'Symbol';\r\n    }\r\n    if (typeof x === 'bigint') {\r\n        return 'BigInt';\r\n    }\r\n}\r\nvar MS_PER_DAY = 86400000;\r\n/**\r\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\r\n * @param x\r\n * @param y\r\n * @return k of the same sign as y\r\n */\r\nfunction mod(x, y) {\r\n    return x - Math.floor(x / y) * y;\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#eqn-Day\r\n * @param t\r\n */\r\nexport function Day(t) {\r\n    return Math.floor(t / MS_PER_DAY);\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-week-day\r\n * @param t\r\n */\r\nexport function WeekDay(t) {\r\n    return mod(Day(t) + 4, 7);\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-year-number\r\n * @param y\r\n */\r\nexport function DayFromYear(y) {\r\n    return Date.UTC(y, 0) / MS_PER_DAY;\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-year-number\r\n * @param y\r\n */\r\nexport function TimeFromYear(y) {\r\n    return Date.UTC(y, 0);\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-year-number\r\n * @param t\r\n */\r\nexport function YearFromTime(t) {\r\n    return new Date(t).getUTCFullYear();\r\n}\r\nexport function DaysInYear(y) {\r\n    if (y % 4 !== 0) {\r\n        return 365;\r\n    }\r\n    if (y % 100 !== 0) {\r\n        return 366;\r\n    }\r\n    if (y % 400 !== 0) {\r\n        return 365;\r\n    }\r\n    return 366;\r\n}\r\nexport function DayWithinYear(t) {\r\n    return Day(t) - DayFromYear(YearFromTime(t));\r\n}\r\nexport function InLeapYear(t) {\r\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\r\n}\r\n/**\r\n * https://tc39.es/ecma262/#sec-month-number\r\n * @param t\r\n */\r\nexport function MonthFromTime(t) {\r\n    var dwy = DayWithinYear(t);\r\n    var leap = InLeapYear(t);\r\n    if (dwy >= 0 && dwy < 31) {\r\n        return 0;\r\n    }\r\n    if (dwy < 59 + leap) {\r\n        return 1;\r\n    }\r\n    if (dwy < 90 + leap) {\r\n        return 2;\r\n    }\r\n    if (dwy < 120 + leap) {\r\n        return 3;\r\n    }\r\n    if (dwy < 151 + leap) {\r\n        return 4;\r\n    }\r\n    if (dwy < 181 + leap) {\r\n        return 5;\r\n    }\r\n    if (dwy < 212 + leap) {\r\n        return 6;\r\n    }\r\n    if (dwy < 243 + leap) {\r\n        return 7;\r\n    }\r\n    if (dwy < 273 + leap) {\r\n        return 8;\r\n    }\r\n    if (dwy < 304 + leap) {\r\n        return 9;\r\n    }\r\n    if (dwy < 334 + leap) {\r\n        return 10;\r\n    }\r\n    if (dwy < 365 + leap) {\r\n        return 11;\r\n    }\r\n    throw new Error('Invalid time');\r\n}\r\nexport function DateFromTime(t) {\r\n    var dwy = DayWithinYear(t);\r\n    var mft = MonthFromTime(t);\r\n    var leap = InLeapYear(t);\r\n    if (mft === 0) {\r\n        return dwy + 1;\r\n    }\r\n    if (mft === 1) {\r\n        return dwy - 30;\r\n    }\r\n    if (mft === 2) {\r\n        return dwy - 58 - leap;\r\n    }\r\n    if (mft === 3) {\r\n        return dwy - 89 - leap;\r\n    }\r\n    if (mft === 4) {\r\n        return dwy - 119 - leap;\r\n    }\r\n    if (mft === 5) {\r\n        return dwy - 150 - leap;\r\n    }\r\n    if (mft === 6) {\r\n        return dwy - 180 - leap;\r\n    }\r\n    if (mft === 7) {\r\n        return dwy - 211 - leap;\r\n    }\r\n    if (mft === 8) {\r\n        return dwy - 242 - leap;\r\n    }\r\n    if (mft === 9) {\r\n        return dwy - 272 - leap;\r\n    }\r\n    if (mft === 10) {\r\n        return dwy - 303 - leap;\r\n    }\r\n    if (mft === 11) {\r\n        return dwy - 333 - leap;\r\n    }\r\n    throw new Error('Invalid time');\r\n}\r\nvar HOURS_PER_DAY = 24;\r\nvar MINUTES_PER_HOUR = 60;\r\nvar SECONDS_PER_MINUTE = 60;\r\nvar MS_PER_SECOND = 1e3;\r\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\r\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\r\nexport function HourFromTime(t) {\r\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\r\n}\r\nexport function MinFromTime(t) {\r\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\r\n}\r\nexport function SecFromTime(t) {\r\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\r\n}\r\nfunction IsCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\r\n/**\r\n * The abstract operation OrdinaryHasInstance implements\r\n * the default algorithm for determining if an object O\r\n * inherits from the instance object inheritance path\r\n * provided by constructor C.\r\n * @param C class\r\n * @param O object\r\n * @param internalSlots internalSlots\r\n */\r\nexport function OrdinaryHasInstance(C, O, internalSlots) {\r\n    if (!IsCallable(C)) {\r\n        return false;\r\n    }\r\n    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\r\n        var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\r\n        return O instanceof BC;\r\n    }\r\n    if (typeof O !== 'object') {\r\n        return false;\r\n    }\r\n    var P = C.prototype;\r\n    if (typeof P !== 'object') {\r\n        throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\r\n    }\r\n    return Object.prototype.isPrototypeOf.call(P, O);\r\n}\r\nexport function msFromTime(t) {\r\n    return mod(t, MS_PER_SECOND);\r\n}\r\nfunction OrdinaryToPrimitive(O, hint) {\r\n    var methodNames;\r\n    if (hint === 'string') {\r\n        methodNames = ['toString', 'valueOf'];\r\n    }\r\n    else {\r\n        methodNames = ['valueOf', 'toString'];\r\n    }\r\n    for (var _i = 0, methodNames_1 = methodNames; _i < methodNames_1.length; _i++) {\r\n        var name_1 = methodNames_1[_i];\r\n        var method = O[name_1];\r\n        if (IsCallable(method)) {\r\n            var result = method.call(O);\r\n            if (typeof result !== 'object') {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    throw new TypeError('Cannot convert object to primitive value');\r\n}\r\nexport function ToPrimitive(input, preferredType) {\r\n    if (typeof input === 'object' && input != null) {\r\n        var exoticToPrim = Symbol.toPrimitive in input ? input[Symbol.toPrimitive] : undefined;\r\n        var hint = void 0;\r\n        if (exoticToPrim !== undefined) {\r\n            if (preferredType === undefined) {\r\n                hint = 'default';\r\n            }\r\n            else if (preferredType === 'string') {\r\n                hint = 'string';\r\n            }\r\n            else {\r\n                invariant(preferredType === 'number', 'preferredType must be \"string\" or \"number\"');\r\n                hint = 'number';\r\n            }\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (typeof result !== 'object') {\r\n                return result;\r\n            }\r\n            throw new TypeError('Cannot convert exotic object to primitive.');\r\n        }\r\n        if (preferredType === undefined) {\r\n            preferredType = 'number';\r\n        }\r\n        return OrdinaryToPrimitive(input, preferredType);\r\n    }\r\n    return input;\r\n}\r\n", "import { ToObject } from './262';\r\n/**\r\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\r\n * @param options\r\n * @returns\r\n */\r\nexport function CoerceOptionsToObject(options) {\r\n    if (typeof options === 'undefined') {\r\n        return Object.create(null);\r\n    }\r\n    return ToObject(options);\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-defaultnumberoption\r\n * @param val\r\n * @param min\r\n * @param max\r\n * @param fallback\r\n */\r\nexport function DefaultNumberOption(inputVal, min, max, fallback) {\r\n    if (inputVal === undefined) {\r\n        // @ts-expect-error\r\n        return fallback;\r\n    }\r\n    var val = Number(inputVal);\r\n    if (isNaN(val) || val < min || val > max) {\r\n        throw new RangeError(\"\".concat(val, \" is outside of range [\").concat(min, \", \").concat(max, \"]\"));\r\n    }\r\n    return Math.floor(val);\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-getnumberoption\r\n * @param options\r\n * @param property\r\n * @param min\r\n * @param max\r\n * @param fallback\r\n */\r\nimport { DefaultNumberOption } from './DefaultNumberOption';\r\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\r\n    var val = options[property];\r\n    return DefaultNumberOption(val, minimum, maximum, fallback);\r\n}\r\n", "import { ToString } from './262';\r\n/**\r\n * https://tc39.es/ecma402/#sec-getoption\r\n * @param opts\r\n * @param prop\r\n * @param type\r\n * @param values\r\n * @param fallback\r\n */\r\nexport function GetOption(opts, prop, type, values, fallback) {\r\n    if (typeof opts !== 'object') {\r\n        throw new TypeError('Options must be an object');\r\n    }\r\n    var value = opts[prop];\r\n    if (value !== undefined) {\r\n        if (type !== 'boolean' && type !== 'string') {\r\n            throw new TypeError('invalid type');\r\n        }\r\n        if (type === 'boolean') {\r\n            value = Boolean(value);\r\n        }\r\n        if (type === 'string') {\r\n            value = ToString(value);\r\n        }\r\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\r\n            throw new RangeError(\"\".concat(value, \" is not within \").concat(values.join(', ')));\r\n        }\r\n        return value;\r\n    }\r\n    return fallback;\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-getoptionsobject\r\n * @param options\r\n * @returns\r\n */\r\nexport function GetOptionsObject(options) {\r\n    if (typeof options === 'undefined') {\r\n        return Object.create(null);\r\n    }\r\n    if (typeof options === 'object') {\r\n        return options;\r\n    }\r\n    throw new TypeError('Options must be an object');\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-getstringorbooleanoption\r\n * @param opts\r\n * @param prop\r\n * @param values\r\n * @param trueValue\r\n * @param falsyValue\r\n * @param fallback\r\n */\r\nimport { ToString } from './262';\r\nexport function GetStringOrBooleanOption(opts, prop, values, trueValue, falsyValue, fallback) {\r\n    var value = opts[prop];\r\n    if (value === undefined) {\r\n        return fallback;\r\n    }\r\n    if (value === true) {\r\n        return trueValue;\r\n    }\r\n    var valueBoolean = Boolean(value);\r\n    if (valueBoolean === false) {\r\n        return falsyValue;\r\n    }\r\n    value = ToString(value);\r\n    if (value === 'true' || value === 'false') {\r\n        return fallback;\r\n    }\r\n    if ((values || []).indexOf(value) === -1) {\r\n        throw new RangeError(\"Invalid value \".concat(value));\r\n    }\r\n    return value;\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\r\n */\r\nexport var SANCTIONED_UNITS = [\r\n    'angle-degree',\r\n    'area-acre',\r\n    'area-hectare',\r\n    'concentr-percent',\r\n    'digital-bit',\r\n    'digital-byte',\r\n    'digital-gigabit',\r\n    'digital-gigabyte',\r\n    'digital-kilobit',\r\n    'digital-kilobyte',\r\n    'digital-megabit',\r\n    'digital-megabyte',\r\n    'digital-petabyte',\r\n    'digital-terabit',\r\n    'digital-terabyte',\r\n    'duration-day',\r\n    'duration-hour',\r\n    'duration-millisecond',\r\n    'duration-minute',\r\n    'duration-month',\r\n    'duration-second',\r\n    'duration-week',\r\n    'duration-year',\r\n    'length-centimeter',\r\n    'length-foot',\r\n    'length-inch',\r\n    'length-kilometer',\r\n    'length-meter',\r\n    'length-mile-scandinavian',\r\n    'length-mile',\r\n    'length-millimeter',\r\n    'length-yard',\r\n    'mass-gram',\r\n    'mass-kilogram',\r\n    'mass-ounce',\r\n    'mass-pound',\r\n    'mass-stone',\r\n    'temperature-celsius',\r\n    'temperature-fahrenheit',\r\n    'volume-fluid-ounce',\r\n    'volume-gallon',\r\n    'volume-liter',\r\n    'volume-milliliter',\r\n];\r\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\r\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\r\nexport function removeUnitNamespace(unit) {\r\n    return unit.slice(unit.indexOf('-') + 1);\r\n}\r\n/**\r\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\r\n */\r\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\r\n/**\r\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\r\n */\r\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\r\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\r\n * @param tz\r\n * @param implDetails implementation details\r\n */\r\nexport function IsValidTimeZoneName(tz, _a) {\r\n    var zoneNamesFromData = _a.zoneNamesFromData, uppercaseLinks = _a.uppercaseLinks;\r\n    var uppercasedTz = tz.toUpperCase();\r\n    var zoneNames = new Set();\r\n    var linkNames = new Set();\r\n    zoneNamesFromData.map(function (z) { return z.toUpperCase(); }).forEach(function (z) { return zoneNames.add(z); });\r\n    Object.keys(uppercaseLinks).forEach(function (linkName) {\r\n        linkNames.add(linkName.toUpperCase());\r\n        zoneNames.add(uppercaseLinks[linkName].toUpperCase());\r\n    });\r\n    return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);\r\n}\r\n", "/**\r\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\r\n * @param str string to convert\r\n */\r\nfunction toUpperCase(str) {\r\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\r\n}\r\nvar NOT_A_Z_REGEX = /[^A-Z]/;\r\n/**\r\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\r\n */\r\nexport function IsWellFormedCurrencyCode(currency) {\r\n    currency = toUpperCase(currency);\r\n    if (currency.length !== 3) {\r\n        return false;\r\n    }\r\n    if (NOT_A_Z_REGEX.test(currency)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n", "import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\r\n/**\r\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\r\n * @param str string to convert\r\n */\r\nfunction toLowerCase(str) {\r\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\r\n}\r\n/**\r\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\r\n * @param unit\r\n */\r\nexport function IsWellFormedUnitIdentifier(unit) {\r\n    unit = toLowerCase(unit);\r\n    if (IsSanctionedSimpleUnitIdentifier(unit)) {\r\n        return true;\r\n    }\r\n    var units = unit.split('-per-');\r\n    if (units.length !== 2) {\r\n        return false;\r\n    }\r\n    var numerator = units[0], denominator = units[1];\r\n    if (!IsSanctionedSimpleUnitIdentifier(numerator) ||\r\n        !IsSanctionedSimpleUnitIdentifier(denominator)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n", "import { invariant } from '../utils';\r\nexport function ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode) {\r\n    if (x.eq(r1))\r\n        return r1;\r\n    invariant(r1.lessThan(x) && x.lessThan(r2), \"x should be between r1 and r2 but x=\".concat(x, \", r1=\").concat(r1, \", r2=\").concat(r2));\r\n    if (unsignedRoundingMode === 'zero') {\r\n        return r1;\r\n    }\r\n    if (unsignedRoundingMode === 'infinity') {\r\n        return r2;\r\n    }\r\n    var d1 = x.minus(r1);\r\n    var d2 = r2.minus(x);\r\n    if (d1.lessThan(d2)) {\r\n        return r1;\r\n    }\r\n    if (d2.lessThan(d1)) {\r\n        return r2;\r\n    }\r\n    invariant(d1.eq(d2), 'd1 should be equal to d2');\r\n    if (unsignedRoundingMode === 'half-zero') {\r\n        return r1;\r\n    }\r\n    if (unsignedRoundingMode === 'half-infinity') {\r\n        return r2;\r\n    }\r\n    invariant(unsignedRoundingMode === 'half-even', 'unsignedRoundingMode should be half-even');\r\n    var cardinality = r1.div(r2.minus(r1)).mod(2);\r\n    if (cardinality.isZero()) {\r\n        return r1;\r\n    }\r\n    return r2;\r\n}\r\n", "var PART_TYPES_TO_COLLAPSE = new Set([\r\n    'unit',\r\n    'exponentMinusSign',\r\n    'minusSign',\r\n    'plusSign',\r\n    'percentSign',\r\n    'exponentSeparator',\r\n    'percent',\r\n    'percentSign',\r\n    'currency',\r\n    'literal',\r\n]);\r\n/**\r\n * https://tc39.es/ecma402/#sec-collapsenumberrange\r\n * LDML: https://unicode-org.github.io/cldr/ldml/tr35-numbers.html#collapsing-number-ranges\r\n */\r\nexport function CollapseNumberRange(numberFormat, result, _a) {\r\n    var getInternalSlots = _a.getInternalSlots;\r\n    var internalSlots = getInternalSlots(numberFormat);\r\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\r\n    var rangeSignRegex = new RegExp(\"s?[\".concat(symbols.rangeSign, \"]s?\"));\r\n    var rangeSignIndex = result.findIndex(function (r) { return r.type === 'literal' && rangeSignRegex.test(r.value); });\r\n    var prefixSignParts = [];\r\n    for (var i = rangeSignIndex - 1; i >= 0; i--) {\r\n        if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\r\n            break;\r\n        }\r\n        prefixSignParts.unshift(result[i]);\r\n    }\r\n    // Don't collapse if it's a single code point\r\n    if (Array.from(prefixSignParts.map(function (p) { return p.value; }).join('')).length > 1) {\r\n        var newResult = Array.from(result);\r\n        newResult.splice(rangeSignIndex - prefixSignParts.length, prefixSignParts.length);\r\n        return newResult;\r\n    }\r\n    var suffixSignParts = [];\r\n    for (var i = rangeSignIndex + 1; i < result.length; i++) {\r\n        if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\r\n            break;\r\n        }\r\n        suffixSignParts.push(result[i]);\r\n    }\r\n    // Don't collapse if it's a single code point\r\n    if (Array.from(suffixSignParts.map(function (p) { return p.value; }).join('')).length > 1) {\r\n        var newResult = Array.from(result);\r\n        newResult.splice(rangeSignIndex + 1, suffixSignParts.length);\r\n        return newResult;\r\n    }\r\n    return result;\r\n}\r\n", "import Decimal from 'decimal.js';\r\nimport { invariant } from '../utils';\r\nDecimal.set({\r\n    toExpPos: 100,\r\n});\r\n/**\r\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\r\n * number of the given magnitude (power of ten of the most significant digit) according to the\r\n * locale and the desired notation (scientific, engineering, or compact).\r\n */\r\nexport function ComputeExponentForMagnitude(internalSlots, magnitude) {\r\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\r\n    switch (notation) {\r\n        case 'standard':\r\n            return 0;\r\n        case 'scientific':\r\n            return magnitude.toNumber();\r\n        case 'engineering':\r\n            var thousands = magnitude.div(3).floor();\r\n            return thousands.times(3).toNumber();\r\n        default: {\r\n            invariant(notation === 'compact', 'Invalid notation');\r\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\r\n            // number of the given magnitude in compact notation for the current locale.\r\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\r\n            var thresholdMap = void 0;\r\n            if (style === 'currency' && currencyDisplay !== 'name') {\r\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\r\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\r\n                thresholdMap = currency.short;\r\n            }\r\n            else {\r\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\r\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\r\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\r\n            }\r\n            if (!thresholdMap) {\r\n                return 0;\r\n            }\r\n            var num = Decimal.pow(10, magnitude).toString();\r\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\r\n            if (num < thresholds[0]) {\r\n                return 0;\r\n            }\r\n            if (num > thresholds[thresholds.length - 1]) {\r\n                return thresholds[thresholds.length - 1].length - 1;\r\n            }\r\n            var i = thresholds.indexOf(num);\r\n            if (i === -1) {\r\n                return 0;\r\n            }\r\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\r\n            // Special handling if the pattern is precisely `0`.\r\n            var magnitudeKey = thresholds[i];\r\n            // TODO: do we need to handle plural here?\r\n            var compactPattern = thresholdMap[magnitudeKey].other;\r\n            if (compactPattern === '0') {\r\n                return 0;\r\n            }\r\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\r\n            return (magnitudeKey.length -\r\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\r\n        }\r\n    }\r\n}\r\n", "var negativeMapping = {\r\n    ceil: 'zero',\r\n    floor: 'infinity',\r\n    expand: 'infinity',\r\n    trunc: 'zero',\r\n    halfCeil: 'half-zero',\r\n    halfFloor: 'half-infinity',\r\n    halfExpand: 'half-infinity',\r\n    halfTrunc: 'half-zero',\r\n    halfEven: 'half-even',\r\n};\r\nvar positiveMapping = {\r\n    ceil: 'infinity',\r\n    floor: 'zero',\r\n    expand: 'infinity',\r\n    trunc: 'zero',\r\n    halfCeil: 'half-infinity',\r\n    halfFloor: 'half-zero',\r\n    halfExpand: 'half-infinity',\r\n    halfTrunc: 'half-zero',\r\n    halfEven: 'half-even',\r\n};\r\nexport function GetUnsignedRoundingMode(roundingMode, isNegative) {\r\n    if (isNegative) {\r\n        return negativeMapping[roundingMode];\r\n    }\r\n    return positiveMapping[roundingMode];\r\n}\r\n", "import Decimal from 'decimal.js';\r\nimport { repeat } from '../utils';\r\nimport { ApplyUnsignedRoundingMode } from './ApplyUnsignedRoundingMode';\r\n//IMPL: Setting Decimal configuration\r\nDecimal.set({\r\n    toExpPos: 100,\r\n});\r\n//IMPL: Helper function to calculate raw fixed value\r\nfunction ToRawFixedFn(n, f) {\r\n    return n.times(Decimal.pow(10, -f));\r\n}\r\n//IMPL: Helper function to find n1 and r1\r\nfunction findN1R1(x, f, roundingIncrement) {\r\n    var nx = x.times(Decimal.pow(10, f)).floor();\r\n    var n1 = nx.div(roundingIncrement).floor().times(roundingIncrement);\r\n    var r1 = ToRawFixedFn(n1, f);\r\n    return {\r\n        n1: n1,\r\n        r1: r1,\r\n    };\r\n}\r\n//IMPL: Helper function to find n2 and r2\r\nfunction findN2R2(x, f, roundingIncrement) {\r\n    var nx = x.times(Decimal.pow(10, f)).ceil();\r\n    var n2 = nx.div(roundingIncrement).ceil().times(roundingIncrement);\r\n    var r2 = ToRawFixedFn(n2, f);\r\n    return {\r\n        n2: n2,\r\n        r2: r2,\r\n    };\r\n}\r\n/**\r\n * https://tc39.es/ecma402/#sec-torawfixed\r\n * @param x a finite non-negative Number or BigInt\r\n * @param minFraction an integer between 0 and 20\r\n * @param maxFraction an integer between 0 and 20\r\n */\r\nexport function ToRawFixed(x, minFraction, maxFraction, roundingIncrement, unsignedRoundingMode) {\r\n    // 1. Let f be maxFraction.\r\n    var f = maxFraction;\r\n    // 2. Let n1 and r1 be the results of performing the maximized rounding of x to f fraction digits.\r\n    var _a = findN1R1(x, f, roundingIncrement), n1 = _a.n1, r1 = _a.r1;\r\n    // 3. Let n2 and r2 be the results of performing the minimized rounding of x to f fraction digits.\r\n    var _b = findN2R2(x, f, roundingIncrement), n2 = _b.n2, r2 = _b.r2;\r\n    // 4. Let r be ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode).\r\n    var r = ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode);\r\n    var n, xFinal;\r\n    var m;\r\n    // 5. If r is equal to r1, then\r\n    if (r.eq(r1)) {\r\n        // a. Let n be n1.\r\n        n = n1;\r\n        // b. Let xFinal be r1.\r\n        xFinal = r1;\r\n    }\r\n    else {\r\n        // 6. Else,\r\n        // a. Let n be n2.\r\n        n = n2;\r\n        // b. Let xFinal be r2.\r\n        xFinal = r2;\r\n    }\r\n    // 7. If n is 0, let m be \"0\".\r\n    if (n.isZero()) {\r\n        m = '0';\r\n    }\r\n    else {\r\n        // 8. Else, let m be the String representation of n.\r\n        m = n.toString();\r\n    }\r\n    var int;\r\n    // 9. If f is not 0, then\r\n    if (f !== 0) {\r\n        // a. Let k be the length of m.\r\n        var k = m.length;\r\n        // b. If k < f, then\r\n        if (k <= f) {\r\n            // i. Let z be the String value consisting of f + 1 - k occurrences of the character \"0\".\r\n            var z = repeat('0', f - k + 1);\r\n            // ii. Set m to the string-concatenation of z and m.\r\n            m = z + m;\r\n            // iii. Set k to f + 1.\r\n            k = f + 1;\r\n        }\r\n        // c. Let a be the substring of m from 0 to k - f.\r\n        var a = m.slice(0, k - f);\r\n        // d. Let b be the substring of m from k - f to k.\r\n        var b = m.slice(m.length - f);\r\n        // e. Set m to the string-concatenation of a, \".\", and b.\r\n        m = a + '.' + b;\r\n        // f. Let int be the length of a.\r\n        int = a.length;\r\n    }\r\n    else {\r\n        // 10. Else, let int be the length of m.\r\n        int = m.length;\r\n    }\r\n    // 11. Let cut be maxFraction - minFraction.\r\n    var cut = maxFraction - minFraction;\r\n    // 12. Repeat, while cut > 0 and the last character of m is \"0\",\r\n    while (cut > 0 && m[m.length - 1] === '0') {\r\n        // a. Remove the last character from m.\r\n        m = m.slice(0, m.length - 1);\r\n        // b. Decrease cut by 1.\r\n        cut--;\r\n    }\r\n    // 13. If the last character of m is \".\", then\r\n    if (m[m.length - 1] === '\\u002e') {\r\n        // a. Remove the last character from m.\r\n        m = m.slice(0, m.length - 1);\r\n    }\r\n    // 14. Return the Record { [[FormattedString]]: m, [[RoundedNumber]]: xFinal, [[IntegerDigitsCount]]: int, [[RoundingMagnitude]]: -f }.\r\n    return {\r\n        formattedString: m,\r\n        roundedNumber: xFinal,\r\n        integerDigitsCount: int,\r\n        roundingMagnitude: -f,\r\n    };\r\n}\r\n", "import Decimal from 'decimal.js';\r\nimport { ZERO } from '../constants';\r\nimport { invariant, repeat } from '../utils';\r\nimport { ApplyUnsignedRoundingMode } from './ApplyUnsignedRoundingMode';\r\n//IMPL: Helper function to find n1, e1, and r1\r\nfunction findN1E1R1(x, p) {\r\n    var maxN1 = Decimal.pow(10, p);\r\n    var minN1 = Decimal.pow(10, p - 1);\r\n    var maxE1 = x.div(minN1).log(10).plus(p).minus(1).ceil();\r\n    var currentE1 = maxE1;\r\n    while (true) {\r\n        var currentN1 = x.div(Decimal.pow(10, currentE1.minus(p).plus(1))).floor();\r\n        if (currentN1.lessThan(maxN1) && currentN1.greaterThanOrEqualTo(minN1)) {\r\n            var currentR1 = currentN1.times(Decimal.pow(10, currentE1.minus(p).plus(1)));\r\n            if (currentR1.lessThanOrEqualTo(x)) {\r\n                return {\r\n                    n1: currentN1,\r\n                    e1: currentE1,\r\n                    r1: currentR1,\r\n                };\r\n            }\r\n        }\r\n        currentE1 = currentE1.minus(1);\r\n    }\r\n}\r\n//IMPL: Helper function to find n2, e2, and r2\r\nfunction findN2E2R2(x, p) {\r\n    var maxN2 = Decimal.pow(10, p);\r\n    var minN2 = Decimal.pow(10, p - 1);\r\n    var minE2 = x.div(maxN2).log(10).plus(p).minus(1).floor();\r\n    var currentE2 = minE2;\r\n    while (true) {\r\n        var currentN2 = x.div(Decimal.pow(10, currentE2.minus(p).plus(1))).ceil();\r\n        if (currentN2.lessThan(maxN2) && currentN2.greaterThanOrEqualTo(minN2)) {\r\n            var currentR2 = currentN2.times(Decimal.pow(10, currentE2.minus(p).plus(1)));\r\n            if (currentR2.greaterThanOrEqualTo(x)) {\r\n                return {\r\n                    n2: currentN2,\r\n                    e2: currentE2,\r\n                    r2: currentR2,\r\n                };\r\n            }\r\n        }\r\n        currentE2 = currentE2.plus(1);\r\n    }\r\n}\r\n/**\r\n * https://tc39.es/ecma402/#sec-torawprecision\r\n * @param x a finite non-negative Number or BigInt\r\n * @param minPrecision an integer between 1 and 21\r\n * @param maxPrecision an integer between 1 and 21\r\n */\r\nexport function ToRawPrecision(x, minPrecision, maxPrecision, unsignedRoundingMode) {\r\n    // 1. Let p be maxPrecision.\r\n    var p = maxPrecision;\r\n    var m;\r\n    var e;\r\n    var xFinal;\r\n    // 2. If x = 0, then\r\n    if (x.isZero()) {\r\n        // a. Let m be the String value consisting of p occurrences of the character \"0\".\r\n        m = repeat('0', p);\r\n        // b. Let e be 0.\r\n        e = 0;\r\n        // c. Let xFinal be 0.\r\n        xFinal = ZERO;\r\n    }\r\n    else {\r\n        // 3. Else,\r\n        // a. Let {n1, e1, r1} be the result of findN1E1R1(x, p).\r\n        var _a = findN1E1R1(x, p), n1 = _a.n1, e1 = _a.e1, r1 = _a.r1;\r\n        // b. Let {n2, e2, r2} be the result of findN2E2R2(x, p).\r\n        var _b = findN2E2R2(x, p), n2 = _b.n2, e2 = _b.e2, r2 = _b.r2;\r\n        // c. Let r be ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode).\r\n        var r = ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode);\r\n        var n \r\n        // d. If r = r1, then\r\n        = void 0;\r\n        // d. If r = r1, then\r\n        if (r.eq(r1)) {\r\n            // i. Let n be n1.\r\n            n = n1;\r\n            // ii. Let e be e1.\r\n            e = e1.toNumber();\r\n            // iii. Let xFinal be r1.\r\n            xFinal = r1;\r\n        }\r\n        else {\r\n            // e. Else,\r\n            // i. Let n be n2.\r\n            n = n2;\r\n            // ii. Let e be e2.\r\n            e = e2.toNumber();\r\n            // iii. Let xFinal be r2.\r\n            xFinal = r2;\r\n        }\r\n        // f. Let m be the String representation of n.\r\n        m = n.toString();\r\n    }\r\n    var int;\r\n    // 4. If e ≥ p - 1, then\r\n    if (e >= p - 1) {\r\n        // a. Let m be the string-concatenation of m and p - 1 - e occurrences of the character \"0\".\r\n        m = m + repeat('0', e - p + 1);\r\n        // b. Let int be e + 1.\r\n        int = e + 1;\r\n    }\r\n    else if (e >= 0) {\r\n        // 5. Else if e ≥ 0, then\r\n        // a. Let m be the string-concatenation of the first e + 1 characters of m, \".\", and the remaining p - (e + 1) characters of m.\r\n        m = m.slice(0, e + 1) + '.' + m.slice(m.length - (p - (e + 1)));\r\n        // b. Let int be e + 1.\r\n        int = e + 1;\r\n    }\r\n    else {\r\n        // 6. Else,\r\n        // a. Assert: e < 0.\r\n        invariant(e < 0, 'e should be less than 0');\r\n        // b. Let m be the string-concatenation of \"0.\", -e - 1 occurrences of the character \"0\", and m.\r\n        m = '0.' + repeat('0', -e - 1) + m;\r\n        // c. Let int be 1.\r\n        int = 1;\r\n    }\r\n    // 7. If m contains \".\", and maxPrecision > minPrecision, then\r\n    if (m.includes('.') && maxPrecision > minPrecision) {\r\n        // a. Let cut be maxPrecision - minPrecision.\r\n        var cut = maxPrecision - minPrecision;\r\n        // b. Repeat, while cut > 0 and the last character of m is \"0\",\r\n        while (cut > 0 && m[m.length - 1] === '0') {\r\n            // i. Remove the last character from m.\r\n            m = m.slice(0, m.length - 1);\r\n            // ii. Decrease cut by 1.\r\n            cut--;\r\n        }\r\n        // c. If the last character of m is \".\", then\r\n        if (m[m.length - 1] === '.') {\r\n            // i. Remove the last character from m.\r\n            m = m.slice(0, m.length - 1);\r\n        }\r\n    }\r\n    // 8. Return the Record { [[FormattedString]]: m, [[RoundedNumber]]: xFinal, [[IntegerDigitsCount]]: int, [[RoundingMagnitude]]: e }.\r\n    return {\r\n        formattedString: m,\r\n        roundedNumber: xFinal,\r\n        integerDigitsCount: int,\r\n        roundingMagnitude: e,\r\n    };\r\n}\r\n", "import { NEGATIVE_ZERO, ZERO } from '../constants';\r\nimport { invariant, repeat } from '../utils';\r\nimport { GetUnsignedRoundingMode } from './GetUnsignedRoundingMode';\r\nimport { ToRawFixed } from './ToRawFixed';\r\nimport { ToRawPrecision } from './ToRawPrecision';\r\n/**\r\n * https://tc39.es/ecma402/#sec-formatnumberstring\r\n */\r\nexport function FormatNumericToString(intlObject, _x) {\r\n    var x = _x;\r\n    var sign;\r\n    // -0\r\n    if (x.isZero() && x.isNegative()) {\r\n        sign = 'negative';\r\n        x = ZERO;\r\n    }\r\n    else {\r\n        invariant(x.isFinite(), 'NumberFormatDigitInternalSlots value is not finite');\r\n        if (x.lessThan(0)) {\r\n            sign = 'negative';\r\n        }\r\n        else {\r\n            sign = 'positive';\r\n        }\r\n        if (sign === 'negative') {\r\n            x = x.negated();\r\n        }\r\n    }\r\n    var result;\r\n    var roundingType = intlObject.roundingType;\r\n    var unsignedRoundingMode = GetUnsignedRoundingMode(intlObject.roundingMode, sign === 'negative');\r\n    switch (roundingType) {\r\n        case 'significantDigits':\r\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits, unsignedRoundingMode);\r\n            break;\r\n        case 'fractionDigits':\r\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits, intlObject.roundingIncrement, unsignedRoundingMode);\r\n            break;\r\n        default:\r\n            var sResult = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits, unsignedRoundingMode);\r\n            var fResult = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits, intlObject.roundingIncrement, unsignedRoundingMode);\r\n            if (intlObject.roundingType === 'morePrecision') {\r\n                if (sResult.roundingMagnitude <= fResult.roundingMagnitude) {\r\n                    result = sResult;\r\n                }\r\n                else {\r\n                    result = fResult;\r\n                }\r\n            }\r\n            else {\r\n                invariant(intlObject.roundingType === 'lessPrecision', 'Invalid roundingType');\r\n                if (sResult.roundingMagnitude <= fResult.roundingMagnitude) {\r\n                    result = fResult;\r\n                }\r\n                else {\r\n                    result = sResult;\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    x = result.roundedNumber;\r\n    var string = result.formattedString;\r\n    if (intlObject.trailingZeroDisplay === 'stripIfInteger' && x.isInteger()) {\r\n        var i = string.indexOf('.');\r\n        if (i > -1) {\r\n            string = string.slice(0, i);\r\n        }\r\n    }\r\n    var int = result.integerDigitsCount;\r\n    var minInteger = intlObject.minimumIntegerDigits;\r\n    if (int < minInteger) {\r\n        var forwardZeros = repeat('0', minInteger - int);\r\n        string = forwardZeros + string;\r\n    }\r\n    if (sign === 'negative') {\r\n        if (x.isZero()) {\r\n            x = NEGATIVE_ZERO;\r\n        }\r\n        else {\r\n            x = x.negated();\r\n        }\r\n    }\r\n    return { roundedNumber: x, formattedString: string };\r\n}\r\n", "import Decimal from 'decimal.js';\r\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\r\nimport { FormatNumericToString } from './FormatNumericToString';\r\n/**\r\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\r\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\r\n * requiring a different exponent.\r\n *\r\n * NOT IN SPEC: it returns [exponent, magnitude].\r\n */\r\nexport function ComputeExponent(internalSlots, x) {\r\n    if (x.isZero()) {\r\n        return [0, 0];\r\n    }\r\n    if (x.isNegative()) {\r\n        x = x.negated();\r\n    }\r\n    var magnitude = x.log(10).floor();\r\n    var exponent = ComputeExponentForMagnitude(internalSlots, magnitude);\r\n    // Preserve more precision by doing multiplication when exponent is negative.\r\n    x = x.times(Decimal.pow(10, -exponent));\r\n    var formatNumberResult = FormatNumericToString(internalSlots, x);\r\n    if (formatNumberResult.roundedNumber.isZero()) {\r\n        return [exponent, magnitude.toNumber()];\r\n    }\r\n    var newMagnitude = formatNumberResult.roundedNumber.log(10).floor();\r\n    if (newMagnitude.eq(magnitude.minus(exponent))) {\r\n        return [exponent, magnitude.toNumber()];\r\n    }\r\n    return [\r\n        ComputeExponentForMagnitude(internalSlots, magnitude.plus(1)),\r\n        magnitude.plus(1).toNumber(),\r\n    ];\r\n}\r\n", "import { HasOwnProperty } from '../262';\r\n/**\r\n * https://tc39.es/ecma402/#sec-currencydigits\r\n */\r\nexport function CurrencyDigits(c, _a) {\r\n    var currencyDigitsData = _a.currencyDigitsData;\r\n    return HasOwnProperty(currencyDigitsData, c)\r\n        ? currencyDigitsData[c]\r\n        : 2;\r\n}\r\n", "// @generated from regex-gen.ts\r\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\r\n", "export var digitMapping = {\r\n    \"adlm\": [\r\n        \"𞥐\",\r\n        \"𞥑\",\r\n        \"𞥒\",\r\n        \"𞥓\",\r\n        \"𞥔\",\r\n        \"𞥕\",\r\n        \"𞥖\",\r\n        \"𞥗\",\r\n        \"𞥘\",\r\n        \"𞥙\"\r\n    ],\r\n    \"ahom\": [\r\n        \"𑜰\",\r\n        \"𑜱\",\r\n        \"𑜲\",\r\n        \"𑜳\",\r\n        \"𑜴\",\r\n        \"𑜵\",\r\n        \"𑜶\",\r\n        \"𑜷\",\r\n        \"𑜸\",\r\n        \"𑜹\"\r\n    ],\r\n    \"arab\": [\r\n        \"٠\",\r\n        \"١\",\r\n        \"٢\",\r\n        \"٣\",\r\n        \"٤\",\r\n        \"٥\",\r\n        \"٦\",\r\n        \"٧\",\r\n        \"٨\",\r\n        \"٩\"\r\n    ],\r\n    \"arabext\": [\r\n        \"۰\",\r\n        \"۱\",\r\n        \"۲\",\r\n        \"۳\",\r\n        \"۴\",\r\n        \"۵\",\r\n        \"۶\",\r\n        \"۷\",\r\n        \"۸\",\r\n        \"۹\"\r\n    ],\r\n    \"bali\": [\r\n        \"᭐\",\r\n        \"᭑\",\r\n        \"᭒\",\r\n        \"᭓\",\r\n        \"᭔\",\r\n        \"᭕\",\r\n        \"᭖\",\r\n        \"᭗\",\r\n        \"᭘\",\r\n        \"᭙\"\r\n    ],\r\n    \"beng\": [\r\n        \"০\",\r\n        \"১\",\r\n        \"২\",\r\n        \"৩\",\r\n        \"৪\",\r\n        \"৫\",\r\n        \"৬\",\r\n        \"৭\",\r\n        \"৮\",\r\n        \"৯\"\r\n    ],\r\n    \"bhks\": [\r\n        \"𑱐\",\r\n        \"𑱑\",\r\n        \"𑱒\",\r\n        \"𑱓\",\r\n        \"𑱔\",\r\n        \"𑱕\",\r\n        \"𑱖\",\r\n        \"𑱗\",\r\n        \"𑱘\",\r\n        \"𑱙\"\r\n    ],\r\n    \"brah\": [\r\n        \"𑁦\",\r\n        \"𑁧\",\r\n        \"𑁨\",\r\n        \"𑁩\",\r\n        \"𑁪\",\r\n        \"𑁫\",\r\n        \"𑁬\",\r\n        \"𑁭\",\r\n        \"𑁮\",\r\n        \"𑁯\"\r\n    ],\r\n    \"cakm\": [\r\n        \"𑄶\",\r\n        \"𑄷\",\r\n        \"𑄸\",\r\n        \"𑄹\",\r\n        \"𑄺\",\r\n        \"𑄻\",\r\n        \"𑄼\",\r\n        \"𑄽\",\r\n        \"𑄾\",\r\n        \"𑄿\"\r\n    ],\r\n    \"cham\": [\r\n        \"꩐\",\r\n        \"꩑\",\r\n        \"꩒\",\r\n        \"꩓\",\r\n        \"꩔\",\r\n        \"꩕\",\r\n        \"꩖\",\r\n        \"꩗\",\r\n        \"꩘\",\r\n        \"꩙\"\r\n    ],\r\n    \"deva\": [\r\n        \"०\",\r\n        \"१\",\r\n        \"२\",\r\n        \"३\",\r\n        \"४\",\r\n        \"५\",\r\n        \"६\",\r\n        \"७\",\r\n        \"८\",\r\n        \"९\"\r\n    ],\r\n    \"diak\": [\r\n        \"𑥐\",\r\n        \"𑥑\",\r\n        \"𑥒\",\r\n        \"𑥓\",\r\n        \"𑥔\",\r\n        \"𑥕\",\r\n        \"𑥖\",\r\n        \"𑥗\",\r\n        \"𑥘\",\r\n        \"𑥙\"\r\n    ],\r\n    \"fullwide\": [\r\n        \"０\",\r\n        \"１\",\r\n        \"２\",\r\n        \"３\",\r\n        \"４\",\r\n        \"５\",\r\n        \"６\",\r\n        \"７\",\r\n        \"８\",\r\n        \"９\"\r\n    ],\r\n    \"gong\": [\r\n        \"𑶠\",\r\n        \"𑶡\",\r\n        \"𑶢\",\r\n        \"𑶣\",\r\n        \"𑶤\",\r\n        \"𑶥\",\r\n        \"𑶦\",\r\n        \"𑶧\",\r\n        \"𑶨\",\r\n        \"𑶩\"\r\n    ],\r\n    \"gonm\": [\r\n        \"𑵐\",\r\n        \"𑵑\",\r\n        \"𑵒\",\r\n        \"𑵓\",\r\n        \"𑵔\",\r\n        \"𑵕\",\r\n        \"𑵖\",\r\n        \"𑵗\",\r\n        \"𑵘\",\r\n        \"𑵙\"\r\n    ],\r\n    \"gujr\": [\r\n        \"૦\",\r\n        \"૧\",\r\n        \"૨\",\r\n        \"૩\",\r\n        \"૪\",\r\n        \"૫\",\r\n        \"૬\",\r\n        \"૭\",\r\n        \"૮\",\r\n        \"૯\"\r\n    ],\r\n    \"guru\": [\r\n        \"੦\",\r\n        \"੧\",\r\n        \"੨\",\r\n        \"੩\",\r\n        \"੪\",\r\n        \"੫\",\r\n        \"੬\",\r\n        \"੭\",\r\n        \"੮\",\r\n        \"੯\"\r\n    ],\r\n    \"hanidec\": [\r\n        \"〇\",\r\n        \"一\",\r\n        \"二\",\r\n        \"三\",\r\n        \"四\",\r\n        \"五\",\r\n        \"六\",\r\n        \"七\",\r\n        \"八\",\r\n        \"九\"\r\n    ],\r\n    \"hmng\": [\r\n        \"𖭐\",\r\n        \"𖭑\",\r\n        \"𖭒\",\r\n        \"𖭓\",\r\n        \"𖭔\",\r\n        \"𖭕\",\r\n        \"𖭖\",\r\n        \"𖭗\",\r\n        \"𖭘\",\r\n        \"𖭙\"\r\n    ],\r\n    \"hmnp\": [\r\n        \"𞅀\",\r\n        \"𞅁\",\r\n        \"𞅂\",\r\n        \"𞅃\",\r\n        \"𞅄\",\r\n        \"𞅅\",\r\n        \"𞅆\",\r\n        \"𞅇\",\r\n        \"𞅈\",\r\n        \"𞅉\"\r\n    ],\r\n    \"java\": [\r\n        \"꧐\",\r\n        \"꧑\",\r\n        \"꧒\",\r\n        \"꧓\",\r\n        \"꧔\",\r\n        \"꧕\",\r\n        \"꧖\",\r\n        \"꧗\",\r\n        \"꧘\",\r\n        \"꧙\"\r\n    ],\r\n    \"kali\": [\r\n        \"꤀\",\r\n        \"꤁\",\r\n        \"꤂\",\r\n        \"꤃\",\r\n        \"꤄\",\r\n        \"꤅\",\r\n        \"꤆\",\r\n        \"꤇\",\r\n        \"꤈\",\r\n        \"꤉\"\r\n    ],\r\n    \"khmr\": [\r\n        \"០\",\r\n        \"១\",\r\n        \"២\",\r\n        \"៣\",\r\n        \"៤\",\r\n        \"៥\",\r\n        \"៦\",\r\n        \"៧\",\r\n        \"៨\",\r\n        \"៩\"\r\n    ],\r\n    \"knda\": [\r\n        \"೦\",\r\n        \"೧\",\r\n        \"೨\",\r\n        \"೩\",\r\n        \"೪\",\r\n        \"೫\",\r\n        \"೬\",\r\n        \"೭\",\r\n        \"೮\",\r\n        \"೯\"\r\n    ],\r\n    \"lana\": [\r\n        \"᪀\",\r\n        \"᪁\",\r\n        \"᪂\",\r\n        \"᪃\",\r\n        \"᪄\",\r\n        \"᪅\",\r\n        \"᪆\",\r\n        \"᪇\",\r\n        \"᪈\",\r\n        \"᪉\"\r\n    ],\r\n    \"lanatham\": [\r\n        \"᪐\",\r\n        \"᪑\",\r\n        \"᪒\",\r\n        \"᪓\",\r\n        \"᪔\",\r\n        \"᪕\",\r\n        \"᪖\",\r\n        \"᪗\",\r\n        \"᪘\",\r\n        \"᪙\"\r\n    ],\r\n    \"laoo\": [\r\n        \"໐\",\r\n        \"໑\",\r\n        \"໒\",\r\n        \"໓\",\r\n        \"໔\",\r\n        \"໕\",\r\n        \"໖\",\r\n        \"໗\",\r\n        \"໘\",\r\n        \"໙\"\r\n    ],\r\n    \"lepc\": [\r\n        \"᪐\",\r\n        \"᪑\",\r\n        \"᪒\",\r\n        \"᪓\",\r\n        \"᪔\",\r\n        \"᪕\",\r\n        \"᪖\",\r\n        \"᪗\",\r\n        \"᪘\",\r\n        \"᪙\"\r\n    ],\r\n    \"limb\": [\r\n        \"᥆\",\r\n        \"᥇\",\r\n        \"᥈\",\r\n        \"᥉\",\r\n        \"᥊\",\r\n        \"᥋\",\r\n        \"᥌\",\r\n        \"᥍\",\r\n        \"᥎\",\r\n        \"᥏\"\r\n    ],\r\n    \"mathbold\": [\r\n        \"𝟎\",\r\n        \"𝟏\",\r\n        \"𝟐\",\r\n        \"𝟑\",\r\n        \"𝟒\",\r\n        \"𝟓\",\r\n        \"𝟔\",\r\n        \"𝟕\",\r\n        \"𝟖\",\r\n        \"𝟗\"\r\n    ],\r\n    \"mathdbl\": [\r\n        \"𝟘\",\r\n        \"𝟙\",\r\n        \"𝟚\",\r\n        \"𝟛\",\r\n        \"𝟜\",\r\n        \"𝟝\",\r\n        \"𝟞\",\r\n        \"𝟟\",\r\n        \"𝟠\",\r\n        \"𝟡\"\r\n    ],\r\n    \"mathmono\": [\r\n        \"𝟶\",\r\n        \"𝟷\",\r\n        \"𝟸\",\r\n        \"𝟹\",\r\n        \"𝟺\",\r\n        \"𝟻\",\r\n        \"𝟼\",\r\n        \"𝟽\",\r\n        \"𝟾\",\r\n        \"𝟿\"\r\n    ],\r\n    \"mathsanb\": [\r\n        \"𝟬\",\r\n        \"𝟭\",\r\n        \"𝟮\",\r\n        \"𝟯\",\r\n        \"𝟰\",\r\n        \"𝟱\",\r\n        \"𝟲\",\r\n        \"𝟳\",\r\n        \"𝟴\",\r\n        \"𝟵\"\r\n    ],\r\n    \"mathsans\": [\r\n        \"𝟢\",\r\n        \"𝟣\",\r\n        \"𝟤\",\r\n        \"𝟥\",\r\n        \"𝟦\",\r\n        \"𝟧\",\r\n        \"𝟨\",\r\n        \"𝟩\",\r\n        \"𝟪\",\r\n        \"𝟫\"\r\n    ],\r\n    \"mlym\": [\r\n        \"൦\",\r\n        \"൧\",\r\n        \"൨\",\r\n        \"൩\",\r\n        \"൪\",\r\n        \"൫\",\r\n        \"൬\",\r\n        \"൭\",\r\n        \"൮\",\r\n        \"൯\"\r\n    ],\r\n    \"modi\": [\r\n        \"𑙐\",\r\n        \"𑙑\",\r\n        \"𑙒\",\r\n        \"𑙓\",\r\n        \"𑙔\",\r\n        \"𑙕\",\r\n        \"𑙖\",\r\n        \"𑙗\",\r\n        \"𑙘\",\r\n        \"𑙙\"\r\n    ],\r\n    \"mong\": [\r\n        \"᠐\",\r\n        \"᠑\",\r\n        \"᠒\",\r\n        \"᠓\",\r\n        \"᠔\",\r\n        \"᠕\",\r\n        \"᠖\",\r\n        \"᠗\",\r\n        \"᠘\",\r\n        \"᠙\"\r\n    ],\r\n    \"mroo\": [\r\n        \"𖩠\",\r\n        \"𖩡\",\r\n        \"𖩢\",\r\n        \"𖩣\",\r\n        \"𖩤\",\r\n        \"𖩥\",\r\n        \"𖩦\",\r\n        \"𖩧\",\r\n        \"𖩨\",\r\n        \"𖩩\"\r\n    ],\r\n    \"mtei\": [\r\n        \"꯰\",\r\n        \"꯱\",\r\n        \"꯲\",\r\n        \"꯳\",\r\n        \"꯴\",\r\n        \"꯵\",\r\n        \"꯶\",\r\n        \"꯷\",\r\n        \"꯸\",\r\n        \"꯹\"\r\n    ],\r\n    \"mymr\": [\r\n        \"၀\",\r\n        \"၁\",\r\n        \"၂\",\r\n        \"၃\",\r\n        \"၄\",\r\n        \"၅\",\r\n        \"၆\",\r\n        \"၇\",\r\n        \"၈\",\r\n        \"၉\"\r\n    ],\r\n    \"mymrshan\": [\r\n        \"႐\",\r\n        \"႑\",\r\n        \"႒\",\r\n        \"႓\",\r\n        \"႔\",\r\n        \"႕\",\r\n        \"႖\",\r\n        \"႗\",\r\n        \"႘\",\r\n        \"႙\"\r\n    ],\r\n    \"mymrtlng\": [\r\n        \"꧰\",\r\n        \"꧱\",\r\n        \"꧲\",\r\n        \"꧳\",\r\n        \"꧴\",\r\n        \"꧵\",\r\n        \"꧶\",\r\n        \"꧷\",\r\n        \"꧸\",\r\n        \"꧹\"\r\n    ],\r\n    \"newa\": [\r\n        \"𑑐\",\r\n        \"𑑑\",\r\n        \"𑑒\",\r\n        \"𑑓\",\r\n        \"𑑔\",\r\n        \"𑑕\",\r\n        \"𑑖\",\r\n        \"𑑗\",\r\n        \"𑑘\",\r\n        \"𑑙\"\r\n    ],\r\n    \"nkoo\": [\r\n        \"߀\",\r\n        \"߁\",\r\n        \"߂\",\r\n        \"߃\",\r\n        \"߄\",\r\n        \"߅\",\r\n        \"߆\",\r\n        \"߇\",\r\n        \"߈\",\r\n        \"߉\"\r\n    ],\r\n    \"olck\": [\r\n        \"᱐\",\r\n        \"᱑\",\r\n        \"᱒\",\r\n        \"᱓\",\r\n        \"᱔\",\r\n        \"᱕\",\r\n        \"᱖\",\r\n        \"᱗\",\r\n        \"᱘\",\r\n        \"᱙\"\r\n    ],\r\n    \"orya\": [\r\n        \"୦\",\r\n        \"୧\",\r\n        \"୨\",\r\n        \"୩\",\r\n        \"୪\",\r\n        \"୫\",\r\n        \"୬\",\r\n        \"୭\",\r\n        \"୮\",\r\n        \"୯\"\r\n    ],\r\n    \"osma\": [\r\n        \"𐒠\",\r\n        \"𐒡\",\r\n        \"𐒢\",\r\n        \"𐒣\",\r\n        \"𐒤\",\r\n        \"𐒥\",\r\n        \"𐒦\",\r\n        \"𐒧\",\r\n        \"𐒨\",\r\n        \"𐒩\"\r\n    ],\r\n    \"rohg\": [\r\n        \"𐴰\",\r\n        \"𐴱\",\r\n        \"𐴲\",\r\n        \"𐴳\",\r\n        \"𐴴\",\r\n        \"𐴵\",\r\n        \"𐴶\",\r\n        \"𐴷\",\r\n        \"𐴸\",\r\n        \"𐴹\"\r\n    ],\r\n    \"saur\": [\r\n        \"꣐\",\r\n        \"꣑\",\r\n        \"꣒\",\r\n        \"꣓\",\r\n        \"꣔\",\r\n        \"꣕\",\r\n        \"꣖\",\r\n        \"꣗\",\r\n        \"꣘\",\r\n        \"꣙\"\r\n    ],\r\n    \"segment\": [\r\n        \"🯰\",\r\n        \"🯱\",\r\n        \"🯲\",\r\n        \"🯳\",\r\n        \"🯴\",\r\n        \"🯵\",\r\n        \"🯶\",\r\n        \"🯷\",\r\n        \"🯸\",\r\n        \"🯹\"\r\n    ],\r\n    \"shrd\": [\r\n        \"𑇐\",\r\n        \"𑇑\",\r\n        \"𑇒\",\r\n        \"𑇓\",\r\n        \"𑇔\",\r\n        \"𑇕\",\r\n        \"𑇖\",\r\n        \"𑇗\",\r\n        \"𑇘\",\r\n        \"𑇙\"\r\n    ],\r\n    \"sind\": [\r\n        \"𑋰\",\r\n        \"𑋱\",\r\n        \"𑋲\",\r\n        \"𑋳\",\r\n        \"𑋴\",\r\n        \"𑋵\",\r\n        \"𑋶\",\r\n        \"𑋷\",\r\n        \"𑋸\",\r\n        \"𑋹\"\r\n    ],\r\n    \"sinh\": [\r\n        \"෦\",\r\n        \"෧\",\r\n        \"෨\",\r\n        \"෩\",\r\n        \"෪\",\r\n        \"෫\",\r\n        \"෬\",\r\n        \"෭\",\r\n        \"෮\",\r\n        \"෯\"\r\n    ],\r\n    \"sora\": [\r\n        \"𑃰\",\r\n        \"𑃱\",\r\n        \"𑃲\",\r\n        \"𑃳\",\r\n        \"𑃴\",\r\n        \"𑃵\",\r\n        \"𑃶\",\r\n        \"𑃷\",\r\n        \"𑃸\",\r\n        \"𑃹\"\r\n    ],\r\n    \"sund\": [\r\n        \"᮰\",\r\n        \"᮱\",\r\n        \"᮲\",\r\n        \"᮳\",\r\n        \"᮴\",\r\n        \"᮵\",\r\n        \"᮶\",\r\n        \"᮷\",\r\n        \"᮸\",\r\n        \"᮹\"\r\n    ],\r\n    \"takr\": [\r\n        \"𑛀\",\r\n        \"𑛁\",\r\n        \"𑛂\",\r\n        \"𑛃\",\r\n        \"𑛄\",\r\n        \"𑛅\",\r\n        \"𑛆\",\r\n        \"𑛇\",\r\n        \"𑛈\",\r\n        \"𑛉\"\r\n    ],\r\n    \"talu\": [\r\n        \"᧐\",\r\n        \"᧑\",\r\n        \"᧒\",\r\n        \"᧓\",\r\n        \"᧔\",\r\n        \"᧕\",\r\n        \"᧖\",\r\n        \"᧗\",\r\n        \"᧘\",\r\n        \"᧙\"\r\n    ],\r\n    \"tamldec\": [\r\n        \"௦\",\r\n        \"௧\",\r\n        \"௨\",\r\n        \"௩\",\r\n        \"௪\",\r\n        \"௫\",\r\n        \"௬\",\r\n        \"௭\",\r\n        \"௮\",\r\n        \"௯\"\r\n    ],\r\n    \"telu\": [\r\n        \"౦\",\r\n        \"౧\",\r\n        \"౨\",\r\n        \"౩\",\r\n        \"౪\",\r\n        \"౫\",\r\n        \"౬\",\r\n        \"౭\",\r\n        \"౮\",\r\n        \"౯\"\r\n    ],\r\n    \"thai\": [\r\n        \"๐\",\r\n        \"๑\",\r\n        \"๒\",\r\n        \"๓\",\r\n        \"๔\",\r\n        \"๕\",\r\n        \"๖\",\r\n        \"๗\",\r\n        \"๘\",\r\n        \"๙\"\r\n    ],\r\n    \"tibt\": [\r\n        \"༠\",\r\n        \"༡\",\r\n        \"༢\",\r\n        \"༣\",\r\n        \"༤\",\r\n        \"༥\",\r\n        \"༦\",\r\n        \"༧\",\r\n        \"༨\",\r\n        \"༩\"\r\n    ],\r\n    \"tirh\": [\r\n        \"𑓐\",\r\n        \"𑓑\",\r\n        \"𑓒\",\r\n        \"𑓓\",\r\n        \"𑓔\",\r\n        \"𑓕\",\r\n        \"𑓖\",\r\n        \"𑓗\",\r\n        \"𑓘\",\r\n        \"𑓙\"\r\n    ],\r\n    \"vaii\": [\r\n        \"ᘠ\",\r\n        \"ᘡ\",\r\n        \"ᘢ\",\r\n        \"ᘣ\",\r\n        \"ᘤ\",\r\n        \"ᘥ\",\r\n        \"ᘦ\",\r\n        \"ᘧ\",\r\n        \"ᘨ\",\r\n        \"ᘩ\"\r\n    ],\r\n    \"wara\": [\r\n        \"𑣠\",\r\n        \"𑣡\",\r\n        \"𑣢\",\r\n        \"𑣣\",\r\n        \"𑣤\",\r\n        \"𑣥\",\r\n        \"𑣦\",\r\n        \"𑣧\",\r\n        \"𑣨\",\r\n        \"𑣩\"\r\n    ],\r\n    \"wcho\": [\r\n        \"𞋰\",\r\n        \"𞋱\",\r\n        \"𞋲\",\r\n        \"𞋳\",\r\n        \"𞋴\",\r\n        \"𞋵\",\r\n        \"𞋶\",\r\n        \"𞋷\",\r\n        \"𞋸\",\r\n        \"𞋹\"\r\n    ]\r\n};\r\n", "import Decimal from 'decimal.js';\r\nimport { S_UNICODE_REGEX } from '../regex.generated';\r\nimport { digitMapping } from './digit-mapping.generated';\r\nimport { GetUnsignedRoundingMode } from './GetUnsignedRoundingMode';\r\nimport { ToRawFixed } from './ToRawFixed';\r\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\r\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\r\n// /^\\p{S}/u\r\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\r\n// /\\p{S}$/u\r\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\r\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\r\nexport default function formatToParts(numberResult, data, pl, options) {\r\n    var _a;\r\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\r\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\r\n    var defaultNumberingSystem = data.numbers.nu[0];\r\n    // #region Part 1: partition and interpolate the CLDR number pattern.\r\n    // ----------------------------------------------------------\r\n    var compactNumberPattern = null;\r\n    if (notation === 'compact' && magnitude) {\r\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\r\n    }\r\n    // This is used multiple times\r\n    var nonNameCurrencyPart;\r\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\r\n        var byCurrencyDisplay = data.currencies[options.currency];\r\n        if (byCurrencyDisplay) {\r\n            switch (options.currencyDisplay) {\r\n                case 'code':\r\n                    nonNameCurrencyPart = options.currency;\r\n                    break;\r\n                case 'symbol':\r\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\r\n                    break;\r\n                default:\r\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Fallback for unknown currency\r\n            nonNameCurrencyPart = options.currency;\r\n        }\r\n    }\r\n    var numberPattern;\r\n    if (!compactNumberPattern) {\r\n        // Note: if the style is unit, or is currency and the currency display is name,\r\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\r\n        if (style === 'decimal' ||\r\n            style === 'unit' ||\r\n            (style === 'currency' && options.currencyDisplay === 'name')) {\r\n            // Shortcut for decimal\r\n            var decimalData = data.numbers.decimal[numberingSystem] ||\r\n                data.numbers.decimal[defaultNumberingSystem];\r\n            numberPattern = getPatternForSign(decimalData.standard, sign);\r\n        }\r\n        else if (style === 'currency') {\r\n            var currencyData = data.numbers.currency[numberingSystem] ||\r\n                data.numbers.currency[defaultNumberingSystem];\r\n            // We replace number pattern part with `0` for easier postprocessing.\r\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\r\n        }\r\n        else {\r\n            // percent\r\n            var percentPattern = data.numbers.percent[numberingSystem] ||\r\n                data.numbers.percent[defaultNumberingSystem];\r\n            numberPattern = getPatternForSign(percentPattern, sign);\r\n        }\r\n    }\r\n    else {\r\n        numberPattern = compactNumberPattern;\r\n    }\r\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\r\n    // used to infer decimal group sizes.\r\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\r\n    // Now we start to substitute patterns\r\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\r\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\r\n    numberPattern = numberPattern\r\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\r\n        .replace(/'(.)'/g, '$1');\r\n    // Handle currency spacing (both compact and non-compact).\r\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\r\n        var currencyData = data.numbers.currency[numberingSystem] ||\r\n            data.numbers.currency[defaultNumberingSystem];\r\n        // See `currencySpacing` substitution rule in TR-35.\r\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\r\n        //\r\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\r\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\r\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\r\n        //\r\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\r\n        // and number, because `$` does not match \"[:^S:]\".\r\n        //\r\n        // Implementation note: here we do the best effort to infer the insertion.\r\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\r\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\r\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\r\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\r\n        }\r\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\r\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\r\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\r\n        }\r\n    }\r\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\r\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\r\n    var numberParts = [];\r\n    var symbols = data.numbers.symbols[numberingSystem] ||\r\n        data.numbers.symbols[defaultNumberingSystem];\r\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\r\n        var part = numberPatternParts_1[_i];\r\n        if (!part) {\r\n            continue;\r\n        }\r\n        switch (part) {\r\n            case '{0}': {\r\n                // We only need to handle scientific and engineering notation here.\r\n                numberParts.push.apply(numberParts, partitionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \r\n                // If compact number pattern exists, do not insert group separators.\r\n                !compactNumberPattern && ((_a = options.useGrouping) !== null && _a !== void 0 ? _a : true), decimalNumberPattern, style, options.roundingIncrement, GetUnsignedRoundingMode(options.roundingMode, sign === -1)));\r\n                break;\r\n            }\r\n            case '-':\r\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\r\n                break;\r\n            case '+':\r\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\r\n                break;\r\n            case '%':\r\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\r\n                break;\r\n            case '¤':\r\n                // Computed above when handling currency spacing.\r\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\r\n                break;\r\n            default:\r\n                if (/^\\{c:/.test(part)) {\r\n                    numberParts.push({\r\n                        type: 'compact',\r\n                        value: part.substring(3, part.length - 1),\r\n                    });\r\n                }\r\n                else {\r\n                    // literal\r\n                    numberParts.push({ type: 'literal', value: part });\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region Part 2: interpolate unit pattern if necessary.\r\n    // ----------------------------------------------\r\n    switch (style) {\r\n        case 'currency': {\r\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\r\n            if (options.currencyDisplay === 'name') {\r\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\r\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\r\n                // Select plural\r\n                var unitName = void 0;\r\n                var currencyNameData = data.currencies[options.currency];\r\n                if (currencyNameData) {\r\n                    unitName = selectPlural(pl, numberResult.roundedNumber\r\n                        .times(Decimal.pow(10, exponent))\r\n                        .toNumber(), currencyNameData.displayName);\r\n                }\r\n                else {\r\n                    // Fallback for unknown currency\r\n                    unitName = options.currency;\r\n                }\r\n                // Do {0} and {1} substitution\r\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\r\n                var result = [];\r\n                for (var _b = 0, unitPatternParts_1 = unitPatternParts; _b < unitPatternParts_1.length; _b++) {\r\n                    var part = unitPatternParts_1[_b];\r\n                    switch (part) {\r\n                        case '{0}':\r\n                            result.push.apply(result, numberParts);\r\n                            break;\r\n                        case '{1}':\r\n                            result.push({ type: 'currency', value: unitName });\r\n                            break;\r\n                        default:\r\n                            if (part) {\r\n                                result.push({ type: 'literal', value: part });\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                return numberParts;\r\n            }\r\n        }\r\n        case 'unit': {\r\n            var unit = options.unit, unitDisplay = options.unitDisplay;\r\n            var unitData = data.units.simple[unit];\r\n            var unitPattern = void 0;\r\n            if (unitData) {\r\n                // Simple unit pattern\r\n                unitPattern = selectPlural(pl, numberResult.roundedNumber\r\n                    .times(Decimal.pow(10, exponent))\r\n                    .toNumber(), data.units.simple[unit][unitDisplay]);\r\n            }\r\n            else {\r\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\r\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\r\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\r\n                var _c = unit.split('-per-'), numeratorUnit = _c[0], denominatorUnit = _c[1];\r\n                unitData = data.units.simple[numeratorUnit];\r\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber\r\n                    .times(Decimal.pow(10, exponent))\r\n                    .toNumber(), data.units.simple[numeratorUnit][unitDisplay]);\r\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\r\n                if (perUnitPattern) {\r\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\r\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\r\n                }\r\n                else {\r\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\r\n                    // the denominator pattern in singular form.\r\n                    var perPattern = data.units.compound.per[unitDisplay];\r\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\r\n                    unitPattern = unitPattern = perPattern\r\n                        .replace('{0}', numeratorUnitPattern)\r\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\r\n                }\r\n            }\r\n            var result = [];\r\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\r\n            for (var _d = 0, _e = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _d < _e.length; _d++) {\r\n                var part = _e[_d];\r\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\r\n                if (interpolateMatch) {\r\n                    // Space before \"{0}\"\r\n                    if (interpolateMatch[1]) {\r\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\r\n                    }\r\n                    // \"{0}\" itself\r\n                    result.push.apply(result, numberParts);\r\n                    // Space after \"{0}\"\r\n                    if (interpolateMatch[2]) {\r\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\r\n                    }\r\n                }\r\n                else if (part) {\r\n                    result.push({ type: 'unit', value: part });\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        default:\r\n            return numberParts;\r\n    }\r\n    // #endregion\r\n}\r\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\r\n// Plus the exponent parts handling.\r\nfunction partitionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \r\n/**\r\n * This is the decimal number pattern without signs or symbols.\r\n * It is used to infer the group size when `useGrouping` is true.\r\n *\r\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\r\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\r\n */\r\ndecimalNumberPattern, style, roundingIncrement, unsignedRoundingMode) {\r\n    var result = [];\r\n    // eslint-disable-next-line prefer-const\r\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\r\n    if (x.isNaN()) {\r\n        return [{ type: 'nan', value: n }];\r\n    }\r\n    else if (!x.isFinite()) {\r\n        return [{ type: 'infinity', value: n }];\r\n    }\r\n    var digitReplacementTable = digitMapping[numberingSystem];\r\n    if (digitReplacementTable) {\r\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\r\n    }\r\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\r\n    // representation of n in the given numbering system.\r\n    var decimalSepIndex = n.indexOf('.');\r\n    var integer;\r\n    var fraction;\r\n    if (decimalSepIndex > 0) {\r\n        integer = n.slice(0, decimalSepIndex);\r\n        fraction = n.slice(decimalSepIndex + 1);\r\n    }\r\n    else {\r\n        integer = n;\r\n    }\r\n    // #region Grouping integer digits\r\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\r\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\r\n    // unless the rounded number is greater than 10000:\r\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\r\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\r\n    var shouldUseGrouping = false;\r\n    if (useGrouping === 'always') {\r\n        shouldUseGrouping = true;\r\n    }\r\n    else if (useGrouping === 'min2') {\r\n        shouldUseGrouping = x.greaterThanOrEqualTo(10000);\r\n    }\r\n    else if (useGrouping === 'auto' || useGrouping) {\r\n        shouldUseGrouping = notation !== 'compact' || x.greaterThanOrEqualTo(10000);\r\n    }\r\n    if (shouldUseGrouping) {\r\n        // a. Let groupSepSymbol be the implementation-, locale-, and numbering system-dependent (ILND) String representing the grouping separator.\r\n        // For currency we should use `currencyGroup` instead of generic `group`\r\n        var groupSepSymbol = style === 'currency' && symbols.currencyGroup != null\r\n            ? symbols.currencyGroup\r\n            : symbols.group;\r\n        var groups = [];\r\n        // > There may be two different grouping sizes: The primary grouping size used for the least\r\n        // > significant integer group, and the secondary grouping size used for more significant groups.\r\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\r\n        // > end of the integer defines the primary grouping size, and the interval between the last two\r\n        // > defines the secondary grouping size. All others are ignored.\r\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\r\n        var patternGroups = integerNumberPattern.split(',');\r\n        var primaryGroupingSize = 3;\r\n        var secondaryGroupingSize = 3;\r\n        if (patternGroups.length > 1) {\r\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\r\n        }\r\n        if (patternGroups.length > 2) {\r\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\r\n        }\r\n        var i = integer.length - primaryGroupingSize;\r\n        if (i > 0) {\r\n            // Slice the least significant integer group\r\n            groups.push(integer.slice(i, i + primaryGroupingSize));\r\n            // Then iteratively push the more signicant groups\r\n            // TODO: handle surrogate pairs in some numbering system digits\r\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\r\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\r\n            }\r\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\r\n        }\r\n        else {\r\n            groups.push(integer);\r\n        }\r\n        while (groups.length > 0) {\r\n            var integerGroup = groups.pop();\r\n            result.push({ type: 'integer', value: integerGroup });\r\n            if (groups.length > 0) {\r\n                result.push({ type: 'group', value: groupSepSymbol });\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        result.push({ type: 'integer', value: integer });\r\n    }\r\n    // #endregion\r\n    if (fraction !== undefined) {\r\n        var decimalSepSymbol = style === 'currency' && symbols.currencyDecimal != null\r\n            ? symbols.currencyDecimal\r\n            : symbols.decimal;\r\n        result.push({ type: 'decimal', value: decimalSepSymbol }, { type: 'fraction', value: fraction });\r\n    }\r\n    if ((notation === 'scientific' || notation === 'engineering') &&\r\n        x.isFinite()) {\r\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\r\n        if (exponent < 0) {\r\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\r\n            exponent = -exponent;\r\n        }\r\n        var exponentResult = ToRawFixed(new Decimal(exponent), 0, 0, roundingIncrement, unsignedRoundingMode);\r\n        result.push({\r\n            type: 'exponentInteger',\r\n            value: exponentResult.formattedString,\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction getPatternForSign(pattern, sign) {\r\n    if (pattern.indexOf(';') < 0) {\r\n        pattern = \"\".concat(pattern, \";-\").concat(pattern);\r\n    }\r\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\r\n    switch (sign) {\r\n        case 0:\r\n            return zeroPattern;\r\n        case -1:\r\n            return negativePattern;\r\n        default:\r\n            return negativePattern.indexOf('-') >= 0\r\n                ? negativePattern.replace(/-/g, '+')\r\n                : \"+\".concat(zeroPattern);\r\n    }\r\n}\r\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\r\n//\r\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\r\n// - Notice the `{c:...}` token that wraps the compact literal.\r\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\r\n//\r\n// Returning null means the compact display pattern cannot be found.\r\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\r\n    var _a;\r\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\r\n    var magnitudeKey = String(Math.pow(10, magnitude));\r\n    var defaultNumberingSystem = data.numbers.nu[0];\r\n    var pattern;\r\n    if (style === 'currency' && currencyDisplay !== 'name') {\r\n        var byNumberingSystem = data.numbers.currency;\r\n        var currencyData = byNumberingSystem[numberingSystem] ||\r\n            byNumberingSystem[defaultNumberingSystem];\r\n        // NOTE: compact notation ignores currencySign!\r\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\r\n        if (!compactPluralRules) {\r\n            return null;\r\n        }\r\n        pattern = selectPlural(pl, roundedNumber.toNumber(), compactPluralRules);\r\n    }\r\n    else {\r\n        var byNumberingSystem = data.numbers.decimal;\r\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\r\n            byNumberingSystem[defaultNumberingSystem];\r\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\r\n        if (!compactPlaralRule) {\r\n            return null;\r\n        }\r\n        pattern = selectPlural(pl, roundedNumber.toNumber(), compactPlaralRule);\r\n    }\r\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\r\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\r\n    // > pattern for that sort of object is supplied.\r\n    if (pattern === '0') {\r\n        return null;\r\n    }\r\n    pattern = getPatternForSign(pattern, sign)\r\n        // Extract compact literal from the pattern\r\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\r\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\r\n        .replace(/0+/, '0');\r\n    return pattern;\r\n}\r\nfunction selectPlural(pl, x, rules) {\r\n    return rules[pl.select(x)] || rules.other;\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-formatapproximately\r\n */\r\nexport function FormatApproximately(internalSlots, result) {\r\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\r\n    var approximatelySign = symbols.approximatelySign;\r\n    result.push({ type: 'approximatelySign', value: approximatelySign });\r\n    return result;\r\n}\r\n", "import Decimal from 'decimal.js';\r\nimport { invariant } from '../utils';\r\nimport { ComputeExponent } from './ComputeExponent';\r\nimport formatToParts from './format_to_parts';\r\nimport { FormatNumericToString } from './FormatNumericToString';\r\n/**\r\n * https://tc39.es/ecma402/#sec-partitionnumberpattern\r\n */\r\nexport function PartitionNumberPattern(internalSlots, _x) {\r\n    var _a;\r\n    var x = _x;\r\n    // IMPL: We need to record the magnitude of the number\r\n    var magnitude = 0;\r\n    // 2. Let dataLocaleData be internalSlots.[[dataLocaleData]].\r\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\r\n    // 3. Let symbols be dataLocaleData.[[numbers]].[[symbols]][internalSlots.[[numberingSystem]]].\r\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\r\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\r\n    // 4. Let exponent be 0.\r\n    var exponent = 0;\r\n    // 5. Let n be ! ToString(x).\r\n    var n;\r\n    // 6. If x is NaN, then\r\n    if (x.isNaN()) {\r\n        // 6.a. Let n be symbols.[[nan]].\r\n        n = symbols.nan;\r\n    }\r\n    else if (!x.isFinite()) {\r\n        // 7. Else if x is a non-finite Number, then\r\n        // 7.a. Let n be symbols.[[infinity]].\r\n        n = symbols.infinity;\r\n    }\r\n    else {\r\n        // 8. Else,\r\n        if (!x.isZero()) {\r\n            // 8.a. If x < 0, let x be -x.\r\n            invariant(x.isFinite(), 'Input must be a mathematical value');\r\n            // 8.b. If internalSlots.[[style]] is \"percent\", let x be 100 × x.\r\n            if (internalSlots.style == 'percent') {\r\n                x = x.times(100);\r\n            }\r\n            // 8.c. Let exponent be ComputeExponent(numberFormat, x).\r\n            ;\r\n            _a = ComputeExponent(internalSlots, x), exponent = _a[0], \r\n            // IMPL: We need to record the magnitude of the number\r\n            magnitude = _a[1];\r\n            // 8.d. Let x be x × 10^(-exponent).\r\n            x = x.times(Decimal.pow(10, -exponent));\r\n        }\r\n        // 8.e. Let formatNumberResult be FormatNumericToString(internalSlots, x).\r\n        var formatNumberResult = FormatNumericToString(internalSlots, x);\r\n        // 8.f. Let n be formatNumberResult.[[formattedString]].\r\n        n = formatNumberResult.formattedString;\r\n        // 8.g. Let x be formatNumberResult.[[roundedNumber]].\r\n        x = formatNumberResult.roundedNumber;\r\n    }\r\n    // 9. Let sign be 0.\r\n    var sign;\r\n    // 10. If x is negative, then\r\n    var signDisplay = internalSlots.signDisplay;\r\n    switch (signDisplay) {\r\n        case 'never':\r\n            // 10.a. If internalSlots.[[signDisplay]] is \"never\", then\r\n            // 10.a.i. Let sign be 0.\r\n            sign = 0;\r\n            break;\r\n        case 'auto':\r\n            // 10.b. Else if internalSlots.[[signDisplay]] is \"auto\", then\r\n            if (x.isPositive() || x.isNaN()) {\r\n                // 10.b.i. If x is positive or x is NaN, let sign be 0.\r\n                sign = 0;\r\n            }\r\n            else {\r\n                // 10.b.ii. Else, let sign be -1.\r\n                sign = -1;\r\n            }\r\n            break;\r\n        case 'always':\r\n            // 10.c. Else if internalSlots.[[signDisplay]] is \"always\", then\r\n            if (x.isPositive() || x.isNaN()) {\r\n                // 10.c.i. If x is positive or x is NaN, let sign be 1.\r\n                sign = 1;\r\n            }\r\n            else {\r\n                // 10.c.ii. Else, let sign be -1.\r\n                sign = -1;\r\n            }\r\n            break;\r\n        case 'exceptZero':\r\n            // 10.d. Else if internalSlots.[[signDisplay]] is \"exceptZero\", then\r\n            if (x.isZero()) {\r\n                // 10.d.i. If x is 0, let sign be 0.\r\n                sign = 0;\r\n            }\r\n            else if (x.isNegative()) {\r\n                // 10.d.ii. Else if x is negative, let sign be -1.\r\n                sign = -1;\r\n            }\r\n            else {\r\n                // 10.d.iii. Else, let sign be 1.\r\n                sign = 1;\r\n            }\r\n            break;\r\n        default:\r\n            // 10.e. Else,\r\n            invariant(signDisplay === 'negative', 'signDisplay must be \"negative\"');\r\n            if (x.isNegative() && !x.isZero()) {\r\n                // 10.e.i. If x is negative and x is not 0, let sign be -1.\r\n                sign = -1;\r\n            }\r\n            else {\r\n                // 10.e.ii. Else, let sign be 0.\r\n                sign = 0;\r\n            }\r\n            break;\r\n    }\r\n    // 11. Return ? FormatNumberToParts(numberFormat, x, n, exponent, sign).\r\n    return formatToParts({\r\n        roundedNumber: x,\r\n        formattedString: n,\r\n        exponent: exponent,\r\n        // IMPL: We're returning this for our implementation of formatToParts\r\n        magnitude: magnitude,\r\n        sign: sign,\r\n    }, internalSlots.dataLocaleData, pl, internalSlots);\r\n}\r\n", "import { PartitionNumberPattern } from './PartitionNumberPattern';\r\nexport function FormatNumeric(internalSlots, x) {\r\n    var parts = PartitionNumberPattern(internalSlots, x);\r\n    return parts.map(function (p) { return p.value; }).join('');\r\n}\r\n", "import { invariant } from '../utils';\r\nimport { CollapseNumberRange } from './CollapseNumberRange';\r\nimport { FormatApproximately } from './FormatApproximately';\r\nimport { FormatNumeric } from './FormatNumeric';\r\nimport { PartitionNumberPattern } from './PartitionNumberPattern';\r\n/**\r\n * https://tc39.es/ecma402/#sec-partitionnumberrangepattern\r\n */\r\nexport function PartitionNumberRangePattern(numberFormat, x, y, _a) {\r\n    var getInternalSlots = _a.getInternalSlots;\r\n    // 1. Assert: x and y are both mathematical values.\r\n    invariant(!x.isNaN() && !y.isNaN(), 'Input must be a number', RangeError);\r\n    var internalSlots = getInternalSlots(numberFormat);\r\n    // 3. Let xResult be ? PartitionNumberPattern(numberFormat, x).\r\n    var xResult = PartitionNumberPattern(internalSlots, x);\r\n    // 4. Let yResult be ? PartitionNumberPattern(numberFormat, y).\r\n    var yResult = PartitionNumberPattern(internalSlots, y);\r\n    if (FormatNumeric(internalSlots, x) === FormatNumeric(internalSlots, y)) {\r\n        var appxResult = FormatApproximately(internalSlots, xResult);\r\n        appxResult.forEach(function (el) {\r\n            el.source = 'shared';\r\n        });\r\n        return appxResult;\r\n    }\r\n    var result = [];\r\n    xResult.forEach(function (el) {\r\n        el.source = 'startRange';\r\n        result.push(el);\r\n    });\r\n    // 9. Let symbols be internalSlots.[[dataLocaleData]].[[numbers]].[[symbols]][internalSlots.[[numberingSystem]]].\r\n    var rangeSeparator = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem]\r\n        .rangeSign;\r\n    result.push({ type: 'literal', value: rangeSeparator, source: 'shared' });\r\n    yResult.forEach(function (el) {\r\n        el.source = 'endRange';\r\n        result.push(el);\r\n    });\r\n    // 13. Return ? CollapseNumberRange(numberFormat, result).\r\n    return CollapseNumberRange(numberFormat, result, { getInternalSlots: getInternalSlots });\r\n}\r\n", "import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\r\n/**\r\n * https://tc39.es/ecma402/#sec-formatnumericrange\r\n */\r\nexport function FormatNumericRange(numberFormat, x, y, _a) {\r\n    var getInternalSlots = _a.getInternalSlots;\r\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\r\n        getInternalSlots: getInternalSlots,\r\n    });\r\n    return parts.map(function (part) { return part.value; }).join('');\r\n}\r\n", "import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\r\n/**\r\n * https://tc39.es/ecma402/#sec-formatnumericrangetoparts\r\n */\r\nexport function FormatNumericRangeToParts(numberFormat, x, y, _a) {\r\n    var getInternalSlots = _a.getInternalSlots;\r\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\r\n        getInternalSlots: getInternalSlots,\r\n    });\r\n    return parts.map(function (part, index) { return ({\r\n        type: part.type,\r\n        value: part.value,\r\n        source: part.source,\r\n        result: index.toString(),\r\n    }); });\r\n}\r\n", "import { ArrayCreate } from '../262';\r\nimport { PartitionNumberPattern } from './PartitionNumberPattern';\r\nexport function FormatNumericToParts(nf, x, implDetails) {\r\n    var parts = PartitionNumberPattern(implDetails.getInternalSlots(nf), x);\r\n    var result = ArrayCreate(0);\r\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\r\n        var part = parts_1[_i];\r\n        result.push({\r\n            type: part.type,\r\n            value: part.value,\r\n        });\r\n    }\r\n    return result;\r\n}\r\n", "/**\r\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\r\n * @param locales\r\n */\r\nexport function CanonicalizeLocaleList(locales) {\r\n    return Intl.getCanonicalLocales(locales);\r\n}\r\n", "export var data = {\r\n    supplemental: {\r\n        languageMatching: {\r\n            'written-new': [\r\n                {\r\n                    paradigmLocales: {\r\n                        _locales: 'en en_GB es es_419 pt_BR pt_PT',\r\n                    },\r\n                },\r\n                {\r\n                    $enUS: {\r\n                        _value: 'AS+CA+GU+MH+MP+PH+PR+UM+US+VI',\r\n                    },\r\n                },\r\n                {\r\n                    $cnsar: {\r\n                        _value: 'HK+MO',\r\n                    },\r\n                },\r\n                {\r\n                    $americas: {\r\n                        _value: '019',\r\n                    },\r\n                },\r\n                {\r\n                    $maghreb: {\r\n                        _value: 'MA+DZ+TN+LY+MR+EH',\r\n                    },\r\n                },\r\n                {\r\n                    no: {\r\n                        _desired: 'nb',\r\n                        _distance: '1',\r\n                    },\r\n                },\r\n                {\r\n                    bs: {\r\n                        _desired: 'hr',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    bs: {\r\n                        _desired: 'sh',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    hr: {\r\n                        _desired: 'sh',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    sr: {\r\n                        _desired: 'sh',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    aa: {\r\n                        _desired: 'ssy',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    de: {\r\n                        _desired: 'gsw',\r\n                        _distance: '4',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    de: {\r\n                        _desired: 'lb',\r\n                        _distance: '4',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    no: {\r\n                        _desired: 'da',\r\n                        _distance: '8',\r\n                    },\r\n                },\r\n                {\r\n                    nb: {\r\n                        _desired: 'da',\r\n                        _distance: '8',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'ab',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ach',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    nl: {\r\n                        _desired: 'af',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ak',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'am',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    es: {\r\n                        _desired: 'ay',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'az',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ur: {\r\n                        _desired: 'bal',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'be',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'bem',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    hi: {\r\n                        _desired: 'bh',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'bn',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'bo',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'br',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    es: {\r\n                        _desired: 'ca',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fil: {\r\n                        _desired: 'ceb',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'chr',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ckb',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'co',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'crs',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    sk: {\r\n                        _desired: 'cs',\r\n                        _distance: '20',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'cy',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ee',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'eo',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    es: {\r\n                        _desired: 'eu',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    da: {\r\n                        _desired: 'fo',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    nl: {\r\n                        _desired: 'fy',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ga',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'gaa',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'gd',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    es: {\r\n                        _desired: 'gl',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    es: {\r\n                        _desired: 'gn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    hi: {\r\n                        _desired: 'gu',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ha',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'haw',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'ht',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'hy',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ia',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ig',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'is',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    id: {\r\n                        _desired: 'jv',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ka',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'kg',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'kk',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'km',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'kn',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'kri',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    tr: {\r\n                        _desired: 'ku',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'ky',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    it: {\r\n                        _desired: 'la',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'lg',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'ln',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'lo',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'loz',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'lua',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    hi: {\r\n                        _desired: 'mai',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'mfe',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'mg',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'mi',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ml',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'mn',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    hi: {\r\n                        _desired: 'mr',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    id: {\r\n                        _desired: 'ms',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'mt',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'my',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ne',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    nb: {\r\n                        _desired: 'nn',\r\n                        _distance: '20',\r\n                    },\r\n                },\r\n                {\r\n                    no: {\r\n                        _desired: 'nn',\r\n                        _distance: '20',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'nso',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ny',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'nyn',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'oc',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'om',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'or',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'pa',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'pcm',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ps',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    es: {\r\n                        _desired: 'qu',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    de: {\r\n                        _desired: 'rm',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'rn',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'rw',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    hi: {\r\n                        _desired: 'sa',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'sd',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'si',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'sn',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'so',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'sq',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'st',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    id: {\r\n                        _desired: 'su',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'sw',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ta',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'te',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'tg',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ti',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'tk',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'tlh',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'tn',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'to',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'tt',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'tum',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'ug',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'uk',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'ur',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ru: {\r\n                        _desired: 'uz',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    fr: {\r\n                        _desired: 'wo',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'xh',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'yi',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'yo',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'za',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    en: {\r\n                        _desired: 'zu',\r\n                        _distance: '30',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'aao',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'abh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'abv',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'acm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'acq',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'acw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'acx',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'acy',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'adf',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'aeb',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'aec',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'afb',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ajp',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'apc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'apd',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'arq',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ars',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ary',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'arz',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'auz',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'avl',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ayh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ayl',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ayn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ayp',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'bbz',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'pga',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'shu',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ar: {\r\n                        _desired: 'ssh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    az: {\r\n                        _desired: 'azb',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    et: {\r\n                        _desired: 'vro',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'ffm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'fub',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'fue',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'fuf',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'fuh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'fui',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'fuq',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ff: {\r\n                        _desired: 'fuv',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    gn: {\r\n                        _desired: 'gnw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    gn: {\r\n                        _desired: 'gui',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    gn: {\r\n                        _desired: 'gun',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    gn: {\r\n                        _desired: 'nhd',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    iu: {\r\n                        _desired: 'ikt',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'enb',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'eyo',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'niq',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'oki',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'pko',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'sgc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'tec',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kln: {\r\n                        _desired: 'tuy',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kok: {\r\n                        _desired: 'gom',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    kpe: {\r\n                        _desired: 'gkp',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'ida',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lkb',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lko',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lks',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lri',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lrm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lsm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lto',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lts',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'lwg',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'nle',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'nyd',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    luy: {\r\n                        _desired: 'rag',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    lv: {\r\n                        _desired: 'ltg',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'bhr',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'bjq',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'bmm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'bzc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'msh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'skg',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'tdx',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'tkg',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'txy',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'xmv',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mg: {\r\n                        _desired: 'xmw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    mn: {\r\n                        _desired: 'mvf',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'bjn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'btj',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'bve',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'bvu',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'coa',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'dup',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'hji',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'id',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'jak',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'jax',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'kvb',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'kvr',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'kxd',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'lce',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'lcf',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'liw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'max',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'meo',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'mfa',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'mfb',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'min',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'mqg',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'msi',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'mui',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'orn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'ors',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'pel',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'pse',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'tmw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'urk',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'vkk',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'vkt',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'xmm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'zlm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ms: {\r\n                        _desired: 'zmi',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ne: {\r\n                        _desired: 'dty',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    om: {\r\n                        _desired: 'gax',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    om: {\r\n                        _desired: 'hae',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    om: {\r\n                        _desired: 'orc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    or: {\r\n                        _desired: 'spv',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ps: {\r\n                        _desired: 'pbt',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    ps: {\r\n                        _desired: 'pst',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qub',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qud',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'quf',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qug',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'quh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'quk',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qul',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qup',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qur',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qus',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'quw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qux',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'quy',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qva',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qve',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvi',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvj',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvl',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvm',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvo',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvp',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvs',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qvz',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qwa',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qwc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qwh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qws',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxa',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxl',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxo',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxp',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxr',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxt',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxu',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    qu: {\r\n                        _desired: 'qxw',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    sc: {\r\n                        _desired: 'sdc',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    sc: {\r\n                        _desired: 'sdn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    sc: {\r\n                        _desired: 'sro',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    sq: {\r\n                        _desired: 'aae',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    sq: {\r\n                        _desired: 'aat',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    sq: {\r\n                        _desired: 'aln',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    syr: {\r\n                        _desired: 'aii',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    uz: {\r\n                        _desired: 'uzs',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    yi: {\r\n                        _desired: 'yih',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'cdo',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'cjy',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'cpx',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'czh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'czo',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'gan',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'hak',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'hsn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'lzh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'mnp',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'nan',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'wuu',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    zh: {\r\n                        _desired: 'yue',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    '*': {\r\n                        _desired: '*',\r\n                        _distance: '80',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'am-Ethi',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ru-Cyrl': {\r\n                        _desired: 'az-Latn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'bn-Beng',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hans': {\r\n                        _desired: 'bo-Tibt',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ru-Cyrl': {\r\n                        _desired: 'hy-Armn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'ka-Geor',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'km-Khmr',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'kn-Knda',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'lo-Laoo',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'ml-Mlym',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'my-Mymr',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'ne-Deva',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'or-Orya',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'pa-Guru',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'ps-Arab',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'sd-Arab',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'si-Sinh',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'ta-Taml',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'te-Telu',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'ti-Ethi',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ru-Cyrl': {\r\n                        _desired: 'tk-Latn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'ur-Arab',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ru-Cyrl': {\r\n                        _desired: 'uz-Latn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'en-Latn': {\r\n                        _desired: 'yi-Hebr',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'sr-Cyrl': {\r\n                        _desired: 'sr-Latn',\r\n                        _distance: '5',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hans': {\r\n                        _desired: 'za-Latn',\r\n                        _distance: '10',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hans': {\r\n                        _desired: 'zh-Hani',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hant': {\r\n                        _desired: 'zh-Hani',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ar-Arab': {\r\n                        _desired: 'ar-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'bn-Beng': {\r\n                        _desired: 'bn-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'gu-Gujr': {\r\n                        _desired: 'gu-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'hi-Deva': {\r\n                        _desired: 'hi-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'kn-Knda': {\r\n                        _desired: 'kn-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ml-Mlym': {\r\n                        _desired: 'ml-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'mr-Deva': {\r\n                        _desired: 'mr-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ta-Taml': {\r\n                        _desired: 'ta-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'te-Telu': {\r\n                        _desired: 'te-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hans': {\r\n                        _desired: 'zh-Latn',\r\n                        _distance: '20',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ja-Jpan': {\r\n                        _desired: 'ja-Latn',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ja-Jpan': {\r\n                        _desired: 'ja-Hani',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ja-Jpan': {\r\n                        _desired: 'ja-Hira',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ja-Jpan': {\r\n                        _desired: 'ja-Kana',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ja-Jpan': {\r\n                        _desired: 'ja-Hrkt',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ja-Hrkt': {\r\n                        _desired: 'ja-Hira',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ja-Hrkt': {\r\n                        _desired: 'ja-Kana',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ko-Kore': {\r\n                        _desired: 'ko-Hani',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ko-Kore': {\r\n                        _desired: 'ko-Hang',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ko-Kore': {\r\n                        _desired: 'ko-Jamo',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    'ko-Hang': {\r\n                        _desired: 'ko-Jamo',\r\n                        _distance: '5',\r\n                        _oneway: 'true',\r\n                    },\r\n                },\r\n                {\r\n                    '*-*': {\r\n                        _desired: '*-*',\r\n                        _distance: '50',\r\n                    },\r\n                },\r\n                {\r\n                    'ar-*-$maghreb': {\r\n                        _desired: 'ar-*-$maghreb',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'ar-*-$!maghreb': {\r\n                        _desired: 'ar-*-$!maghreb',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'ar-*-*': {\r\n                        _desired: 'ar-*-*',\r\n                        _distance: '5',\r\n                    },\r\n                },\r\n                {\r\n                    'en-*-$enUS': {\r\n                        _desired: 'en-*-$enUS',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'en-*-GB': {\r\n                        _desired: 'en-*-$!enUS',\r\n                        _distance: '3',\r\n                    },\r\n                },\r\n                {\r\n                    'en-*-$!enUS': {\r\n                        _desired: 'en-*-$!enUS',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'en-*-*': {\r\n                        _desired: 'en-*-*',\r\n                        _distance: '5',\r\n                    },\r\n                },\r\n                {\r\n                    'es-*-$americas': {\r\n                        _desired: 'es-*-$americas',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'es-*-$!americas': {\r\n                        _desired: 'es-*-$!americas',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'es-*-*': {\r\n                        _desired: 'es-*-*',\r\n                        _distance: '5',\r\n                    },\r\n                },\r\n                {\r\n                    'pt-*-$americas': {\r\n                        _desired: 'pt-*-$americas',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'pt-*-$!americas': {\r\n                        _desired: 'pt-*-$!americas',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'pt-*-*': {\r\n                        _desired: 'pt-*-*',\r\n                        _distance: '5',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hant-$cnsar': {\r\n                        _desired: 'zh-Hant-$cnsar',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hant-$!cnsar': {\r\n                        _desired: 'zh-Hant-$!cnsar',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n                {\r\n                    'zh-Hant-*': {\r\n                        _desired: 'zh-Hant-*',\r\n                        _distance: '5',\r\n                    },\r\n                },\r\n                {\r\n                    '*-*-*': {\r\n                        _desired: '*-*-*',\r\n                        _distance: '4',\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    },\r\n};\r\n", "// This file is generated from regions-gen.ts\r\nexport var regions = {\r\n    \"001\": [\r\n        \"001\",\r\n        \"001-status-grouping\",\r\n        \"002\",\r\n        \"005\",\r\n        \"009\",\r\n        \"011\",\r\n        \"013\",\r\n        \"014\",\r\n        \"015\",\r\n        \"017\",\r\n        \"018\",\r\n        \"019\",\r\n        \"021\",\r\n        \"029\",\r\n        \"030\",\r\n        \"034\",\r\n        \"035\",\r\n        \"039\",\r\n        \"053\",\r\n        \"054\",\r\n        \"057\",\r\n        \"061\",\r\n        \"142\",\r\n        \"143\",\r\n        \"145\",\r\n        \"150\",\r\n        \"151\",\r\n        \"154\",\r\n        \"155\",\r\n        \"AC\",\r\n        \"AD\",\r\n        \"AE\",\r\n        \"AF\",\r\n        \"AG\",\r\n        \"AI\",\r\n        \"AL\",\r\n        \"AM\",\r\n        \"AO\",\r\n        \"AQ\",\r\n        \"AR\",\r\n        \"AS\",\r\n        \"AT\",\r\n        \"AU\",\r\n        \"AW\",\r\n        \"AX\",\r\n        \"AZ\",\r\n        \"BA\",\r\n        \"BB\",\r\n        \"BD\",\r\n        \"BE\",\r\n        \"BF\",\r\n        \"BG\",\r\n        \"BH\",\r\n        \"BI\",\r\n        \"BJ\",\r\n        \"BL\",\r\n        \"BM\",\r\n        \"BN\",\r\n        \"BO\",\r\n        \"BQ\",\r\n        \"BR\",\r\n        \"BS\",\r\n        \"BT\",\r\n        \"BV\",\r\n        \"BW\",\r\n        \"BY\",\r\n        \"BZ\",\r\n        \"CA\",\r\n        \"CC\",\r\n        \"CD\",\r\n        \"CF\",\r\n        \"CG\",\r\n        \"CH\",\r\n        \"CI\",\r\n        \"CK\",\r\n        \"CL\",\r\n        \"CM\",\r\n        \"CN\",\r\n        \"CO\",\r\n        \"CP\",\r\n        \"CQ\",\r\n        \"CR\",\r\n        \"CU\",\r\n        \"CV\",\r\n        \"CW\",\r\n        \"CX\",\r\n        \"CY\",\r\n        \"CZ\",\r\n        \"DE\",\r\n        \"DG\",\r\n        \"DJ\",\r\n        \"DK\",\r\n        \"DM\",\r\n        \"DO\",\r\n        \"DZ\",\r\n        \"EA\",\r\n        \"EC\",\r\n        \"EE\",\r\n        \"EG\",\r\n        \"EH\",\r\n        \"ER\",\r\n        \"ES\",\r\n        \"ET\",\r\n        \"EU\",\r\n        \"EZ\",\r\n        \"FI\",\r\n        \"FJ\",\r\n        \"FK\",\r\n        \"FM\",\r\n        \"FO\",\r\n        \"FR\",\r\n        \"GA\",\r\n        \"GB\",\r\n        \"GD\",\r\n        \"GE\",\r\n        \"GF\",\r\n        \"GG\",\r\n        \"GH\",\r\n        \"GI\",\r\n        \"GL\",\r\n        \"GM\",\r\n        \"GN\",\r\n        \"GP\",\r\n        \"GQ\",\r\n        \"GR\",\r\n        \"GS\",\r\n        \"GT\",\r\n        \"GU\",\r\n        \"GW\",\r\n        \"GY\",\r\n        \"HK\",\r\n        \"HM\",\r\n        \"HN\",\r\n        \"HR\",\r\n        \"HT\",\r\n        \"HU\",\r\n        \"IC\",\r\n        \"ID\",\r\n        \"IE\",\r\n        \"IL\",\r\n        \"IM\",\r\n        \"IN\",\r\n        \"IO\",\r\n        \"IQ\",\r\n        \"IR\",\r\n        \"IS\",\r\n        \"IT\",\r\n        \"JE\",\r\n        \"JM\",\r\n        \"JO\",\r\n        \"JP\",\r\n        \"KE\",\r\n        \"KG\",\r\n        \"KH\",\r\n        \"KI\",\r\n        \"KM\",\r\n        \"KN\",\r\n        \"KP\",\r\n        \"KR\",\r\n        \"KW\",\r\n        \"KY\",\r\n        \"KZ\",\r\n        \"LA\",\r\n        \"LB\",\r\n        \"LC\",\r\n        \"LI\",\r\n        \"LK\",\r\n        \"LR\",\r\n        \"LS\",\r\n        \"LT\",\r\n        \"LU\",\r\n        \"LV\",\r\n        \"LY\",\r\n        \"MA\",\r\n        \"MC\",\r\n        \"MD\",\r\n        \"ME\",\r\n        \"MF\",\r\n        \"MG\",\r\n        \"MH\",\r\n        \"MK\",\r\n        \"ML\",\r\n        \"MM\",\r\n        \"MN\",\r\n        \"MO\",\r\n        \"MP\",\r\n        \"MQ\",\r\n        \"MR\",\r\n        \"MS\",\r\n        \"MT\",\r\n        \"MU\",\r\n        \"MV\",\r\n        \"MW\",\r\n        \"MX\",\r\n        \"MY\",\r\n        \"MZ\",\r\n        \"NA\",\r\n        \"NC\",\r\n        \"NE\",\r\n        \"NF\",\r\n        \"NG\",\r\n        \"NI\",\r\n        \"NL\",\r\n        \"NO\",\r\n        \"NP\",\r\n        \"NR\",\r\n        \"NU\",\r\n        \"NZ\",\r\n        \"OM\",\r\n        \"PA\",\r\n        \"PE\",\r\n        \"PF\",\r\n        \"PG\",\r\n        \"PH\",\r\n        \"PK\",\r\n        \"PL\",\r\n        \"PM\",\r\n        \"PN\",\r\n        \"PR\",\r\n        \"PS\",\r\n        \"PT\",\r\n        \"PW\",\r\n        \"PY\",\r\n        \"QA\",\r\n        \"QO\",\r\n        \"RE\",\r\n        \"RO\",\r\n        \"RS\",\r\n        \"RU\",\r\n        \"RW\",\r\n        \"SA\",\r\n        \"SB\",\r\n        \"SC\",\r\n        \"SD\",\r\n        \"SE\",\r\n        \"SG\",\r\n        \"SH\",\r\n        \"SI\",\r\n        \"SJ\",\r\n        \"SK\",\r\n        \"SL\",\r\n        \"SM\",\r\n        \"SN\",\r\n        \"SO\",\r\n        \"SR\",\r\n        \"SS\",\r\n        \"ST\",\r\n        \"SV\",\r\n        \"SX\",\r\n        \"SY\",\r\n        \"SZ\",\r\n        \"TA\",\r\n        \"TC\",\r\n        \"TD\",\r\n        \"TF\",\r\n        \"TG\",\r\n        \"TH\",\r\n        \"TJ\",\r\n        \"TK\",\r\n        \"TL\",\r\n        \"TM\",\r\n        \"TN\",\r\n        \"TO\",\r\n        \"TR\",\r\n        \"TT\",\r\n        \"TV\",\r\n        \"TW\",\r\n        \"TZ\",\r\n        \"UA\",\r\n        \"UG\",\r\n        \"UM\",\r\n        \"UN\",\r\n        \"US\",\r\n        \"UY\",\r\n        \"UZ\",\r\n        \"VA\",\r\n        \"VC\",\r\n        \"VE\",\r\n        \"VG\",\r\n        \"VI\",\r\n        \"VN\",\r\n        \"VU\",\r\n        \"WF\",\r\n        \"WS\",\r\n        \"XK\",\r\n        \"YE\",\r\n        \"YT\",\r\n        \"ZA\",\r\n        \"ZM\",\r\n        \"ZW\"\r\n    ],\r\n    \"002\": [\r\n        \"002\",\r\n        \"002-status-grouping\",\r\n        \"011\",\r\n        \"014\",\r\n        \"015\",\r\n        \"017\",\r\n        \"018\",\r\n        \"202\",\r\n        \"AO\",\r\n        \"BF\",\r\n        \"BI\",\r\n        \"BJ\",\r\n        \"BW\",\r\n        \"CD\",\r\n        \"CF\",\r\n        \"CG\",\r\n        \"CI\",\r\n        \"CM\",\r\n        \"CV\",\r\n        \"DJ\",\r\n        \"DZ\",\r\n        \"EA\",\r\n        \"EG\",\r\n        \"EH\",\r\n        \"ER\",\r\n        \"ET\",\r\n        \"GA\",\r\n        \"GH\",\r\n        \"GM\",\r\n        \"GN\",\r\n        \"GQ\",\r\n        \"GW\",\r\n        \"IC\",\r\n        \"IO\",\r\n        \"KE\",\r\n        \"KM\",\r\n        \"LR\",\r\n        \"LS\",\r\n        \"LY\",\r\n        \"MA\",\r\n        \"MG\",\r\n        \"ML\",\r\n        \"MR\",\r\n        \"MU\",\r\n        \"MW\",\r\n        \"MZ\",\r\n        \"NA\",\r\n        \"NE\",\r\n        \"NG\",\r\n        \"RE\",\r\n        \"RW\",\r\n        \"SC\",\r\n        \"SD\",\r\n        \"SH\",\r\n        \"SL\",\r\n        \"SN\",\r\n        \"SO\",\r\n        \"SS\",\r\n        \"ST\",\r\n        \"SZ\",\r\n        \"TD\",\r\n        \"TF\",\r\n        \"TG\",\r\n        \"TN\",\r\n        \"TZ\",\r\n        \"UG\",\r\n        \"YT\",\r\n        \"ZA\",\r\n        \"ZM\",\r\n        \"ZW\"\r\n    ],\r\n    \"003\": [\r\n        \"003\",\r\n        \"013\",\r\n        \"021\",\r\n        \"029\",\r\n        \"AG\",\r\n        \"AI\",\r\n        \"AW\",\r\n        \"BB\",\r\n        \"BL\",\r\n        \"BM\",\r\n        \"BQ\",\r\n        \"BS\",\r\n        \"BZ\",\r\n        \"CA\",\r\n        \"CR\",\r\n        \"CU\",\r\n        \"CW\",\r\n        \"DM\",\r\n        \"DO\",\r\n        \"GD\",\r\n        \"GL\",\r\n        \"GP\",\r\n        \"GT\",\r\n        \"HN\",\r\n        \"HT\",\r\n        \"JM\",\r\n        \"KN\",\r\n        \"KY\",\r\n        \"LC\",\r\n        \"MF\",\r\n        \"MQ\",\r\n        \"MS\",\r\n        \"MX\",\r\n        \"NI\",\r\n        \"PA\",\r\n        \"PM\",\r\n        \"PR\",\r\n        \"SV\",\r\n        \"SX\",\r\n        \"TC\",\r\n        \"TT\",\r\n        \"US\",\r\n        \"VC\",\r\n        \"VG\",\r\n        \"VI\"\r\n    ],\r\n    \"005\": [\r\n        \"005\",\r\n        \"AR\",\r\n        \"BO\",\r\n        \"BR\",\r\n        \"BV\",\r\n        \"CL\",\r\n        \"CO\",\r\n        \"EC\",\r\n        \"FK\",\r\n        \"GF\",\r\n        \"GS\",\r\n        \"GY\",\r\n        \"PE\",\r\n        \"PY\",\r\n        \"SR\",\r\n        \"UY\",\r\n        \"VE\"\r\n    ],\r\n    \"009\": [\r\n        \"009\",\r\n        \"053\",\r\n        \"054\",\r\n        \"057\",\r\n        \"061\",\r\n        \"AC\",\r\n        \"AQ\",\r\n        \"AS\",\r\n        \"AU\",\r\n        \"CC\",\r\n        \"CK\",\r\n        \"CP\",\r\n        \"CX\",\r\n        \"DG\",\r\n        \"FJ\",\r\n        \"FM\",\r\n        \"GU\",\r\n        \"HM\",\r\n        \"KI\",\r\n        \"MH\",\r\n        \"MP\",\r\n        \"NC\",\r\n        \"NF\",\r\n        \"NR\",\r\n        \"NU\",\r\n        \"NZ\",\r\n        \"PF\",\r\n        \"PG\",\r\n        \"PN\",\r\n        \"PW\",\r\n        \"QO\",\r\n        \"SB\",\r\n        \"TA\",\r\n        \"TK\",\r\n        \"TO\",\r\n        \"TV\",\r\n        \"UM\",\r\n        \"VU\",\r\n        \"WF\",\r\n        \"WS\"\r\n    ],\r\n    \"011\": [\r\n        \"011\",\r\n        \"BF\",\r\n        \"BJ\",\r\n        \"CI\",\r\n        \"CV\",\r\n        \"GH\",\r\n        \"GM\",\r\n        \"GN\",\r\n        \"GW\",\r\n        \"LR\",\r\n        \"ML\",\r\n        \"MR\",\r\n        \"NE\",\r\n        \"NG\",\r\n        \"SH\",\r\n        \"SL\",\r\n        \"SN\",\r\n        \"TG\"\r\n    ],\r\n    \"013\": [\r\n        \"013\",\r\n        \"BZ\",\r\n        \"CR\",\r\n        \"GT\",\r\n        \"HN\",\r\n        \"MX\",\r\n        \"NI\",\r\n        \"PA\",\r\n        \"SV\"\r\n    ],\r\n    \"014\": [\r\n        \"014\",\r\n        \"BI\",\r\n        \"DJ\",\r\n        \"ER\",\r\n        \"ET\",\r\n        \"IO\",\r\n        \"KE\",\r\n        \"KM\",\r\n        \"MG\",\r\n        \"MU\",\r\n        \"MW\",\r\n        \"MZ\",\r\n        \"RE\",\r\n        \"RW\",\r\n        \"SC\",\r\n        \"SO\",\r\n        \"SS\",\r\n        \"TF\",\r\n        \"TZ\",\r\n        \"UG\",\r\n        \"YT\",\r\n        \"ZM\",\r\n        \"ZW\"\r\n    ],\r\n    \"015\": [\r\n        \"015\",\r\n        \"DZ\",\r\n        \"EA\",\r\n        \"EG\",\r\n        \"EH\",\r\n        \"IC\",\r\n        \"LY\",\r\n        \"MA\",\r\n        \"SD\",\r\n        \"TN\"\r\n    ],\r\n    \"017\": [\r\n        \"017\",\r\n        \"AO\",\r\n        \"CD\",\r\n        \"CF\",\r\n        \"CG\",\r\n        \"CM\",\r\n        \"GA\",\r\n        \"GQ\",\r\n        \"ST\",\r\n        \"TD\"\r\n    ],\r\n    \"018\": [\r\n        \"018\",\r\n        \"BW\",\r\n        \"LS\",\r\n        \"NA\",\r\n        \"SZ\",\r\n        \"ZA\"\r\n    ],\r\n    \"019\": [\r\n        \"003\",\r\n        \"005\",\r\n        \"013\",\r\n        \"019\",\r\n        \"019-status-grouping\",\r\n        \"021\",\r\n        \"029\",\r\n        \"419\",\r\n        \"AG\",\r\n        \"AI\",\r\n        \"AR\",\r\n        \"AW\",\r\n        \"BB\",\r\n        \"BL\",\r\n        \"BM\",\r\n        \"BO\",\r\n        \"BQ\",\r\n        \"BR\",\r\n        \"BS\",\r\n        \"BV\",\r\n        \"BZ\",\r\n        \"CA\",\r\n        \"CL\",\r\n        \"CO\",\r\n        \"CR\",\r\n        \"CU\",\r\n        \"CW\",\r\n        \"DM\",\r\n        \"DO\",\r\n        \"EC\",\r\n        \"FK\",\r\n        \"GD\",\r\n        \"GF\",\r\n        \"GL\",\r\n        \"GP\",\r\n        \"GS\",\r\n        \"GT\",\r\n        \"GY\",\r\n        \"HN\",\r\n        \"HT\",\r\n        \"JM\",\r\n        \"KN\",\r\n        \"KY\",\r\n        \"LC\",\r\n        \"MF\",\r\n        \"MQ\",\r\n        \"MS\",\r\n        \"MX\",\r\n        \"NI\",\r\n        \"PA\",\r\n        \"PE\",\r\n        \"PM\",\r\n        \"PR\",\r\n        \"PY\",\r\n        \"SR\",\r\n        \"SV\",\r\n        \"SX\",\r\n        \"TC\",\r\n        \"TT\",\r\n        \"US\",\r\n        \"UY\",\r\n        \"VC\",\r\n        \"VE\",\r\n        \"VG\",\r\n        \"VI\"\r\n    ],\r\n    \"021\": [\r\n        \"021\",\r\n        \"BM\",\r\n        \"CA\",\r\n        \"GL\",\r\n        \"PM\",\r\n        \"US\"\r\n    ],\r\n    \"029\": [\r\n        \"029\",\r\n        \"AG\",\r\n        \"AI\",\r\n        \"AW\",\r\n        \"BB\",\r\n        \"BL\",\r\n        \"BQ\",\r\n        \"BS\",\r\n        \"CU\",\r\n        \"CW\",\r\n        \"DM\",\r\n        \"DO\",\r\n        \"GD\",\r\n        \"GP\",\r\n        \"HT\",\r\n        \"JM\",\r\n        \"KN\",\r\n        \"KY\",\r\n        \"LC\",\r\n        \"MF\",\r\n        \"MQ\",\r\n        \"MS\",\r\n        \"PR\",\r\n        \"SX\",\r\n        \"TC\",\r\n        \"TT\",\r\n        \"VC\",\r\n        \"VG\",\r\n        \"VI\"\r\n    ],\r\n    \"030\": [\r\n        \"030\",\r\n        \"CN\",\r\n        \"HK\",\r\n        \"JP\",\r\n        \"KP\",\r\n        \"KR\",\r\n        \"MN\",\r\n        \"MO\",\r\n        \"TW\"\r\n    ],\r\n    \"034\": [\r\n        \"034\",\r\n        \"AF\",\r\n        \"BD\",\r\n        \"BT\",\r\n        \"IN\",\r\n        \"IR\",\r\n        \"LK\",\r\n        \"MV\",\r\n        \"NP\",\r\n        \"PK\"\r\n    ],\r\n    \"035\": [\r\n        \"035\",\r\n        \"BN\",\r\n        \"ID\",\r\n        \"KH\",\r\n        \"LA\",\r\n        \"MM\",\r\n        \"MY\",\r\n        \"PH\",\r\n        \"SG\",\r\n        \"TH\",\r\n        \"TL\",\r\n        \"VN\"\r\n    ],\r\n    \"039\": [\r\n        \"039\",\r\n        \"AD\",\r\n        \"AL\",\r\n        \"BA\",\r\n        \"ES\",\r\n        \"GI\",\r\n        \"GR\",\r\n        \"HR\",\r\n        \"IT\",\r\n        \"ME\",\r\n        \"MK\",\r\n        \"MT\",\r\n        \"PT\",\r\n        \"RS\",\r\n        \"SI\",\r\n        \"SM\",\r\n        \"VA\",\r\n        \"XK\"\r\n    ],\r\n    \"053\": [\r\n        \"053\",\r\n        \"AU\",\r\n        \"CC\",\r\n        \"CX\",\r\n        \"HM\",\r\n        \"NF\",\r\n        \"NZ\"\r\n    ],\r\n    \"054\": [\r\n        \"054\",\r\n        \"FJ\",\r\n        \"NC\",\r\n        \"PG\",\r\n        \"SB\",\r\n        \"VU\"\r\n    ],\r\n    \"057\": [\r\n        \"057\",\r\n        \"FM\",\r\n        \"GU\",\r\n        \"KI\",\r\n        \"MH\",\r\n        \"MP\",\r\n        \"NR\",\r\n        \"PW\",\r\n        \"UM\"\r\n    ],\r\n    \"061\": [\r\n        \"061\",\r\n        \"AS\",\r\n        \"CK\",\r\n        \"NU\",\r\n        \"PF\",\r\n        \"PN\",\r\n        \"TK\",\r\n        \"TO\",\r\n        \"TV\",\r\n        \"WF\",\r\n        \"WS\"\r\n    ],\r\n    \"142\": [\r\n        \"030\",\r\n        \"034\",\r\n        \"035\",\r\n        \"142\",\r\n        \"143\",\r\n        \"145\",\r\n        \"AE\",\r\n        \"AF\",\r\n        \"AM\",\r\n        \"AZ\",\r\n        \"BD\",\r\n        \"BH\",\r\n        \"BN\",\r\n        \"BT\",\r\n        \"CN\",\r\n        \"CY\",\r\n        \"GE\",\r\n        \"HK\",\r\n        \"ID\",\r\n        \"IL\",\r\n        \"IN\",\r\n        \"IQ\",\r\n        \"IR\",\r\n        \"JO\",\r\n        \"JP\",\r\n        \"KG\",\r\n        \"KH\",\r\n        \"KP\",\r\n        \"KR\",\r\n        \"KW\",\r\n        \"KZ\",\r\n        \"LA\",\r\n        \"LB\",\r\n        \"LK\",\r\n        \"MM\",\r\n        \"MN\",\r\n        \"MO\",\r\n        \"MV\",\r\n        \"MY\",\r\n        \"NP\",\r\n        \"OM\",\r\n        \"PH\",\r\n        \"PK\",\r\n        \"PS\",\r\n        \"QA\",\r\n        \"SA\",\r\n        \"SG\",\r\n        \"SY\",\r\n        \"TH\",\r\n        \"TJ\",\r\n        \"TL\",\r\n        \"TM\",\r\n        \"TR\",\r\n        \"TW\",\r\n        \"UZ\",\r\n        \"VN\",\r\n        \"YE\"\r\n    ],\r\n    \"143\": [\r\n        \"143\",\r\n        \"KG\",\r\n        \"KZ\",\r\n        \"TJ\",\r\n        \"TM\",\r\n        \"UZ\"\r\n    ],\r\n    \"145\": [\r\n        \"145\",\r\n        \"AE\",\r\n        \"AM\",\r\n        \"AZ\",\r\n        \"BH\",\r\n        \"CY\",\r\n        \"GE\",\r\n        \"IL\",\r\n        \"IQ\",\r\n        \"JO\",\r\n        \"KW\",\r\n        \"LB\",\r\n        \"OM\",\r\n        \"PS\",\r\n        \"QA\",\r\n        \"SA\",\r\n        \"SY\",\r\n        \"TR\",\r\n        \"YE\"\r\n    ],\r\n    \"150\": [\r\n        \"039\",\r\n        \"150\",\r\n        \"151\",\r\n        \"154\",\r\n        \"155\",\r\n        \"AD\",\r\n        \"AL\",\r\n        \"AT\",\r\n        \"AX\",\r\n        \"BA\",\r\n        \"BE\",\r\n        \"BG\",\r\n        \"BY\",\r\n        \"CH\",\r\n        \"CQ\",\r\n        \"CZ\",\r\n        \"DE\",\r\n        \"DK\",\r\n        \"EE\",\r\n        \"ES\",\r\n        \"FI\",\r\n        \"FO\",\r\n        \"FR\",\r\n        \"GB\",\r\n        \"GG\",\r\n        \"GI\",\r\n        \"GR\",\r\n        \"HR\",\r\n        \"HU\",\r\n        \"IE\",\r\n        \"IM\",\r\n        \"IS\",\r\n        \"IT\",\r\n        \"JE\",\r\n        \"LI\",\r\n        \"LT\",\r\n        \"LU\",\r\n        \"LV\",\r\n        \"MC\",\r\n        \"MD\",\r\n        \"ME\",\r\n        \"MK\",\r\n        \"MT\",\r\n        \"NL\",\r\n        \"NO\",\r\n        \"PL\",\r\n        \"PT\",\r\n        \"RO\",\r\n        \"RS\",\r\n        \"RU\",\r\n        \"SE\",\r\n        \"SI\",\r\n        \"SJ\",\r\n        \"SK\",\r\n        \"SM\",\r\n        \"UA\",\r\n        \"VA\",\r\n        \"XK\"\r\n    ],\r\n    \"151\": [\r\n        \"151\",\r\n        \"BG\",\r\n        \"BY\",\r\n        \"CZ\",\r\n        \"HU\",\r\n        \"MD\",\r\n        \"PL\",\r\n        \"RO\",\r\n        \"RU\",\r\n        \"SK\",\r\n        \"UA\"\r\n    ],\r\n    \"154\": [\r\n        \"154\",\r\n        \"AX\",\r\n        \"CQ\",\r\n        \"DK\",\r\n        \"EE\",\r\n        \"FI\",\r\n        \"FO\",\r\n        \"GB\",\r\n        \"GG\",\r\n        \"IE\",\r\n        \"IM\",\r\n        \"IS\",\r\n        \"JE\",\r\n        \"LT\",\r\n        \"LV\",\r\n        \"NO\",\r\n        \"SE\",\r\n        \"SJ\"\r\n    ],\r\n    \"155\": [\r\n        \"155\",\r\n        \"AT\",\r\n        \"BE\",\r\n        \"CH\",\r\n        \"DE\",\r\n        \"FR\",\r\n        \"LI\",\r\n        \"LU\",\r\n        \"MC\",\r\n        \"NL\"\r\n    ],\r\n    \"202\": [\r\n        \"011\",\r\n        \"014\",\r\n        \"017\",\r\n        \"018\",\r\n        \"202\",\r\n        \"AO\",\r\n        \"BF\",\r\n        \"BI\",\r\n        \"BJ\",\r\n        \"BW\",\r\n        \"CD\",\r\n        \"CF\",\r\n        \"CG\",\r\n        \"CI\",\r\n        \"CM\",\r\n        \"CV\",\r\n        \"DJ\",\r\n        \"ER\",\r\n        \"ET\",\r\n        \"GA\",\r\n        \"GH\",\r\n        \"GM\",\r\n        \"GN\",\r\n        \"GQ\",\r\n        \"GW\",\r\n        \"IO\",\r\n        \"KE\",\r\n        \"KM\",\r\n        \"LR\",\r\n        \"LS\",\r\n        \"MG\",\r\n        \"ML\",\r\n        \"MR\",\r\n        \"MU\",\r\n        \"MW\",\r\n        \"MZ\",\r\n        \"NA\",\r\n        \"NE\",\r\n        \"NG\",\r\n        \"RE\",\r\n        \"RW\",\r\n        \"SC\",\r\n        \"SH\",\r\n        \"SL\",\r\n        \"SN\",\r\n        \"SO\",\r\n        \"SS\",\r\n        \"ST\",\r\n        \"SZ\",\r\n        \"TD\",\r\n        \"TF\",\r\n        \"TG\",\r\n        \"TZ\",\r\n        \"UG\",\r\n        \"YT\",\r\n        \"ZA\",\r\n        \"ZM\",\r\n        \"ZW\"\r\n    ],\r\n    \"419\": [\r\n        \"005\",\r\n        \"013\",\r\n        \"029\",\r\n        \"419\",\r\n        \"AG\",\r\n        \"AI\",\r\n        \"AR\",\r\n        \"AW\",\r\n        \"BB\",\r\n        \"BL\",\r\n        \"BO\",\r\n        \"BQ\",\r\n        \"BR\",\r\n        \"BS\",\r\n        \"BV\",\r\n        \"BZ\",\r\n        \"CL\",\r\n        \"CO\",\r\n        \"CR\",\r\n        \"CU\",\r\n        \"CW\",\r\n        \"DM\",\r\n        \"DO\",\r\n        \"EC\",\r\n        \"FK\",\r\n        \"GD\",\r\n        \"GF\",\r\n        \"GP\",\r\n        \"GS\",\r\n        \"GT\",\r\n        \"GY\",\r\n        \"HN\",\r\n        \"HT\",\r\n        \"JM\",\r\n        \"KN\",\r\n        \"KY\",\r\n        \"LC\",\r\n        \"MF\",\r\n        \"MQ\",\r\n        \"MS\",\r\n        \"MX\",\r\n        \"NI\",\r\n        \"PA\",\r\n        \"PE\",\r\n        \"PR\",\r\n        \"PY\",\r\n        \"SR\",\r\n        \"SV\",\r\n        \"SX\",\r\n        \"TC\",\r\n        \"TT\",\r\n        \"UY\",\r\n        \"VC\",\r\n        \"VE\",\r\n        \"VG\",\r\n        \"VI\"\r\n    ],\r\n    \"EU\": [\r\n        \"AT\",\r\n        \"BE\",\r\n        \"BG\",\r\n        \"CY\",\r\n        \"CZ\",\r\n        \"DE\",\r\n        \"DK\",\r\n        \"EE\",\r\n        \"ES\",\r\n        \"EU\",\r\n        \"FI\",\r\n        \"FR\",\r\n        \"GR\",\r\n        \"HR\",\r\n        \"HU\",\r\n        \"IE\",\r\n        \"IT\",\r\n        \"LT\",\r\n        \"LU\",\r\n        \"LV\",\r\n        \"MT\",\r\n        \"NL\",\r\n        \"PL\",\r\n        \"PT\",\r\n        \"RO\",\r\n        \"SE\",\r\n        \"SI\",\r\n        \"SK\"\r\n    ],\r\n    \"EZ\": [\r\n        \"AT\",\r\n        \"BE\",\r\n        \"CY\",\r\n        \"DE\",\r\n        \"EE\",\r\n        \"ES\",\r\n        \"EZ\",\r\n        \"FI\",\r\n        \"FR\",\r\n        \"GR\",\r\n        \"IE\",\r\n        \"IT\",\r\n        \"LT\",\r\n        \"LU\",\r\n        \"LV\",\r\n        \"MT\",\r\n        \"NL\",\r\n        \"PT\",\r\n        \"SI\",\r\n        \"SK\"\r\n    ],\r\n    \"QO\": [\r\n        \"AC\",\r\n        \"AQ\",\r\n        \"CP\",\r\n        \"DG\",\r\n        \"QO\",\r\n        \"TA\"\r\n    ],\r\n    \"UN\": [\r\n        \"AD\",\r\n        \"AE\",\r\n        \"AF\",\r\n        \"AG\",\r\n        \"AL\",\r\n        \"AM\",\r\n        \"AO\",\r\n        \"AR\",\r\n        \"AT\",\r\n        \"AU\",\r\n        \"AZ\",\r\n        \"BA\",\r\n        \"BB\",\r\n        \"BD\",\r\n        \"BE\",\r\n        \"BF\",\r\n        \"BG\",\r\n        \"BH\",\r\n        \"BI\",\r\n        \"BJ\",\r\n        \"BN\",\r\n        \"BO\",\r\n        \"BR\",\r\n        \"BS\",\r\n        \"BT\",\r\n        \"BW\",\r\n        \"BY\",\r\n        \"BZ\",\r\n        \"CA\",\r\n        \"CD\",\r\n        \"CF\",\r\n        \"CG\",\r\n        \"CH\",\r\n        \"CI\",\r\n        \"CL\",\r\n        \"CM\",\r\n        \"CN\",\r\n        \"CO\",\r\n        \"CR\",\r\n        \"CU\",\r\n        \"CV\",\r\n        \"CY\",\r\n        \"CZ\",\r\n        \"DE\",\r\n        \"DJ\",\r\n        \"DK\",\r\n        \"DM\",\r\n        \"DO\",\r\n        \"DZ\",\r\n        \"EC\",\r\n        \"EE\",\r\n        \"EG\",\r\n        \"ER\",\r\n        \"ES\",\r\n        \"ET\",\r\n        \"FI\",\r\n        \"FJ\",\r\n        \"FM\",\r\n        \"FR\",\r\n        \"GA\",\r\n        \"GB\",\r\n        \"GD\",\r\n        \"GE\",\r\n        \"GH\",\r\n        \"GM\",\r\n        \"GN\",\r\n        \"GQ\",\r\n        \"GR\",\r\n        \"GT\",\r\n        \"GW\",\r\n        \"GY\",\r\n        \"HN\",\r\n        \"HR\",\r\n        \"HT\",\r\n        \"HU\",\r\n        \"ID\",\r\n        \"IE\",\r\n        \"IL\",\r\n        \"IN\",\r\n        \"IQ\",\r\n        \"IR\",\r\n        \"IS\",\r\n        \"IT\",\r\n        \"JM\",\r\n        \"JO\",\r\n        \"JP\",\r\n        \"KE\",\r\n        \"KG\",\r\n        \"KH\",\r\n        \"KI\",\r\n        \"KM\",\r\n        \"KN\",\r\n        \"KP\",\r\n        \"KR\",\r\n        \"KW\",\r\n        \"KZ\",\r\n        \"LA\",\r\n        \"LB\",\r\n        \"LC\",\r\n        \"LI\",\r\n        \"LK\",\r\n        \"LR\",\r\n        \"LS\",\r\n        \"LT\",\r\n        \"LU\",\r\n        \"LV\",\r\n        \"LY\",\r\n        \"MA\",\r\n        \"MC\",\r\n        \"MD\",\r\n        \"ME\",\r\n        \"MG\",\r\n        \"MH\",\r\n        \"MK\",\r\n        \"ML\",\r\n        \"MM\",\r\n        \"MN\",\r\n        \"MR\",\r\n        \"MT\",\r\n        \"MU\",\r\n        \"MV\",\r\n        \"MW\",\r\n        \"MX\",\r\n        \"MY\",\r\n        \"MZ\",\r\n        \"NA\",\r\n        \"NE\",\r\n        \"NG\",\r\n        \"NI\",\r\n        \"NL\",\r\n        \"NO\",\r\n        \"NP\",\r\n        \"NR\",\r\n        \"NZ\",\r\n        \"OM\",\r\n        \"PA\",\r\n        \"PE\",\r\n        \"PG\",\r\n        \"PH\",\r\n        \"PK\",\r\n        \"PL\",\r\n        \"PT\",\r\n        \"PW\",\r\n        \"PY\",\r\n        \"QA\",\r\n        \"RO\",\r\n        \"RS\",\r\n        \"RU\",\r\n        \"RW\",\r\n        \"SA\",\r\n        \"SB\",\r\n        \"SC\",\r\n        \"SD\",\r\n        \"SE\",\r\n        \"SG\",\r\n        \"SI\",\r\n        \"SK\",\r\n        \"SL\",\r\n        \"SM\",\r\n        \"SN\",\r\n        \"SO\",\r\n        \"SR\",\r\n        \"SS\",\r\n        \"ST\",\r\n        \"SV\",\r\n        \"SY\",\r\n        \"SZ\",\r\n        \"TD\",\r\n        \"TG\",\r\n        \"TH\",\r\n        \"TJ\",\r\n        \"TL\",\r\n        \"TM\",\r\n        \"TN\",\r\n        \"TO\",\r\n        \"TR\",\r\n        \"TT\",\r\n        \"TV\",\r\n        \"TZ\",\r\n        \"UA\",\r\n        \"UG\",\r\n        \"UN\",\r\n        \"US\",\r\n        \"UY\",\r\n        \"UZ\",\r\n        \"VC\",\r\n        \"VE\",\r\n        \"VN\",\r\n        \"VU\",\r\n        \"WS\",\r\n        \"YE\",\r\n        \"ZA\",\r\n        \"ZM\",\r\n        \"ZW\"\r\n    ]\r\n};\r\n", "import { __spreadArray } from \"tslib\";\r\nimport { data as jsonData } from './languageMatching';\r\nimport { regions } from './regions.generated';\r\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\r\nexport function invariant(condition, message, Err) {\r\n    if (Err === void 0) { Err = Error; }\r\n    if (!condition) {\r\n        throw new Err(message);\r\n    }\r\n}\r\n// This is effectively 2 languages in 2 different regions in the same cluster\r\nvar DEFAULT_MATCHING_THRESHOLD = 838;\r\nvar PROCESSED_DATA;\r\nfunction processData() {\r\n    var _a, _b;\r\n    if (!PROCESSED_DATA) {\r\n        var paradigmLocales = (_b = (_a = jsonData.supplemental.languageMatching['written-new'][0]) === null || _a === void 0 ? void 0 : _a.paradigmLocales) === null || _b === void 0 ? void 0 : _b._locales.split(' ');\r\n        var matchVariables = jsonData.supplemental.languageMatching['written-new'].slice(1, 5);\r\n        var data = jsonData.supplemental.languageMatching['written-new'].slice(5);\r\n        var matches = data.map(function (d) {\r\n            var key = Object.keys(d)[0];\r\n            var value = d[key];\r\n            return {\r\n                supported: key,\r\n                desired: value._desired,\r\n                distance: +value._distance,\r\n                oneway: value.oneway === 'true' ? true : false,\r\n            };\r\n        }, {});\r\n        PROCESSED_DATA = {\r\n            matches: matches,\r\n            matchVariables: matchVariables.reduce(function (all, d) {\r\n                var key = Object.keys(d)[0];\r\n                var value = d[key];\r\n                all[key.slice(1)] = value._value.split('+');\r\n                return all;\r\n            }, {}),\r\n            paradigmLocales: __spreadArray(__spreadArray([], paradigmLocales, true), paradigmLocales.map(function (l) {\r\n                return new Intl.Locale(l.replace(/_/g, '-')).maximize().toString();\r\n            }), true),\r\n        };\r\n    }\r\n    return PROCESSED_DATA;\r\n}\r\nfunction isMatched(locale, languageMatchInfoLocale, matchVariables) {\r\n    var _a = languageMatchInfoLocale.split('-'), language = _a[0], script = _a[1], region = _a[2];\r\n    var matches = true;\r\n    if (region && region[0] === '$') {\r\n        var shouldInclude = region[1] !== '!';\r\n        var matchRegions = shouldInclude\r\n            ? matchVariables[region.slice(1)]\r\n            : matchVariables[region.slice(2)];\r\n        var expandedMatchedRegions = matchRegions\r\n            .map(function (r) { return regions[r] || [r]; })\r\n            .reduce(function (all, list) { return __spreadArray(__spreadArray([], all, true), list, true); }, []);\r\n        matches && (matches = !(expandedMatchedRegions.indexOf(locale.region || '') > -1 !=\r\n            shouldInclude));\r\n    }\r\n    else {\r\n        matches && (matches = locale.region\r\n            ? region === '*' || region === locale.region\r\n            : true);\r\n    }\r\n    matches && (matches = locale.script ? script === '*' || script === locale.script : true);\r\n    matches && (matches = locale.language\r\n        ? language === '*' || language === locale.language\r\n        : true);\r\n    return matches;\r\n}\r\nfunction serializeLSR(lsr) {\r\n    return [lsr.language, lsr.script, lsr.region].filter(Boolean).join('-');\r\n}\r\nfunction findMatchingDistanceForLSR(desired, supported, data) {\r\n    for (var _i = 0, _a = data.matches; _i < _a.length; _i++) {\r\n        var d = _a[_i];\r\n        var matches = isMatched(desired, d.desired, data.matchVariables) &&\r\n            isMatched(supported, d.supported, data.matchVariables);\r\n        if (!d.oneway && !matches) {\r\n            matches =\r\n                isMatched(desired, d.supported, data.matchVariables) &&\r\n                    isMatched(supported, d.desired, data.matchVariables);\r\n        }\r\n        if (matches) {\r\n            var distance = d.distance * 10;\r\n            if (data.paradigmLocales.indexOf(serializeLSR(desired)) > -1 !=\r\n                data.paradigmLocales.indexOf(serializeLSR(supported)) > -1) {\r\n                return distance - 1;\r\n            }\r\n            return distance;\r\n        }\r\n    }\r\n    throw new Error('No matching distance found');\r\n}\r\nexport function findMatchingDistance(desired, supported) {\r\n    var desiredLocale = new Intl.Locale(desired).maximize();\r\n    var supportedLocale = new Intl.Locale(supported).maximize();\r\n    var desiredLSR = {\r\n        language: desiredLocale.language,\r\n        script: desiredLocale.script || '',\r\n        region: desiredLocale.region || '',\r\n    };\r\n    var supportedLSR = {\r\n        language: supportedLocale.language,\r\n        script: supportedLocale.script || '',\r\n        region: supportedLocale.region || '',\r\n    };\r\n    var matchingDistance = 0;\r\n    var data = processData();\r\n    if (desiredLSR.language !== supportedLSR.language) {\r\n        matchingDistance += findMatchingDistanceForLSR({\r\n            language: desiredLocale.language,\r\n            script: '',\r\n            region: '',\r\n        }, {\r\n            language: supportedLocale.language,\r\n            script: '',\r\n            region: '',\r\n        }, data);\r\n    }\r\n    if (desiredLSR.script !== supportedLSR.script) {\r\n        matchingDistance += findMatchingDistanceForLSR({\r\n            language: desiredLocale.language,\r\n            script: desiredLSR.script,\r\n            region: '',\r\n        }, {\r\n            language: supportedLocale.language,\r\n            script: supportedLSR.script,\r\n            region: '',\r\n        }, data);\r\n    }\r\n    if (desiredLSR.region !== supportedLSR.region) {\r\n        matchingDistance += findMatchingDistanceForLSR(desiredLSR, supportedLSR, data);\r\n    }\r\n    return matchingDistance;\r\n}\r\nexport function findBestMatch(requestedLocales, supportedLocales, threshold) {\r\n    if (threshold === void 0) { threshold = DEFAULT_MATCHING_THRESHOLD; }\r\n    var lowestDistance = Infinity;\r\n    var result = {\r\n        matchedDesiredLocale: '',\r\n        distances: {},\r\n    };\r\n    requestedLocales.forEach(function (desired, i) {\r\n        if (!result.distances[desired]) {\r\n            result.distances[desired] = {};\r\n        }\r\n        supportedLocales.forEach(function (supported) {\r\n            // Add some weight to the distance based on the order of the supported locales\r\n            // Add penalty for the order of the requested locales, which currently is 0 since ECMA-402\r\n            // doesn't really have room for weighted locales like `en; q=0.1`\r\n            var distance = findMatchingDistance(desired, supported) + 0 + i * 40;\r\n            result.distances[desired][supported] = distance;\r\n            if (distance < lowestDistance) {\r\n                lowestDistance = distance;\r\n                result.matchedDesiredLocale = desired;\r\n                result.matchedSupportedLocale = supported;\r\n            }\r\n        });\r\n    });\r\n    if (lowestDistance >= threshold) {\r\n        result.matchedDesiredLocale = undefined;\r\n        result.matchedSupportedLocale = undefined;\r\n    }\r\n    return result;\r\n}\r\n", "import { UNICODE_EXTENSION_SEQUENCE_REGEX, findBestMatch } from './utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-bestfitmatcher\r\n * @param availableLocales\r\n * @param requestedLocales\r\n * @param getDefaultLocale\r\n */\r\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\r\n    var foundLocale;\r\n    var extension;\r\n    var noExtensionLocales = [];\r\n    var noExtensionLocaleMap = requestedLocales.reduce(function (all, l) {\r\n        var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\r\n        noExtensionLocales.push(noExtensionLocale);\r\n        all[noExtensionLocale] = l;\r\n        return all;\r\n    }, {});\r\n    var result = findBestMatch(noExtensionLocales, availableLocales);\r\n    if (result.matchedSupportedLocale && result.matchedDesiredLocale) {\r\n        foundLocale = result.matchedSupportedLocale;\r\n        extension =\r\n            noExtensionLocaleMap[result.matchedDesiredLocale].slice(result.matchedDesiredLocale.length) || undefined;\r\n    }\r\n    if (!foundLocale) {\r\n        return { locale: getDefaultLocale() };\r\n    }\r\n    return {\r\n        locale: foundLocale,\r\n        extension: extension,\r\n    };\r\n}\r\n", "import { invariant } from './utils';\r\nexport function CanonicalizeUValue(ukey, uvalue) {\r\n    // TODO: Implement algorithm for CanonicalizeUValue per https://tc39.es/ecma402/#sec-canonicalizeuvalue\r\n    var lowerValue = uvalue.toLowerCase();\r\n    invariant(ukey !== undefined, \"ukey must be defined\");\r\n    var canonicalized = lowerValue;\r\n    return canonicalized;\r\n}\r\n", "export function CanonicalizeUnicodeLocaleId(locale) {\r\n    return Intl.getCanonicalLocales(locale)[0];\r\n}\r\n", "import { CanonicalizeUnicodeLocaleId } from './CanonicalizeUnicodeLocaleId';\r\nimport { invariant } from './utils';\r\nexport function InsertUnicodeExtensionAndCanonicalize(locale, attributes, keywords) {\r\n    invariant(locale.indexOf('-u-') === -1, 'Expected locale to not have a Unicode locale extension');\r\n    var extension = '-u';\r\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\r\n        var attr = attributes_1[_i];\r\n        extension += \"-\".concat(attr);\r\n    }\r\n    for (var _a = 0, keywords_1 = keywords; _a < keywords_1.length; _a++) {\r\n        var kw = keywords_1[_a];\r\n        var key = kw.key, value = kw.value;\r\n        extension += \"-\".concat(key);\r\n        if (value !== '') {\r\n            extension += \"-\".concat(value);\r\n        }\r\n    }\r\n    if (extension === '-u') {\r\n        return CanonicalizeUnicodeLocaleId(locale);\r\n    }\r\n    var privateIndex = locale.indexOf('-x-');\r\n    var newLocale;\r\n    if (privateIndex === -1) {\r\n        newLocale = locale + extension;\r\n    }\r\n    else {\r\n        var preExtension = locale.slice(0, privateIndex);\r\n        var postExtension = locale.slice(privateIndex);\r\n        newLocale = preExtension + extension + postExtension;\r\n    }\r\n    return CanonicalizeUnicodeLocaleId(newLocale);\r\n}\r\n", "/**\r\n * https://tc39.es/ecma402/#sec-bestavailablelocale\r\n * @param availableLocales\r\n * @param locale\r\n */\r\nexport function BestAvailableLocale(availableLocales, locale) {\r\n    var candidate = locale;\r\n    while (true) {\r\n        if (availableLocales.indexOf(candidate) > -1) {\r\n            return candidate;\r\n        }\r\n        var pos = candidate.lastIndexOf('-');\r\n        if (!~pos) {\r\n            return undefined;\r\n        }\r\n        if (pos >= 2 && candidate[pos - 2] === '-') {\r\n            pos -= 2;\r\n        }\r\n        candidate = candidate.slice(0, pos);\r\n    }\r\n}\r\n", "import { BestAvailableLocale } from './BestAvailableLocale';\r\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-lookupmatcher\r\n * @param availableLocales\r\n * @param requestedLocales\r\n * @param getDefaultLocale\r\n */\r\nexport function LookupMatcher(availableLocales, requestedLocales, getDefaultLocale) {\r\n    var result = { locale: '' };\r\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\r\n        var locale = requestedLocales_1[_i];\r\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\r\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\r\n        if (availableLocale) {\r\n            result.locale = availableLocale;\r\n            if (locale !== noExtensionLocale) {\r\n                result.extension = locale.slice(noExtensionLocale.length, locale.length);\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    result.locale = getDefaultLocale();\r\n    return result;\r\n}\r\n", "import { invariant } from './utils';\r\nexport function UnicodeExtensionComponents(extension) {\r\n    invariant(extension === extension.toLowerCase(), 'Expected extension to be lowercase');\r\n    invariant(extension.slice(0, 3) === '-u-', 'Expected extension to be a Unicode locale extension');\r\n    var attributes = [];\r\n    var keywords = [];\r\n    var keyword;\r\n    var size = extension.length;\r\n    var k = 3;\r\n    while (k < size) {\r\n        var e = extension.indexOf('-', k);\r\n        var len = void 0;\r\n        if (e === -1) {\r\n            len = size - k;\r\n        }\r\n        else {\r\n            len = e - k;\r\n        }\r\n        var subtag = extension.slice(k, k + len);\r\n        invariant(len >= 2, 'Expected a subtag to have at least 2 characters');\r\n        if (keyword === undefined && len != 2) {\r\n            if (attributes.indexOf(subtag) === -1) {\r\n                attributes.push(subtag);\r\n            }\r\n        }\r\n        else if (len === 2) {\r\n            keyword = { key: subtag, value: '' };\r\n            if (keywords.find(function (k) { return k.key === (keyword === null || keyword === void 0 ? void 0 : keyword.key); }) === undefined) {\r\n                keywords.push(keyword);\r\n            }\r\n        }\r\n        else if ((keyword === null || keyword === void 0 ? void 0 : keyword.value) === '') {\r\n            keyword.value = subtag;\r\n        }\r\n        else {\r\n            invariant(keyword !== undefined, 'Expected keyword to be defined');\r\n            keyword.value += '-' + subtag;\r\n        }\r\n        k += len + 1;\r\n    }\r\n    return { attributes: attributes, keywords: keywords };\r\n}\r\n", "import { BestFitMatcher } from './BestFitMatcher';\r\nimport { CanonicalizeUValue } from './CanonicalizeUValue';\r\nimport { InsertUnicodeExtensionAndCanonicalize } from './InsertUnicodeExtensionAndCanonicalize';\r\nimport { LookupMatcher } from './LookupMatcher';\r\nimport { UnicodeExtensionComponents } from './UnicodeExtensionComponents';\r\nimport { invariant } from './utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-resolvelocale\r\n */\r\nexport function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\r\n    var _a;\r\n    var matcher = options.localeMatcher;\r\n    var r;\r\n    if (matcher === 'lookup') {\r\n        r = LookupMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);\r\n    }\r\n    else {\r\n        r = BestFitMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);\r\n    }\r\n    if (r == null) {\r\n        r = {\r\n            locale: getDefaultLocale(),\r\n            extension: '',\r\n        };\r\n    }\r\n    var foundLocale = r.locale;\r\n    var foundLocaleData = localeData[foundLocale];\r\n    // TODO: We can't really guarantee that the locale data is available\r\n    // invariant(\r\n    //   foundLocaleData !== undefined,\r\n    //   `Missing locale data for ${foundLocale}`\r\n    // )\r\n    var result = { locale: 'en', dataLocale: foundLocale };\r\n    var components;\r\n    var keywords;\r\n    if (r.extension) {\r\n        components = UnicodeExtensionComponents(r.extension);\r\n        keywords = components.keywords;\r\n    }\r\n    else {\r\n        keywords = [];\r\n    }\r\n    var supportedKeywords = [];\r\n    var _loop_1 = function (key) {\r\n        // TODO: Shouldn't default to empty array, see TODO above\r\n        var keyLocaleData = (_a = foundLocaleData === null || foundLocaleData === void 0 ? void 0 : foundLocaleData[key]) !== null && _a !== void 0 ? _a : [];\r\n        invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\r\n        var value = keyLocaleData[0];\r\n        invariant(value === undefined || typeof value === 'string', \"value must be a string or undefined\");\r\n        var supportedKeyword = void 0;\r\n        var entry = keywords.find(function (k) { return k.key === key; });\r\n        if (entry) {\r\n            var requestedValue = entry.value;\r\n            if (requestedValue !== '') {\r\n                if (keyLocaleData.indexOf(requestedValue) > -1) {\r\n                    value = requestedValue;\r\n                    supportedKeyword = {\r\n                        key: key,\r\n                        value: value,\r\n                    };\r\n                }\r\n            }\r\n            else if (keyLocaleData.indexOf('true') > -1) {\r\n                value = 'true';\r\n                supportedKeyword = {\r\n                    key: key,\r\n                    value: value,\r\n                };\r\n            }\r\n        }\r\n        var optionsValue = options[key];\r\n        invariant(optionsValue == null || typeof optionsValue === 'string', \"optionsValue must be a string or undefined\");\r\n        if (typeof optionsValue === 'string') {\r\n            var ukey = key.toLowerCase();\r\n            optionsValue = CanonicalizeUValue(ukey, optionsValue);\r\n            if (optionsValue === '') {\r\n                optionsValue = 'true';\r\n            }\r\n        }\r\n        if (optionsValue !== value && keyLocaleData.indexOf(optionsValue) > -1) {\r\n            value = optionsValue;\r\n            supportedKeyword = undefined;\r\n        }\r\n        if (supportedKeyword) {\r\n            supportedKeywords.push(supportedKeyword);\r\n        }\r\n        result[key] = value;\r\n    };\r\n    for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\r\n        var key = relevantExtensionKeys_1[_i];\r\n        _loop_1(key);\r\n    }\r\n    var supportedAttributes = [];\r\n    if (supportedKeywords.length > 0) {\r\n        supportedAttributes = [];\r\n        foundLocale = InsertUnicodeExtensionAndCanonicalize(foundLocale, supportedAttributes, supportedKeywords);\r\n    }\r\n    result.locale = foundLocale;\r\n    return result;\r\n}\r\n", "import { BestAvailableLocale } from './BestAvailableLocale';\r\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\r\n * @param availableLocales\r\n * @param requestedLocales\r\n */\r\nexport function LookupSupportedLocales(availableLocales, requestedLocales) {\r\n    var subset = [];\r\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\r\n        var locale = requestedLocales_1[_i];\r\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\r\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\r\n        if (availableLocale) {\r\n            subset.push(availableLocale);\r\n        }\r\n    }\r\n    return subset;\r\n}\r\n", "import { CanonicalizeLocaleList } from './abstract/CanonicalizeLocaleList';\r\nimport { ResolveLocale } from './abstract/ResolveLocale';\r\nexport function match(requestedLocales, availableLocales, defaultLocale, opts) {\r\n    return ResolveLocale(availableLocales, CanonicalizeLocaleList(requestedLocales), {\r\n        localeMatcher: (opts === null || opts === void 0 ? void 0 : opts.algorithm) || 'best fit',\r\n    }, [], {}, function () { return defaultLocale; }).locale;\r\n}\r\nexport { LookupSupportedLocales } from './abstract/LookupSupportedLocales';\r\nexport { ResolveLocale } from './abstract/ResolveLocale';\r\n", "import { DefaultNumberOption } from '../DefaultNumberOption';\r\nimport { GetNumberOption } from '../GetNumberOption';\r\nimport { GetOption } from '../GetOption';\r\nimport { invariant } from '../utils';\r\n//IMPL: Valid rounding increments as per implementation\r\nvar VALID_ROUNDING_INCREMENTS = new Set([\r\n    1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000, 2500, 5000,\r\n]);\r\n/**\r\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\r\n */\r\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\r\n    // 1. Let mnid be ? GetNumberOption(opts, \"minimumIntegerDigits\", 1, 21, 1).\r\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\r\n    // 2. Let mnfd be opts.[[MinimumFractionDigits]].\r\n    var mnfd = opts.minimumFractionDigits;\r\n    // 3. Let mxfd be opts.[[MaximumFractionDigits]].\r\n    var mxfd = opts.maximumFractionDigits;\r\n    // 4. Let mnsd be opts.[[MinimumSignificantDigits]].\r\n    var mnsd = opts.minimumSignificantDigits;\r\n    // 5. Let mxsd be opts.[[MaximumSignificantDigits]].\r\n    var mxsd = opts.maximumSignificantDigits;\r\n    // 6. Set internalSlots.[[MinimumIntegerDigits]] to mnid.\r\n    internalSlots.minimumIntegerDigits = mnid;\r\n    // 7. Let roundingIncrement be ? GetNumberOption(opts, \"roundingIncrement\", 1, 5000, 1).\r\n    var roundingIncrement = GetNumberOption(opts, 'roundingIncrement', 1, 5000, 1);\r\n    // 8. If roundingIncrement is not an element of the list {1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000, 2500, 5000}, throw a RangeError exception.\r\n    invariant(VALID_ROUNDING_INCREMENTS.has(roundingIncrement), \"Invalid rounding increment value: \".concat(roundingIncrement, \".\\nValid values are \").concat(Array.from(VALID_ROUNDING_INCREMENTS).join(', '), \".\"));\r\n    // 9. Let roundingMode be ? GetOption(opts, \"roundingMode\", \"string\", « \"ceil\", \"floor\", \"expand\", \"trunc\", \"halfCeil\", \"halfFloor\", \"halfExpand\", \"halfTrunc\", \"halfEven\" », \"halfExpand\").\r\n    var roundingMode = GetOption(opts, 'roundingMode', 'string', [\r\n        'ceil',\r\n        'floor',\r\n        'expand',\r\n        'trunc',\r\n        'halfCeil',\r\n        'halfFloor',\r\n        'halfExpand',\r\n        'halfTrunc',\r\n        'halfEven',\r\n    ], 'halfExpand');\r\n    // 10. Let roundingPriority be ? GetOption(opts, \"roundingPriority\", \"string\", « \"auto\", \"morePrecision\", \"lessPrecision\" », \"auto\").\r\n    var roundingPriority = GetOption(opts, 'roundingPriority', 'string', ['auto', 'morePrecision', 'lessPrecision'], 'auto');\r\n    // 11. Let trailingZeroDisplay be ? GetOption(opts, \"trailingZeroDisplay\", \"string\", « \"auto\", \"stripIfInteger\" », \"auto\").\r\n    var trailingZeroDisplay = GetOption(opts, 'trailingZeroDisplay', 'string', ['auto', 'stripIfInteger'], 'auto');\r\n    // 12. If roundingIncrement is not 1, then\r\n    if (roundingIncrement !== 1) {\r\n        // 12.a. Set mxfdDefault to mnfdDefault.\r\n        mxfdDefault = mnfdDefault;\r\n    }\r\n    // 13. Set internalSlots.[[RoundingIncrement]] to roundingIncrement.\r\n    internalSlots.roundingIncrement = roundingIncrement;\r\n    // 14. Set internalSlots.[[RoundingMode]] to roundingMode.\r\n    internalSlots.roundingMode = roundingMode;\r\n    // 15. Set internalSlots.[[TrailingZeroDisplay]] to trailingZeroDisplay.\r\n    internalSlots.trailingZeroDisplay = trailingZeroDisplay;\r\n    // 16. Let hasSd be true if mnsd is not undefined or mxsd is not undefined; otherwise, let hasSd be false.\r\n    var hasSd = mnsd !== undefined || mxsd !== undefined;\r\n    // 17. Let hasFd be true if mnfd is not undefined or mxfd is not undefined; otherwise, let hasFd be false.\r\n    var hasFd = mnfd !== undefined || mxfd !== undefined;\r\n    // 18. Let needSd be true.\r\n    var needSd = true;\r\n    // 19. Let needFd be true.\r\n    var needFd = true;\r\n    // 20. If roundingPriority is \"auto\", then\r\n    if (roundingPriority === 'auto') {\r\n        // 20.a. Set needSd to hasSd.\r\n        needSd = hasSd;\r\n        // 20.b. If hasSd is true or hasFd is false and notation is \"compact\", then\r\n        if (hasSd || (!hasFd && notation === 'compact')) {\r\n            // 20.b.i. Set needFd to false.\r\n            needFd = false;\r\n        }\r\n    }\r\n    // 21. If needSd is true, then\r\n    if (needSd) {\r\n        // 21.a. If hasSd is true, then\r\n        if (hasSd) {\r\n            // 21.a.i. Set internalSlots.[[MinimumSignificantDigits]] to ? DefaultNumberOption(mnsd, 1, 21, 1).\r\n            internalSlots.minimumSignificantDigits = DefaultNumberOption(mnsd, 1, 21, 1);\r\n            // 21.a.ii. Set internalSlots.[[MaximumSignificantDigits]] to ? DefaultNumberOption(mxsd, internalSlots.[[MinimumSignificantDigits]], 21, 21).\r\n            internalSlots.maximumSignificantDigits = DefaultNumberOption(mxsd, internalSlots.minimumSignificantDigits, 21, 21);\r\n        }\r\n        else {\r\n            // 21.b. Else,\r\n            // 21.b.i. Set internalSlots.[[MinimumSignificantDigits]] to 1.\r\n            internalSlots.minimumSignificantDigits = 1;\r\n            // 21.b.ii. Set internalSlots.[[MaximumSignificantDigits]] to 21.\r\n            internalSlots.maximumSignificantDigits = 21;\r\n        }\r\n    }\r\n    // 22. If needFd is true, then\r\n    if (needFd) {\r\n        // 22.a. If hasFd is true, then\r\n        if (hasFd) {\r\n            // 22.a.i. Set mnfd to ? DefaultNumberOption(mnfd, 0, 100, undefined).\r\n            mnfd = DefaultNumberOption(mnfd, 0, 100, undefined);\r\n            // 22.a.ii. Set mxfd to ? DefaultNumberOption(mxfd, 0, 100, undefined).\r\n            mxfd = DefaultNumberOption(mxfd, 0, 100, undefined);\r\n            // 22.a.iii. If mnfd is undefined, then\r\n            if (mnfd === undefined) {\r\n                // 22.a.iii.1. Assert: mxfd is not undefined.\r\n                invariant(mxfd !== undefined, 'maximumFractionDigits must be defined');\r\n                // 22.a.iii.2. Set mnfd to min(mnfdDefault, mxfd).\r\n                mnfd = Math.min(mnfdDefault, mxfd);\r\n            }\r\n            else if (mxfd === undefined) {\r\n                // 22.a.iv. Else if mxfd is undefined, then\r\n                // 22.a.iv.1. Set mxfd to max(mxfdDefault, mnfd).\r\n                mxfd = Math.max(mxfdDefault, mnfd);\r\n            }\r\n            else if (mnfd > mxfd) {\r\n                // 22.a.v. Else if mnfd > mxfd, throw a RangeError exception.\r\n                throw new RangeError(\"Invalid range, \".concat(mnfd, \" > \").concat(mxfd));\r\n            }\r\n            // 22.a.vi. Set internalSlots.[[MinimumFractionDigits]] to mnfd.\r\n            internalSlots.minimumFractionDigits = mnfd;\r\n            // 22.a.vii. Set internalSlots.[[MaximumFractionDigits]] to mxfd.\r\n            internalSlots.maximumFractionDigits = mxfd;\r\n        }\r\n        else {\r\n            // 22.b. Else,\r\n            // 22.b.i. Set internalSlots.[[MinimumFractionDigits]] to mnfdDefault.\r\n            internalSlots.minimumFractionDigits = mnfdDefault;\r\n            // 22.b.ii. Set internalSlots.[[MaximumFractionDigits]] to mxfdDefault.\r\n            internalSlots.maximumFractionDigits = mxfdDefault;\r\n        }\r\n    }\r\n    // 23. If needSd is false and needFd is false, then\r\n    if (!needSd && !needFd) {\r\n        // 23.a. Set internalSlots.[[MinimumFractionDigits]] to 0.\r\n        internalSlots.minimumFractionDigits = 0;\r\n        // 23.b. Set internalSlots.[[MaximumFractionDigits]] to 0.\r\n        internalSlots.maximumFractionDigits = 0;\r\n        // 23.c. Set internalSlots.[[MinimumSignificantDigits]] to 1.\r\n        internalSlots.minimumSignificantDigits = 1;\r\n        // 23.d. Set internalSlots.[[MaximumSignificantDigits]] to 2.\r\n        internalSlots.maximumSignificantDigits = 2;\r\n        // 23.e. Set internalSlots.[[RoundingType]] to \"morePrecision\".\r\n        internalSlots.roundingType = 'morePrecision';\r\n        // 23.f. Set internalSlots.[[RoundingPriority]] to \"morePrecision\".\r\n        internalSlots.roundingPriority = 'morePrecision';\r\n    }\r\n    else if (roundingPriority === 'morePrecision') {\r\n        // 24. Else if roundingPriority is \"morePrecision\", then\r\n        // 24.a. Set internalSlots.[[RoundingType]] to \"morePrecision\".\r\n        internalSlots.roundingType = 'morePrecision';\r\n        // 24.b. Set internalSlots.[[RoundingPriority]] to \"morePrecision\".\r\n        internalSlots.roundingPriority = 'morePrecision';\r\n    }\r\n    else if (roundingPriority === 'lessPrecision') {\r\n        // 25. Else if roundingPriority is \"lessPrecision\", then\r\n        // 25.a. Set internalSlots.[[RoundingType]] to \"lessPrecision\".\r\n        internalSlots.roundingType = 'lessPrecision';\r\n        // 25.b. Set internalSlots.[[RoundingPriority]] to \"lessPrecision\".\r\n        internalSlots.roundingPriority = 'lessPrecision';\r\n    }\r\n    else if (hasSd) {\r\n        // 26. Else if hasSd is true, then\r\n        // 26.a. Set internalSlots.[[RoundingType]] to \"significantDigits\".\r\n        internalSlots.roundingType = 'significantDigits';\r\n        // 26.b. Set internalSlots.[[RoundingPriority]] to \"auto\".\r\n        internalSlots.roundingPriority = 'auto';\r\n    }\r\n    else {\r\n        // 27. Else,\r\n        // 27.a. Set internalSlots.[[RoundingType]] to \"fractionDigits\".\r\n        internalSlots.roundingType = 'fractionDigits';\r\n        // 27.b. Set internalSlots.[[RoundingPriority]] to \"auto\".\r\n        internalSlots.roundingPriority = 'auto';\r\n    }\r\n    // 28. If roundingIncrement is not 1, then\r\n    if (roundingIncrement !== 1) {\r\n        // 28.a. Assert: internalSlots.[[RoundingType]] is \"fractionDigits\".\r\n        invariant(internalSlots.roundingType === 'fractionDigits', 'Invalid roundingType', TypeError);\r\n        // 28.b. Assert: internalSlots.[[MaximumFractionDigits]] is equal to internalSlots.[[MinimumFractionDigits]].\r\n        invariant(internalSlots.maximumFractionDigits ===\r\n            internalSlots.minimumFractionDigits, 'With roundingIncrement > 1, maximumFractionDigits and minimumFractionDigits must be equal.', RangeError);\r\n    }\r\n}\r\n", "import { GetOption } from '../GetOption';\r\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\r\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\r\nimport { invariant } from '../utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\r\n */\r\nexport function SetNumberFormatUnitOptions(internalSlots, options) {\r\n    if (options === void 0) { options = Object.create(null); }\r\n    // 1. Let style be ? GetOption(options, \"style\", \"string\", « \"decimal\", \"percent\", \"currency\", \"unit\" », \"decimal\").\r\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\r\n    // 2. Set internalSlots.[[Style]] to style.\r\n    internalSlots.style = style;\r\n    // 3. Let currency be ? GetOption(options, \"currency\", \"string\", undefined, undefined).\r\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\r\n    // 4. If currency is not undefined, then\r\n    // a. If the result of IsWellFormedCurrencyCode(currency) is false, throw a RangeError exception.\r\n    invariant(currency === undefined || IsWellFormedCurrencyCode(currency), 'Malformed currency code', RangeError);\r\n    // 5. If style is \"currency\" and currency is undefined, throw a TypeError exception.\r\n    invariant(style !== 'currency' || currency !== undefined, 'currency cannot be undefined', TypeError);\r\n    // 6. Let currencyDisplay be ? GetOption(options, \"currencyDisplay\", \"string\", « \"code\", \"symbol\", \"narrowSymbol\", \"name\" », \"symbol\").\r\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\r\n    // 7. Let currencySign be ? GetOption(options, \"currencySign\", \"string\", « \"standard\", \"accounting\" », \"standard\").\r\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\r\n    // 8. Let unit be ? GetOption(options, \"unit\", \"string\", undefined, undefined).\r\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\r\n    // 9. If unit is not undefined, then\r\n    // a. If the result of IsWellFormedUnitIdentifier(unit) is false, throw a RangeError exception.\r\n    invariant(unit === undefined || IsWellFormedUnitIdentifier(unit), 'Invalid unit argument for Intl.NumberFormat()', RangeError);\r\n    // 10. If style is \"unit\" and unit is undefined, throw a TypeError exception.\r\n    invariant(style !== 'unit' || unit !== undefined, 'unit cannot be undefined', TypeError);\r\n    // 11. Let unitDisplay be ? GetOption(options, \"unitDisplay\", \"string\", « \"short\", \"narrow\", \"long\" », \"short\").\r\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\r\n    // 12. If style is \"currency\", then\r\n    if (style === 'currency') {\r\n        // a. Set internalSlots.[[Currency]] to the result of converting currency to upper case as specified in 6.1.\r\n        internalSlots.currency = currency.toUpperCase();\r\n        // b. Set internalSlots.[[CurrencyDisplay]] to currencyDisplay.\r\n        internalSlots.currencyDisplay = currencyDisplay;\r\n        // c. Set internalSlots.[[CurrencySign]] to currencySign.\r\n        internalSlots.currencySign = currencySign;\r\n    }\r\n    // 13. If style is \"unit\", then\r\n    if (style === 'unit') {\r\n        // a. Set internalSlots.[[Unit]] to unit.\r\n        internalSlots.unit = unit;\r\n        // b. Set internalSlots.[[UnitDisplay]] to unitDisplay.\r\n        internalSlots.unitDisplay = unitDisplay;\r\n    }\r\n}\r\n", "import { ResolveLocale } from '@formatjs/intl-localematcher';\r\nimport { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\r\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\r\nimport { GetOption } from '../GetOption';\r\nimport { GetStringOrBooleanOption } from '../GetStringOrBooleanOption';\r\nimport { invariant } from '../utils';\r\nimport { CurrencyDigits } from './CurrencyDigits';\r\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\r\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\r\n/**\r\n * https://tc39.es/ecma402/#sec-initializenumberformat\r\n */\r\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\r\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\r\n    var requestedLocales = CanonicalizeLocaleList(locales);\r\n    var options = CoerceOptionsToObject(opts);\r\n    var opt = Object.create(null);\r\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\r\n    opt.localeMatcher = matcher;\r\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\r\n    if (numberingSystem !== undefined &&\r\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\r\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\r\n        // throw a RangeError exception.\r\n        throw RangeError(\"Invalid numberingSystems: \".concat(numberingSystem));\r\n    }\r\n    opt.nu = numberingSystem;\r\n    var r = ResolveLocale(Array.from(availableLocales), requestedLocales, opt, \r\n    // [[RelevantExtensionKeys]] slot, which is a constant\r\n    ['nu'], localeData, getDefaultLocale);\r\n    var dataLocaleData = localeData[r.dataLocale];\r\n    invariant(!!dataLocaleData, \"Missing locale data for \".concat(r.dataLocale));\r\n    var internalSlots = getInternalSlots(nf);\r\n    internalSlots.locale = r.locale;\r\n    internalSlots.dataLocale = r.dataLocale;\r\n    internalSlots.numberingSystem = r.nu;\r\n    internalSlots.dataLocaleData = dataLocaleData;\r\n    SetNumberFormatUnitOptions(internalSlots, options);\r\n    var style = internalSlots.style;\r\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\r\n    internalSlots.notation = notation;\r\n    var mnfdDefault;\r\n    var mxfdDefault;\r\n    if (style === 'currency' && notation === 'standard') {\r\n        var currency = internalSlots.currency;\r\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\r\n        mnfdDefault = cDigits;\r\n        mxfdDefault = cDigits;\r\n    }\r\n    else {\r\n        mnfdDefault = 0;\r\n        mxfdDefault = style === 'percent' ? 0 : 3;\r\n    }\r\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\r\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\r\n    var defaultUseGrouping = 'auto';\r\n    if (notation === 'compact') {\r\n        internalSlots.compactDisplay = compactDisplay;\r\n        defaultUseGrouping = 'min2';\r\n    }\r\n    var useGrouping = GetStringOrBooleanOption(options, 'useGrouping', ['min2', 'auto', 'always'], 'always', false, defaultUseGrouping);\r\n    internalSlots.useGrouping = useGrouping;\r\n    var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero', 'negative'], 'auto');\r\n    internalSlots.signDisplay = signDisplay;\r\n    return nf;\r\n}\r\n", "import { invariant } from './utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-partitionpattern\r\n * @param pattern\r\n */\r\nexport function PartitionPattern(pattern) {\r\n    var result = [];\r\n    var beginIndex = pattern.indexOf('{');\r\n    var endIndex = 0;\r\n    var nextIndex = 0;\r\n    var length = pattern.length;\r\n    while (beginIndex < pattern.length && beginIndex > -1) {\r\n        endIndex = pattern.indexOf('}', beginIndex);\r\n        invariant(endIndex > beginIndex, \"Invalid pattern \".concat(pattern));\r\n        if (beginIndex > nextIndex) {\r\n            result.push({\r\n                type: 'literal',\r\n                value: pattern.substring(nextIndex, beginIndex),\r\n            });\r\n        }\r\n        result.push({\r\n            type: pattern.substring(beginIndex + 1, endIndex),\r\n            value: undefined,\r\n        });\r\n        nextIndex = endIndex + 1;\r\n        beginIndex = pattern.indexOf('{', nextIndex);\r\n    }\r\n    if (nextIndex < length) {\r\n        result.push({\r\n            type: 'literal',\r\n            value: pattern.substring(nextIndex, length),\r\n        });\r\n    }\r\n    return result;\r\n}\r\n", "import { LookupSupportedLocales } from '@formatjs/intl-localematcher';\r\nimport { ToObject } from './262';\r\nimport { GetOption } from './GetOption';\r\n/**\r\n * https://tc39.es/ecma402/#sec-supportedlocales\r\n * @param availableLocales\r\n * @param requestedLocales\r\n * @param options\r\n */\r\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\r\n    var matcher = 'best fit';\r\n    if (options !== undefined) {\r\n        options = ToObject(options);\r\n        matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\r\n    }\r\n    if (matcher === 'best fit') {\r\n        return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\r\n    }\r\n    return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\r\n}\r\n", "import { __extends } from \"tslib\";\r\nvar MissingLocaleDataError = /** @class */ (function (_super) {\r\n    __extends(MissingLocaleDataError, _super);\r\n    function MissingLocaleDataError() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'MISSING_LOCALE_DATA';\r\n        return _this;\r\n    }\r\n    return MissingLocaleDataError;\r\n}(Error));\r\nexport function isMissingLocaleDataError(e) {\r\n    return e.type === 'MISSING_LOCALE_DATA';\r\n}\r\n", "export var RangePatternType;\r\n(function (RangePatternType) {\r\n    RangePatternType[\"startRange\"] = \"startRange\";\r\n    RangePatternType[\"shared\"] = \"shared\";\r\n    RangePatternType[\"endRange\"] = \"endRange\";\r\n})(RangePatternType || (RangePatternType = {}));\r\n", "export {};\r\n", "export {};\r\n", "export {};\r\n", "export {};\r\n", "export {};\r\n", "import Decimal from 'decimal.js';\r\nimport { ToPrimitive } from './262';\r\nexport function ToIntlMathematicalValue(input) {\r\n    var primValue = ToPrimitive(input, 'number');\r\n    if (typeof primValue === 'bigint') {\r\n        return new Decimal(primValue);\r\n    }\r\n    // IMPL\r\n    if (primValue === undefined) {\r\n        return new Decimal(NaN);\r\n    }\r\n    if (primValue === true) {\r\n        return new Decimal(1);\r\n    }\r\n    if (primValue === false) {\r\n        return new Decimal(0);\r\n    }\r\n    if (primValue === null) {\r\n        return new Decimal(0);\r\n    }\r\n    try {\r\n        return new Decimal(primValue);\r\n    }\r\n    catch (e) {\r\n        return new Decimal(NaN);\r\n    }\r\n}\r\n", "export * from './CanonicalizeLocaleList';\r\nexport * from './CanonicalizeTimeZoneName';\r\nexport * from './CoerceOptionsToObject';\r\nexport * from './GetNumberOption';\r\nexport * from './GetOption';\r\nexport * from './GetOptionsObject';\r\nexport * from './GetStringOrBooleanOption';\r\nexport * from './IsSanctionedSimpleUnitIdentifier';\r\nexport * from './IsValidTimeZoneName';\r\nexport * from './IsWellFormedCurrencyCode';\r\nexport * from './IsWellFormedUnitIdentifier';\r\nexport * from './NumberFormat/ApplyUnsignedRoundingMode';\r\nexport * from './NumberFormat/CollapseNumberRange';\r\nexport * from './NumberFormat/ComputeExponent';\r\nexport * from './NumberFormat/ComputeExponentForMagnitude';\r\nexport * from './NumberFormat/CurrencyDigits';\r\nexport { default as _formatToParts } from './NumberFormat/format_to_parts';\r\nexport * from './NumberFormat/FormatApproximately';\r\nexport * from './NumberFormat/FormatNumeric';\r\nexport * from './NumberFormat/FormatNumericRange';\r\nexport * from './NumberFormat/FormatNumericRangeToParts';\r\nexport * from './NumberFormat/FormatNumericToParts';\r\nexport * from './NumberFormat/FormatNumericToString';\r\nexport * from './NumberFormat/GetUnsignedRoundingMode';\r\nexport * from './NumberFormat/InitializeNumberFormat';\r\nexport * from './NumberFormat/PartitionNumberPattern';\r\nexport * from './NumberFormat/PartitionNumberRangePattern';\r\nexport * from './NumberFormat/SetNumberFormatDigitOptions';\r\nexport * from './NumberFormat/SetNumberFormatUnitOptions';\r\nexport * from './NumberFormat/ToRawFixed';\r\nexport * from './NumberFormat/ToRawPrecision';\r\nexport * from './PartitionPattern';\r\nexport * from './SupportedLocales';\r\nexport { createDataProperty, defineProperty, getInternalSlot, getMultiInternalSlots, isLiteralPart, setInternalSlot, setMultiInternalSlots, } from './utils';\r\nexport * from './262';\r\nexport { isMissingLocaleDataError } from './data';\r\nexport * from './types/date-time';\r\nexport * from './types/displaynames';\r\nexport * from './types/list';\r\nexport * from './types/number';\r\nexport * from './types/plural-rules';\r\nexport * from './types/relative-time';\r\nexport { createMemoizedDateTimeFormat, createMemoizedListFormat, createMemoizedLocale, createMemoizedNumberFormat, createMemoizedPluralRules, invariant, } from './utils';\r\nexport { ZERO } from './constants';\r\nexport { ToIntlMathematicalValue } from './ToIntlMathematicalValue';\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SegmentationRules = void 0;\r\n/* @generated */\r\n// prettier-ignore\r\nexports.SegmentationRules = {\r\n    \"de\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [\r\n                \"Port.\",\r\n                \"Alt.\",\r\n                \"Di.\",\r\n                \"Ges.\",\r\n                \"frz.\",\r\n                \"entspr.\",\r\n                \"Gebr.\",\r\n                \"erw.\",\r\n                \"Frl.\",\r\n                \"Inh.\",\r\n                \"k.u.k.\",\r\n                \"Ca.\",\r\n                \"J.D.\",\r\n                \"Ausg.\",\r\n                \"evtl.\",\r\n                \"So.\",\r\n                \"i.B.\",\r\n                \"s.a.\",\r\n                \"kgl.\",\r\n                \"Sept.\",\r\n                \"o.B.\",\r\n                \"Sa.\",\r\n                \"ev.\",\r\n                \"Dez.\",\r\n                \"am.\",\r\n                \"i.R.\",\r\n                \"eigtl.\",\r\n                \"i.J.\",\r\n                \"u.U.\",\r\n                \"G.\",\r\n                \"z.Hd.\",\r\n                \"u.A.w.g.\",\r\n                \"Kl.\",\r\n                \"Spezif.\",\r\n                \"Obj.\",\r\n                \"Ing.\",\r\n                \"D. h.\",\r\n                \"Folg.\",\r\n                \"Akt.\",\r\n                \"i.A.\",\r\n                \"Msp.\",\r\n                \"U.U.\",\r\n                \"Chr.\",\r\n                \"R.\",\r\n                \"Einh.\",\r\n                \"schwäb.\",\r\n                \"Vgl.\",\r\n                \"Aug.\",\r\n                \"Dipl.-Ing.\",\r\n                \"W.\",\r\n                \"B.\",\r\n                \"U. U.\",\r\n                \"J.\",\r\n                \"Fa.\",\r\n                \"Mo.\",\r\n                \"n.u.Z.\",\r\n                \"Op.\",\r\n                \"Mrd.\",\r\n                \"e.h.\",\r\n                \"Hr.\",\r\n                \"Hrn.\",\r\n                \"Ztr.\",\r\n                \"k. u. k.\",\r\n                \"Bibl.\",\r\n                \"d.Ä.\",\r\n                \"b.\",\r\n                \"M.\",\r\n                \"i.H.\",\r\n                \"v.R.w.\",\r\n                \"o.A.\",\r\n                \"St.\",\r\n                \"Dr.\",\r\n                \"Fn.\",\r\n                \"Abs.\",\r\n                \"Rd.\",\r\n                \"Dtzd.\",\r\n                \"Jahrh.\",\r\n                \"Z.\",\r\n                \"Std.\",\r\n                \"n. Chr.\",\r\n                \"möbl.\",\r\n                \"tägl.\",\r\n                \"gest.\",\r\n                \"gesch.\",\r\n                \"z.B.\",\r\n                \"Hbf.\",\r\n                \"Abt.\",\r\n                \"A.M.\",\r\n                \"e.Wz.\",\r\n                \"v.T.\",\r\n                \"Nov.\",\r\n                \"z.\",\r\n                \"Prot.\",\r\n                \"U.S.\",\r\n                \"Wg.\",\r\n                \"u.v.a.\",\r\n                \"Adr.\",\r\n                \"App.\",\r\n                \"ggf.\",\r\n                \"ggfs.\",\r\n                \"Jan.\",\r\n                \"O.\",\r\n                \"Rel.\",\r\n                \"od.\",\r\n                \"Pfd.\",\r\n                \"a.a.O.\",\r\n                \"p.Adr.\",\r\n                \"P.\",\r\n                \"Gem.\",\r\n                \"v. Chr.\",\r\n                \"Art.\",\r\n                \"z.Z.\",\r\n                \"S.A.\",\r\n                \"i.V.\",\r\n                \"verh.\",\r\n                \"Ausschl.\",\r\n                \"m.W.\",\r\n                \"Dir.\",\r\n                \"Verf.\",\r\n                \"Sek.\",\r\n                \"r.\",\r\n                \"Chin.\",\r\n                \"Feb.\",\r\n                \"Int.\",\r\n                \"Sep.\",\r\n                \"Gesch.\",\r\n                \"schweiz.\",\r\n                \"Bed.\",\r\n                \"a.Rh.\",\r\n                \"jew.\",\r\n                \"vgl.\",\r\n                \"a.M.\",\r\n                \"Str.\",\r\n                \"exkl.\",\r\n                \"gek.\",\r\n                \"Erf.\",\r\n                \"u.Ä.\",\r\n                \"ehem.\",\r\n                \"näml.\",\r\n                \"u. Z.\",\r\n                \"v. u. Z.\",\r\n                \"sog.\",\r\n                \"C.\",\r\n                \"Dipl.-Kfm.\",\r\n                \"mtl.\",\r\n                \"Hrsg.\",\r\n                \"Qu.\",\r\n                \"röm.\",\r\n                \"u.\",\r\n                \"U.\",\r\n                \"Adj.\",\r\n                \"Kap.\",\r\n                \"hpts.\",\r\n                \"a.D.\",\r\n                \"gedr.\",\r\n                \"Best.\",\r\n                \"N.\",\r\n                \"v.u.Z.\",\r\n                \"Phys.\",\r\n                \"Fr.\",\r\n                \"d.J.\",\r\n                \"Reg.-Bez.\",\r\n                \"m.E.\",\r\n                \"schles.\",\r\n                \"Max.\",\r\n                \"Ltd.\",\r\n                \"südd.\",\r\n                \"inkl.\",\r\n                \"geb.\",\r\n                \"Ggf.\",\r\n                \"Inc.\",\r\n                \"kath.\",\r\n                \"kfm.\",\r\n                \"Nr.\",\r\n                \"Proz.\",\r\n                \"Dim.\",\r\n                \"verw.\",\r\n                \"Reg.\",\r\n                \"Dat.\",\r\n                \"Evtl.\",\r\n                \"led.\",\r\n                \"F.\",\r\n                \"Test.\",\r\n                \"Schr.\",\r\n                \"Do.\",\r\n                \"PIN.\",\r\n                \"Z. Zt.\",\r\n                \"v.Chr.\",\r\n                \"Tägl.\",\r\n                \"s.\",\r\n                \"amtl.\",\r\n                \"Temp.\",\r\n                \"Mind.\",\r\n                \"e.V.\",\r\n                \"Abw.\",\r\n                \"P.M.\",\r\n                \"F.f.\",\r\n                \"a.a.S.\",\r\n                \"Mod.\",\r\n                \"Co.\",\r\n                \"Min.\",\r\n                \"Allg.\",\r\n                \"Geograph.\",\r\n                \"Jr.\",\r\n                \"Urspr.\",\r\n                \"Apr.\",\r\n                \"Z. B.\",\r\n                \"v.H.\",\r\n                \"A.\",\r\n                \"einschl.\",\r\n                \"Trans.\",\r\n                \"zzgl.\",\r\n                \"StR.\",\r\n                \"Fam.\",\r\n                \"I.\",\r\n                \"jhrl.\",\r\n                \"u.a.\",\r\n                \"Ben.\",\r\n                \"o.g.\",\r\n                \"Kfm.\",\r\n                \"Konv.\",\r\n                \"Mi.\",\r\n                \"L.\",\r\n                \"beil.\",\r\n                \"T.\",\r\n                \"Ursprüngl.\",\r\n                \"röm.-kath.\",\r\n                \"Okt.\",\r\n                \"u.ä.\",\r\n                \"Tel.\",\r\n                \"D.\",\r\n                \"Ber.\",\r\n                \"Kop.\",\r\n                \"Mio.\",\r\n                \"Y.\",\r\n                \"U.S.A.\",\r\n                \"v. H.\",\r\n                \"Forts. f.\",\r\n                \"Rep.\",\r\n                \"Hptst.\",\r\n                \"österr.\"\r\n            ],\r\n            \"variables\": {}\r\n        }\r\n    },\r\n    \"el\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [],\r\n            \"variables\": {\r\n                \"$STerm\": \"((?:[!;\\\\?\\\\u037E\\\\u0589\\\\u061D-\\\\u061F\\\\u06D4\\\\u0700-\\\\u0702\\\\u07F9\\\\u0837\\\\u0839\\\\u083D\\\\u083E\\\\u0964\\\\u0965\\\\u104A\\\\u104B\\\\u1362\\\\u1367\\\\u1368\\\\u166E\\\\u1735\\\\u1736\\\\u17D4\\\\u17D5\\\\u1803\\\\u1809\\\\u1944\\\\u1945\\\\u1AA8-\\\\u1AAB\\\\u1B4E\\\\u1B4F\\\\u1B5A\\\\u1B5B\\\\u1B5E\\\\u1B5F\\\\u1B7D-\\\\u1B7F\\\\u1C3B\\\\u1C3C\\\\u1C7E\\\\u1C7F\\\\u203C\\\\u203D\\\\u2047-\\\\u2049\\\\u2CF9-\\\\u2CFB\\\\u2E2E\\\\u2E3C\\\\u2E53\\\\u2E54\\\\u3002\\\\uA4FF\\\\uA60E\\\\uA60F\\\\uA6F3\\\\uA6F7\\\\uA876\\\\uA877\\\\uA8CE\\\\uA8CF\\\\uA92F\\\\uA9C8\\\\uA9C9\\\\uAA5D-\\\\uAA5F\\\\uAAF0\\\\uAAF1\\\\uABEB\\\\uFE12\\\\uFE15\\\\uFE16\\\\uFE56\\\\uFE57\\\\uFF01\\\\uFF1F\\\\uFF61]|\\\\uD802[\\\\uDE56\\\\uDE57]|\\\\uD803[\\\\uDF55-\\\\uDF59\\\\uDF86-\\\\uDF89]|\\\\uD804[\\\\uDC47\\\\uDC48\\\\uDCBE-\\\\uDCC1\\\\uDD41-\\\\uDD43\\\\uDDC5\\\\uDDC6\\\\uDDCD\\\\uDDDE\\\\uDDDF\\\\uDE38\\\\uDE39\\\\uDE3B\\\\uDE3C\\\\uDEA9\\\\uDFD4\\\\uDFD5]|\\\\uD805[\\\\uDC4B\\\\uDC4C\\\\uDDC2\\\\uDDC3\\\\uDDC9-\\\\uDDD7\\\\uDE41\\\\uDE42\\\\uDF3C-\\\\uDF3E]|\\\\uD806[\\\\uDD44\\\\uDD46\\\\uDE42\\\\uDE43\\\\uDE9B\\\\uDE9C]|\\\\uD807[\\\\uDC41\\\\uDC42\\\\uDEF7\\\\uDEF8\\\\uDF43\\\\uDF44]|\\\\uD81A[\\\\uDE6E\\\\uDE6F\\\\uDEF5\\\\uDF37\\\\uDF38\\\\uDF44]|\\\\uD81B[\\\\uDD6E\\\\uDD6F\\\\uDE98]|\\\\uD82F\\\\uDC9F|\\\\uD836\\\\uDE88)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\"\r\n            }\r\n        }\r\n    },\r\n    \"en\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [\r\n                \"L.P.\",\r\n                \"Alt.\",\r\n                \"Approx.\",\r\n                \"E.G.\",\r\n                \"O.\",\r\n                \"Maj.\",\r\n                \"Misc.\",\r\n                \"P.O.\",\r\n                \"J.D.\",\r\n                \"Jam.\",\r\n                \"Card.\",\r\n                \"Dec.\",\r\n                \"Sept.\",\r\n                \"MR.\",\r\n                \"Long.\",\r\n                \"Hat.\",\r\n                \"G.\",\r\n                \"Link.\",\r\n                \"DC.\",\r\n                \"D.C.\",\r\n                \"M.T.\",\r\n                \"Hz.\",\r\n                \"Mrs.\",\r\n                \"By.\",\r\n                \"Act.\",\r\n                \"Var.\",\r\n                \"N.V.\",\r\n                \"Aug.\",\r\n                \"B.\",\r\n                \"S.A.\",\r\n                \"Up.\",\r\n                \"Job.\",\r\n                \"Num.\",\r\n                \"M.I.T.\",\r\n                \"Ok.\",\r\n                \"Org.\",\r\n                \"Ex.\",\r\n                \"Cont.\",\r\n                \"U.\",\r\n                \"Mart.\",\r\n                \"Fn.\",\r\n                \"Abs.\",\r\n                \"Lt.\",\r\n                \"OK.\",\r\n                \"Z.\",\r\n                \"E.\",\r\n                \"Kb.\",\r\n                \"Est.\",\r\n                \"A.M.\",\r\n                \"L.A.\",\r\n                \"Prof.\",\r\n                \"U.S.\",\r\n                \"Nov.\",\r\n                \"Ph.D.\",\r\n                \"Mar.\",\r\n                \"I.T.\",\r\n                \"exec.\",\r\n                \"Jan.\",\r\n                \"N.Y.\",\r\n                \"X.\",\r\n                \"Md.\",\r\n                \"Op.\",\r\n                \"vs.\",\r\n                \"D.A.\",\r\n                \"A.D.\",\r\n                \"R.L.\",\r\n                \"P.M.\",\r\n                \"Or.\",\r\n                \"M.R.\",\r\n                \"Cap.\",\r\n                \"PC.\",\r\n                \"Feb.\",\r\n                \"Exec.\",\r\n                \"I.e.\",\r\n                \"Sep.\",\r\n                \"Gb.\",\r\n                \"K.\",\r\n                \"U.S.C.\",\r\n                \"Mt.\",\r\n                \"S.\",\r\n                \"A.S.\",\r\n                \"C.O.D.\",\r\n                \"Capt.\",\r\n                \"Col.\",\r\n                \"In.\",\r\n                \"C.F.\",\r\n                \"Adj.\",\r\n                \"AD.\",\r\n                \"I.D.\",\r\n                \"Mgr.\",\r\n                \"R.T.\",\r\n                \"B.V.\",\r\n                \"M.\",\r\n                \"Conn.\",\r\n                \"Yr.\",\r\n                \"Rev.\",\r\n                \"Phys.\",\r\n                \"pp.\",\r\n                \"Ms.\",\r\n                \"To.\",\r\n                \"Sgt.\",\r\n                \"J.K.\",\r\n                \"Nr.\",\r\n                \"Jun.\",\r\n                \"Fri.\",\r\n                \"S.A.R.\",\r\n                \"Lev.\",\r\n                \"Lt.Cdr.\",\r\n                \"Def.\",\r\n                \"F.\",\r\n                \"Do.\",\r\n                \"Joe.\",\r\n                \"Id.\",\r\n                \"Mr.\",\r\n                \"Dept.\",\r\n                \"Is.\",\r\n                \"Pvt.\",\r\n                \"Diff.\",\r\n                \"Hon.B.A.\",\r\n                \"Q.\",\r\n                \"Mb.\",\r\n                \"On.\",\r\n                \"Min.\",\r\n                \"J.B.\",\r\n                \"Ed.\",\r\n                \"AB.\",\r\n                \"A.\",\r\n                \"S.p.A.\",\r\n                \"I.\",\r\n                \"a.m.\",\r\n                \"Comm.\",\r\n                \"Go.\",\r\n                \"VS.\",\r\n                \"L.\",\r\n                \"All.\",\r\n                \"PP.\",\r\n                \"P.V.\",\r\n                \"T.\",\r\n                \"K.R.\",\r\n                \"Etc.\",\r\n                \"D.\",\r\n                \"Adv.\",\r\n                \"Lib.\",\r\n                \"E.g.\",\r\n                \"Pro.\",\r\n                \"U.S.A.\",\r\n                \"S.E.\",\r\n                \"AA.\",\r\n                \"Rep.\",\r\n                \"Sq.\",\r\n                \"As.\"\r\n            ],\r\n            \"variables\": {}\r\n        }\r\n    },\r\n    \"es\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [\r\n                \"Rdos.\",\r\n                \"JJ.OO.\",\r\n                \"Sres.\",\r\n                \"fig.\",\r\n                \"may.\",\r\n                \"RR.HH.\",\r\n                \"oct.\",\r\n                \"cap.\",\r\n                \"mié.\",\r\n                \"doc.\",\r\n                \"Excmo.\",\r\n                \"Trab.\",\r\n                \"Excmos.\",\r\n                \"Kit.\",\r\n                \"Inc.\",\r\n                \"FF.CC.\",\r\n                \"DC.\",\r\n                \"ago.\",\r\n                \"trad.\",\r\n                \"SA.\",\r\n                \"Rvdos.\",\r\n                \"ed.\",\r\n                \"Exmo.\",\r\n                \"jul.\",\r\n                \"col.\",\r\n                \"RAM.\",\r\n                \"Srtas.\",\r\n                \"ene.\",\r\n                \"Rol.\",\r\n                \"Fabric.\",\r\n                \"Comm.\",\r\n                \"vid.\",\r\n                \"Da.\",\r\n                \"dic.\",\r\n                \"ss.\",\r\n                \"abr.\",\r\n                \"ntra.\",\r\n                \"Sra.\",\r\n                \"dtor.\",\r\n                \"cf.\",\r\n                \"dom.\",\r\n                \"prov.\",\r\n                \"Emm.\",\r\n                \"Sr.\",\r\n                \"licdo.\",\r\n                \"p.ej.\",\r\n                \"bol.\",\r\n                \"figs.\",\r\n                \"Vda.\",\r\n                \"Dr.\",\r\n                \"ntro.\",\r\n                \"Desv.\",\r\n                \"O.M.\",\r\n                \"Ldo.\",\r\n                \"Drs.\",\r\n                \"sáb.\",\r\n                \"feb.\",\r\n                \"Ltda.\",\r\n                \"Lcda.\",\r\n                \"Exma.\",\r\n                \"C.V.\",\r\n                \"SS.MM.\",\r\n                \"Lda.\",\r\n                \"U.S.\",\r\n                \"hnos.\",\r\n                \"R.D.\",\r\n                \"Korn.\",\r\n                \"v.gr.\",\r\n                \"vs.\",\r\n                \"Ilmas.\",\r\n                \"Rdo.\",\r\n                \"ej.\",\r\n                \"vie.\",\r\n                \"jue.\",\r\n                \"a. C.\",\r\n                \"Ilmos.\",\r\n                \"e. c.\",\r\n                \"Excma.\",\r\n                \"afma.\",\r\n                \"licda.\",\r\n                \"Em.\",\r\n                \"K.\",\r\n                \"sras.\",\r\n                \"MM.\",\r\n                \"fund.\",\r\n                \"Mons.\",\r\n                \"Lcdo.\",\r\n                \"afmo.\",\r\n                \"C.\",\r\n                \"A.C.\",\r\n                \"dptos.\",\r\n                \"Col.\",\r\n                \"Srta.\",\r\n                \"Av.\",\r\n                \"Ant.\",\r\n                \"depto.\",\r\n                \"Var.\",\r\n                \"H.P.\",\r\n                \"D.\",\r\n                \"M.\",\r\n                \"C.P.\",\r\n                \"Rev.\",\r\n                \"Rvdmos.\",\r\n                \"Fr.\",\r\n                \"Ilmo.\",\r\n                \"afmos.\",\r\n                \"Ltd.\",\r\n                \"afmas.\",\r\n                \"prof.\",\r\n                \"lun.\",\r\n                \"SS.AA.\",\r\n                \"Sol.\",\r\n                \"nov.\",\r\n                \"mss.\",\r\n                \"Dña.\",\r\n                \"Seg.\",\r\n                \"mar.\",\r\n                \"Rvdmo.\",\r\n                \"Reg.\",\r\n                \"ms.\",\r\n                \"Sras.\",\r\n                \"sres.\",\r\n                \"U.S.A.\",\r\n                \"Sta.\",\r\n                \"Sdad.\",\r\n                \"Dra.\",\r\n                \"srs.\",\r\n                \"R.U.\",\r\n                \"deptos.\",\r\n                \"dpto.\",\r\n                \"jun.\",\r\n                \"bco.\",\r\n                \"Cía.\",\r\n                \"Id.\",\r\n                \"Mr.\",\r\n                \"e.g.\",\r\n                \"C.S.\",\r\n                \"Excmas.\",\r\n                \"Dª.\",\r\n                \"Rvdo.\",\r\n                \"Lic.\",\r\n                \"cfr.\",\r\n                \"Corp.\",\r\n                \"Dto.\",\r\n                \"Ilma.\",\r\n                \"L.\",\r\n                \"All.\",\r\n                \"PP.\",\r\n                \"d. C.\",\r\n                \"Ltdo.\",\r\n                \"mtro.\",\r\n                \"Mrs.\",\r\n                \"Desc.\",\r\n                \"Avda.\",\r\n                \"Exmas.\",\r\n                \"a. e. c.\",\r\n                \"Bien.\",\r\n                \"Exmos.\",\r\n                \"AA.\",\r\n                \"Sto.\",\r\n                \"CA.\",\r\n                \"sept.\",\r\n                \"Exc.\",\r\n                \"c/c.\"\r\n            ],\r\n            \"variables\": {}\r\n        }\r\n    },\r\n    \"fr\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [\r\n                \"aux.\",\r\n                \"config.\",\r\n                \"collab.\",\r\n                \"M.\",\r\n                \"dim.\",\r\n                \"imprim.\",\r\n                \"oct.\",\r\n                \"syst.\",\r\n                \"bull.\",\r\n                \"MM.\",\r\n                \"doc.\",\r\n                \"P.O.\",\r\n                \"hôp.\",\r\n                \"Mart.\",\r\n                \"juil.\",\r\n                \"broch.\",\r\n                \"adr.\",\r\n                \"symb.\",\r\n                \"C.\",\r\n                \"anc.\",\r\n                \"voit.\",\r\n                \"Jr.\",\r\n                \"graph.\",\r\n                \"dir.\",\r\n                \"éd.\",\r\n                \"fig.\",\r\n                \"édit.\",\r\n                \"niv.\",\r\n                \"quart.\",\r\n                \"cam.\",\r\n                \"éval.\",\r\n                \"anon.\",\r\n                \"réf.\",\r\n                \"Comm.\",\r\n                \"Prof.\",\r\n                \"févr.\",\r\n                \"indus.\",\r\n                \"DC.\",\r\n                \"équiv.\",\r\n                \"illustr.\",\r\n                \"acoust.\",\r\n                \"nov.\",\r\n                \"L.\",\r\n                \"All.\",\r\n                \"U.S.\",\r\n                \"S.M.A.R.T.\",\r\n                \"sept.\",\r\n                \"avr.\",\r\n                \"jeu.\",\r\n                \"dest.\",\r\n                \"P.-D. G.\",\r\n                \"ill.\",\r\n                \"coll.\",\r\n                \"encycl.\",\r\n                \"mer.\",\r\n                \"Desc.\",\r\n                \"ven.\",\r\n                \"P.\",\r\n                \"lun.\",\r\n                \"Inc.\",\r\n                \"sam.\",\r\n                \"D.\",\r\n                \"append.\",\r\n                \"Var.\",\r\n                \"categ.\",\r\n                \"janv.\",\r\n                \"S.A.\",\r\n                \"imm.\",\r\n                \"U.S.A.\",\r\n                \"mar.\",\r\n                \"exempl.\",\r\n                \"déc.\",\r\n                \"ann.\",\r\n                \"U.\",\r\n                \"synth.\",\r\n                \"dict.\",\r\n                \"av. J.-C.\",\r\n                \"W.\",\r\n                \"Op.\",\r\n                \"ap. J.-C.\",\r\n                \"gouv.\",\r\n                \"trav. publ.\"\r\n            ],\r\n            \"variables\": {}\r\n        }\r\n    },\r\n    \"it\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [\r\n                \"N.B.\",\r\n                \"div.\",\r\n                \"a.C.\",\r\n                \"fig.\",\r\n                \"d.p.R.\",\r\n                \"c.c.p.\",\r\n                \"Cfr.\",\r\n                \"vol.\",\r\n                \"Geom.\",\r\n                \"O.d.G.\",\r\n                \"S.p.A.\",\r\n                \"ver.\",\r\n                \"N.d.A.\",\r\n                \"dott.\",\r\n                \"arch.\",\r\n                \"d.C.\",\r\n                \"N.d.T.\",\r\n                \"rag.\",\r\n                \"Sig.\",\r\n                \"Mod.\",\r\n                \"pag.\",\r\n                \"dr.\",\r\n                \"tav.\",\r\n                \"N.d.E.\",\r\n                \"DC.\",\r\n                \"mitt.\",\r\n                \"Ing.\",\r\n                \"int.\",\r\n                \"on.\",\r\n                \"C.P.\",\r\n                \"ag.\",\r\n                \"L.\",\r\n                \"U.S.\",\r\n                \"S.M.A.R.T.\",\r\n                \"p.i.\",\r\n                \"tab.\",\r\n                \"Ltd.\",\r\n                \"Liv.\",\r\n                \"D.\",\r\n                \"U.S.A.\",\r\n                \"sez.\",\r\n                \"avv.\",\r\n                \"S.A.R.\",\r\n                \"all.\",\r\n                \"p.\"\r\n            ],\r\n            \"variables\": {}\r\n        }\r\n    },\r\n    \"ja\": {\r\n        \"word\": {\r\n            \"segmentRules\": {\r\n                \"13.3\": {\r\n                    \"after\": \"$Hiragana\",\r\n                    \"before\": \"$Hiragana\",\r\n                    \"breaks\": false\r\n                },\r\n                \"13.4\": {\r\n                    \"after\": \"$Ideographic\",\r\n                    \"before\": \"$Ideographic\",\r\n                    \"breaks\": false\r\n                }\r\n            },\r\n            \"suppressions\": [],\r\n            \"variables\": {\r\n                \"$Hiragana\": \"((?:[\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F]|\\\\uD82C[\\\\uDC01-\\\\uDD1F\\\\uDD32\\\\uDD50-\\\\uDD52]|\\\\uD83C\\\\uDE00)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Ideographic\": \"((?:[\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3038-\\\\u303B\\\\u3400-\\\\u4DBF\\\\u4E00-\\\\u9FFF\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9]|\\\\uD81B\\\\uDFE4|[\\\\uD81C-\\\\uD820\\\\uD822\\\\uD840-\\\\uD868\\\\uD86A-\\\\uD86C\\\\uD86F-\\\\uD872\\\\uD874-\\\\uD879\\\\uD880-\\\\uD883\\\\uD885-\\\\uD887][\\\\uDC00-\\\\uDFFF]|\\\\uD821[\\\\uDC00-\\\\uDFF7]|\\\\uD823[\\\\uDC00-\\\\uDCD5\\\\uDCFF-\\\\uDD08]|\\\\uD82C[\\\\uDD70-\\\\uDEFB]|\\\\uD869[\\\\uDC00-\\\\uDEDF\\\\uDF00-\\\\uDFFF]|\\\\uD86D[\\\\uDC00-\\\\uDF39\\\\uDF40-\\\\uDFFF]|\\\\uD86E[\\\\uDC00-\\\\uDC1D\\\\uDC20-\\\\uDFFF]|\\\\uD873[\\\\uDC00-\\\\uDEA1\\\\uDEB0-\\\\uDFFF]|\\\\uD87A[\\\\uDC00-\\\\uDFE0\\\\uDFF0-\\\\uDFFF]|\\\\uD87B[\\\\uDC00-\\\\uDE5D]|\\\\uD87E[\\\\uDC00-\\\\uDE1D]|\\\\uD884[\\\\uDC00-\\\\uDF4A\\\\uDF50-\\\\uDFFF]|\\\\uD888[\\\\uDC00-\\\\uDFAF])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\"\r\n            }\r\n        }\r\n    },\r\n    \"pt\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [\r\n                \"psicol.\",\r\n                \"fig.\",\r\n                \"compl.\",\r\n                \"rep.\",\r\n                \"cap.\",\r\n                \"doc.\",\r\n                \"fisiol.\",\r\n                \"dipl.\",\r\n                \"astron.\",\r\n                \"port.\",\r\n                \"eletrôn.\",\r\n                \"geom.\",\r\n                \"mov.\",\r\n                \"ago.\",\r\n                \"trad.\",\r\n                \"arquit.\",\r\n                \"dez.\",\r\n                \"ed.\",\r\n                \"apt.\",\r\n                \"Exmo.\",\r\n                \"col.\",\r\n                \"ff.\",\r\n                \"univ.\",\r\n                \"res.\",\r\n                \"R.\",\r\n                \"transp.\",\r\n                \"D.C\",\r\n                \"l.\",\r\n                \"des.\",\r\n                \"fev.\",\r\n                \"abr.\",\r\n                \"liter.\",\r\n                \"lat.\",\r\n                \"Dir.\",\r\n                \"cf.\",\r\n                \"adm.\",\r\n                \"fot.\",\r\n                \"p.m.\",\r\n                \"P.M.\",\r\n                \"créd.\",\r\n                \"jur.\",\r\n                \"com.\",\r\n                \"anat.\",\r\n                \"dir.\",\r\n                \"end.\",\r\n                \"fís.\",\r\n                \"E.\",\r\n                \"Est.\",\r\n                \"cont.\",\r\n                \"matem.\",\r\n                \"Drs.\",\r\n                \"gên.\",\r\n                \"neol.\",\r\n                \"pág.\",\r\n                \"índ.\",\r\n                \"Ltda.\",\r\n                \"Exma.\",\r\n                \"esp.\",\r\n                \"ingl.\",\r\n                \"tecnol.\",\r\n                \"Mar.\",\r\n                \"símb.\",\r\n                \"Pe.\",\r\n                \"pal.\",\r\n                \"filos.\",\r\n                \"V.T.\",\r\n                \"fasc.\",\r\n                \"vs.\",\r\n                \"mai.\",\r\n                \"S.A.\",\r\n                \"profa.\",\r\n                \"N.Sra.\",\r\n                \"r.s.v.p.\",\r\n                \"cel.\",\r\n                \"mat.\",\r\n                \"abrev.\",\r\n                \"out.\",\r\n                \"long.\",\r\n                \"aux.\",\r\n                \"arit.\",\r\n                \"aer.\",\r\n                \"jul.\",\r\n                \"lin.\",\r\n                \"S.\",\r\n                \"méd.\",\r\n                \"odontol.\",\r\n                \"org.\",\r\n                \"A.C.\",\r\n                \"jun.\",\r\n                \"déb.\",\r\n                \"Av.\",\r\n                \"álg.\",\r\n                \"sup.\",\r\n                \"fl.\",\r\n                \"odont.\",\r\n                \"caps.\",\r\n                \"relat.\",\r\n                \"organiz.\",\r\n                \"hist.\",\r\n                \"Fr.\",\r\n                \"Ilmo.\",\r\n                \"fem.\",\r\n                \"ap.\",\r\n                \"Ltd.\",\r\n                \"pol.\",\r\n                \"séc.\",\r\n                \"prof.\",\r\n                \"cx.\",\r\n                \"nov.\",\r\n                \"quím.\",\r\n                \"mús.\",\r\n                \"agric.\",\r\n                \"mar.\",\r\n                \"W.C.\",\r\n                \"fr.\",\r\n                \"cat.\",\r\n                \"jan.\",\r\n                \"pron.\",\r\n                \"rel.\",\r\n                \"autom.\",\r\n                \"Sta.\",\r\n                \"Dra.\",\r\n                \"p.\",\r\n                \"tel.\",\r\n                \"div.\",\r\n                \"p. ex.\",\r\n                \"a.C.\",\r\n                \"bras.\",\r\n                \"Alm.\",\r\n                \"Dr.\",\r\n                \"comp.\",\r\n                \"pq.\",\r\n                \"arqueol.\",\r\n                \"náut.\",\r\n                \"biogr.\",\r\n                \"f.\",\r\n                \"círc.\",\r\n                \"fac.\",\r\n                \"d.C.\",\r\n                \"apart.\",\r\n                \"ex.\",\r\n                \"Jr.\",\r\n                \"set.\",\r\n                \"tec.\",\r\n                \"sociol.\",\r\n                \"gram.\",\r\n                \"ind.\",\r\n                \"Ilma.\",\r\n                \"vol.\",\r\n                \"eng.\",\r\n                \"rod.\",\r\n                \"Ph.D.\",\r\n                \"Dras.\",\r\n                \"pp.\",\r\n                \"elem.\",\r\n                \"máq.\",\r\n                \"cód.\",\r\n                \"eletr.\",\r\n                \"prod.\",\r\n                \"ref.\",\r\n                \"fil.\",\r\n                \"a.m.\",\r\n                \"A.M\",\r\n                \"obs.\",\r\n                \"N.T.\",\r\n                \"contab.\",\r\n                \"Sto.\",\r\n                \"lit.\",\r\n                \"educ.\",\r\n                \"rementente\",\r\n                \"desc.\",\r\n                \"próx.\"\r\n            ],\r\n            \"variables\": {}\r\n        }\r\n    },\r\n    \"root\": {\r\n        \"grapheme\": {\r\n            \"segmentRules\": {\r\n                \"11\": {\r\n                    \"after\": \"$ExtPict\",\r\n                    \"before\": \"$ExtPict$Extend*$ZWJ\",\r\n                    \"breaks\": false\r\n                },\r\n                \"12\": {\r\n                    \"after\": \"$RI\",\r\n                    \"before\": \"^($RI$RI)*$RI\",\r\n                    \"breaks\": false\r\n                },\r\n                \"13\": {\r\n                    \"after\": \"$RI\",\r\n                    \"before\": \"[^\\\\uDDE6-\\\\uDDFF]($RI$RI)*$RI\",\r\n                    \"breaks\": false\r\n                },\r\n                \"3\": {\r\n                    \"after\": \"$LF\",\r\n                    \"before\": \"$CR\",\r\n                    \"breaks\": false\r\n                },\r\n                \"4\": {\r\n                    \"before\": \"($Control|$CR|$LF)\",\r\n                    \"breaks\": true\r\n                },\r\n                \"5\": {\r\n                    \"after\": \"($Control|$CR|$LF)\",\r\n                    \"breaks\": true\r\n                },\r\n                \"6\": {\r\n                    \"after\": \"($L|$V|$LV|$LVT)\",\r\n                    \"before\": \"$L\",\r\n                    \"breaks\": false\r\n                },\r\n                \"7\": {\r\n                    \"after\": \"($V|$T)\",\r\n                    \"before\": \"($LV|$V)\",\r\n                    \"breaks\": false\r\n                },\r\n                \"8\": {\r\n                    \"after\": \"$T\",\r\n                    \"before\": \"($LVT|$T)\",\r\n                    \"breaks\": false\r\n                },\r\n                \"9\": {\r\n                    \"after\": \"($Extend|$ZWJ)\",\r\n                    \"breaks\": false\r\n                },\r\n                \"9.1\": {\r\n                    \"after\": \"$SpacingMark\",\r\n                    \"breaks\": false\r\n                },\r\n                \"9.2\": {\r\n                    \"before\": \"$Prepend\",\r\n                    \"breaks\": false\r\n                },\r\n                \"9.3\": {\r\n                    \"after\": \"$LinkingConsonant\",\r\n                    \"before\": \"$LinkingConsonant$ExtCccZwj*$ConjunctLinker$ExtCccZwj*\",\r\n                    \"breaks\": false\r\n                }\r\n            },\r\n            \"suppressions\": [],\r\n            \"variables\": {\r\n                \"$CR\": \"\\\\r\",\r\n                \"$ConjunctLinker\": \"[\\\\u094D\\\\u09CD\\\\u0ACD\\\\u0B4D\\\\u0C4D\\\\u0D4D]\",\r\n                \"$ConjunctLinkingScripts\": \"(?:[\\\\u0900-\\\\u0950\\\\u0955-\\\\u0963\\\\u0966-\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BC-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E3\\\\u09E6-\\\\u09FE\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABC-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\\\\u0AF1\\\\u0AF9-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B63\\\\u0B66-\\\\u0B77\\\\u0C00-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3C-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60-\\\\u0C63\\\\u0C66-\\\\u0C6F\\\\u0C77-\\\\u0C7F\\\\u0D00-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4F\\\\u0D54-\\\\u0D63\\\\u0D66-\\\\u0D7F\\\\uA8E0-\\\\uA8FF]|\\\\uD806[\\\\uDF00-\\\\uDF09])\",\r\n                \"$Control\": \"(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\x1F\\\\x7F-\\\\x9F\\\\xAD\\\\u061C\\\\u180E\\\\u200B\\\\u200E\\\\u200F\\\\u2028-\\\\u202E\\\\u2060-\\\\u206F\\\\uFEFF\\\\uFFF0-\\\\uFFFB]|\\\\uD80D[\\\\uDC30-\\\\uDC3F]|\\\\uD82F[\\\\uDCA0-\\\\uDCA3]|\\\\uD834[\\\\uDD73-\\\\uDD7A]|\\\\uDB40[\\\\uDC00-\\\\uDC1F\\\\uDC80-\\\\uDCFF\\\\uDDF0-\\\\uDFFF]|[\\\\uDB41-\\\\uDB43][\\\\uDC00-\\\\uDFFF])\",\r\n                \"$ExtCccZwj\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09BE\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3E\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE\\\\u0BC0\\\\u0BCD\\\\u0BD7\\\\u0C00\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CBF\\\\u0CC0\\\\u0CC2\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D3E\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81\\\\u0DCA\\\\u0DCF\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0DDF\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B03\\\\u1B34-\\\\u1B3D\\\\u1B42-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF3\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200D\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA82C\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA953\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC01\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC81\\\\uDCB3-\\\\uDCB6\\\\uDCB9\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD2B\\\\uDD2D-\\\\uDD34\\\\uDD73\\\\uDD80\\\\uDD81\\\\uDDB6-\\\\uDDBE\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCF\\\\uDE2F-\\\\uDE31\\\\uDE34-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF\\\\uDEE3-\\\\uDEEA\\\\uDF00\\\\uDF01\\\\uDF3B\\\\uDF3C\\\\uDF3E\\\\uDF40\\\\uDF4D\\\\uDF57\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8\\\\uDFBB-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFC9\\\\uDFCE-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC38-\\\\uDC3F\\\\uDC42-\\\\uDC44\\\\uDC46\\\\uDC5E\\\\uDCB0\\\\uDCB3-\\\\uDCB8\\\\uDCBA\\\\uDCBD\\\\uDCBF\\\\uDCC0\\\\uDCC2\\\\uDCC3\\\\uDDAF\\\\uDDB2-\\\\uDDB5\\\\uDDBC\\\\uDDBD\\\\uDDBF\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE33-\\\\uDE3A\\\\uDE3D\\\\uDE3F\\\\uDE40\\\\uDEAB\\\\uDEAD\\\\uDEB0-\\\\uDEB7\\\\uDF1D\\\\uDF1F\\\\uDF22-\\\\uDF25\\\\uDF27-\\\\uDF2B]|\\\\uD806[\\\\uDC2F-\\\\uDC37\\\\uDC39\\\\uDC3A\\\\uDD30\\\\uDD3B-\\\\uDD3E\\\\uDD43\\\\uDDD4-\\\\uDDD7\\\\uDDDA\\\\uDDDB\\\\uDDE0\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE38\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE56\\\\uDE59-\\\\uDE5B\\\\uDE8A-\\\\uDE96\\\\uDE98\\\\uDE99]|\\\\uD807[\\\\uDC30-\\\\uDC36\\\\uDC38-\\\\uDC3D\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCAA-\\\\uDCB0\\\\uDCB2\\\\uDCB3\\\\uDCB5\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD90\\\\uDD91\\\\uDD95\\\\uDD97\\\\uDEF3\\\\uDEF4\\\\uDF00\\\\uDF01\\\\uDF36-\\\\uDF3A\\\\uDF40-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD29\\\\uDD2D-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\r\n                \"$ExtPict\": \"(?:[\\\\xA9\\\\xAE\\\\u203C\\\\u2049\\\\u2122\\\\u2139\\\\u2194-\\\\u2199\\\\u21A9\\\\u21AA\\\\u231A\\\\u231B\\\\u2328\\\\u2388\\\\u23CF\\\\u23E9-\\\\u23F3\\\\u23F8-\\\\u23FA\\\\u24C2\\\\u25AA\\\\u25AB\\\\u25B6\\\\u25C0\\\\u25FB-\\\\u25FE\\\\u2600-\\\\u2605\\\\u2607-\\\\u2612\\\\u2614-\\\\u2685\\\\u2690-\\\\u2705\\\\u2708-\\\\u2712\\\\u2714\\\\u2716\\\\u271D\\\\u2721\\\\u2728\\\\u2733\\\\u2734\\\\u2744\\\\u2747\\\\u274C\\\\u274E\\\\u2753-\\\\u2755\\\\u2757\\\\u2763-\\\\u2767\\\\u2795-\\\\u2797\\\\u27A1\\\\u27B0\\\\u27BF\\\\u2934\\\\u2935\\\\u2B05-\\\\u2B07\\\\u2B1B\\\\u2B1C\\\\u2B50\\\\u2B55\\\\u3030\\\\u303D\\\\u3297\\\\u3299]|\\\\uD83C[\\\\uDC00-\\\\uDCFF\\\\uDD0D-\\\\uDD0F\\\\uDD2F\\\\uDD6C-\\\\uDD71\\\\uDD7E\\\\uDD7F\\\\uDD8E\\\\uDD91-\\\\uDD9A\\\\uDDAD-\\\\uDDE5\\\\uDE01-\\\\uDE0F\\\\uDE1A\\\\uDE2F\\\\uDE32-\\\\uDE3A\\\\uDE3C-\\\\uDE3F\\\\uDE49-\\\\uDFFA]|\\\\uD83D[\\\\uDC00-\\\\uDD3D\\\\uDD46-\\\\uDE4F\\\\uDE80-\\\\uDEFF\\\\uDF74-\\\\uDF7F\\\\uDFD5-\\\\uDFFF]|\\\\uD83E[\\\\uDC0C-\\\\uDC0F\\\\uDC48-\\\\uDC4F\\\\uDC5A-\\\\uDC5F\\\\uDC88-\\\\uDC8F\\\\uDCAE-\\\\uDCFF\\\\uDD0C-\\\\uDD3A\\\\uDD3C-\\\\uDD45\\\\uDD47-\\\\uDEFF]|\\\\uD83F[\\\\uDC00-\\\\uDFFD])\",\r\n                \"$Extend\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09BE\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3E\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE\\\\u0BC0\\\\u0BCD\\\\u0BD7\\\\u0C00\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CBF\\\\u0CC0\\\\u0CC2\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D3E\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81\\\\u0DCA\\\\u0DCF\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0DDF\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B03\\\\u1B34-\\\\u1B3D\\\\u1B42-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF3\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA82C\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA953\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC01\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC81\\\\uDCB3-\\\\uDCB6\\\\uDCB9\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD2B\\\\uDD2D-\\\\uDD34\\\\uDD73\\\\uDD80\\\\uDD81\\\\uDDB6-\\\\uDDBE\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCF\\\\uDE2F-\\\\uDE31\\\\uDE34-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF\\\\uDEE3-\\\\uDEEA\\\\uDF00\\\\uDF01\\\\uDF3B\\\\uDF3C\\\\uDF3E\\\\uDF40\\\\uDF4D\\\\uDF57\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8\\\\uDFBB-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFC9\\\\uDFCE-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC38-\\\\uDC3F\\\\uDC42-\\\\uDC44\\\\uDC46\\\\uDC5E\\\\uDCB0\\\\uDCB3-\\\\uDCB8\\\\uDCBA\\\\uDCBD\\\\uDCBF\\\\uDCC0\\\\uDCC2\\\\uDCC3\\\\uDDAF\\\\uDDB2-\\\\uDDB5\\\\uDDBC\\\\uDDBD\\\\uDDBF\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE33-\\\\uDE3A\\\\uDE3D\\\\uDE3F\\\\uDE40\\\\uDEAB\\\\uDEAD\\\\uDEB0-\\\\uDEB7\\\\uDF1D\\\\uDF1F\\\\uDF22-\\\\uDF25\\\\uDF27-\\\\uDF2B]|\\\\uD806[\\\\uDC2F-\\\\uDC37\\\\uDC39\\\\uDC3A\\\\uDD30\\\\uDD3B-\\\\uDD3E\\\\uDD43\\\\uDDD4-\\\\uDDD7\\\\uDDDA\\\\uDDDB\\\\uDDE0\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE38\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE56\\\\uDE59-\\\\uDE5B\\\\uDE8A-\\\\uDE96\\\\uDE98\\\\uDE99]|\\\\uD807[\\\\uDC30-\\\\uDC36\\\\uDC38-\\\\uDC3D\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCAA-\\\\uDCB0\\\\uDCB2\\\\uDCB3\\\\uDCB5\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD90\\\\uDD91\\\\uDD95\\\\uDD97\\\\uDEF3\\\\uDEF4\\\\uDF00\\\\uDF01\\\\uDF36-\\\\uDF3A\\\\uDF40-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD29\\\\uDD2D-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\r\n                \"$L\": \"[\\\\u1100-\\\\u115F\\\\uA960-\\\\uA97C]\",\r\n                \"$LF\": \"\\\\n\",\r\n                \"$LV\": \"[\\\\uAC00\\\\uAC1C\\\\uAC38\\\\uAC54\\\\uAC70\\\\uAC8C\\\\uACA8\\\\uACC4\\\\uACE0\\\\uACFC\\\\uAD18\\\\uAD34\\\\uAD50\\\\uAD6C\\\\uAD88\\\\uADA4\\\\uADC0\\\\uADDC\\\\uADF8\\\\uAE14\\\\uAE30\\\\uAE4C\\\\uAE68\\\\uAE84\\\\uAEA0\\\\uAEBC\\\\uAED8\\\\uAEF4\\\\uAF10\\\\uAF2C\\\\uAF48\\\\uAF64\\\\uAF80\\\\uAF9C\\\\uAFB8\\\\uAFD4\\\\uAFF0\\\\uB00C\\\\uB028\\\\uB044\\\\uB060\\\\uB07C\\\\uB098\\\\uB0B4\\\\uB0D0\\\\uB0EC\\\\uB108\\\\uB124\\\\uB140\\\\uB15C\\\\uB178\\\\uB194\\\\uB1B0\\\\uB1CC\\\\uB1E8\\\\uB204\\\\uB220\\\\uB23C\\\\uB258\\\\uB274\\\\uB290\\\\uB2AC\\\\uB2C8\\\\uB2E4\\\\uB300\\\\uB31C\\\\uB338\\\\uB354\\\\uB370\\\\uB38C\\\\uB3A8\\\\uB3C4\\\\uB3E0\\\\uB3FC\\\\uB418\\\\uB434\\\\uB450\\\\uB46C\\\\uB488\\\\uB4A4\\\\uB4C0\\\\uB4DC\\\\uB4F8\\\\uB514\\\\uB530\\\\uB54C\\\\uB568\\\\uB584\\\\uB5A0\\\\uB5BC\\\\uB5D8\\\\uB5F4\\\\uB610\\\\uB62C\\\\uB648\\\\uB664\\\\uB680\\\\uB69C\\\\uB6B8\\\\uB6D4\\\\uB6F0\\\\uB70C\\\\uB728\\\\uB744\\\\uB760\\\\uB77C\\\\uB798\\\\uB7B4\\\\uB7D0\\\\uB7EC\\\\uB808\\\\uB824\\\\uB840\\\\uB85C\\\\uB878\\\\uB894\\\\uB8B0\\\\uB8CC\\\\uB8E8\\\\uB904\\\\uB920\\\\uB93C\\\\uB958\\\\uB974\\\\uB990\\\\uB9AC\\\\uB9C8\\\\uB9E4\\\\uBA00\\\\uBA1C\\\\uBA38\\\\uBA54\\\\uBA70\\\\uBA8C\\\\uBAA8\\\\uBAC4\\\\uBAE0\\\\uBAFC\\\\uBB18\\\\uBB34\\\\uBB50\\\\uBB6C\\\\uBB88\\\\uBBA4\\\\uBBC0\\\\uBBDC\\\\uBBF8\\\\uBC14\\\\uBC30\\\\uBC4C\\\\uBC68\\\\uBC84\\\\uBCA0\\\\uBCBC\\\\uBCD8\\\\uBCF4\\\\uBD10\\\\uBD2C\\\\uBD48\\\\uBD64\\\\uBD80\\\\uBD9C\\\\uBDB8\\\\uBDD4\\\\uBDF0\\\\uBE0C\\\\uBE28\\\\uBE44\\\\uBE60\\\\uBE7C\\\\uBE98\\\\uBEB4\\\\uBED0\\\\uBEEC\\\\uBF08\\\\uBF24\\\\uBF40\\\\uBF5C\\\\uBF78\\\\uBF94\\\\uBFB0\\\\uBFCC\\\\uBFE8\\\\uC004\\\\uC020\\\\uC03C\\\\uC058\\\\uC074\\\\uC090\\\\uC0AC\\\\uC0C8\\\\uC0E4\\\\uC100\\\\uC11C\\\\uC138\\\\uC154\\\\uC170\\\\uC18C\\\\uC1A8\\\\uC1C4\\\\uC1E0\\\\uC1FC\\\\uC218\\\\uC234\\\\uC250\\\\uC26C\\\\uC288\\\\uC2A4\\\\uC2C0\\\\uC2DC\\\\uC2F8\\\\uC314\\\\uC330\\\\uC34C\\\\uC368\\\\uC384\\\\uC3A0\\\\uC3BC\\\\uC3D8\\\\uC3F4\\\\uC410\\\\uC42C\\\\uC448\\\\uC464\\\\uC480\\\\uC49C\\\\uC4B8\\\\uC4D4\\\\uC4F0\\\\uC50C\\\\uC528\\\\uC544\\\\uC560\\\\uC57C\\\\uC598\\\\uC5B4\\\\uC5D0\\\\uC5EC\\\\uC608\\\\uC624\\\\uC640\\\\uC65C\\\\uC678\\\\uC694\\\\uC6B0\\\\uC6CC\\\\uC6E8\\\\uC704\\\\uC720\\\\uC73C\\\\uC758\\\\uC774\\\\uC790\\\\uC7AC\\\\uC7C8\\\\uC7E4\\\\uC800\\\\uC81C\\\\uC838\\\\uC854\\\\uC870\\\\uC88C\\\\uC8A8\\\\uC8C4\\\\uC8E0\\\\uC8FC\\\\uC918\\\\uC934\\\\uC950\\\\uC96C\\\\uC988\\\\uC9A4\\\\uC9C0\\\\uC9DC\\\\uC9F8\\\\uCA14\\\\uCA30\\\\uCA4C\\\\uCA68\\\\uCA84\\\\uCAA0\\\\uCABC\\\\uCAD8\\\\uCAF4\\\\uCB10\\\\uCB2C\\\\uCB48\\\\uCB64\\\\uCB80\\\\uCB9C\\\\uCBB8\\\\uCBD4\\\\uCBF0\\\\uCC0C\\\\uCC28\\\\uCC44\\\\uCC60\\\\uCC7C\\\\uCC98\\\\uCCB4\\\\uCCD0\\\\uCCEC\\\\uCD08\\\\uCD24\\\\uCD40\\\\uCD5C\\\\uCD78\\\\uCD94\\\\uCDB0\\\\uCDCC\\\\uCDE8\\\\uCE04\\\\uCE20\\\\uCE3C\\\\uCE58\\\\uCE74\\\\uCE90\\\\uCEAC\\\\uCEC8\\\\uCEE4\\\\uCF00\\\\uCF1C\\\\uCF38\\\\uCF54\\\\uCF70\\\\uCF8C\\\\uCFA8\\\\uCFC4\\\\uCFE0\\\\uCFFC\\\\uD018\\\\uD034\\\\uD050\\\\uD06C\\\\uD088\\\\uD0A4\\\\uD0C0\\\\uD0DC\\\\uD0F8\\\\uD114\\\\uD130\\\\uD14C\\\\uD168\\\\uD184\\\\uD1A0\\\\uD1BC\\\\uD1D8\\\\uD1F4\\\\uD210\\\\uD22C\\\\uD248\\\\uD264\\\\uD280\\\\uD29C\\\\uD2B8\\\\uD2D4\\\\uD2F0\\\\uD30C\\\\uD328\\\\uD344\\\\uD360\\\\uD37C\\\\uD398\\\\uD3B4\\\\uD3D0\\\\uD3EC\\\\uD408\\\\uD424\\\\uD440\\\\uD45C\\\\uD478\\\\uD494\\\\uD4B0\\\\uD4CC\\\\uD4E8\\\\uD504\\\\uD520\\\\uD53C\\\\uD558\\\\uD574\\\\uD590\\\\uD5AC\\\\uD5C8\\\\uD5E4\\\\uD600\\\\uD61C\\\\uD638\\\\uD654\\\\uD670\\\\uD68C\\\\uD6A8\\\\uD6C4\\\\uD6E0\\\\uD6FC\\\\uD718\\\\uD734\\\\uD750\\\\uD76C\\\\uD788]\",\r\n                \"$LVT\": \"[\\\\uAC01-\\\\uAC1B\\\\uAC1D-\\\\uAC37\\\\uAC39-\\\\uAC53\\\\uAC55-\\\\uAC6F\\\\uAC71-\\\\uAC8B\\\\uAC8D-\\\\uACA7\\\\uACA9-\\\\uACC3\\\\uACC5-\\\\uACDF\\\\uACE1-\\\\uACFB\\\\uACFD-\\\\uAD17\\\\uAD19-\\\\uAD33\\\\uAD35-\\\\uAD4F\\\\uAD51-\\\\uAD6B\\\\uAD6D-\\\\uAD87\\\\uAD89-\\\\uADA3\\\\uADA5-\\\\uADBF\\\\uADC1-\\\\uADDB\\\\uADDD-\\\\uADF7\\\\uADF9-\\\\uAE13\\\\uAE15-\\\\uAE2F\\\\uAE31-\\\\uAE4B\\\\uAE4D-\\\\uAE67\\\\uAE69-\\\\uAE83\\\\uAE85-\\\\uAE9F\\\\uAEA1-\\\\uAEBB\\\\uAEBD-\\\\uAED7\\\\uAED9-\\\\uAEF3\\\\uAEF5-\\\\uAF0F\\\\uAF11-\\\\uAF2B\\\\uAF2D-\\\\uAF47\\\\uAF49-\\\\uAF63\\\\uAF65-\\\\uAF7F\\\\uAF81-\\\\uAF9B\\\\uAF9D-\\\\uAFB7\\\\uAFB9-\\\\uAFD3\\\\uAFD5-\\\\uAFEF\\\\uAFF1-\\\\uB00B\\\\uB00D-\\\\uB027\\\\uB029-\\\\uB043\\\\uB045-\\\\uB05F\\\\uB061-\\\\uB07B\\\\uB07D-\\\\uB097\\\\uB099-\\\\uB0B3\\\\uB0B5-\\\\uB0CF\\\\uB0D1-\\\\uB0EB\\\\uB0ED-\\\\uB107\\\\uB109-\\\\uB123\\\\uB125-\\\\uB13F\\\\uB141-\\\\uB15B\\\\uB15D-\\\\uB177\\\\uB179-\\\\uB193\\\\uB195-\\\\uB1AF\\\\uB1B1-\\\\uB1CB\\\\uB1CD-\\\\uB1E7\\\\uB1E9-\\\\uB203\\\\uB205-\\\\uB21F\\\\uB221-\\\\uB23B\\\\uB23D-\\\\uB257\\\\uB259-\\\\uB273\\\\uB275-\\\\uB28F\\\\uB291-\\\\uB2AB\\\\uB2AD-\\\\uB2C7\\\\uB2C9-\\\\uB2E3\\\\uB2E5-\\\\uB2FF\\\\uB301-\\\\uB31B\\\\uB31D-\\\\uB337\\\\uB339-\\\\uB353\\\\uB355-\\\\uB36F\\\\uB371-\\\\uB38B\\\\uB38D-\\\\uB3A7\\\\uB3A9-\\\\uB3C3\\\\uB3C5-\\\\uB3DF\\\\uB3E1-\\\\uB3FB\\\\uB3FD-\\\\uB417\\\\uB419-\\\\uB433\\\\uB435-\\\\uB44F\\\\uB451-\\\\uB46B\\\\uB46D-\\\\uB487\\\\uB489-\\\\uB4A3\\\\uB4A5-\\\\uB4BF\\\\uB4C1-\\\\uB4DB\\\\uB4DD-\\\\uB4F7\\\\uB4F9-\\\\uB513\\\\uB515-\\\\uB52F\\\\uB531-\\\\uB54B\\\\uB54D-\\\\uB567\\\\uB569-\\\\uB583\\\\uB585-\\\\uB59F\\\\uB5A1-\\\\uB5BB\\\\uB5BD-\\\\uB5D7\\\\uB5D9-\\\\uB5F3\\\\uB5F5-\\\\uB60F\\\\uB611-\\\\uB62B\\\\uB62D-\\\\uB647\\\\uB649-\\\\uB663\\\\uB665-\\\\uB67F\\\\uB681-\\\\uB69B\\\\uB69D-\\\\uB6B7\\\\uB6B9-\\\\uB6D3\\\\uB6D5-\\\\uB6EF\\\\uB6F1-\\\\uB70B\\\\uB70D-\\\\uB727\\\\uB729-\\\\uB743\\\\uB745-\\\\uB75F\\\\uB761-\\\\uB77B\\\\uB77D-\\\\uB797\\\\uB799-\\\\uB7B3\\\\uB7B5-\\\\uB7CF\\\\uB7D1-\\\\uB7EB\\\\uB7ED-\\\\uB807\\\\uB809-\\\\uB823\\\\uB825-\\\\uB83F\\\\uB841-\\\\uB85B\\\\uB85D-\\\\uB877\\\\uB879-\\\\uB893\\\\uB895-\\\\uB8AF\\\\uB8B1-\\\\uB8CB\\\\uB8CD-\\\\uB8E7\\\\uB8E9-\\\\uB903\\\\uB905-\\\\uB91F\\\\uB921-\\\\uB93B\\\\uB93D-\\\\uB957\\\\uB959-\\\\uB973\\\\uB975-\\\\uB98F\\\\uB991-\\\\uB9AB\\\\uB9AD-\\\\uB9C7\\\\uB9C9-\\\\uB9E3\\\\uB9E5-\\\\uB9FF\\\\uBA01-\\\\uBA1B\\\\uBA1D-\\\\uBA37\\\\uBA39-\\\\uBA53\\\\uBA55-\\\\uBA6F\\\\uBA71-\\\\uBA8B\\\\uBA8D-\\\\uBAA7\\\\uBAA9-\\\\uBAC3\\\\uBAC5-\\\\uBADF\\\\uBAE1-\\\\uBAFB\\\\uBAFD-\\\\uBB17\\\\uBB19-\\\\uBB33\\\\uBB35-\\\\uBB4F\\\\uBB51-\\\\uBB6B\\\\uBB6D-\\\\uBB87\\\\uBB89-\\\\uBBA3\\\\uBBA5-\\\\uBBBF\\\\uBBC1-\\\\uBBDB\\\\uBBDD-\\\\uBBF7\\\\uBBF9-\\\\uBC13\\\\uBC15-\\\\uBC2F\\\\uBC31-\\\\uBC4B\\\\uBC4D-\\\\uBC67\\\\uBC69-\\\\uBC83\\\\uBC85-\\\\uBC9F\\\\uBCA1-\\\\uBCBB\\\\uBCBD-\\\\uBCD7\\\\uBCD9-\\\\uBCF3\\\\uBCF5-\\\\uBD0F\\\\uBD11-\\\\uBD2B\\\\uBD2D-\\\\uBD47\\\\uBD49-\\\\uBD63\\\\uBD65-\\\\uBD7F\\\\uBD81-\\\\uBD9B\\\\uBD9D-\\\\uBDB7\\\\uBDB9-\\\\uBDD3\\\\uBDD5-\\\\uBDEF\\\\uBDF1-\\\\uBE0B\\\\uBE0D-\\\\uBE27\\\\uBE29-\\\\uBE43\\\\uBE45-\\\\uBE5F\\\\uBE61-\\\\uBE7B\\\\uBE7D-\\\\uBE97\\\\uBE99-\\\\uBEB3\\\\uBEB5-\\\\uBECF\\\\uBED1-\\\\uBEEB\\\\uBEED-\\\\uBF07\\\\uBF09-\\\\uBF23\\\\uBF25-\\\\uBF3F\\\\uBF41-\\\\uBF5B\\\\uBF5D-\\\\uBF77\\\\uBF79-\\\\uBF93\\\\uBF95-\\\\uBFAF\\\\uBFB1-\\\\uBFCB\\\\uBFCD-\\\\uBFE7\\\\uBFE9-\\\\uC003\\\\uC005-\\\\uC01F\\\\uC021-\\\\uC03B\\\\uC03D-\\\\uC057\\\\uC059-\\\\uC073\\\\uC075-\\\\uC08F\\\\uC091-\\\\uC0AB\\\\uC0AD-\\\\uC0C7\\\\uC0C9-\\\\uC0E3\\\\uC0E5-\\\\uC0FF\\\\uC101-\\\\uC11B\\\\uC11D-\\\\uC137\\\\uC139-\\\\uC153\\\\uC155-\\\\uC16F\\\\uC171-\\\\uC18B\\\\uC18D-\\\\uC1A7\\\\uC1A9-\\\\uC1C3\\\\uC1C5-\\\\uC1DF\\\\uC1E1-\\\\uC1FB\\\\uC1FD-\\\\uC217\\\\uC219-\\\\uC233\\\\uC235-\\\\uC24F\\\\uC251-\\\\uC26B\\\\uC26D-\\\\uC287\\\\uC289-\\\\uC2A3\\\\uC2A5-\\\\uC2BF\\\\uC2C1-\\\\uC2DB\\\\uC2DD-\\\\uC2F7\\\\uC2F9-\\\\uC313\\\\uC315-\\\\uC32F\\\\uC331-\\\\uC34B\\\\uC34D-\\\\uC367\\\\uC369-\\\\uC383\\\\uC385-\\\\uC39F\\\\uC3A1-\\\\uC3BB\\\\uC3BD-\\\\uC3D7\\\\uC3D9-\\\\uC3F3\\\\uC3F5-\\\\uC40F\\\\uC411-\\\\uC42B\\\\uC42D-\\\\uC447\\\\uC449-\\\\uC463\\\\uC465-\\\\uC47F\\\\uC481-\\\\uC49B\\\\uC49D-\\\\uC4B7\\\\uC4B9-\\\\uC4D3\\\\uC4D5-\\\\uC4EF\\\\uC4F1-\\\\uC50B\\\\uC50D-\\\\uC527\\\\uC529-\\\\uC543\\\\uC545-\\\\uC55F\\\\uC561-\\\\uC57B\\\\uC57D-\\\\uC597\\\\uC599-\\\\uC5B3\\\\uC5B5-\\\\uC5CF\\\\uC5D1-\\\\uC5EB\\\\uC5ED-\\\\uC607\\\\uC609-\\\\uC623\\\\uC625-\\\\uC63F\\\\uC641-\\\\uC65B\\\\uC65D-\\\\uC677\\\\uC679-\\\\uC693\\\\uC695-\\\\uC6AF\\\\uC6B1-\\\\uC6CB\\\\uC6CD-\\\\uC6E7\\\\uC6E9-\\\\uC703\\\\uC705-\\\\uC71F\\\\uC721-\\\\uC73B\\\\uC73D-\\\\uC757\\\\uC759-\\\\uC773\\\\uC775-\\\\uC78F\\\\uC791-\\\\uC7AB\\\\uC7AD-\\\\uC7C7\\\\uC7C9-\\\\uC7E3\\\\uC7E5-\\\\uC7FF\\\\uC801-\\\\uC81B\\\\uC81D-\\\\uC837\\\\uC839-\\\\uC853\\\\uC855-\\\\uC86F\\\\uC871-\\\\uC88B\\\\uC88D-\\\\uC8A7\\\\uC8A9-\\\\uC8C3\\\\uC8C5-\\\\uC8DF\\\\uC8E1-\\\\uC8FB\\\\uC8FD-\\\\uC917\\\\uC919-\\\\uC933\\\\uC935-\\\\uC94F\\\\uC951-\\\\uC96B\\\\uC96D-\\\\uC987\\\\uC989-\\\\uC9A3\\\\uC9A5-\\\\uC9BF\\\\uC9C1-\\\\uC9DB\\\\uC9DD-\\\\uC9F7\\\\uC9F9-\\\\uCA13\\\\uCA15-\\\\uCA2F\\\\uCA31-\\\\uCA4B\\\\uCA4D-\\\\uCA67\\\\uCA69-\\\\uCA83\\\\uCA85-\\\\uCA9F\\\\uCAA1-\\\\uCABB\\\\uCABD-\\\\uCAD7\\\\uCAD9-\\\\uCAF3\\\\uCAF5-\\\\uCB0F\\\\uCB11-\\\\uCB2B\\\\uCB2D-\\\\uCB47\\\\uCB49-\\\\uCB63\\\\uCB65-\\\\uCB7F\\\\uCB81-\\\\uCB9B\\\\uCB9D-\\\\uCBB7\\\\uCBB9-\\\\uCBD3\\\\uCBD5-\\\\uCBEF\\\\uCBF1-\\\\uCC0B\\\\uCC0D-\\\\uCC27\\\\uCC29-\\\\uCC43\\\\uCC45-\\\\uCC5F\\\\uCC61-\\\\uCC7B\\\\uCC7D-\\\\uCC97\\\\uCC99-\\\\uCCB3\\\\uCCB5-\\\\uCCCF\\\\uCCD1-\\\\uCCEB\\\\uCCED-\\\\uCD07\\\\uCD09-\\\\uCD23\\\\uCD25-\\\\uCD3F\\\\uCD41-\\\\uCD5B\\\\uCD5D-\\\\uCD77\\\\uCD79-\\\\uCD93\\\\uCD95-\\\\uCDAF\\\\uCDB1-\\\\uCDCB\\\\uCDCD-\\\\uCDE7\\\\uCDE9-\\\\uCE03\\\\uCE05-\\\\uCE1F\\\\uCE21-\\\\uCE3B\\\\uCE3D-\\\\uCE57\\\\uCE59-\\\\uCE73\\\\uCE75-\\\\uCE8F\\\\uCE91-\\\\uCEAB\\\\uCEAD-\\\\uCEC7\\\\uCEC9-\\\\uCEE3\\\\uCEE5-\\\\uCEFF\\\\uCF01-\\\\uCF1B\\\\uCF1D-\\\\uCF37\\\\uCF39-\\\\uCF53\\\\uCF55-\\\\uCF6F\\\\uCF71-\\\\uCF8B\\\\uCF8D-\\\\uCFA7\\\\uCFA9-\\\\uCFC3\\\\uCFC5-\\\\uCFDF\\\\uCFE1-\\\\uCFFB\\\\uCFFD-\\\\uD017\\\\uD019-\\\\uD033\\\\uD035-\\\\uD04F\\\\uD051-\\\\uD06B\\\\uD06D-\\\\uD087\\\\uD089-\\\\uD0A3\\\\uD0A5-\\\\uD0BF\\\\uD0C1-\\\\uD0DB\\\\uD0DD-\\\\uD0F7\\\\uD0F9-\\\\uD113\\\\uD115-\\\\uD12F\\\\uD131-\\\\uD14B\\\\uD14D-\\\\uD167\\\\uD169-\\\\uD183\\\\uD185-\\\\uD19F\\\\uD1A1-\\\\uD1BB\\\\uD1BD-\\\\uD1D7\\\\uD1D9-\\\\uD1F3\\\\uD1F5-\\\\uD20F\\\\uD211-\\\\uD22B\\\\uD22D-\\\\uD247\\\\uD249-\\\\uD263\\\\uD265-\\\\uD27F\\\\uD281-\\\\uD29B\\\\uD29D-\\\\uD2B7\\\\uD2B9-\\\\uD2D3\\\\uD2D5-\\\\uD2EF\\\\uD2F1-\\\\uD30B\\\\uD30D-\\\\uD327\\\\uD329-\\\\uD343\\\\uD345-\\\\uD35F\\\\uD361-\\\\uD37B\\\\uD37D-\\\\uD397\\\\uD399-\\\\uD3B3\\\\uD3B5-\\\\uD3CF\\\\uD3D1-\\\\uD3EB\\\\uD3ED-\\\\uD407\\\\uD409-\\\\uD423\\\\uD425-\\\\uD43F\\\\uD441-\\\\uD45B\\\\uD45D-\\\\uD477\\\\uD479-\\\\uD493\\\\uD495-\\\\uD4AF\\\\uD4B1-\\\\uD4CB\\\\uD4CD-\\\\uD4E7\\\\uD4E9-\\\\uD503\\\\uD505-\\\\uD51F\\\\uD521-\\\\uD53B\\\\uD53D-\\\\uD557\\\\uD559-\\\\uD573\\\\uD575-\\\\uD58F\\\\uD591-\\\\uD5AB\\\\uD5AD-\\\\uD5C7\\\\uD5C9-\\\\uD5E3\\\\uD5E5-\\\\uD5FF\\\\uD601-\\\\uD61B\\\\uD61D-\\\\uD637\\\\uD639-\\\\uD653\\\\uD655-\\\\uD66F\\\\uD671-\\\\uD68B\\\\uD68D-\\\\uD6A7\\\\uD6A9-\\\\uD6C3\\\\uD6C5-\\\\uD6DF\\\\uD6E1-\\\\uD6FB\\\\uD6FD-\\\\uD717\\\\uD719-\\\\uD733\\\\uD735-\\\\uD74F\\\\uD751-\\\\uD76B\\\\uD76D-\\\\uD787\\\\uD789-\\\\uD7A3]\",\r\n                \"$LinkingConsonant\": \"[\\\\u0915-\\\\u0939\\\\u0958-\\\\u095F\\\\u0978-\\\\u097F\\\\u0995-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09DC\\\\u09DD\\\\u09DF\\\\u09F0\\\\u09F1\\\\u0A95-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0AF9\\\\u0B15-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B5C\\\\u0B5D\\\\u0B5F\\\\u0B71\\\\u0C15-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C58-\\\\u0C5A\\\\u0D15-\\\\u0D3A]\",\r\n                \"$Prepend\": \"(?:[\\\\u0600-\\\\u0605\\\\u06DD\\\\u070F\\\\u0890\\\\u0891\\\\u08E2\\\\u0D4E]|\\\\uD804[\\\\uDCBD\\\\uDCCD\\\\uDDC2\\\\uDDC3\\\\uDFD1]|\\\\uD806[\\\\uDD3F\\\\uDD41\\\\uDE3A\\\\uDE84-\\\\uDE89]|\\\\uD807[\\\\uDD46\\\\uDF02])\",\r\n                \"$RI\": \"(?:\\\\uD83C[\\\\uDDE6-\\\\uDDFF])\",\r\n                \"$SpacingMark\": \"(?:[\\\\u0903\\\\u093B\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u094F\\\\u0982\\\\u0983\\\\u09BF\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC1\\\\u0CC3\\\\u0CC4\\\\u0CF3\\\\u0D02\\\\u0D03\\\\u0D3F\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D82\\\\u0D83\\\\u0DD0\\\\u0DD1\\\\u0DD8-\\\\u0DDE\\\\u0DF2\\\\u0DF3\\\\u0E33\\\\u0EB3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u1031\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1084\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u1A19\\\\u1A1A\\\\u1A55\\\\u1A57\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B3E-\\\\u1B41\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BE7\\\\u1BEA-\\\\u1BEC\\\\u1BEE\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF7\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BE\\\\uA9BF\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAAEB\\\\uAAEE\\\\uAAEF\\\\uAAF5\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]|\\\\uD804[\\\\uDC00\\\\uDC02\\\\uDC82\\\\uDCB0-\\\\uDCB2\\\\uDCB7\\\\uDCB8\\\\uDD2C\\\\uDD45\\\\uDD46\\\\uDD82\\\\uDDB3-\\\\uDDB5\\\\uDDBF\\\\uDDCE\\\\uDE2C-\\\\uDE2E\\\\uDE32\\\\uDE33\\\\uDEE0-\\\\uDEE2\\\\uDF02\\\\uDF03\\\\uDF3F\\\\uDF41-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B\\\\uDF4C\\\\uDF62\\\\uDF63\\\\uDFB9\\\\uDFBA\\\\uDFCA\\\\uDFCC\\\\uDFCD]|\\\\uD805[\\\\uDC35-\\\\uDC37\\\\uDC40\\\\uDC41\\\\uDC45\\\\uDCB1\\\\uDCB2\\\\uDCB9\\\\uDCBB\\\\uDCBC\\\\uDCBE\\\\uDCC1\\\\uDDB0\\\\uDDB1\\\\uDDB8-\\\\uDDBB\\\\uDDBE\\\\uDE30-\\\\uDE32\\\\uDE3B\\\\uDE3C\\\\uDE3E\\\\uDEAC\\\\uDEAE\\\\uDEAF\\\\uDF1E\\\\uDF26]|\\\\uD806[\\\\uDC2C-\\\\uDC2E\\\\uDC38\\\\uDD31-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD40\\\\uDD42\\\\uDDD1-\\\\uDDD3\\\\uDDDC-\\\\uDDDF\\\\uDDE4\\\\uDE39\\\\uDE57\\\\uDE58\\\\uDE97]|\\\\uD807[\\\\uDC2F\\\\uDC3E\\\\uDCA9\\\\uDCB1\\\\uDCB4\\\\uDD8A-\\\\uDD8E\\\\uDD93\\\\uDD94\\\\uDD96\\\\uDEF5\\\\uDEF6\\\\uDF03\\\\uDF34\\\\uDF35\\\\uDF3E\\\\uDF3F]|\\\\uD818[\\\\uDD2A-\\\\uDD2C]|\\\\uD81B[\\\\uDF51-\\\\uDF87])\",\r\n                \"$T\": \"[\\\\u11A8-\\\\u11FF\\\\uD7CB-\\\\uD7FB]\",\r\n                \"$V\": \"(?:[\\\\u1160-\\\\u11A7\\\\uD7B0-\\\\uD7C6]|\\\\uD81B[\\\\uDD63\\\\uDD67-\\\\uDD6A])\",\r\n                \"$ZWJ\": \"\\\\u200D\"\r\n            }\r\n        },\r\n        \"sentence\": {\r\n            \"segmentRules\": {\r\n                \"10\": {\r\n                    \"after\": \"($Sp|$ParaSep)\",\r\n                    \"before\": \"$SATerm$Close*$Sp*\",\r\n                    \"breaks\": false\r\n                },\r\n                \"11\": {\r\n                    \"before\": \"$SATerm$Close*$Sp*$ParaSep?\",\r\n                    \"breaks\": true\r\n                },\r\n                \"3\": {\r\n                    \"after\": \"$LF\",\r\n                    \"before\": \"$CR\",\r\n                    \"breaks\": false\r\n                },\r\n                \"4\": {\r\n                    \"before\": \"$ParaSep\",\r\n                    \"breaks\": true\r\n                },\r\n                \"5\": {\r\n                    \"after\": \"(?:$Format|$Extend)\",\r\n                    \"breaks\": false\r\n                },\r\n                \"6\": {\r\n                    \"after\": \"$Numeric\",\r\n                    \"before\": \"$ATerm\",\r\n                    \"breaks\": false\r\n                },\r\n                \"7\": {\r\n                    \"after\": \"$Upper\",\r\n                    \"before\": \"($Upper|$Lower)$ATerm\",\r\n                    \"breaks\": false\r\n                },\r\n                \"8\": {\r\n                    \"after\": \"$NotPreLower_*$Lower\",\r\n                    \"before\": \"$ATerm$Close*$Sp*\",\r\n                    \"breaks\": false\r\n                },\r\n                \"8.1\": {\r\n                    \"after\": \"($SContinue|$SATerm)\",\r\n                    \"before\": \"$SATerm$Close*$Sp*\",\r\n                    \"breaks\": false\r\n                },\r\n                \"9\": {\r\n                    \"after\": \"($Close|$Sp|$ParaSep)\",\r\n                    \"before\": \"$SATerm$Close*\",\r\n                    \"breaks\": false\r\n                },\r\n                \"998\": {\r\n                    \"after\": \"$Any\",\r\n                    \"breaks\": false\r\n                }\r\n            },\r\n            \"suppressions\": [],\r\n            \"variables\": {\r\n                \"$ATerm\": \"([\\\\.\\\\u2024\\\\uFE52\\\\uFF0E](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Any\": \"(?:[\\\\0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])\",\r\n                \"$CR\": \"\\\\r\",\r\n                \"$Close\": \"((?:[\\\"'-\\\\)\\\\[\\\\]\\\\{\\\\}\\\\xAB\\\\xBB\\\\u0F3A-\\\\u0F3D\\\\u169B\\\\u169C\\\\u2018-\\\\u201F\\\\u2039\\\\u203A\\\\u2045\\\\u2046\\\\u207D\\\\u207E\\\\u208D\\\\u208E\\\\u2308-\\\\u230B\\\\u2329\\\\u232A\\\\u275B-\\\\u2760\\\\u2768-\\\\u2775\\\\u27C5\\\\u27C6\\\\u27E6-\\\\u27EF\\\\u2983-\\\\u2998\\\\u29D8-\\\\u29DB\\\\u29FC\\\\u29FD\\\\u2E00-\\\\u2E0D\\\\u2E1C\\\\u2E1D\\\\u2E20-\\\\u2E29\\\\u2E42\\\\u2E55-\\\\u2E5C\\\\u3008-\\\\u3011\\\\u3014-\\\\u301B\\\\u301D-\\\\u301F\\\\uFD3E\\\\uFD3F\\\\uFE17\\\\uFE18\\\\uFE35-\\\\uFE44\\\\uFE47\\\\uFE48\\\\uFE59-\\\\uFE5E\\\\uFF08\\\\uFF09\\\\uFF3B\\\\uFF3D\\\\uFF5B\\\\uFF5D\\\\uFF5F\\\\uFF60\\\\uFF62\\\\uFF63]|\\\\uD83D[\\\\uDE76-\\\\uDE78])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Extend\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C\\\\u200D\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\r\n                \"$FE\": \"(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\r\n                \"$Format\": \"(?:[\\\\xAD\\\\u061C\\\\u070F\\\\u180E\\\\u200B\\\\u200E\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\uFEFF\\\\uFFF9-\\\\uFFFB]|\\\\uD80D[\\\\uDC30-\\\\uDC3F]|\\\\uD82F[\\\\uDCA0-\\\\uDCA3]|\\\\uD834[\\\\uDD73-\\\\uDD7A]|\\\\uDB40\\\\uDC01)\",\r\n                \"$LF\": \"\\\\n\",\r\n                \"$Lower\": \"((?:[a-z\\\\xAA\\\\xB5\\\\xBA\\\\xDF-\\\\xF6\\\\xF8-\\\\xFF\\\\u0101\\\\u0103\\\\u0105\\\\u0107\\\\u0109\\\\u010B\\\\u010D\\\\u010F\\\\u0111\\\\u0113\\\\u0115\\\\u0117\\\\u0119\\\\u011B\\\\u011D\\\\u011F\\\\u0121\\\\u0123\\\\u0125\\\\u0127\\\\u0129\\\\u012B\\\\u012D\\\\u012F\\\\u0131\\\\u0133\\\\u0135\\\\u0137\\\\u0138\\\\u013A\\\\u013C\\\\u013E\\\\u0140\\\\u0142\\\\u0144\\\\u0146\\\\u0148\\\\u0149\\\\u014B\\\\u014D\\\\u014F\\\\u0151\\\\u0153\\\\u0155\\\\u0157\\\\u0159\\\\u015B\\\\u015D\\\\u015F\\\\u0161\\\\u0163\\\\u0165\\\\u0167\\\\u0169\\\\u016B\\\\u016D\\\\u016F\\\\u0171\\\\u0173\\\\u0175\\\\u0177\\\\u017A\\\\u017C\\\\u017E-\\\\u0180\\\\u0183\\\\u0185\\\\u0188\\\\u018C\\\\u018D\\\\u0192\\\\u0195\\\\u0199-\\\\u019B\\\\u019E\\\\u01A1\\\\u01A3\\\\u01A5\\\\u01A8\\\\u01AA\\\\u01AB\\\\u01AD\\\\u01B0\\\\u01B4\\\\u01B6\\\\u01B9\\\\u01BA\\\\u01BD-\\\\u01BF\\\\u01C6\\\\u01C9\\\\u01CC\\\\u01CE\\\\u01D0\\\\u01D2\\\\u01D4\\\\u01D6\\\\u01D8\\\\u01DA\\\\u01DC\\\\u01DD\\\\u01DF\\\\u01E1\\\\u01E3\\\\u01E5\\\\u01E7\\\\u01E9\\\\u01EB\\\\u01ED\\\\u01EF\\\\u01F0\\\\u01F3\\\\u01F5\\\\u01F9\\\\u01FB\\\\u01FD\\\\u01FF\\\\u0201\\\\u0203\\\\u0205\\\\u0207\\\\u0209\\\\u020B\\\\u020D\\\\u020F\\\\u0211\\\\u0213\\\\u0215\\\\u0217\\\\u0219\\\\u021B\\\\u021D\\\\u021F\\\\u0221\\\\u0223\\\\u0225\\\\u0227\\\\u0229\\\\u022B\\\\u022D\\\\u022F\\\\u0231\\\\u0233-\\\\u0239\\\\u023C\\\\u023F\\\\u0240\\\\u0242\\\\u0247\\\\u0249\\\\u024B\\\\u024D\\\\u024F-\\\\u0293\\\\u0295-\\\\u02B8\\\\u02C0\\\\u02C1\\\\u02E0-\\\\u02E4\\\\u0371\\\\u0373\\\\u0377\\\\u037A-\\\\u037D\\\\u0390\\\\u03AC-\\\\u03CE\\\\u03D0\\\\u03D1\\\\u03D5-\\\\u03D7\\\\u03D9\\\\u03DB\\\\u03DD\\\\u03DF\\\\u03E1\\\\u03E3\\\\u03E5\\\\u03E7\\\\u03E9\\\\u03EB\\\\u03ED\\\\u03EF-\\\\u03F3\\\\u03F5\\\\u03F8\\\\u03FB\\\\u03FC\\\\u0430-\\\\u045F\\\\u0461\\\\u0463\\\\u0465\\\\u0467\\\\u0469\\\\u046B\\\\u046D\\\\u046F\\\\u0471\\\\u0473\\\\u0475\\\\u0477\\\\u0479\\\\u047B\\\\u047D\\\\u047F\\\\u0481\\\\u048B\\\\u048D\\\\u048F\\\\u0491\\\\u0493\\\\u0495\\\\u0497\\\\u0499\\\\u049B\\\\u049D\\\\u049F\\\\u04A1\\\\u04A3\\\\u04A5\\\\u04A7\\\\u04A9\\\\u04AB\\\\u04AD\\\\u04AF\\\\u04B1\\\\u04B3\\\\u04B5\\\\u04B7\\\\u04B9\\\\u04BB\\\\u04BD\\\\u04BF\\\\u04C2\\\\u04C4\\\\u04C6\\\\u04C8\\\\u04CA\\\\u04CC\\\\u04CE\\\\u04CF\\\\u04D1\\\\u04D3\\\\u04D5\\\\u04D7\\\\u04D9\\\\u04DB\\\\u04DD\\\\u04DF\\\\u04E1\\\\u04E3\\\\u04E5\\\\u04E7\\\\u04E9\\\\u04EB\\\\u04ED\\\\u04EF\\\\u04F1\\\\u04F3\\\\u04F5\\\\u04F7\\\\u04F9\\\\u04FB\\\\u04FD\\\\u04FF\\\\u0501\\\\u0503\\\\u0505\\\\u0507\\\\u0509\\\\u050B\\\\u050D\\\\u050F\\\\u0511\\\\u0513\\\\u0515\\\\u0517\\\\u0519\\\\u051B\\\\u051D\\\\u051F\\\\u0521\\\\u0523\\\\u0525\\\\u0527\\\\u0529\\\\u052B\\\\u052D\\\\u052F\\\\u0560-\\\\u0588\\\\u10FC\\\\u13F8-\\\\u13FD\\\\u1C80-\\\\u1C88\\\\u1C8A\\\\u1D00-\\\\u1DBF\\\\u1E01\\\\u1E03\\\\u1E05\\\\u1E07\\\\u1E09\\\\u1E0B\\\\u1E0D\\\\u1E0F\\\\u1E11\\\\u1E13\\\\u1E15\\\\u1E17\\\\u1E19\\\\u1E1B\\\\u1E1D\\\\u1E1F\\\\u1E21\\\\u1E23\\\\u1E25\\\\u1E27\\\\u1E29\\\\u1E2B\\\\u1E2D\\\\u1E2F\\\\u1E31\\\\u1E33\\\\u1E35\\\\u1E37\\\\u1E39\\\\u1E3B\\\\u1E3D\\\\u1E3F\\\\u1E41\\\\u1E43\\\\u1E45\\\\u1E47\\\\u1E49\\\\u1E4B\\\\u1E4D\\\\u1E4F\\\\u1E51\\\\u1E53\\\\u1E55\\\\u1E57\\\\u1E59\\\\u1E5B\\\\u1E5D\\\\u1E5F\\\\u1E61\\\\u1E63\\\\u1E65\\\\u1E67\\\\u1E69\\\\u1E6B\\\\u1E6D\\\\u1E6F\\\\u1E71\\\\u1E73\\\\u1E75\\\\u1E77\\\\u1E79\\\\u1E7B\\\\u1E7D\\\\u1E7F\\\\u1E81\\\\u1E83\\\\u1E85\\\\u1E87\\\\u1E89\\\\u1E8B\\\\u1E8D\\\\u1E8F\\\\u1E91\\\\u1E93\\\\u1E95-\\\\u1E9D\\\\u1E9F\\\\u1EA1\\\\u1EA3\\\\u1EA5\\\\u1EA7\\\\u1EA9\\\\u1EAB\\\\u1EAD\\\\u1EAF\\\\u1EB1\\\\u1EB3\\\\u1EB5\\\\u1EB7\\\\u1EB9\\\\u1EBB\\\\u1EBD\\\\u1EBF\\\\u1EC1\\\\u1EC3\\\\u1EC5\\\\u1EC7\\\\u1EC9\\\\u1ECB\\\\u1ECD\\\\u1ECF\\\\u1ED1\\\\u1ED3\\\\u1ED5\\\\u1ED7\\\\u1ED9\\\\u1EDB\\\\u1EDD\\\\u1EDF\\\\u1EE1\\\\u1EE3\\\\u1EE5\\\\u1EE7\\\\u1EE9\\\\u1EEB\\\\u1EED\\\\u1EEF\\\\u1EF1\\\\u1EF3\\\\u1EF5\\\\u1EF7\\\\u1EF9\\\\u1EFB\\\\u1EFD\\\\u1EFF-\\\\u1F07\\\\u1F10-\\\\u1F15\\\\u1F20-\\\\u1F27\\\\u1F30-\\\\u1F37\\\\u1F40-\\\\u1F45\\\\u1F50-\\\\u1F57\\\\u1F60-\\\\u1F67\\\\u1F70-\\\\u1F7D\\\\u1F80-\\\\u1F87\\\\u1F90-\\\\u1F97\\\\u1FA0-\\\\u1FA7\\\\u1FB0-\\\\u1FB4\\\\u1FB6\\\\u1FB7\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6\\\\u1FC7\\\\u1FD0-\\\\u1FD3\\\\u1FD6\\\\u1FD7\\\\u1FE0-\\\\u1FE7\\\\u1FF2-\\\\u1FF4\\\\u1FF6\\\\u1FF7\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u210A\\\\u210E\\\\u210F\\\\u2113\\\\u212F\\\\u2134\\\\u2139\\\\u213C\\\\u213D\\\\u2146-\\\\u2149\\\\u214E\\\\u2170-\\\\u217F\\\\u2184\\\\u24D0-\\\\u24E9\\\\u2C30-\\\\u2C5F\\\\u2C61\\\\u2C65\\\\u2C66\\\\u2C68\\\\u2C6A\\\\u2C6C\\\\u2C71\\\\u2C73\\\\u2C74\\\\u2C76-\\\\u2C7D\\\\u2C81\\\\u2C83\\\\u2C85\\\\u2C87\\\\u2C89\\\\u2C8B\\\\u2C8D\\\\u2C8F\\\\u2C91\\\\u2C93\\\\u2C95\\\\u2C97\\\\u2C99\\\\u2C9B\\\\u2C9D\\\\u2C9F\\\\u2CA1\\\\u2CA3\\\\u2CA5\\\\u2CA7\\\\u2CA9\\\\u2CAB\\\\u2CAD\\\\u2CAF\\\\u2CB1\\\\u2CB3\\\\u2CB5\\\\u2CB7\\\\u2CB9\\\\u2CBB\\\\u2CBD\\\\u2CBF\\\\u2CC1\\\\u2CC3\\\\u2CC5\\\\u2CC7\\\\u2CC9\\\\u2CCB\\\\u2CCD\\\\u2CCF\\\\u2CD1\\\\u2CD3\\\\u2CD5\\\\u2CD7\\\\u2CD9\\\\u2CDB\\\\u2CDD\\\\u2CDF\\\\u2CE1\\\\u2CE3\\\\u2CE4\\\\u2CEC\\\\u2CEE\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\uA641\\\\uA643\\\\uA645\\\\uA647\\\\uA649\\\\uA64B\\\\uA64D\\\\uA64F\\\\uA651\\\\uA653\\\\uA655\\\\uA657\\\\uA659\\\\uA65B\\\\uA65D\\\\uA65F\\\\uA661\\\\uA663\\\\uA665\\\\uA667\\\\uA669\\\\uA66B\\\\uA66D\\\\uA681\\\\uA683\\\\uA685\\\\uA687\\\\uA689\\\\uA68B\\\\uA68D\\\\uA68F\\\\uA691\\\\uA693\\\\uA695\\\\uA697\\\\uA699\\\\uA69B-\\\\uA69D\\\\uA723\\\\uA725\\\\uA727\\\\uA729\\\\uA72B\\\\uA72D\\\\uA72F-\\\\uA731\\\\uA733\\\\uA735\\\\uA737\\\\uA739\\\\uA73B\\\\uA73D\\\\uA73F\\\\uA741\\\\uA743\\\\uA745\\\\uA747\\\\uA749\\\\uA74B\\\\uA74D\\\\uA74F\\\\uA751\\\\uA753\\\\uA755\\\\uA757\\\\uA759\\\\uA75B\\\\uA75D\\\\uA75F\\\\uA761\\\\uA763\\\\uA765\\\\uA767\\\\uA769\\\\uA76B\\\\uA76D\\\\uA76F-\\\\uA778\\\\uA77A\\\\uA77C\\\\uA77F\\\\uA781\\\\uA783\\\\uA785\\\\uA787\\\\uA78C\\\\uA78E\\\\uA791\\\\uA793-\\\\uA795\\\\uA797\\\\uA799\\\\uA79B\\\\uA79D\\\\uA79F\\\\uA7A1\\\\uA7A3\\\\uA7A5\\\\uA7A7\\\\uA7A9\\\\uA7AF\\\\uA7B5\\\\uA7B7\\\\uA7B9\\\\uA7BB\\\\uA7BD\\\\uA7BF\\\\uA7C1\\\\uA7C3\\\\uA7C8\\\\uA7CA\\\\uA7CD\\\\uA7D1\\\\uA7D3\\\\uA7D5\\\\uA7D7\\\\uA7D9\\\\uA7DB\\\\uA7F2-\\\\uA7F4\\\\uA7F6\\\\uA7F8-\\\\uA7FA\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB69\\\\uAB70-\\\\uABBF\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFF41-\\\\uFF5A]|\\\\uD801[\\\\uDC28-\\\\uDC4F\\\\uDCD8-\\\\uDCFB\\\\uDD97-\\\\uDDA1\\\\uDDA3-\\\\uDDB1\\\\uDDB3-\\\\uDDB9\\\\uDDBB\\\\uDDBC\\\\uDF80\\\\uDF83-\\\\uDF85\\\\uDF87-\\\\uDFB0\\\\uDFB2-\\\\uDFBA]|\\\\uD803[\\\\uDCC0-\\\\uDCF2\\\\uDD70-\\\\uDD85]|\\\\uD806[\\\\uDCC0-\\\\uDCDF]|\\\\uD81B[\\\\uDE60-\\\\uDE7F]|\\\\uD835[\\\\uDC1A-\\\\uDC33\\\\uDC4E-\\\\uDC54\\\\uDC56-\\\\uDC67\\\\uDC82-\\\\uDC9B\\\\uDCB6-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDCCF\\\\uDCEA-\\\\uDD03\\\\uDD1E-\\\\uDD37\\\\uDD52-\\\\uDD6B\\\\uDD86-\\\\uDD9F\\\\uDDBA-\\\\uDDD3\\\\uDDEE-\\\\uDE07\\\\uDE22-\\\\uDE3B\\\\uDE56-\\\\uDE6F\\\\uDE8A-\\\\uDEA5\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEE1\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF1B\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF55\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDF8F\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFC9\\\\uDFCB]|\\\\uD837[\\\\uDF00-\\\\uDF09\\\\uDF0B-\\\\uDF1E\\\\uDF25-\\\\uDF2A]|\\\\uD838[\\\\uDC30-\\\\uDC6D]|\\\\uD83A[\\\\uDD22-\\\\uDD43])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$NotPreLower_\": \"(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E- \\\"-\\\\x2D\\\\/->@\\\\[-`\\\\{-\\\\x84\\\\x86-\\\\xA9\\\\xAB-\\\\xB4\\\\xB6-\\\\xB9\\\\xBB-\\\\xBF\\\\xD7\\\\xF7\\\\u02C2-\\\\u02C5\\\\u02D2-\\\\u02DF\\\\u02E5-\\\\u02EB\\\\u02ED\\\\u02EF-\\\\u036F\\\\u0375\\\\u0378\\\\u0379\\\\u037E\\\\u0380-\\\\u0385\\\\u0387\\\\u038B\\\\u038D\\\\u03A2\\\\u03F6\\\\u0482-\\\\u0489\\\\u0530\\\\u0557\\\\u0558\\\\u055A-\\\\u055F\\\\u058A-\\\\u05CF\\\\u05EB-\\\\u05EE\\\\u05F4-\\\\u061C\\\\u064B-\\\\u066D\\\\u0670\\\\u06D6-\\\\u06E4\\\\u06E7-\\\\u06ED\\\\u06F0-\\\\u06F9\\\\u06FD\\\\u06FE\\\\u0703-\\\\u070F\\\\u0711\\\\u0730-\\\\u074C\\\\u07A6-\\\\u07B0\\\\u07B2-\\\\u07C9\\\\u07EB-\\\\u07F3\\\\u07F6-\\\\u07F8\\\\u07FB-\\\\u07FF\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u0836\\\\u0838\\\\u083A-\\\\u083C\\\\u083F\\\\u0859-\\\\u085F\\\\u086B-\\\\u086F\\\\u0888\\\\u088F-\\\\u089F\\\\u08CA-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0966-\\\\u0970\\\\u0981-\\\\u0984\\\\u098D\\\\u098E\\\\u0991\\\\u0992\\\\u09A9\\\\u09B1\\\\u09B3-\\\\u09B5\\\\u09BA-\\\\u09BC\\\\u09BE-\\\\u09CD\\\\u09CF-\\\\u09DB\\\\u09DE\\\\u09E2-\\\\u09EF\\\\u09F2-\\\\u09FB\\\\u09FD-\\\\u0A04\\\\u0A0B-\\\\u0A0E\\\\u0A11\\\\u0A12\\\\u0A29\\\\u0A31\\\\u0A34\\\\u0A37\\\\u0A3A-\\\\u0A58\\\\u0A5D\\\\u0A5F-\\\\u0A71\\\\u0A75-\\\\u0A84\\\\u0A8E\\\\u0A92\\\\u0AA9\\\\u0AB1\\\\u0AB4\\\\u0ABA-\\\\u0ABC\\\\u0ABE-\\\\u0ACF\\\\u0AD1-\\\\u0ADF\\\\u0AE2-\\\\u0AF8\\\\u0AFA-\\\\u0B04\\\\u0B0D\\\\u0B0E\\\\u0B11\\\\u0B12\\\\u0B29\\\\u0B31\\\\u0B34\\\\u0B3A-\\\\u0B3C\\\\u0B3E-\\\\u0B5B\\\\u0B5E\\\\u0B62-\\\\u0B70\\\\u0B72-\\\\u0B82\\\\u0B84\\\\u0B8B-\\\\u0B8D\\\\u0B91\\\\u0B96-\\\\u0B98\\\\u0B9B\\\\u0B9D\\\\u0BA0-\\\\u0BA2\\\\u0BA5-\\\\u0BA7\\\\u0BAB-\\\\u0BAD\\\\u0BBA-\\\\u0BCF\\\\u0BD1-\\\\u0C04\\\\u0C0D\\\\u0C11\\\\u0C29\\\\u0C3A-\\\\u0C3C\\\\u0C3E-\\\\u0C57\\\\u0C5B\\\\u0C5C\\\\u0C5E\\\\u0C5F\\\\u0C62-\\\\u0C7F\\\\u0C81-\\\\u0C84\\\\u0C8D\\\\u0C91\\\\u0CA9\\\\u0CB4\\\\u0CBA-\\\\u0CBC\\\\u0CBE-\\\\u0CDC\\\\u0CDF\\\\u0CE2-\\\\u0CF0\\\\u0CF3-\\\\u0D03\\\\u0D0D\\\\u0D11\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D4D\\\\u0D4F-\\\\u0D53\\\\u0D57-\\\\u0D5E\\\\u0D62-\\\\u0D79\\\\u0D80-\\\\u0D84\\\\u0D97-\\\\u0D99\\\\u0DB2\\\\u0DBC\\\\u0DBE\\\\u0DBF\\\\u0DC7-\\\\u0E00\\\\u0E31\\\\u0E34-\\\\u0E3F\\\\u0E47-\\\\u0E80\\\\u0E83\\\\u0E85\\\\u0E8B\\\\u0EA4\\\\u0EA6\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EBE\\\\u0EBF\\\\u0EC5\\\\u0EC7-\\\\u0EDB\\\\u0EE0-\\\\u0EFF\\\\u0F01-\\\\u0F3F\\\\u0F48\\\\u0F6D-\\\\u0F87\\\\u0F8D-\\\\u0FFF\\\\u102B-\\\\u103E\\\\u1040-\\\\u1049\\\\u104C-\\\\u104F\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F-\\\\u109F\\\\u10C6\\\\u10C8-\\\\u10CC\\\\u10CE\\\\u10CF\\\\u10FB\\\\u1249\\\\u124E\\\\u124F\\\\u1257\\\\u1259\\\\u125E\\\\u125F\\\\u1289\\\\u128E\\\\u128F\\\\u12B1\\\\u12B6\\\\u12B7\\\\u12BF\\\\u12C1\\\\u12C6\\\\u12C7\\\\u12D7\\\\u1311\\\\u1316\\\\u1317\\\\u135B-\\\\u1361\\\\u1363-\\\\u1366\\\\u1369-\\\\u137F\\\\u1390-\\\\u139F\\\\u13F6\\\\u13F7\\\\u13FE-\\\\u1400\\\\u166D\\\\u1680\\\\u169B-\\\\u169F\\\\u16EB-\\\\u16ED\\\\u16F9-\\\\u16FF\\\\u1712-\\\\u171E\\\\u1732-\\\\u1734\\\\u1737-\\\\u173F\\\\u1752-\\\\u175F\\\\u176D\\\\u1771-\\\\u177F\\\\u17B4-\\\\u17D3\\\\u17D6\\\\u17D8-\\\\u17DB\\\\u17DD-\\\\u1802\\\\u1804-\\\\u1808\\\\u180A-\\\\u181F\\\\u1879-\\\\u187F\\\\u1885\\\\u1886\\\\u18A9\\\\u18AB-\\\\u18AF\\\\u18F6-\\\\u18FF\\\\u191F-\\\\u1943\\\\u1946-\\\\u194F\\\\u196E\\\\u196F\\\\u1975-\\\\u197F\\\\u19AC-\\\\u19AF\\\\u19CA-\\\\u19FF\\\\u1A17-\\\\u1A1F\\\\u1A55-\\\\u1AA6\\\\u1AAC-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B4D\\\\u1B50-\\\\u1B59\\\\u1B5C\\\\u1B5D\\\\u1B60-\\\\u1B7C\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BB0-\\\\u1BB9\\\\u1BE6-\\\\u1BFF\\\\u1C24-\\\\u1C3A\\\\u1C3D-\\\\u1C4C\\\\u1C50-\\\\u1C59\\\\u1C8B-\\\\u1C8F\\\\u1CBB\\\\u1CBC\\\\u1CC0-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1CFB-\\\\u1CFF\\\\u1DC0-\\\\u1DFF\\\\u1F16\\\\u1F17\\\\u1F1E\\\\u1F1F\\\\u1F46\\\\u1F47\\\\u1F4E\\\\u1F4F\\\\u1F58\\\\u1F5A\\\\u1F5C\\\\u1F5E\\\\u1F7E\\\\u1F7F\\\\u1FB5\\\\u1FBD\\\\u1FBF-\\\\u1FC1\\\\u1FC5\\\\u1FCD-\\\\u1FCF\\\\u1FD4\\\\u1FD5\\\\u1FDC-\\\\u1FDF\\\\u1FED-\\\\u1FF1\\\\u1FF5\\\\u1FFD-\\\\u2023\\\\u2025-\\\\u2027\\\\u202A-\\\\u203B\\\\u203E-\\\\u2046\\\\u204A-\\\\u2070\\\\u2072-\\\\u207E\\\\u2080-\\\\u208F\\\\u209D-\\\\u2101\\\\u2103-\\\\u2106\\\\u2108\\\\u2109\\\\u2114\\\\u2116-\\\\u2118\\\\u211E-\\\\u2123\\\\u2125\\\\u2127\\\\u2129\\\\u212E\\\\u213A\\\\u213B\\\\u2140-\\\\u2144\\\\u214A-\\\\u214D\\\\u214F-\\\\u215F\\\\u2189-\\\\u24B5\\\\u24EA-\\\\u2BFF\\\\u2CE5-\\\\u2CEA\\\\u2CEF-\\\\u2CF1\\\\u2CF4-\\\\u2CF8\\\\u2CFC-\\\\u2CFF\\\\u2D26\\\\u2D28-\\\\u2D2C\\\\u2D2E\\\\u2D2F\\\\u2D68-\\\\u2D6E\\\\u2D70-\\\\u2D7F\\\\u2D97-\\\\u2D9F\\\\u2DA7\\\\u2DAF\\\\u2DB7\\\\u2DBF\\\\u2DC7\\\\u2DCF\\\\u2DD7\\\\u2DDF-\\\\u2E2D\\\\u2E30-\\\\u2E3B\\\\u2E3D-\\\\u2E52\\\\u2E55-\\\\u3001\\\\u3003\\\\u3004\\\\u3008-\\\\u3020\\\\u302A-\\\\u3030\\\\u3036\\\\u3037\\\\u303D-\\\\u3040\\\\u3097-\\\\u309C\\\\u30A0\\\\u30FB\\\\u3100-\\\\u3104\\\\u3130\\\\u318F-\\\\u319F\\\\u31C0-\\\\u31EF\\\\u3200-\\\\u33FF\\\\u4DC0-\\\\u4DFF\\\\uA48D-\\\\uA4CF\\\\uA4FE\\\\uA60D\\\\uA620-\\\\uA629\\\\uA62C-\\\\uA63F\\\\uA66F-\\\\uA67E\\\\uA69E\\\\uA69F\\\\uA6F0-\\\\uA6F2\\\\uA6F4-\\\\uA6F6\\\\uA6F8-\\\\uA716\\\\uA720\\\\uA721\\\\uA789\\\\uA78A\\\\uA7CE\\\\uA7CF\\\\uA7D2\\\\uA7D4\\\\uA7DD-\\\\uA7F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA83F\\\\uA874\\\\uA875\\\\uA878-\\\\uA881\\\\uA8B4-\\\\uA8CD\\\\uA8D0-\\\\uA8F1\\\\uA8F8-\\\\uA8FA\\\\uA8FC\\\\uA8FF-\\\\uA909\\\\uA926-\\\\uA92E\\\\uA947-\\\\uA95F\\\\uA97D-\\\\uA983\\\\uA9B3-\\\\uA9C7\\\\uA9CA-\\\\uA9CE\\\\uA9D0-\\\\uA9DF\\\\uA9E5\\\\uA9F0-\\\\uA9F9\\\\uA9FF\\\\uAA29-\\\\uAA3F\\\\uAA43\\\\uAA4C-\\\\uAA5C\\\\uAA77-\\\\uAA79\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAC3-\\\\uAADA\\\\uAADE\\\\uAADF\\\\uAAEB-\\\\uAAEF\\\\uAAF5-\\\\uAB00\\\\uAB07\\\\uAB08\\\\uAB0F\\\\uAB10\\\\uAB17-\\\\uAB1F\\\\uAB27\\\\uAB2F\\\\uAB5B\\\\uAB6A-\\\\uAB6F\\\\uABE3-\\\\uABEA\\\\uABEC-\\\\uABFF\\\\uD7A4-\\\\uD7AF\\\\uD7C7-\\\\uD7CA\\\\uD7FC-\\\\uD7FF\\\\uE000-\\\\uF8FF\\\\uFA6E\\\\uFA6F\\\\uFADA-\\\\uFAFF\\\\uFB07-\\\\uFB12\\\\uFB18-\\\\uFB1C\\\\uFB1E\\\\uFB29\\\\uFB37\\\\uFB3D\\\\uFB3F\\\\uFB42\\\\uFB45\\\\uFBB2-\\\\uFBD2\\\\uFD3E-\\\\uFD4F\\\\uFD90\\\\uFD91\\\\uFDC8-\\\\uFDEF\\\\uFDFC-\\\\uFE11\\\\uFE13\\\\uFE14\\\\uFE17-\\\\uFE51\\\\uFE53-\\\\uFE55\\\\uFE58-\\\\uFE6F\\\\uFE75\\\\uFEFD-\\\\uFF00\\\\uFF02-\\\\uFF0D\\\\uFF0F-\\\\uFF1E\\\\uFF20\\\\uFF3B-\\\\uFF40\\\\uFF5B-\\\\uFF60\\\\uFF62-\\\\uFF65\\\\uFF9E\\\\uFF9F\\\\uFFBF-\\\\uFFC1\\\\uFFC8\\\\uFFC9\\\\uFFD0\\\\uFFD1\\\\uFFD8\\\\uFFD9\\\\uFFDD-\\\\uFFFF]|\\\\uD800[\\\\uDC0C\\\\uDC27\\\\uDC3B\\\\uDC3E\\\\uDC4E\\\\uDC4F\\\\uDC5E-\\\\uDC7F\\\\uDCFB-\\\\uDD3F\\\\uDD75-\\\\uDE7F\\\\uDE9D-\\\\uDE9F\\\\uDED1-\\\\uDEFF\\\\uDF20-\\\\uDF2C\\\\uDF4B-\\\\uDF4F\\\\uDF76-\\\\uDF7F\\\\uDF9E\\\\uDF9F\\\\uDFC4-\\\\uDFC7\\\\uDFD0\\\\uDFD6-\\\\uDFFF]|\\\\uD801[\\\\uDC9E-\\\\uDCAF\\\\uDCD4-\\\\uDCD7\\\\uDCFC-\\\\uDCFF\\\\uDD28-\\\\uDD2F\\\\uDD64-\\\\uDD6F\\\\uDD7B\\\\uDD8B\\\\uDD93\\\\uDD96\\\\uDDA2\\\\uDDB2\\\\uDDBA\\\\uDDBD-\\\\uDDBF\\\\uDDF4-\\\\uDDFF\\\\uDF37-\\\\uDF3F\\\\uDF56-\\\\uDF5F\\\\uDF68-\\\\uDF7F\\\\uDF86\\\\uDFB1\\\\uDFBB-\\\\uDFFF]|\\\\uD802[\\\\uDC06\\\\uDC07\\\\uDC09\\\\uDC36\\\\uDC39-\\\\uDC3B\\\\uDC3D\\\\uDC3E\\\\uDC56-\\\\uDC5F\\\\uDC77-\\\\uDC7F\\\\uDC9F-\\\\uDCDF\\\\uDCF3\\\\uDCF6-\\\\uDCFF\\\\uDD16-\\\\uDD1F\\\\uDD3A-\\\\uDD7F\\\\uDDB8-\\\\uDDBD\\\\uDDC0-\\\\uDDFF\\\\uDE01-\\\\uDE0F\\\\uDE14\\\\uDE18\\\\uDE36-\\\\uDE55\\\\uDE58-\\\\uDE5F\\\\uDE7D-\\\\uDE7F\\\\uDE9D-\\\\uDEBF\\\\uDEC8\\\\uDEE5-\\\\uDEFF\\\\uDF36-\\\\uDF3F\\\\uDF56-\\\\uDF5F\\\\uDF73-\\\\uDF7F\\\\uDF92-\\\\uDFFF]|\\\\uD803[\\\\uDC49-\\\\uDC7F\\\\uDCB3-\\\\uDCBF\\\\uDCF3-\\\\uDCFF\\\\uDD24-\\\\uDD49\\\\uDD66-\\\\uDD6E\\\\uDD86-\\\\uDE7F\\\\uDEAA-\\\\uDEAF\\\\uDEB2-\\\\uDEC1\\\\uDEC5-\\\\uDEFF\\\\uDF1D-\\\\uDF26\\\\uDF28-\\\\uDF2F\\\\uDF46-\\\\uDF54\\\\uDF5A-\\\\uDF6F\\\\uDF82-\\\\uDF85\\\\uDF8A-\\\\uDFAF\\\\uDFC5-\\\\uDFDF\\\\uDFF7-\\\\uDFFF]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC49-\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC76-\\\\uDC82\\\\uDCB0-\\\\uDCBD\\\\uDCC2-\\\\uDCCF\\\\uDCE9-\\\\uDD02\\\\uDD27-\\\\uDD40\\\\uDD45\\\\uDD46\\\\uDD48-\\\\uDD4F\\\\uDD73-\\\\uDD75\\\\uDD77-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC7-\\\\uDDCC\\\\uDDCE-\\\\uDDD9\\\\uDDDB\\\\uDDDD\\\\uDDE0-\\\\uDDFF\\\\uDE12\\\\uDE2C-\\\\uDE37\\\\uDE3A\\\\uDE3D\\\\uDE3E\\\\uDE41-\\\\uDE7F\\\\uDE87\\\\uDE89\\\\uDE8E\\\\uDE9E\\\\uDEAA-\\\\uDEAF\\\\uDEDF-\\\\uDF04\\\\uDF0D\\\\uDF0E\\\\uDF11\\\\uDF12\\\\uDF29\\\\uDF31\\\\uDF34\\\\uDF3A-\\\\uDF3C\\\\uDF3E-\\\\uDF4F\\\\uDF51-\\\\uDF5C\\\\uDF62-\\\\uDF7F\\\\uDF8A\\\\uDF8C\\\\uDF8D\\\\uDF8F\\\\uDFB6\\\\uDFB8-\\\\uDFD0\\\\uDFD2\\\\uDFD6-\\\\uDFFF]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC4D-\\\\uDC5E\\\\uDC62-\\\\uDC7F\\\\uDCB0-\\\\uDCC3\\\\uDCC6\\\\uDCC8-\\\\uDD7F\\\\uDDAF-\\\\uDDC1\\\\uDDC4-\\\\uDDC8\\\\uDDDC-\\\\uDDFF\\\\uDE30-\\\\uDE40\\\\uDE43\\\\uDE45-\\\\uDE7F\\\\uDEAB-\\\\uDEB7\\\\uDEB9-\\\\uDEFF\\\\uDF1B-\\\\uDF3B\\\\uDF3F\\\\uDF47-\\\\uDFFF]|\\\\uD806[\\\\uDC2C-\\\\uDC9F\\\\uDCE0-\\\\uDCFE\\\\uDD07\\\\uDD08\\\\uDD0A\\\\uDD0B\\\\uDD14\\\\uDD17\\\\uDD30-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDD45\\\\uDD47-\\\\uDD9F\\\\uDDA8\\\\uDDA9\\\\uDDD1-\\\\uDDE0\\\\uDDE2\\\\uDDE4-\\\\uDDFF\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE41\\\\uDE44-\\\\uDE4F\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE9A\\\\uDE9E-\\\\uDEAF\\\\uDEF9-\\\\uDFBF\\\\uDFE1-\\\\uDFFF]|\\\\uD807[\\\\uDC09\\\\uDC2F-\\\\uDC3F\\\\uDC43-\\\\uDC71\\\\uDC90-\\\\uDCFF\\\\uDD07\\\\uDD0A\\\\uDD31-\\\\uDD45\\\\uDD47-\\\\uDD5F\\\\uDD66\\\\uDD69\\\\uDD8A-\\\\uDD97\\\\uDD99-\\\\uDEDF\\\\uDEF3-\\\\uDEF6\\\\uDEF9-\\\\uDF01\\\\uDF03\\\\uDF11\\\\uDF34-\\\\uDF42\\\\uDF45-\\\\uDFAF\\\\uDFB1-\\\\uDFFF]|\\\\uD808[\\\\uDF9A-\\\\uDFFF]|\\\\uD809[\\\\uDC6F-\\\\uDC7F\\\\uDD44-\\\\uDFFF]|[\\\\uD80A\\\\uD812-\\\\uD817\\\\uD819\\\\uD824-\\\\uD82A\\\\uD82D\\\\uD82E\\\\uD830-\\\\uD834\\\\uD83D-\\\\uD83F\\\\uD87C\\\\uD87D\\\\uD87F\\\\uD889-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|\\\\uD80B[\\\\uDC00-\\\\uDF8F\\\\uDFF1-\\\\uDFFF]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC5F]|\\\\uD810[\\\\uDFFB-\\\\uDFFF]|\\\\uD811[\\\\uDE47-\\\\uDFFF]|\\\\uD818[\\\\uDC00-\\\\uDCFF\\\\uDD1E-\\\\uDFFF]|\\\\uD81A[\\\\uDE39-\\\\uDE3F\\\\uDE5F-\\\\uDE6D\\\\uDEBF-\\\\uDECF\\\\uDEEE-\\\\uDEF4\\\\uDEF6-\\\\uDEFF\\\\uDF30-\\\\uDF36\\\\uDF39-\\\\uDF3F\\\\uDF45-\\\\uDF62\\\\uDF78-\\\\uDF7C\\\\uDF90-\\\\uDFFF]|\\\\uD81B[\\\\uDC00-\\\\uDD3F\\\\uDD6D\\\\uDD70-\\\\uDE3F\\\\uDE80-\\\\uDE97\\\\uDE99-\\\\uDEFF\\\\uDF4B-\\\\uDF4F\\\\uDF51-\\\\uDF92\\\\uDFA0-\\\\uDFDF\\\\uDFE2\\\\uDFE4-\\\\uDFFF]|\\\\uD821[\\\\uDFF8-\\\\uDFFF]|\\\\uD823[\\\\uDCD6-\\\\uDCFE\\\\uDD09-\\\\uDFFF]|\\\\uD82B[\\\\uDC00-\\\\uDFEF\\\\uDFF4\\\\uDFFC\\\\uDFFF]|\\\\uD82C[\\\\uDD23-\\\\uDD31\\\\uDD33-\\\\uDD4F\\\\uDD53\\\\uDD54\\\\uDD56-\\\\uDD63\\\\uDD68-\\\\uDD6F\\\\uDEFC-\\\\uDFFF]|\\\\uD82F[\\\\uDC6B-\\\\uDC6F\\\\uDC7D-\\\\uDC7F\\\\uDC89-\\\\uDC8F\\\\uDC9A-\\\\uDC9E\\\\uDCA0-\\\\uDFFF]|\\\\uD835[\\\\uDC55\\\\uDC9D\\\\uDCA0\\\\uDCA1\\\\uDCA3\\\\uDCA4\\\\uDCA7\\\\uDCA8\\\\uDCAD\\\\uDCBA\\\\uDCBC\\\\uDCC4\\\\uDD06\\\\uDD0B\\\\uDD0C\\\\uDD15\\\\uDD1D\\\\uDD3A\\\\uDD3F\\\\uDD45\\\\uDD47-\\\\uDD49\\\\uDD51\\\\uDEA6\\\\uDEA7\\\\uDEC1\\\\uDEDB\\\\uDEFB\\\\uDF15\\\\uDF35\\\\uDF4F\\\\uDF6F\\\\uDF89\\\\uDFA9\\\\uDFC3\\\\uDFCC-\\\\uDFFF]|\\\\uD836[\\\\uDC00-\\\\uDE87\\\\uDE89-\\\\uDFFF]|\\\\uD837[\\\\uDC00-\\\\uDEFF\\\\uDF1F-\\\\uDF24\\\\uDF2B-\\\\uDFFF]|\\\\uD838[\\\\uDC00-\\\\uDC2F\\\\uDC6E-\\\\uDCFF\\\\uDD2D-\\\\uDD36\\\\uDD3E-\\\\uDD4D\\\\uDD4F-\\\\uDE8F\\\\uDEAE-\\\\uDEBF\\\\uDEEC-\\\\uDFFF]|\\\\uD839[\\\\uDC00-\\\\uDCCF\\\\uDCEC-\\\\uDDCF\\\\uDDEE\\\\uDDEF\\\\uDDF1-\\\\uDFDF\\\\uDFE7\\\\uDFEC\\\\uDFEF\\\\uDFFF]|\\\\uD83A[\\\\uDCC5-\\\\uDCFF\\\\uDD44-\\\\uDD4A\\\\uDD4C-\\\\uDFFF]|\\\\uD83B[\\\\uDC00-\\\\uDDFF\\\\uDE04\\\\uDE20\\\\uDE23\\\\uDE25\\\\uDE26\\\\uDE28\\\\uDE33\\\\uDE38\\\\uDE3A\\\\uDE3C-\\\\uDE41\\\\uDE43-\\\\uDE46\\\\uDE48\\\\uDE4A\\\\uDE4C\\\\uDE50\\\\uDE53\\\\uDE55\\\\uDE56\\\\uDE58\\\\uDE5A\\\\uDE5C\\\\uDE5E\\\\uDE60\\\\uDE63\\\\uDE65\\\\uDE66\\\\uDE6B\\\\uDE73\\\\uDE78\\\\uDE7D\\\\uDE7F\\\\uDE8A\\\\uDE9C-\\\\uDEA0\\\\uDEA4\\\\uDEAA\\\\uDEBC-\\\\uDFFF]|\\\\uD83C[\\\\uDC00-\\\\uDD2F\\\\uDD4A-\\\\uDD4F\\\\uDD6A-\\\\uDD6F\\\\uDD8A-\\\\uDFFF]|\\\\uD869[\\\\uDEE0-\\\\uDEFF]|\\\\uD86D[\\\\uDF3A-\\\\uDF3F]|\\\\uD86E[\\\\uDC1E\\\\uDC1F]|\\\\uD873[\\\\uDEA2-\\\\uDEAF]|\\\\uD87A[\\\\uDFE1-\\\\uDFEF]|\\\\uD87B[\\\\uDE5E-\\\\uDFFF]|\\\\uD87E[\\\\uDE1E-\\\\uDFFF]|\\\\uD884[\\\\uDF4B-\\\\uDF4F]|\\\\uD888[\\\\uDFB0-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])\",\r\n                \"$Numeric\": \"((?:[0-9\\\\u0600-\\\\u0605\\\\u0660-\\\\u0669\\\\u066B\\\\u066C\\\\u06DD\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0890\\\\u0891\\\\u08E2\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19DA\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]|\\\\uD801[\\\\uDCA0-\\\\uDCA9]|[\\\\uD803\\\\uD818][\\\\uDD30-\\\\uDD39\\\\uDD40-\\\\uDD49]|\\\\uD804[\\\\uDC66-\\\\uDC6F\\\\uDCBD\\\\uDCCD\\\\uDCF0-\\\\uDCF9\\\\uDD36-\\\\uDD3F\\\\uDDD0-\\\\uDDD9\\\\uDEF0-\\\\uDEF9]|\\\\uD805[\\\\uDC50-\\\\uDC59\\\\uDCD0-\\\\uDCD9\\\\uDE50-\\\\uDE59\\\\uDEC0-\\\\uDEC9\\\\uDED0-\\\\uDEE3\\\\uDF30-\\\\uDF39]|\\\\uD806[\\\\uDCE0-\\\\uDCE9\\\\uDD50-\\\\uDD59\\\\uDFF0-\\\\uDFF9]|\\\\uD807[\\\\uDC50-\\\\uDC59\\\\uDD50-\\\\uDD59\\\\uDDA0-\\\\uDDA9\\\\uDF50-\\\\uDF59]|\\\\uD81A[\\\\uDE60-\\\\uDE69\\\\uDEC0-\\\\uDEC9\\\\uDF50-\\\\uDF59]|\\\\uD81B[\\\\uDD70-\\\\uDD79]|\\\\uD833[\\\\uDCF0-\\\\uDCF9]|\\\\uD835[\\\\uDFCE-\\\\uDFFF]|\\\\uD838[\\\\uDD40-\\\\uDD49\\\\uDEF0-\\\\uDEF9]|\\\\uD839[\\\\uDCF0-\\\\uDCF9\\\\uDDF1-\\\\uDDFA]|\\\\uD83A[\\\\uDD50-\\\\uDD59]|\\\\uD83E[\\\\uDFF0-\\\\uDFF9])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$OLetter\": \"((?:[\\\\u01BB\\\\u01C0-\\\\u01C3\\\\u0294\\\\u02B9-\\\\u02BF\\\\u02C6-\\\\u02D1\\\\u02EC\\\\u02EE\\\\u0374\\\\u0559\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F3\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u0860-\\\\u086A\\\\u0870-\\\\u0887\\\\u0889-\\\\u088E\\\\u08A0-\\\\u08C9\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u09FC\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60\\\\u0C61\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D04-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D5F-\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10D0-\\\\u10FA\\\\u10FD-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u1711\\\\u171F-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4C\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5\\\\u1CF6\\\\u1CFA\\\\u2135-\\\\u2138\\\\u2180-\\\\u2182\\\\u2185-\\\\u2188\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BF\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DBF\\\\u4E00-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA66E\\\\uA67F\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA788\\\\uA78F\\\\uA7F7\\\\uA7FB-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA8FE\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF66-\\\\uFF9D\\\\uFFA0-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDF00-\\\\uDF1F\\\\uDF2D-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC50-\\\\uDC9D\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDDC0-\\\\uDDF3\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67\\\\uDF81\\\\uDF82]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE35\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDD00-\\\\uDD23\\\\uDD4A-\\\\uDD4F\\\\uDD6F\\\\uDE80-\\\\uDEA9\\\\uDEB0\\\\uDEB1\\\\uDEC2-\\\\uDEC4\\\\uDF00-\\\\uDF1C\\\\uDF27\\\\uDF30-\\\\uDF45\\\\uDF70-\\\\uDF81\\\\uDFB0-\\\\uDFC4\\\\uDFE0-\\\\uDFF6]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC71\\\\uDC72\\\\uDC75\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDD03-\\\\uDD26\\\\uDD44\\\\uDD47\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE3F\\\\uDE40\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61\\\\uDF80-\\\\uDF89\\\\uDF8B\\\\uDF8E\\\\uDF90-\\\\uDFB5\\\\uDFB7\\\\uDFD1\\\\uDFD3]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC5F-\\\\uDC61\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE80-\\\\uDEAA\\\\uDEB8\\\\uDF00-\\\\uDF1A\\\\uDF40-\\\\uDF46]|\\\\uD806[\\\\uDC00-\\\\uDC2B\\\\uDCFF-\\\\uDD06\\\\uDD09\\\\uDD0C-\\\\uDD13\\\\uDD15\\\\uDD16\\\\uDD18-\\\\uDD2F\\\\uDD3F\\\\uDD41\\\\uDDA0-\\\\uDDA7\\\\uDDAA-\\\\uDDD0\\\\uDDE1\\\\uDDE3\\\\uDE00\\\\uDE0B-\\\\uDE32\\\\uDE3A\\\\uDE50\\\\uDE5C-\\\\uDE89\\\\uDE9D\\\\uDEB0-\\\\uDEF8\\\\uDFC0-\\\\uDFE0]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC72-\\\\uDC8F\\\\uDD00-\\\\uDD06\\\\uDD08\\\\uDD09\\\\uDD0B-\\\\uDD30\\\\uDD46\\\\uDD60-\\\\uDD65\\\\uDD67\\\\uDD68\\\\uDD6A-\\\\uDD89\\\\uDD98\\\\uDEE0-\\\\uDEF2\\\\uDF02\\\\uDF04-\\\\uDF10\\\\uDF12-\\\\uDF33\\\\uDFB0]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|\\\\uD80B[\\\\uDF90-\\\\uDFF0]|[\\\\uD80C\\\\uD80E\\\\uD80F\\\\uD81C-\\\\uD820\\\\uD822\\\\uD840-\\\\uD868\\\\uD86A-\\\\uD86C\\\\uD86F-\\\\uD872\\\\uD874-\\\\uD879\\\\uD880-\\\\uD883\\\\uD885-\\\\uD887][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2F\\\\uDC41-\\\\uDC46\\\\uDC60-\\\\uDFFF]|\\\\uD810[\\\\uDC00-\\\\uDFFA]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD818[\\\\uDD00-\\\\uDD1D]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE70-\\\\uDEBE\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDD40-\\\\uDD6C\\\\uDF00-\\\\uDF4A\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0\\\\uDFE1\\\\uDFE3]|\\\\uD821[\\\\uDC00-\\\\uDFF7]|\\\\uD823[\\\\uDC00-\\\\uDCD5\\\\uDCFF-\\\\uDD08]|\\\\uD82B[\\\\uDFF0-\\\\uDFF3\\\\uDFF5-\\\\uDFFB\\\\uDFFD\\\\uDFFE]|\\\\uD82C[\\\\uDC00-\\\\uDD22\\\\uDD32\\\\uDD50-\\\\uDD52\\\\uDD55\\\\uDD64-\\\\uDD67\\\\uDD70-\\\\uDEFB]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD837\\\\uDF0A|\\\\uD838[\\\\uDD00-\\\\uDD2C\\\\uDD37-\\\\uDD3D\\\\uDD4E\\\\uDE90-\\\\uDEAD\\\\uDEC0-\\\\uDEEB]|\\\\uD839[\\\\uDCD0-\\\\uDCEB\\\\uDDD0-\\\\uDDED\\\\uDDF0\\\\uDFE0-\\\\uDFE6\\\\uDFE8-\\\\uDFEB\\\\uDFED\\\\uDFEE\\\\uDFF0-\\\\uDFFE]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDD4B]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD869[\\\\uDC00-\\\\uDEDF\\\\uDF00-\\\\uDFFF]|\\\\uD86D[\\\\uDC00-\\\\uDF39\\\\uDF40-\\\\uDFFF]|\\\\uD86E[\\\\uDC00-\\\\uDC1D\\\\uDC20-\\\\uDFFF]|\\\\uD873[\\\\uDC00-\\\\uDEA1\\\\uDEB0-\\\\uDFFF]|\\\\uD87A[\\\\uDC00-\\\\uDFE0\\\\uDFF0-\\\\uDFFF]|\\\\uD87B[\\\\uDC00-\\\\uDE5D]|\\\\uD87E[\\\\uDC00-\\\\uDE1D]|\\\\uD884[\\\\uDC00-\\\\uDF4A\\\\uDF50-\\\\uDFFF]|\\\\uD888[\\\\uDC00-\\\\uDFAF])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$ParaSep\": \"([\\\\x85\\\\u2028\\\\u2029]|\\\\r|\\\\n)\",\r\n                \"$SATerm\": \"(((?:[!\\\\?\\\\u0589\\\\u061D-\\\\u061F\\\\u06D4\\\\u0700-\\\\u0702\\\\u07F9\\\\u0837\\\\u0839\\\\u083D\\\\u083E\\\\u0964\\\\u0965\\\\u104A\\\\u104B\\\\u1362\\\\u1367\\\\u1368\\\\u166E\\\\u1735\\\\u1736\\\\u17D4\\\\u17D5\\\\u1803\\\\u1809\\\\u1944\\\\u1945\\\\u1AA8-\\\\u1AAB\\\\u1B4E\\\\u1B4F\\\\u1B5A\\\\u1B5B\\\\u1B5E\\\\u1B5F\\\\u1B7D-\\\\u1B7F\\\\u1C3B\\\\u1C3C\\\\u1C7E\\\\u1C7F\\\\u203C\\\\u203D\\\\u2047-\\\\u2049\\\\u2CF9-\\\\u2CFB\\\\u2E2E\\\\u2E3C\\\\u2E53\\\\u2E54\\\\u3002\\\\uA4FF\\\\uA60E\\\\uA60F\\\\uA6F3\\\\uA6F7\\\\uA876\\\\uA877\\\\uA8CE\\\\uA8CF\\\\uA92F\\\\uA9C8\\\\uA9C9\\\\uAA5D-\\\\uAA5F\\\\uAAF0\\\\uAAF1\\\\uABEB\\\\uFE12\\\\uFE15\\\\uFE16\\\\uFE56\\\\uFE57\\\\uFF01\\\\uFF1F\\\\uFF61]|\\\\uD802[\\\\uDE56\\\\uDE57]|\\\\uD803[\\\\uDF55-\\\\uDF59\\\\uDF86-\\\\uDF89]|\\\\uD804[\\\\uDC47\\\\uDC48\\\\uDCBE-\\\\uDCC1\\\\uDD41-\\\\uDD43\\\\uDDC5\\\\uDDC6\\\\uDDCD\\\\uDDDE\\\\uDDDF\\\\uDE38\\\\uDE39\\\\uDE3B\\\\uDE3C\\\\uDEA9\\\\uDFD4\\\\uDFD5]|\\\\uD805[\\\\uDC4B\\\\uDC4C\\\\uDDC2\\\\uDDC3\\\\uDDC9-\\\\uDDD7\\\\uDE41\\\\uDE42\\\\uDF3C-\\\\uDF3E]|\\\\uD806[\\\\uDD44\\\\uDD46\\\\uDE42\\\\uDE43\\\\uDE9B\\\\uDE9C]|\\\\uD807[\\\\uDC41\\\\uDC42\\\\uDEF7\\\\uDEF8\\\\uDF43\\\\uDF44]|\\\\uD81A[\\\\uDE6E\\\\uDE6F\\\\uDEF5\\\\uDF37\\\\uDF38\\\\uDF44]|\\\\uD81B[\\\\uDD6E\\\\uDD6F\\\\uDE98]|\\\\uD82F\\\\uDC9F|\\\\uD836\\\\uDE88)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)|([\\\\.\\\\u2024\\\\uFE52\\\\uFF0E](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*))\",\r\n                \"$SContinue\": \"([,\\\\x2D:;\\\\u037E\\\\u055D\\\\u060C\\\\u060D\\\\u07F8\\\\u1802\\\\u1808\\\\u2013\\\\u2014\\\\u3001\\\\uFE10\\\\uFE11\\\\uFE13\\\\uFE14\\\\uFE31\\\\uFE32\\\\uFE50\\\\uFE51\\\\uFE54\\\\uFE55\\\\uFE58\\\\uFE63\\\\uFF0C\\\\uFF0D\\\\uFF1A\\\\uFF1B\\\\uFF64](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$STerm\": \"((?:[!\\\\?\\\\u0589\\\\u061D-\\\\u061F\\\\u06D4\\\\u0700-\\\\u0702\\\\u07F9\\\\u0837\\\\u0839\\\\u083D\\\\u083E\\\\u0964\\\\u0965\\\\u104A\\\\u104B\\\\u1362\\\\u1367\\\\u1368\\\\u166E\\\\u1735\\\\u1736\\\\u17D4\\\\u17D5\\\\u1803\\\\u1809\\\\u1944\\\\u1945\\\\u1AA8-\\\\u1AAB\\\\u1B4E\\\\u1B4F\\\\u1B5A\\\\u1B5B\\\\u1B5E\\\\u1B5F\\\\u1B7D-\\\\u1B7F\\\\u1C3B\\\\u1C3C\\\\u1C7E\\\\u1C7F\\\\u203C\\\\u203D\\\\u2047-\\\\u2049\\\\u2CF9-\\\\u2CFB\\\\u2E2E\\\\u2E3C\\\\u2E53\\\\u2E54\\\\u3002\\\\uA4FF\\\\uA60E\\\\uA60F\\\\uA6F3\\\\uA6F7\\\\uA876\\\\uA877\\\\uA8CE\\\\uA8CF\\\\uA92F\\\\uA9C8\\\\uA9C9\\\\uAA5D-\\\\uAA5F\\\\uAAF0\\\\uAAF1\\\\uABEB\\\\uFE12\\\\uFE15\\\\uFE16\\\\uFE56\\\\uFE57\\\\uFF01\\\\uFF1F\\\\uFF61]|\\\\uD802[\\\\uDE56\\\\uDE57]|\\\\uD803[\\\\uDF55-\\\\uDF59\\\\uDF86-\\\\uDF89]|\\\\uD804[\\\\uDC47\\\\uDC48\\\\uDCBE-\\\\uDCC1\\\\uDD41-\\\\uDD43\\\\uDDC5\\\\uDDC6\\\\uDDCD\\\\uDDDE\\\\uDDDF\\\\uDE38\\\\uDE39\\\\uDE3B\\\\uDE3C\\\\uDEA9\\\\uDFD4\\\\uDFD5]|\\\\uD805[\\\\uDC4B\\\\uDC4C\\\\uDDC2\\\\uDDC3\\\\uDDC9-\\\\uDDD7\\\\uDE41\\\\uDE42\\\\uDF3C-\\\\uDF3E]|\\\\uD806[\\\\uDD44\\\\uDD46\\\\uDE42\\\\uDE43\\\\uDE9B\\\\uDE9C]|\\\\uD807[\\\\uDC41\\\\uDC42\\\\uDEF7\\\\uDEF8\\\\uDF43\\\\uDF44]|\\\\uD81A[\\\\uDE6E\\\\uDE6F\\\\uDEF5\\\\uDF37\\\\uDF38\\\\uDF44]|\\\\uD81B[\\\\uDD6E\\\\uDD6F\\\\uDE98]|\\\\uD82F\\\\uDC9F|\\\\uD836\\\\uDE88)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Sep\": \"[\\\\x85\\\\u2028\\\\u2029]\",\r\n                \"$Sp\": \"([\\\\t\\\\x0B\\\\f \\\\xA0\\\\u1680\\\\u2000-\\\\u200A\\\\u202F\\\\u205F\\\\u3000](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Upper\": \"((?:[A-Z\\\\xC0-\\\\xD6\\\\xD8-\\\\xDE\\\\u0100\\\\u0102\\\\u0104\\\\u0106\\\\u0108\\\\u010A\\\\u010C\\\\u010E\\\\u0110\\\\u0112\\\\u0114\\\\u0116\\\\u0118\\\\u011A\\\\u011C\\\\u011E\\\\u0120\\\\u0122\\\\u0124\\\\u0126\\\\u0128\\\\u012A\\\\u012C\\\\u012E\\\\u0130\\\\u0132\\\\u0134\\\\u0136\\\\u0139\\\\u013B\\\\u013D\\\\u013F\\\\u0141\\\\u0143\\\\u0145\\\\u0147\\\\u014A\\\\u014C\\\\u014E\\\\u0150\\\\u0152\\\\u0154\\\\u0156\\\\u0158\\\\u015A\\\\u015C\\\\u015E\\\\u0160\\\\u0162\\\\u0164\\\\u0166\\\\u0168\\\\u016A\\\\u016C\\\\u016E\\\\u0170\\\\u0172\\\\u0174\\\\u0176\\\\u0178\\\\u0179\\\\u017B\\\\u017D\\\\u0181\\\\u0182\\\\u0184\\\\u0186\\\\u0187\\\\u0189-\\\\u018B\\\\u018E-\\\\u0191\\\\u0193\\\\u0194\\\\u0196-\\\\u0198\\\\u019C\\\\u019D\\\\u019F\\\\u01A0\\\\u01A2\\\\u01A4\\\\u01A6\\\\u01A7\\\\u01A9\\\\u01AC\\\\u01AE\\\\u01AF\\\\u01B1-\\\\u01B3\\\\u01B5\\\\u01B7\\\\u01B8\\\\u01BC\\\\u01C4\\\\u01C5\\\\u01C7\\\\u01C8\\\\u01CA\\\\u01CB\\\\u01CD\\\\u01CF\\\\u01D1\\\\u01D3\\\\u01D5\\\\u01D7\\\\u01D9\\\\u01DB\\\\u01DE\\\\u01E0\\\\u01E2\\\\u01E4\\\\u01E6\\\\u01E8\\\\u01EA\\\\u01EC\\\\u01EE\\\\u01F1\\\\u01F2\\\\u01F4\\\\u01F6-\\\\u01F8\\\\u01FA\\\\u01FC\\\\u01FE\\\\u0200\\\\u0202\\\\u0204\\\\u0206\\\\u0208\\\\u020A\\\\u020C\\\\u020E\\\\u0210\\\\u0212\\\\u0214\\\\u0216\\\\u0218\\\\u021A\\\\u021C\\\\u021E\\\\u0220\\\\u0222\\\\u0224\\\\u0226\\\\u0228\\\\u022A\\\\u022C\\\\u022E\\\\u0230\\\\u0232\\\\u023A\\\\u023B\\\\u023D\\\\u023E\\\\u0241\\\\u0243-\\\\u0246\\\\u0248\\\\u024A\\\\u024C\\\\u024E\\\\u0370\\\\u0372\\\\u0376\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E\\\\u038F\\\\u0391-\\\\u03A1\\\\u03A3-\\\\u03AB\\\\u03CF\\\\u03D2-\\\\u03D4\\\\u03D8\\\\u03DA\\\\u03DC\\\\u03DE\\\\u03E0\\\\u03E2\\\\u03E4\\\\u03E6\\\\u03E8\\\\u03EA\\\\u03EC\\\\u03EE\\\\u03F4\\\\u03F7\\\\u03F9\\\\u03FA\\\\u03FD-\\\\u042F\\\\u0460\\\\u0462\\\\u0464\\\\u0466\\\\u0468\\\\u046A\\\\u046C\\\\u046E\\\\u0470\\\\u0472\\\\u0474\\\\u0476\\\\u0478\\\\u047A\\\\u047C\\\\u047E\\\\u0480\\\\u048A\\\\u048C\\\\u048E\\\\u0490\\\\u0492\\\\u0494\\\\u0496\\\\u0498\\\\u049A\\\\u049C\\\\u049E\\\\u04A0\\\\u04A2\\\\u04A4\\\\u04A6\\\\u04A8\\\\u04AA\\\\u04AC\\\\u04AE\\\\u04B0\\\\u04B2\\\\u04B4\\\\u04B6\\\\u04B8\\\\u04BA\\\\u04BC\\\\u04BE\\\\u04C0\\\\u04C1\\\\u04C3\\\\u04C5\\\\u04C7\\\\u04C9\\\\u04CB\\\\u04CD\\\\u04D0\\\\u04D2\\\\u04D4\\\\u04D6\\\\u04D8\\\\u04DA\\\\u04DC\\\\u04DE\\\\u04E0\\\\u04E2\\\\u04E4\\\\u04E6\\\\u04E8\\\\u04EA\\\\u04EC\\\\u04EE\\\\u04F0\\\\u04F2\\\\u04F4\\\\u04F6\\\\u04F8\\\\u04FA\\\\u04FC\\\\u04FE\\\\u0500\\\\u0502\\\\u0504\\\\u0506\\\\u0508\\\\u050A\\\\u050C\\\\u050E\\\\u0510\\\\u0512\\\\u0514\\\\u0516\\\\u0518\\\\u051A\\\\u051C\\\\u051E\\\\u0520\\\\u0522\\\\u0524\\\\u0526\\\\u0528\\\\u052A\\\\u052C\\\\u052E\\\\u0531-\\\\u0556\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u13A0-\\\\u13F5\\\\u1C89\\\\u1E00\\\\u1E02\\\\u1E04\\\\u1E06\\\\u1E08\\\\u1E0A\\\\u1E0C\\\\u1E0E\\\\u1E10\\\\u1E12\\\\u1E14\\\\u1E16\\\\u1E18\\\\u1E1A\\\\u1E1C\\\\u1E1E\\\\u1E20\\\\u1E22\\\\u1E24\\\\u1E26\\\\u1E28\\\\u1E2A\\\\u1E2C\\\\u1E2E\\\\u1E30\\\\u1E32\\\\u1E34\\\\u1E36\\\\u1E38\\\\u1E3A\\\\u1E3C\\\\u1E3E\\\\u1E40\\\\u1E42\\\\u1E44\\\\u1E46\\\\u1E48\\\\u1E4A\\\\u1E4C\\\\u1E4E\\\\u1E50\\\\u1E52\\\\u1E54\\\\u1E56\\\\u1E58\\\\u1E5A\\\\u1E5C\\\\u1E5E\\\\u1E60\\\\u1E62\\\\u1E64\\\\u1E66\\\\u1E68\\\\u1E6A\\\\u1E6C\\\\u1E6E\\\\u1E70\\\\u1E72\\\\u1E74\\\\u1E76\\\\u1E78\\\\u1E7A\\\\u1E7C\\\\u1E7E\\\\u1E80\\\\u1E82\\\\u1E84\\\\u1E86\\\\u1E88\\\\u1E8A\\\\u1E8C\\\\u1E8E\\\\u1E90\\\\u1E92\\\\u1E94\\\\u1E9E\\\\u1EA0\\\\u1EA2\\\\u1EA4\\\\u1EA6\\\\u1EA8\\\\u1EAA\\\\u1EAC\\\\u1EAE\\\\u1EB0\\\\u1EB2\\\\u1EB4\\\\u1EB6\\\\u1EB8\\\\u1EBA\\\\u1EBC\\\\u1EBE\\\\u1EC0\\\\u1EC2\\\\u1EC4\\\\u1EC6\\\\u1EC8\\\\u1ECA\\\\u1ECC\\\\u1ECE\\\\u1ED0\\\\u1ED2\\\\u1ED4\\\\u1ED6\\\\u1ED8\\\\u1EDA\\\\u1EDC\\\\u1EDE\\\\u1EE0\\\\u1EE2\\\\u1EE4\\\\u1EE6\\\\u1EE8\\\\u1EEA\\\\u1EEC\\\\u1EEE\\\\u1EF0\\\\u1EF2\\\\u1EF4\\\\u1EF6\\\\u1EF8\\\\u1EFA\\\\u1EFC\\\\u1EFE\\\\u1F08-\\\\u1F0F\\\\u1F18-\\\\u1F1D\\\\u1F28-\\\\u1F2F\\\\u1F38-\\\\u1F3F\\\\u1F48-\\\\u1F4D\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F\\\\u1F68-\\\\u1F6F\\\\u1F88-\\\\u1F8F\\\\u1F98-\\\\u1F9F\\\\u1FA8-\\\\u1FAF\\\\u1FB8-\\\\u1FBC\\\\u1FC8-\\\\u1FCC\\\\u1FD8-\\\\u1FDB\\\\u1FE8-\\\\u1FEC\\\\u1FF8-\\\\u1FFC\\\\u2102\\\\u2107\\\\u210B-\\\\u210D\\\\u2110-\\\\u2112\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u2130-\\\\u2133\\\\u213E\\\\u213F\\\\u2145\\\\u2160-\\\\u216F\\\\u2183\\\\u24B6-\\\\u24CF\\\\u2C00-\\\\u2C2F\\\\u2C60\\\\u2C62-\\\\u2C64\\\\u2C67\\\\u2C69\\\\u2C6B\\\\u2C6D-\\\\u2C70\\\\u2C72\\\\u2C75\\\\u2C7E-\\\\u2C80\\\\u2C82\\\\u2C84\\\\u2C86\\\\u2C88\\\\u2C8A\\\\u2C8C\\\\u2C8E\\\\u2C90\\\\u2C92\\\\u2C94\\\\u2C96\\\\u2C98\\\\u2C9A\\\\u2C9C\\\\u2C9E\\\\u2CA0\\\\u2CA2\\\\u2CA4\\\\u2CA6\\\\u2CA8\\\\u2CAA\\\\u2CAC\\\\u2CAE\\\\u2CB0\\\\u2CB2\\\\u2CB4\\\\u2CB6\\\\u2CB8\\\\u2CBA\\\\u2CBC\\\\u2CBE\\\\u2CC0\\\\u2CC2\\\\u2CC4\\\\u2CC6\\\\u2CC8\\\\u2CCA\\\\u2CCC\\\\u2CCE\\\\u2CD0\\\\u2CD2\\\\u2CD4\\\\u2CD6\\\\u2CD8\\\\u2CDA\\\\u2CDC\\\\u2CDE\\\\u2CE0\\\\u2CE2\\\\u2CEB\\\\u2CED\\\\u2CF2\\\\uA640\\\\uA642\\\\uA644\\\\uA646\\\\uA648\\\\uA64A\\\\uA64C\\\\uA64E\\\\uA650\\\\uA652\\\\uA654\\\\uA656\\\\uA658\\\\uA65A\\\\uA65C\\\\uA65E\\\\uA660\\\\uA662\\\\uA664\\\\uA666\\\\uA668\\\\uA66A\\\\uA66C\\\\uA680\\\\uA682\\\\uA684\\\\uA686\\\\uA688\\\\uA68A\\\\uA68C\\\\uA68E\\\\uA690\\\\uA692\\\\uA694\\\\uA696\\\\uA698\\\\uA69A\\\\uA722\\\\uA724\\\\uA726\\\\uA728\\\\uA72A\\\\uA72C\\\\uA72E\\\\uA732\\\\uA734\\\\uA736\\\\uA738\\\\uA73A\\\\uA73C\\\\uA73E\\\\uA740\\\\uA742\\\\uA744\\\\uA746\\\\uA748\\\\uA74A\\\\uA74C\\\\uA74E\\\\uA750\\\\uA752\\\\uA754\\\\uA756\\\\uA758\\\\uA75A\\\\uA75C\\\\uA75E\\\\uA760\\\\uA762\\\\uA764\\\\uA766\\\\uA768\\\\uA76A\\\\uA76C\\\\uA76E\\\\uA779\\\\uA77B\\\\uA77D\\\\uA77E\\\\uA780\\\\uA782\\\\uA784\\\\uA786\\\\uA78B\\\\uA78D\\\\uA790\\\\uA792\\\\uA796\\\\uA798\\\\uA79A\\\\uA79C\\\\uA79E\\\\uA7A0\\\\uA7A2\\\\uA7A4\\\\uA7A6\\\\uA7A8\\\\uA7AA-\\\\uA7AE\\\\uA7B0-\\\\uA7B4\\\\uA7B6\\\\uA7B8\\\\uA7BA\\\\uA7BC\\\\uA7BE\\\\uA7C0\\\\uA7C2\\\\uA7C4-\\\\uA7C7\\\\uA7C9\\\\uA7CB\\\\uA7CC\\\\uA7D0\\\\uA7D6\\\\uA7D8\\\\uA7DA\\\\uA7DC\\\\uA7F5\\\\uFF21-\\\\uFF3A]|\\\\uD801[\\\\uDC00-\\\\uDC27\\\\uDCB0-\\\\uDCD3\\\\uDD70-\\\\uDD7A\\\\uDD7C-\\\\uDD8A\\\\uDD8C-\\\\uDD92\\\\uDD94\\\\uDD95]|\\\\uD803[\\\\uDC80-\\\\uDCB2\\\\uDD50-\\\\uDD65]|\\\\uD806[\\\\uDCA0-\\\\uDCBF]|\\\\uD81B[\\\\uDE40-\\\\uDE5F]|\\\\uD835[\\\\uDC00-\\\\uDC19\\\\uDC34-\\\\uDC4D\\\\uDC68-\\\\uDC81\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB5\\\\uDCD0-\\\\uDCE9\\\\uDD04\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD38\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD6C-\\\\uDD85\\\\uDDA0-\\\\uDDB9\\\\uDDD4-\\\\uDDED\\\\uDE08-\\\\uDE21\\\\uDE3C-\\\\uDE55\\\\uDE70-\\\\uDE89\\\\uDEA8-\\\\uDEC0\\\\uDEE2-\\\\uDEFA\\\\uDF1C-\\\\uDF34\\\\uDF56-\\\\uDF6E\\\\uDF90-\\\\uDFA8\\\\uDFCA]|\\\\uD83A[\\\\uDD00-\\\\uDD21]|\\\\uD83C[\\\\uDD30-\\\\uDD49\\\\uDD50-\\\\uDD69\\\\uDD70-\\\\uDD89])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\"\r\n            }\r\n        },\r\n        \"word\": {\r\n            \"segmentRules\": {\r\n                \"10\": {\r\n                    \"after\": \"$AHLetter\",\r\n                    \"before\": \"$Numeric\",\r\n                    \"breaks\": false\r\n                },\r\n                \"11\": {\r\n                    \"after\": \"$Numeric\",\r\n                    \"before\": \"$Numeric($MidNum|$MidNumLetQ)\",\r\n                    \"breaks\": false\r\n                },\r\n                \"12\": {\r\n                    \"after\": \"($MidNum|$MidNumLetQ)$Numeric\",\r\n                    \"before\": \"$Numeric\",\r\n                    \"breaks\": false\r\n                },\r\n                \"13\": {\r\n                    \"after\": \"$Katakana\",\r\n                    \"before\": \"$Katakana\",\r\n                    \"breaks\": false\r\n                },\r\n                \"13.1\": {\r\n                    \"after\": \"$ExtendNumLet\",\r\n                    \"before\": \"($AHLetter|$Numeric|$Katakana|$ExtendNumLet)\",\r\n                    \"breaks\": false\r\n                },\r\n                \"13.2\": {\r\n                    \"after\": \"($AHLetter|$Numeric|$Katakana)\",\r\n                    \"before\": \"$ExtendNumLet\",\r\n                    \"breaks\": false\r\n                },\r\n                \"15\": {\r\n                    \"after\": \"$RI\",\r\n                    \"before\": \"^($RI$RI)*$RI\",\r\n                    \"breaks\": false\r\n                },\r\n                \"16\": {\r\n                    \"after\": \"$RI\",\r\n                    \"before\": \"[^\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0600-\\\\u0605\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DD\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0890\\\\u0891\\\\u0898-\\\\u089F\\\\u08CA-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6\\\\uDD24-\\\\uDD27\\\\uDEAB\\\\uDEAC\\\\uDEFD-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCBD\\\\uDCC2\\\\uDCCD\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF\\\\uDCEC-\\\\uDCEF\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A\\\\uDDE6-\\\\uDDFF\\\\uDFFB-\\\\uDFFF\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF]($RI$RI)*$RI\",\r\n                    \"breaks\": false\r\n                },\r\n                \"3\": {\r\n                    \"after\": \"$LF\",\r\n                    \"before\": \"$CR\",\r\n                    \"breaks\": false\r\n                },\r\n                \"3.1\": {\r\n                    \"before\": \"($Newline|$CR|$LF)\",\r\n                    \"breaks\": true\r\n                },\r\n                \"3.2\": {\r\n                    \"after\": \"($Newline|$CR|$LF)\",\r\n                    \"breaks\": true\r\n                },\r\n                \"3.3\": {\r\n                    \"after\": \"$ExtPict\",\r\n                    \"before\": \"$ZWJ\",\r\n                    \"breaks\": false\r\n                },\r\n                \"3.4\": {\r\n                    \"after\": \"$WSegSpace\",\r\n                    \"before\": \"$WSegSpace\",\r\n                    \"breaks\": false\r\n                },\r\n                \"4\": {\r\n                    \"after\": \"(?:$Format|$Extend|$ZWJ)\",\r\n                    \"before\": \"$NotBreak_\",\r\n                    \"breaks\": false\r\n                },\r\n                \"5\": {\r\n                    \"after\": \"$AHLetter\",\r\n                    \"before\": \"$AHLetter\",\r\n                    \"breaks\": false\r\n                },\r\n                \"6\": {\r\n                    \"after\": \"($MidLetter|$MidNumLetQ)$AHLetter\",\r\n                    \"before\": \"$AHLetter\",\r\n                    \"breaks\": false\r\n                },\r\n                \"7\": {\r\n                    \"after\": \"$AHLetter\",\r\n                    \"before\": \"$AHLetter($MidLetter|$MidNumLetQ)\",\r\n                    \"breaks\": false\r\n                },\r\n                \"7.1\": {\r\n                    \"after\": \"$Single_Quote\",\r\n                    \"before\": \"$Hebrew_Letter\",\r\n                    \"breaks\": false\r\n                },\r\n                \"7.2\": {\r\n                    \"after\": \"$Double_Quote$Hebrew_Letter\",\r\n                    \"before\": \"$Hebrew_Letter\",\r\n                    \"breaks\": false\r\n                },\r\n                \"7.3\": {\r\n                    \"after\": \"$Hebrew_Letter\",\r\n                    \"before\": \"$Hebrew_Letter$Double_Quote\",\r\n                    \"breaks\": false\r\n                },\r\n                \"8\": {\r\n                    \"after\": \"$Numeric\",\r\n                    \"before\": \"$Numeric\",\r\n                    \"breaks\": false\r\n                },\r\n                \"9\": {\r\n                    \"after\": \"$Numeric\",\r\n                    \"before\": \"$AHLetter\",\r\n                    \"breaks\": false\r\n                }\r\n            },\r\n            \"suppressions\": [],\r\n            \"variables\": {\r\n                \"$AHLetter\": \"(((?:[A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02D7\\\\u02DE-\\\\u02FF\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559-\\\\u055C\\\\u055E\\\\u0560-\\\\u0588\\\\u058A\\\\u05F3\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u070F\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u0860-\\\\u086A\\\\u0870-\\\\u0887\\\\u0889-\\\\u088E\\\\u08A0-\\\\u08C9\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u09FC\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60\\\\u0C61\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D04-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D5F-\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u1711\\\\u171F-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1A00-\\\\u1A16\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4C\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1C80-\\\\u1C8A\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5\\\\u1CF6\\\\u1CFA\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u24B6-\\\\u24E9\\\\u2C00-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u303B\\\\u303C\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BF\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA708-\\\\uA7CD\\\\uA7D0\\\\uA7D1\\\\uA7D3\\\\uA7D5-\\\\uA7DC\\\\uA7F2-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA8FE\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB69\\\\uAB70-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB50-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFFA0-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDF00-\\\\uDF1F\\\\uDF2D-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC00-\\\\uDC9D\\\\uDCB0-\\\\uDCD3\\\\uDCD8-\\\\uDCFB\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDD70-\\\\uDD7A\\\\uDD7C-\\\\uDD8A\\\\uDD8C-\\\\uDD92\\\\uDD94\\\\uDD95\\\\uDD97-\\\\uDDA1\\\\uDDA3-\\\\uDDB1\\\\uDDB3-\\\\uDDB9\\\\uDDBB\\\\uDDBC\\\\uDDC0-\\\\uDDF3\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67\\\\uDF80-\\\\uDF85\\\\uDF87-\\\\uDFB0\\\\uDFB2-\\\\uDFBA]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE35\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDC80-\\\\uDCB2\\\\uDCC0-\\\\uDCF2\\\\uDD00-\\\\uDD23\\\\uDD4A-\\\\uDD65\\\\uDD6F-\\\\uDD85\\\\uDE80-\\\\uDEA9\\\\uDEB0\\\\uDEB1\\\\uDEC2-\\\\uDEC4\\\\uDF00-\\\\uDF1C\\\\uDF27\\\\uDF30-\\\\uDF45\\\\uDF70-\\\\uDF81\\\\uDFB0-\\\\uDFC4\\\\uDFE0-\\\\uDFF6]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC71\\\\uDC72\\\\uDC75\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDD03-\\\\uDD26\\\\uDD44\\\\uDD47\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE3F\\\\uDE40\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61\\\\uDF80-\\\\uDF89\\\\uDF8B\\\\uDF8E\\\\uDF90-\\\\uDFB5\\\\uDFB7\\\\uDFD1\\\\uDFD3]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC5F-\\\\uDC61\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE80-\\\\uDEAA\\\\uDEB8]|\\\\uD806[\\\\uDC00-\\\\uDC2B\\\\uDCA0-\\\\uDCDF\\\\uDCFF-\\\\uDD06\\\\uDD09\\\\uDD0C-\\\\uDD13\\\\uDD15\\\\uDD16\\\\uDD18-\\\\uDD2F\\\\uDD3F\\\\uDD41\\\\uDDA0-\\\\uDDA7\\\\uDDAA-\\\\uDDD0\\\\uDDE1\\\\uDDE3\\\\uDE00\\\\uDE0B-\\\\uDE32\\\\uDE3A\\\\uDE50\\\\uDE5C-\\\\uDE89\\\\uDE9D\\\\uDEB0-\\\\uDEF8\\\\uDFC0-\\\\uDFE0]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC72-\\\\uDC8F\\\\uDD00-\\\\uDD06\\\\uDD08\\\\uDD09\\\\uDD0B-\\\\uDD30\\\\uDD46\\\\uDD60-\\\\uDD65\\\\uDD67\\\\uDD68\\\\uDD6A-\\\\uDD89\\\\uDD98\\\\uDEE0-\\\\uDEF2\\\\uDF02\\\\uDF04-\\\\uDF10\\\\uDF12-\\\\uDF33\\\\uDFB0]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|\\\\uD80B[\\\\uDF90-\\\\uDFF0]|[\\\\uD80C\\\\uD80E\\\\uD80F][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2F\\\\uDC41-\\\\uDC46\\\\uDC60-\\\\uDFFF]|\\\\uD810[\\\\uDC00-\\\\uDFFA]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD818[\\\\uDD00-\\\\uDD1D]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE70-\\\\uDEBE\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDD40-\\\\uDD6C\\\\uDE40-\\\\uDE7F\\\\uDF00-\\\\uDF4A\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0\\\\uDFE1\\\\uDFE3]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD835[\\\\uDC00-\\\\uDC54\\\\uDC56-\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD1E-\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD52-\\\\uDEA5\\\\uDEA8-\\\\uDEC0\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEFA\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF34\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF6E\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDFA8\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFCB]|\\\\uD837[\\\\uDF00-\\\\uDF1E\\\\uDF25-\\\\uDF2A]|\\\\uD838[\\\\uDC30-\\\\uDC6D\\\\uDD00-\\\\uDD2C\\\\uDD37-\\\\uDD3D\\\\uDD4E\\\\uDE90-\\\\uDEAD\\\\uDEC0-\\\\uDEEB]|\\\\uD839[\\\\uDCD0-\\\\uDCEB\\\\uDDD0-\\\\uDDED\\\\uDDF0\\\\uDFE0-\\\\uDFE6\\\\uDFE8-\\\\uDFEB\\\\uDFED\\\\uDFEE\\\\uDFF0-\\\\uDFFE]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDD00-\\\\uDD43\\\\uDD4B]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD83C[\\\\uDD30-\\\\uDD49\\\\uDD50-\\\\uDD69\\\\uDD70-\\\\uDD89])|[\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F2\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFB4F])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$ALetter\": \"((?:[A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02D7\\\\u02DE-\\\\u02FF\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559-\\\\u055C\\\\u055E\\\\u0560-\\\\u0588\\\\u058A\\\\u05F3\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u070F\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u0860-\\\\u086A\\\\u0870-\\\\u0887\\\\u0889-\\\\u088E\\\\u08A0-\\\\u08C9\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u09FC\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60\\\\u0C61\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D04-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D5F-\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u1711\\\\u171F-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1A00-\\\\u1A16\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4C\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1C80-\\\\u1C8A\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5\\\\u1CF6\\\\u1CFA\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u24B6-\\\\u24E9\\\\u2C00-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u303B\\\\u303C\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BF\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA708-\\\\uA7CD\\\\uA7D0\\\\uA7D1\\\\uA7D3\\\\uA7D5-\\\\uA7DC\\\\uA7F2-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA8FE\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB69\\\\uAB70-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB50-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFFA0-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDF00-\\\\uDF1F\\\\uDF2D-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC00-\\\\uDC9D\\\\uDCB0-\\\\uDCD3\\\\uDCD8-\\\\uDCFB\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDD70-\\\\uDD7A\\\\uDD7C-\\\\uDD8A\\\\uDD8C-\\\\uDD92\\\\uDD94\\\\uDD95\\\\uDD97-\\\\uDDA1\\\\uDDA3-\\\\uDDB1\\\\uDDB3-\\\\uDDB9\\\\uDDBB\\\\uDDBC\\\\uDDC0-\\\\uDDF3\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67\\\\uDF80-\\\\uDF85\\\\uDF87-\\\\uDFB0\\\\uDFB2-\\\\uDFBA]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE35\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDC80-\\\\uDCB2\\\\uDCC0-\\\\uDCF2\\\\uDD00-\\\\uDD23\\\\uDD4A-\\\\uDD65\\\\uDD6F-\\\\uDD85\\\\uDE80-\\\\uDEA9\\\\uDEB0\\\\uDEB1\\\\uDEC2-\\\\uDEC4\\\\uDF00-\\\\uDF1C\\\\uDF27\\\\uDF30-\\\\uDF45\\\\uDF70-\\\\uDF81\\\\uDFB0-\\\\uDFC4\\\\uDFE0-\\\\uDFF6]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC71\\\\uDC72\\\\uDC75\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDD03-\\\\uDD26\\\\uDD44\\\\uDD47\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE3F\\\\uDE40\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61\\\\uDF80-\\\\uDF89\\\\uDF8B\\\\uDF8E\\\\uDF90-\\\\uDFB5\\\\uDFB7\\\\uDFD1\\\\uDFD3]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC5F-\\\\uDC61\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE80-\\\\uDEAA\\\\uDEB8]|\\\\uD806[\\\\uDC00-\\\\uDC2B\\\\uDCA0-\\\\uDCDF\\\\uDCFF-\\\\uDD06\\\\uDD09\\\\uDD0C-\\\\uDD13\\\\uDD15\\\\uDD16\\\\uDD18-\\\\uDD2F\\\\uDD3F\\\\uDD41\\\\uDDA0-\\\\uDDA7\\\\uDDAA-\\\\uDDD0\\\\uDDE1\\\\uDDE3\\\\uDE00\\\\uDE0B-\\\\uDE32\\\\uDE3A\\\\uDE50\\\\uDE5C-\\\\uDE89\\\\uDE9D\\\\uDEB0-\\\\uDEF8\\\\uDFC0-\\\\uDFE0]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC72-\\\\uDC8F\\\\uDD00-\\\\uDD06\\\\uDD08\\\\uDD09\\\\uDD0B-\\\\uDD30\\\\uDD46\\\\uDD60-\\\\uDD65\\\\uDD67\\\\uDD68\\\\uDD6A-\\\\uDD89\\\\uDD98\\\\uDEE0-\\\\uDEF2\\\\uDF02\\\\uDF04-\\\\uDF10\\\\uDF12-\\\\uDF33\\\\uDFB0]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|\\\\uD80B[\\\\uDF90-\\\\uDFF0]|[\\\\uD80C\\\\uD80E\\\\uD80F][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2F\\\\uDC41-\\\\uDC46\\\\uDC60-\\\\uDFFF]|\\\\uD810[\\\\uDC00-\\\\uDFFA]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD818[\\\\uDD00-\\\\uDD1D]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE70-\\\\uDEBE\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDD40-\\\\uDD6C\\\\uDE40-\\\\uDE7F\\\\uDF00-\\\\uDF4A\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0\\\\uDFE1\\\\uDFE3]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD835[\\\\uDC00-\\\\uDC54\\\\uDC56-\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD1E-\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD52-\\\\uDEA5\\\\uDEA8-\\\\uDEC0\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEFA\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF34\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF6E\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDFA8\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFCB]|\\\\uD837[\\\\uDF00-\\\\uDF1E\\\\uDF25-\\\\uDF2A]|\\\\uD838[\\\\uDC30-\\\\uDC6D\\\\uDD00-\\\\uDD2C\\\\uDD37-\\\\uDD3D\\\\uDD4E\\\\uDE90-\\\\uDEAD\\\\uDEC0-\\\\uDEEB]|\\\\uD839[\\\\uDCD0-\\\\uDCEB\\\\uDDD0-\\\\uDDED\\\\uDDF0\\\\uDFE0-\\\\uDFE6\\\\uDFE8-\\\\uDFEB\\\\uDFED\\\\uDFEE\\\\uDFF0-\\\\uDFFE]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDD00-\\\\uDD43\\\\uDD4B]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD83C[\\\\uDD30-\\\\uDD49\\\\uDD50-\\\\uDD69\\\\uDD70-\\\\uDD89])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$CR\": \"\\\\r\",\r\n                \"$Double_Quote\": \"(\\\"(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$ExtPict\": \"(?:[\\\\xA9\\\\xAE\\\\u203C\\\\u2049\\\\u2122\\\\u2139\\\\u2194-\\\\u2199\\\\u21A9\\\\u21AA\\\\u231A\\\\u231B\\\\u2328\\\\u2388\\\\u23CF\\\\u23E9-\\\\u23F3\\\\u23F8-\\\\u23FA\\\\u24C2\\\\u25AA\\\\u25AB\\\\u25B6\\\\u25C0\\\\u25FB-\\\\u25FE\\\\u2600-\\\\u2605\\\\u2607-\\\\u2612\\\\u2614-\\\\u2685\\\\u2690-\\\\u2705\\\\u2708-\\\\u2712\\\\u2714\\\\u2716\\\\u271D\\\\u2721\\\\u2728\\\\u2733\\\\u2734\\\\u2744\\\\u2747\\\\u274C\\\\u274E\\\\u2753-\\\\u2755\\\\u2757\\\\u2763-\\\\u2767\\\\u2795-\\\\u2797\\\\u27A1\\\\u27B0\\\\u27BF\\\\u2934\\\\u2935\\\\u2B05-\\\\u2B07\\\\u2B1B\\\\u2B1C\\\\u2B50\\\\u2B55\\\\u3030\\\\u303D\\\\u3297\\\\u3299]|\\\\uD83C[\\\\uDC00-\\\\uDCFF\\\\uDD0D-\\\\uDD0F\\\\uDD2F\\\\uDD6C-\\\\uDD71\\\\uDD7E\\\\uDD7F\\\\uDD8E\\\\uDD91-\\\\uDD9A\\\\uDDAD-\\\\uDDE5\\\\uDE01-\\\\uDE0F\\\\uDE1A\\\\uDE2F\\\\uDE32-\\\\uDE3A\\\\uDE3C-\\\\uDE3F\\\\uDE49-\\\\uDFFA]|\\\\uD83D[\\\\uDC00-\\\\uDD3D\\\\uDD46-\\\\uDE4F\\\\uDE80-\\\\uDEFF\\\\uDF74-\\\\uDF7F\\\\uDFD5-\\\\uDFFF]|\\\\uD83E[\\\\uDC0C-\\\\uDC0F\\\\uDC48-\\\\uDC4F\\\\uDC5A-\\\\uDC5F\\\\uDC88-\\\\uDC8F\\\\uDCAE-\\\\uDCFF\\\\uDD0C-\\\\uDD3A\\\\uDD3C-\\\\uDD45\\\\uDD47-\\\\uDEFF]|\\\\uD83F[\\\\uDC00-\\\\uDFFD])\",\r\n                \"$Extend\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\r\n                \"$ExtendNumLet\": \"([_\\\\u202F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$FE\": \"(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\r\n                \"$Format\": \"(?:[\\\\xAD\\\\u061C\\\\u180E\\\\u200E\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\uFEFF\\\\uFFF9-\\\\uFFFB]|\\\\uD80D[\\\\uDC30-\\\\uDC3F]|\\\\uD82F[\\\\uDCA0-\\\\uDCA3]|\\\\uD834[\\\\uDD73-\\\\uDD7A]|\\\\uDB40\\\\uDC01)\",\r\n                \"$Hebrew_Letter\": \"([\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F2\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFB4F](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Katakana\": \"((?:[\\\\u3031-\\\\u3035\\\\u309B\\\\u309C\\\\u30A0-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u31F0-\\\\u31FF\\\\u32D0-\\\\u32FE\\\\u3300-\\\\u3357\\\\uFF66-\\\\uFF9D]|\\\\uD82B[\\\\uDFF0-\\\\uDFF3\\\\uDFF5-\\\\uDFFB\\\\uDFFD\\\\uDFFE]|\\\\uD82C[\\\\uDC00\\\\uDD20-\\\\uDD22\\\\uDD55\\\\uDD64-\\\\uDD67])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$LF\": \"\\\\n\",\r\n                \"$MidLetter\": \"([:\\\\xB7\\\\u0387\\\\u055F\\\\u05F4\\\\u2027\\\\uFE13\\\\uFE55\\\\uFF1A](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$MidNum\": \"([,;\\\\u037E\\\\u0589\\\\u060C\\\\u060D\\\\u066C\\\\u07F8\\\\u2044\\\\uFE50\\\\uFE54\\\\uFF0C\\\\uFF1B](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$MidNumLet\": \"([\\\\.\\\\u2018\\\\u2019\\\\u2024\\\\uFE52\\\\uFF07\\\\uFF0E](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$MidNumLetQ\": \"(([\\\\.\\\\u2018\\\\u2019\\\\u2024\\\\uFE52\\\\uFF07\\\\uFF0E]|')(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Newline\": \"[\\\\x0B\\\\f\\\\x85\\\\u2028\\\\u2029]\",\r\n                \"$NotBreak_\": \"(?:[\\\\0-\\\\t\\\\x0E-\\\\x84\\\\x86-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])\",\r\n                \"$Numeric\": \"((?:[0-9\\\\u0600-\\\\u0605\\\\u0660-\\\\u0669\\\\u066B\\\\u06DD\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0890\\\\u0891\\\\u08E2\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19DA\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]|\\\\uD801[\\\\uDCA0-\\\\uDCA9]|[\\\\uD803\\\\uD818][\\\\uDD30-\\\\uDD39\\\\uDD40-\\\\uDD49]|\\\\uD804[\\\\uDC66-\\\\uDC6F\\\\uDCBD\\\\uDCCD\\\\uDCF0-\\\\uDCF9\\\\uDD36-\\\\uDD3F\\\\uDDD0-\\\\uDDD9\\\\uDEF0-\\\\uDEF9]|\\\\uD805[\\\\uDC50-\\\\uDC59\\\\uDCD0-\\\\uDCD9\\\\uDE50-\\\\uDE59\\\\uDEC0-\\\\uDEC9\\\\uDED0-\\\\uDEE3\\\\uDF30-\\\\uDF39]|\\\\uD806[\\\\uDCE0-\\\\uDCE9\\\\uDD50-\\\\uDD59\\\\uDFF0-\\\\uDFF9]|\\\\uD807[\\\\uDC50-\\\\uDC59\\\\uDD50-\\\\uDD59\\\\uDDA0-\\\\uDDA9\\\\uDF50-\\\\uDF59]|\\\\uD81A[\\\\uDE60-\\\\uDE69\\\\uDEC0-\\\\uDEC9\\\\uDF50-\\\\uDF59]|\\\\uD81B[\\\\uDD70-\\\\uDD79]|\\\\uD833[\\\\uDCF0-\\\\uDCF9]|\\\\uD835[\\\\uDFCE-\\\\uDFFF]|\\\\uD838[\\\\uDD40-\\\\uDD49\\\\uDEF0-\\\\uDEF9]|\\\\uD839[\\\\uDCF0-\\\\uDCF9\\\\uDDF1-\\\\uDDFA]|\\\\uD83A[\\\\uDD50-\\\\uDD59]|\\\\uD83E[\\\\uDFF0-\\\\uDFF9])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$RI\": \"((?:\\\\uD83C[\\\\uDDE6-\\\\uDDFF])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$Single_Quote\": \"('(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\r\n                \"$WSegSpace\": \"[ \\\\u1680\\\\u2000-\\\\u2006\\\\u2008-\\\\u200A\\\\u205F\\\\u3000]\",\r\n                \"$ZWJ\": \"\\\\u200D\"\r\n            }\r\n        }\r\n    },\r\n    \"ru\": {\r\n        \"sentence\": {\r\n            \"segmentRules\": {},\r\n            \"suppressions\": [\r\n                \"руб.\",\r\n                \"янв.\",\r\n                \"до н. э.\",\r\n                \"сент.\",\r\n                \"тел.\",\r\n                \"дек.\",\r\n                \"февр.\",\r\n                \"нояб.\",\r\n                \"апр.\",\r\n                \"н. э.\",\r\n                \"окт.\",\r\n                \"тыс.\",\r\n                \"авг.\",\r\n                \"проф.\",\r\n                \"н.э.\",\r\n                \"кв.\",\r\n                \"ул.\",\r\n                \"отд.\"\r\n            ],\r\n            \"variables\": {}\r\n        }\r\n    },\r\n    \"zh\": {}\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isSurrogate = exports.replaceVariables = void 0;\r\nvar replaceVariables = function (variables, input) {\r\n    var findVarRegex = /\\$[A-Za-z0-9_]+/gm;\r\n    return input.replaceAll(findVarRegex, function (match) {\r\n        if (!(match in variables)) {\r\n            throw new Error(\"No such variable \".concat(match));\r\n        }\r\n        return variables[match];\r\n    });\r\n};\r\nexports.replaceVariables = replaceVariables;\r\nvar isSurrogate = function (str, pos) {\r\n    return (0xd800 <= str.charCodeAt(pos - 1) &&\r\n        str.charCodeAt(pos - 1) <= 0xdbff &&\r\n        0xdc00 <= str.charCodeAt(pos) &&\r\n        str.charCodeAt(pos) <= 0xdfff);\r\n};\r\nexports.isSurrogate = isSurrogate;\r\n// alternative surrogate check mimicking the java implementation\r\n// const TRAIL_SURROGATE_BITMASK = 0xfffffc00\r\n// const TRAIL_SURROGATE_BITS = 0xdc00\r\n// const LEAD_SURROGATE_BITMASK = 0xfffffc00\r\n// const LEAD_SURROGATE_BITS = 0xd800\r\n// const isSurrogate = (text: string, position: number) => {\r\n//   if (\r\n//     (text.charCodeAt(position - 1) & LEAD_SURROGATE_BITMASK) ==\r\n//       LEAD_SURROGATE_BITS &&\r\n//     (text.charCodeAt(position) & TRAIL_SURROGATE_BITMASK) ==\r\n//       TRAIL_SURROGATE_BITS\r\n//   ) {\r\n//     return true\r\n//   } else {\r\n//     return false\r\n//   }\r\n// }\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Segmenter = void 0;\r\nvar tslib_1 = require(\"tslib\");\r\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\r\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\r\nvar cldr_segmentation_rules_generated_1 = require(\"./cldr-segmentation-rules.generated\");\r\nvar segmentation_utils_1 = require(\"./segmentation-utils\");\r\n/**\r\n * Adds $ to before rules and ^ to after rules for strictness\r\n * Replaces variables\r\n * Initializes the RegExp\r\n *\r\n * @param rule raw rule string from cldr-segmentation-rules.generated\r\n * @param variables\r\n * @param after appends ^ if true and $ if false\r\n * @returns\r\n */\r\nvar generateRuleRegex = function (rule, variables, after) {\r\n    return new RegExp(\"\".concat(after ? '^' : '').concat((0, segmentation_utils_1.replaceVariables)(variables, rule)).concat(after ? '' : '$'));\r\n};\r\nvar prepareLocaleSegmentationRules = function (segmentationTypeValue) {\r\n    var preparedRules = {};\r\n    for (var _i = 0, _a = Object.keys(segmentationTypeValue.segmentRules); _i < _a.length; _i++) {\r\n        var ruleNr = _a[_i];\r\n        var ruleValue = segmentationTypeValue.segmentRules[ruleNr];\r\n        var preparedRule = {\r\n            breaks: ruleValue.breaks,\r\n        };\r\n        if ('before' in ruleValue && ruleValue.before) {\r\n            preparedRule.before = generateRuleRegex(ruleValue.before, segmentationTypeValue.variables, false);\r\n        }\r\n        if ('after' in ruleValue && ruleValue.after) {\r\n            preparedRule.after = generateRuleRegex(ruleValue.after, segmentationTypeValue.variables, true);\r\n        }\r\n        preparedRules[ruleNr] = preparedRule;\r\n    }\r\n    return preparedRules;\r\n};\r\nvar breaksAtResult = function (breaks, matchingRule) { return ({\r\n    breaks: breaks,\r\n    matchingRule: matchingRule,\r\n}); };\r\nvar Segmenter = /** @class */ (function () {\r\n    function Segmenter(locales, options) {\r\n        var _newTarget = this.constructor;\r\n        if (_newTarget === undefined) {\r\n            throw TypeError(\"Constructor Intl.Segmenter requires 'new'\");\r\n        }\r\n        var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);\r\n        options = (0, ecma402_abstract_1.GetOptionsObject)(options);\r\n        var opt = Object.create(null);\r\n        var matcher = (0, ecma402_abstract_1.GetOption)(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\r\n        opt.localeMatcher = matcher;\r\n        var granularity = (0, ecma402_abstract_1.GetOption)(options, 'granularity', 'string', ['word', 'sentence', 'grapheme'], 'grapheme');\r\n        setSlot(this, 'granularity', granularity);\r\n        //TODO: figure out correct availible locales\r\n        var r = (0, intl_localematcher_1.ResolveLocale)(Segmenter.availableLocales, //availible locales\r\n        requestedLocales, opt, [], // there is no relevantExtensionKeys\r\n        {}, function () { return ''; } //use only root rules\r\n        );\r\n        setSlot(this, 'locale', r.locale);\r\n        //root rules based on granularity\r\n        this.mergedSegmentationTypeValue = cldr_segmentation_rules_generated_1.SegmentationRules.root[granularity];\r\n        //merge root rules with locale ones if locale is specified\r\n        if (r.locale.length) {\r\n            var localeOverrides = cldr_segmentation_rules_generated_1.SegmentationRules[r.locale];\r\n            if (granularity in localeOverrides) {\r\n                var localeSegmentationTypeValue = localeOverrides[granularity];\r\n                this.mergedSegmentationTypeValue.variables = tslib_1.__assign(tslib_1.__assign({}, this.mergedSegmentationTypeValue.variables), localeSegmentationTypeValue.variables);\r\n                this.mergedSegmentationTypeValue.segmentRules = tslib_1.__assign(tslib_1.__assign({}, this.mergedSegmentationTypeValue.segmentRules), localeSegmentationTypeValue.segmentRules);\r\n                this.mergedSegmentationTypeValue.suppressions = tslib_1.__spreadArray(tslib_1.__spreadArray([], this.mergedSegmentationTypeValue.suppressions, true), localeSegmentationTypeValue.suppressions, true);\r\n            }\r\n        }\r\n        //prepare rules\r\n        this.rules = prepareLocaleSegmentationRules(this.mergedSegmentationTypeValue);\r\n        //order rule keys\r\n        this.ruleSortedKeys = Object.keys(this.rules).sort(function (a, b) { return Number(a) - Number(b); });\r\n    }\r\n    Segmenter.prototype.breaksAt = function (position, input) {\r\n        var ruleSortedKeys = this.ruleSortedKeys;\r\n        var rules = this.rules;\r\n        var mergedSegmentationTypeValue = this.mergedSegmentationTypeValue;\r\n        //artificial rule 0.2\r\n        if (position === 0) {\r\n            return breaksAtResult(true, '0.2');\r\n        }\r\n        if (position === input.length) {\r\n            //rule 0.3\r\n            return breaksAtResult(true, '0.3');\r\n        }\r\n        //artificial rule 0.1: js specific, due to es5 regex not being unicode aware\r\n        //number 0.1 chosen to mimic java implementation, but needs to execute after 0.2 and 0.3 to be inside the string bounds\r\n        if ((0, segmentation_utils_1.isSurrogate)(input, position)) {\r\n            return breaksAtResult(false, '0.1');\r\n        }\r\n        var stringBeforeBreak = input.substring(0, position);\r\n        var stringAfterBreak = input.substring(position);\r\n        //artificial rule 0.4: handle suppressions\r\n        if ('suppressions' in mergedSegmentationTypeValue) {\r\n            for (var _i = 0, _a = mergedSegmentationTypeValue.suppressions; _i < _a.length; _i++) {\r\n                var suppressions = _a[_i];\r\n                if (stringBeforeBreak.trim().endsWith(suppressions)) {\r\n                    return breaksAtResult(false, '0.4');\r\n                }\r\n            }\r\n        }\r\n        // loop through rules and find a match\r\n        for (var _b = 0, ruleSortedKeys_1 = ruleSortedKeys; _b < ruleSortedKeys_1.length; _b++) {\r\n            var ruleKey = ruleSortedKeys_1[_b];\r\n            var _c = rules[ruleKey], before = _c.before, after = _c.after, breaks = _c.breaks;\r\n            // for debugging\r\n            // if (ruleKey === '16' && position === 4) {\r\n            //   console.log({before, after, stringBeforeBreak, stringAfterBreak})\r\n            // }\r\n            if (before) {\r\n                if (!before.test(stringBeforeBreak)) {\r\n                    //didn't match the before part, therfore skipping\r\n                    continue;\r\n                }\r\n            }\r\n            if (after) {\r\n                if (!after.test(stringAfterBreak)) {\r\n                    //didn't match the after part, therfore skipping\r\n                    continue;\r\n                }\r\n            }\r\n            return breaksAtResult(breaks, ruleKey);\r\n        }\r\n        //artificial rule 999: if no rule matched is Any ÷ Any so return true\r\n        return breaksAtResult(true, '999');\r\n    };\r\n    Segmenter.prototype.segment = function (input) {\r\n        checkReceiver(this, 'segment');\r\n        return new SegmentIterator(this, input);\r\n    };\r\n    Segmenter.prototype.resolvedOptions = function () {\r\n        checkReceiver(this, 'resolvedOptions');\r\n        return tslib_1.__assign({}, (0, ecma402_abstract_1.getMultiInternalSlots)(__INTERNAL_SLOT_MAP__, this, 'locale', 'granularity'));\r\n    };\r\n    Segmenter.supportedLocalesOf = function (locales, options) {\r\n        return (0, ecma402_abstract_1.SupportedLocales)(Segmenter.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);\r\n    };\r\n    Segmenter.availableLocales = new Set(Object.keys(cldr_segmentation_rules_generated_1.SegmentationRules).filter(function (key) { return key !== 'root'; }));\r\n    Segmenter.polyfilled = true;\r\n    return Segmenter;\r\n}());\r\nexports.Segmenter = Segmenter;\r\nvar createSegmentDataObject = function (segmenter, segment, index, input, matchingRule) {\r\n    var returnValue = {\r\n        segment: segment,\r\n        index: index,\r\n        input: input,\r\n    };\r\n    if (getSlot(segmenter, 'granularity') === 'word') {\r\n        returnValue.isWordLike = matchingRule !== '3.1' && matchingRule !== '3.2';\r\n    }\r\n    return returnValue;\r\n};\r\nvar SegmentIterator = /** @class */ (function () {\r\n    function SegmentIterator(segmenter, input) {\r\n        this.segmenter = segmenter;\r\n        this.lastSegmentIndex = 0;\r\n        if (typeof input == 'symbol') {\r\n            throw TypeError(\"Input must not be a symbol\");\r\n        }\r\n        this.input = String(input);\r\n    }\r\n    SegmentIterator.prototype[Symbol.iterator] = function () {\r\n        return new SegmentIterator(this.segmenter, this.input);\r\n    };\r\n    SegmentIterator.prototype.next = function () {\r\n        //using only the relevant bit of the string\r\n        var checkString = this.input.substring(this.lastSegmentIndex);\r\n        //loop from the start of the checkString, until exactly length (breaksAt returns break at pos=== lenght)\r\n        for (var position = 1; position <= checkString.length; position++) {\r\n            var _a = this.segmenter.breaksAt(position, checkString), breaks = _a.breaks, matchingRule = _a.matchingRule;\r\n            if (breaks) {\r\n                var segment = checkString.substring(0, position);\r\n                var index = this.lastSegmentIndex;\r\n                this.lastSegmentIndex += position;\r\n                return {\r\n                    done: false,\r\n                    value: createSegmentDataObject(this.segmenter, segment, index, this.input, matchingRule),\r\n                };\r\n            }\r\n        }\r\n        //no segment was found by the loop, therefore the segmentation is done\r\n        return { done: true, value: undefined };\r\n    };\r\n    SegmentIterator.prototype.containing = function (positionInput) {\r\n        if (typeof positionInput === 'bigint') {\r\n            throw TypeError('Index must not be a BigInt');\r\n        }\r\n        var position = Number(positionInput);\r\n        //https://tc39.es/ecma262/#sec-tointegerorinfinity\r\n        // 2. If number is NaN, +0𝔽, or -0𝔽, return 0.\r\n        if (isNaN(position) || !position) {\r\n            position = 0;\r\n        }\r\n        // 5. Let integer be floor(abs(ℝ(number))).\r\n        // 6. If number < -0𝔽, set integer to -integer.\r\n        position = Math.floor(Math.abs(position)) * (position < 0 ? -1 : 1);\r\n        if (position < 0 || position >= this.input.length) {\r\n            return undefined;\r\n        }\r\n        //find previous break point\r\n        var previousBreakPoint = 0;\r\n        if (position === 0) {\r\n            previousBreakPoint = 0;\r\n        }\r\n        else {\r\n            var checkString_1 = this.input;\r\n            for (var cursor = position; cursor >= 0; cursor--) {\r\n                var breaks = this.segmenter.breaksAt(cursor, checkString_1).breaks;\r\n                if (breaks) {\r\n                    previousBreakPoint = cursor;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        var checkString = this.input.substring(previousBreakPoint);\r\n        //find next break point\r\n        for (var cursor = 1; cursor <= checkString.length; cursor++) {\r\n            var _a = this.segmenter.breaksAt(cursor, checkString), breaks = _a.breaks, matchingRule = _a.matchingRule;\r\n            if (breaks) {\r\n                var segment = checkString.substring(0, cursor);\r\n                return createSegmentDataObject(this.segmenter, segment, previousBreakPoint, this.input, matchingRule);\r\n            }\r\n        }\r\n    };\r\n    return SegmentIterator;\r\n}());\r\nvar __INTERNAL_SLOT_MAP__ = new WeakMap();\r\nfunction getSlot(instance, key) {\r\n    return (0, ecma402_abstract_1.getInternalSlot)(__INTERNAL_SLOT_MAP__, instance, key);\r\n}\r\nfunction setSlot(instance, key, value) {\r\n    (0, ecma402_abstract_1.setInternalSlot)(__INTERNAL_SLOT_MAP__, instance, key, value);\r\n}\r\nfunction checkReceiver(receiver, methodName) {\r\n    if (!(receiver instanceof Segmenter)) {\r\n        throw TypeError(\"Method Intl.Segmenter.prototype.\".concat(methodName, \" called on incompatible receiver\"));\r\n    }\r\n}\r\ntry {\r\n    // IE11 does not have Symbol\r\n    if (typeof Symbol !== 'undefined') {\r\n        Object.defineProperty(Segmenter.prototype, Symbol.toStringTag, {\r\n            value: 'Intl.Segmenter',\r\n            writable: false,\r\n            enumerable: false,\r\n            configurable: true,\r\n        });\r\n    }\r\n    //github.com/tc39/test262/blob/main/test/intl402/Segmenter/constructor/length.js\r\n    https: Object.defineProperty(Segmenter.prototype.constructor, 'length', {\r\n        value: 0,\r\n        writable: false,\r\n        enumerable: false,\r\n        configurable: true,\r\n    });\r\n    // https://github.com/tc39/test262/blob/main/test/intl402/Segmenter/constructor/supportedLocalesOf/length.js\r\n    Object.defineProperty(Segmenter.supportedLocalesOf, 'length', {\r\n        value: 1,\r\n        writable: false,\r\n        enumerable: false,\r\n        configurable: true,\r\n    });\r\n}\r\ncatch (e) {\r\n    // Meta fix so we're test262-compliant, not important\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shouldPolyfill = shouldPolyfill;\r\nfunction shouldPolyfill() {\r\n    return !Intl.Segmenter;\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar segmenter_1 = require(\"./src/segmenter\");\r\nvar should_polyfill_1 = require(\"./should-polyfill\");\r\nif ((0, should_polyfill_1.shouldPolyfill)()) {\r\n    Object.defineProperty(Intl, 'Segmenter', {\r\n        value: segmenter_1.Segmenter,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n    });\r\n}\r\n", "<script>\r\n    import '@formatjs/intl-segmenter/polyfill'\r\n\r\n    export let mode = \"concurrent\"\r\n\r\n    // general-purpose props\r\n\texport let interval = 30\r\n\texport let cursor = true\r\n    export let keepCursorOnFinish = false\r\n\texport let delay = 0\r\n    export let showCursorOnDelay = false\r\n    export let disabled = false\r\n    export let element = \"div\"\r\n\r\n    // mode-specific props\r\n    export let scrambleDuration = 3000\r\n    export let scrambleSlowdown = true\r\n\texport let unwriteInterval = 30\r\n    export let wordInterval = 1500\r\n\r\n    $: isLoopMode = /^loop(Once|Random)?$/.test(mode)\r\n\r\n    // these modes stop once all given elements have finished their animations\r\n    // and support the cursor\r\n    $: isFiniteCursorMode = [\"concurrent\", \"cascade\", \"loopOnce\"].includes(mode)\r\n\r\n    $: invalidCursorOnFinish = !isFiniteCursorMode && keepCursorOnFinish\r\n    $: invalidCursorOnDelay = delay < 1 && showCursorOnDelay\r\n    $: invalidLoopProps = !isLoopMode && ($$props.unwriteInterval || $$props.wordInterval)\r\n    $: invalidScrambleProps = mode !== \"scramble\" && ($$props.scrambleDuration || $$props.scrambleSlowdown)\r\n    $: unnecessaryCursorOnFinish = typeof keepCursorOnFinish === 'number' && keepCursorOnFinish < 1\r\n\r\n    const modes = {\r\n        concurrent: () => import(\"./modes/concurrent\"),\r\n        cascade: () => import(\"./modes/cascade\"),\r\n        loop: () => import(\"./modes/loop\"),\r\n        loopOnce: () => import(\"./modes/loopOnce\"),\r\n        loopRandom: () => import(\"./modes/loopRandom\"),\r\n        scramble: () => import(\"./modes/scramble\")\r\n    }\r\n\r\n    $: invalidCursorOnFinish && console.warn(\"[svelte-typewriter] The prop 'keepCursorOnFinish' is compatible only with finite modes\")\r\n    $: invalidCursorOnDelay && console.warn(\"[svelte-typewriter] The prop 'showCursorOnDelay' has no effect if the delay is 0\")\r\n    $: invalidLoopProps && console.warn(\"[svelte-typewriter] The props 'unwriteInterval' and 'wordInterval' are only compatible with loop modes\")\r\n    $: invalidScrambleProps && console.warn(\"[svelte-typewriter] The props 'scrambleDuration' and 'scrambleSlowdown' are only compatible with scramble mode\")\r\n    $: unnecessaryCursorOnFinish && console.warn(\"[svelte-typewriter] The prop 'keepCursorOnFinish' has no effect with values lower than 1\")\r\n\r\n    $: delayPromise = () => new Promise(resolve => setTimeout(() => resolve(delay), delay))\r\n\r\n    $: props = {\r\n        interval,\r\n        cursor,\r\n        keepCursorOnFinish,\r\n        delay,\r\n        showCursorOnDelay,\r\n        disabled,\r\n        element,\r\n        scrambleDuration,\r\n        scrambleSlowdown,\r\n        unwriteInterval,\r\n        wordInterval\r\n    }\r\n</script>\r\n\r\n<style>\r\n\t@keyframes cursorFade {\r\n\t\t0%,\r\n\t\t100% {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\r\n\t\t50% {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t.typewriter-container :global(*:not(.typing):not(.finished-typing):not([data-static])) {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t.typewriter-container :global(.finished-typing::after) {\r\n\t\tcontent: none;\r\n\t}\r\n\r\n    .cursor :global(.typing::after) {\r\n        content: '';\r\n        width: var(--cursor-width, 1ch);\r\n        height: 2ch;\r\n        display: inline-block;\r\n        vertical-align: text-top;\r\n        background-color: var(--cursor-color, #000000);\r\n        animation: cursorFade 1.25s infinite;\r\n    }\r\n</style>\r\n\r\n<noscript>\r\n    <slot />\r\n</noscript>\r\n\r\n{#key $$props}\r\n    {#if disabled}\r\n        <div class=\"typewriter-container\">\r\n            <slot />\r\n        </div>\r\n    {:else}\r\n        {#await delayPromise()}\r\n            {#if showCursorOnDelay}\r\n                <div class=\"typewriter-container cursor\">\r\n                    <p class=\"typing\"></p>\r\n                </div>\r\n            {/if}\r\n        {:then}\r\n            {#await modes[mode]() then selectedMode}\r\n                <svelte:element this={element} use:selectedMode.default={props} class:cursor class=\"typewriter-container\">\r\n                    <slot />\r\n                </svelte:element>\r\n            {/await}\r\n        {/await}\r\n    {/if}\r\n{/key}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBO,SAAS,UAAU,GAAG,GAAG;AAC9B,MAAI,OAAO,MAAM,cAAc,MAAM;AACjC,UAAM,IAAI,UAAU,yBAAyB,OAAO,CAAC,IAAI,+BAA+B;AAC5F,gBAAc,GAAG,CAAC;AAClB,WAAS,KAAK;AAAE,SAAK,cAAc;AAAA,EAAG;AACtC,IAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AACpF;AAaO,SAAS,OAAO,GAAG,GAAG;AAC3B,MAAI,IAAI,CAAC;AACT,WAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI;AAC9E,MAAE,CAAC,IAAI,EAAE,CAAC;AACd,MAAI,KAAK,QAAQ,OAAO,OAAO,0BAA0B;AACrD,aAAS,IAAI,GAAG,IAAI,OAAO,sBAAsB,CAAC,GAAG,IAAI,EAAE,QAAQ,KAAK;AACpE,UAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAK,GAAG,EAAE,CAAC,CAAC;AACzE,UAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,IACxB;AACJ,SAAO;AACT;AAEO,SAAS,WAAW,YAAY,QAAQA,MAAK,MAAM;AACxD,MAAI,IAAI,UAAU,QAAQ,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,yBAAyB,QAAQA,IAAG,IAAI,MAAM;AAC3H,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAY,QAAQA,MAAK,IAAI;AAAA,MACxH,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAI,IAAI,WAAW,CAAC,EAAG,MAAK,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE,QAAQA,MAAK,CAAC,IAAI,EAAE,QAAQA,IAAG,MAAM;AAChJ,SAAO,IAAI,KAAK,KAAK,OAAO,eAAe,QAAQA,MAAK,CAAC,GAAG;AAC9D;AAEO,SAAS,QAAQ,YAAY,WAAW;AAC7C,SAAO,SAAU,QAAQA,MAAK;AAAE,cAAU,QAAQA,MAAK,UAAU;AAAA,EAAG;AACtE;AAEO,SAAS,aAAa,MAAM,cAAc,YAAY,WAAW,cAAc,mBAAmB;AACvG,WAAS,OAAO,GAAG;AAAE,QAAI,MAAM,UAAU,OAAO,MAAM,WAAY,OAAM,IAAI,UAAU,mBAAmB;AAAG,WAAO;AAAA,EAAG;AACtH,MAAI,OAAO,UAAU,MAAMA,OAAM,SAAS,WAAW,QAAQ,SAAS,WAAW,QAAQ;AACzF,MAAI,SAAS,CAAC,gBAAgB,OAAO,UAAU,QAAQ,IAAI,OAAO,KAAK,YAAY;AACnF,MAAI,aAAa,iBAAiB,SAAS,OAAO,yBAAyB,QAAQ,UAAU,IAAI,IAAI,CAAC;AACtG,MAAI,GAAG,OAAO;AACd,WAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK;AAC7C,QAAI,UAAU,CAAC;AACf,aAAS,KAAK,UAAW,SAAQ,CAAC,IAAI,MAAM,WAAW,CAAC,IAAI,UAAU,CAAC;AACvE,aAAS,KAAK,UAAU,OAAQ,SAAQ,OAAO,CAAC,IAAI,UAAU,OAAO,CAAC;AACtE,YAAQ,iBAAiB,SAAU,GAAG;AAAE,UAAI,KAAM,OAAM,IAAI,UAAU,wDAAwD;AAAG,wBAAkB,KAAK,OAAO,KAAK,IAAI,CAAC;AAAA,IAAG;AAC5K,QAAI,UAAU,GAAG,WAAW,CAAC,GAAG,SAAS,aAAa,EAAE,KAAK,WAAW,KAAK,KAAK,WAAW,IAAI,IAAI,WAAWA,IAAG,GAAG,OAAO;AAC7H,QAAI,SAAS,YAAY;AACrB,UAAI,WAAW,OAAQ;AACvB,UAAI,WAAW,QAAQ,OAAO,WAAW,SAAU,OAAM,IAAI,UAAU,iBAAiB;AACxF,UAAI,IAAI,OAAO,OAAO,GAAG,EAAG,YAAW,MAAM;AAC7C,UAAI,IAAI,OAAO,OAAO,GAAG,EAAG,YAAW,MAAM;AAC7C,UAAI,IAAI,OAAO,OAAO,IAAI,EAAG,cAAa,QAAQ,CAAC;AAAA,IACvD,WACS,IAAI,OAAO,MAAM,GAAG;AACzB,UAAI,SAAS,QAAS,cAAa,QAAQ,CAAC;AAAA,UACvC,YAAWA,IAAG,IAAI;AAAA,IAC3B;AAAA,EACJ;AACA,MAAI,OAAQ,QAAO,eAAe,QAAQ,UAAU,MAAM,UAAU;AACpE,SAAO;AACT;AAEO,SAAS,kBAAkB,SAAS,cAAc,OAAO;AAC9D,MAAI,WAAW,UAAU,SAAS;AAClC,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,YAAQ,WAAW,aAAa,CAAC,EAAE,KAAK,SAAS,KAAK,IAAI,aAAa,CAAC,EAAE,KAAK,OAAO;AAAA,EAC1F;AACA,SAAO,WAAW,QAAQ;AAC5B;AAEO,SAAS,UAAU,GAAG;AAC3B,SAAO,OAAO,MAAM,WAAW,IAAI,GAAG,OAAO,CAAC;AAChD;AAEO,SAAS,kBAAkB,GAAG,MAAM,QAAQ;AACjD,MAAI,OAAO,SAAS,SAAU,QAAO,KAAK,cAAc,IAAI,OAAO,KAAK,aAAa,GAAG,IAAI;AAC5F,SAAO,OAAO,eAAe,GAAG,QAAQ,EAAE,cAAc,MAAM,OAAO,SAAS,GAAG,OAAO,QAAQ,KAAK,IAAI,IAAI,KAAK,CAAC;AACrH;AAEO,SAAS,WAAW,aAAa,eAAe;AACrD,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,QAAO,QAAQ,SAAS,aAAa,aAAa;AAC/H;AAEO,SAAS,UAAU,SAAS,YAAYC,IAAG,WAAW;AAC3D,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiBA,KAAI,QAAQ,IAAIA,GAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAG,CAAC;AAAA,EAAG;AAC3G,SAAO,KAAKA,OAAMA,KAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC7G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACH;AAEO,SAAS,YAAY,SAAS,MAAM;AACzC,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI,EAAG,OAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,OAAO,QAAQ,OAAO,aAAa,aAAa,WAAW,QAAQ,SAAS;AAC/L,SAAO,EAAE,OAAO,KAAK,CAAC,GAAG,EAAE,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE,QAAQ,IAAI,KAAK,CAAC,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AAC1J,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AACjE,WAAS,KAAK,IAAI;AACd,QAAI,EAAG,OAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,EAAG,KAAI;AAC1C,UAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,KAAM,QAAO;AAC3J,UAAI,IAAI,GAAG,EAAG,MAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,cAAQ,GAAG,CAAC,GAAG;AAAA,QACX,KAAK;AAAA,QAAG,KAAK;AAAG,cAAI;AAAI;AAAA,QACxB,KAAK;AAAG,YAAE;AAAS,iBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,QACtD,KAAK;AAAG,YAAE;AAAS,cAAI,GAAG,CAAC;AAAG,eAAK,CAAC,CAAC;AAAG;AAAA,QACxC,KAAK;AAAG,eAAK,EAAE,IAAI,IAAI;AAAG,YAAE,KAAK,IAAI;AAAG;AAAA,QACxC;AACI,cAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,gBAAI;AAAG;AAAA,UAAU;AAC3G,cAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,cAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,UAAO;AACrF,cAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,gBAAI;AAAI;AAAA,UAAO;AACpE,cAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,cAAE,IAAI,KAAK,EAAE;AAAG;AAAA,UAAO;AAClE,cAAI,EAAE,CAAC,EAAG,GAAE,IAAI,IAAI;AACpB,YAAE,KAAK,IAAI;AAAG;AAAA,MACtB;AACA,WAAK,KAAK,KAAK,SAAS,CAAC;AAAA,IAC7B,SAAS,GAAG;AAAE,WAAK,CAAC,GAAG,CAAC;AAAG,UAAI;AAAA,IAAG,UAAE;AAAU,UAAI,IAAI;AAAA,IAAG;AACzD,QAAI,GAAG,CAAC,IAAI,EAAG,OAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AACF;AAcO,SAAS,aAAa,GAAG,GAAG;AACjC,WAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,EAAG,iBAAgB,GAAG,GAAG,CAAC;AAC9G;AAEO,SAAS,SAAS,GAAG;AAC1B,MAAI,IAAI,OAAO,WAAW,cAAc,OAAO,UAAU,IAAI,KAAK,EAAE,CAAC,GAAG,IAAI;AAC5E,MAAI,EAAG,QAAO,EAAE,KAAK,CAAC;AACtB,MAAI,KAAK,OAAO,EAAE,WAAW,SAAU,QAAO;AAAA,IAC1C,MAAM,WAAY;AACd,UAAI,KAAK,KAAK,EAAE,OAAQ,KAAI;AAC5B,aAAO,EAAE,OAAO,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,EAAE;AAAA,IAC1C;AAAA,EACJ;AACA,QAAM,IAAI,UAAU,IAAI,4BAA4B,iCAAiC;AACvF;AAEO,SAAS,OAAO,GAAG,GAAG;AAC3B,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG;AAC/B,MAAI;AACA,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC7E,SACO,OAAO;AAAE,QAAI,EAAE,MAAa;AAAA,EAAG,UACtC;AACI,QAAI;AACA,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IACnD,UACA;AAAU,UAAI,EAAG,OAAM,EAAE;AAAA,IAAO;AAAA,EACpC;AACA,SAAO;AACT;AAGO,SAAS,WAAW;AACzB,WAAS,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ;AAC3C,SAAK,GAAG,OAAO,OAAO,UAAU,CAAC,CAAC,CAAC;AACvC,SAAO;AACT;AAGO,SAAS,iBAAiB;AAC/B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK,UAAU,QAAQ,IAAI,IAAI,IAAK,MAAK,UAAU,CAAC,EAAE;AAC7E,WAAS,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI;AACzC,aAAS,IAAI,UAAU,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC1D,QAAE,CAAC,IAAI,EAAE,CAAC;AAClB,SAAO;AACT;AAEO,SAAS,cAAc,IAAI,MAAM,MAAM;AAC5C,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACjF,QAAI,MAAM,EAAE,KAAK,OAAO;AACpB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAI,KAAK,CAAC;AAAA,IAClB;AAAA,EACJ;AACA,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AACzD;AAEO,SAAS,QAAQ,GAAG;AACzB,SAAO,gBAAgB,WAAW,KAAK,IAAI,GAAG,QAAQ,IAAI,QAAQ,CAAC;AACrE;AAEO,SAAS,iBAAiB,SAAS,YAAY,WAAW;AAC/D,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AAC5D,SAAO,IAAI,OAAO,QAAQ,OAAO,kBAAkB,aAAa,gBAAgB,QAAQ,SAAS,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,UAAU,WAAW,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;AAAA,EAAM,GAAG;AACtN,WAAS,YAAY,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,QAAQ,QAAQ,CAAC,EAAE,KAAK,GAAG,MAAM;AAAA,IAAG;AAAA,EAAG;AAC9F,WAAS,KAAK,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG;AAAE,QAAE,CAAC,IAAI,SAAU,GAAG;AAAE,eAAO,IAAI,QAAQ,SAAU,GAAG,GAAG;AAAE,YAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,GAAG,CAAC;AAAA,QAAG,CAAC;AAAA,MAAG;AAAG,UAAI,EAAG,GAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,IAAG;AAAA,EAAE;AACvK,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI;AAAE,WAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,IAAG,SAAS,GAAG;AAAE,aAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,IAAG;AAAA,EAAE;AACjF,WAAS,KAAK,GAAG;AAAE,MAAE,iBAAiB,UAAU,QAAQ,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,SAAS,MAAM,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,EAAG;AACvH,WAAS,QAAQ,OAAO;AAAE,WAAO,QAAQ,KAAK;AAAA,EAAG;AACjD,WAAS,OAAO,OAAO;AAAE,WAAO,SAAS,KAAK;AAAA,EAAG;AACjD,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,EAAE,OAAQ,QAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,EAAG;AACnF;AAEO,SAAS,iBAAiB,GAAG;AAClC,MAAI,GAAG;AACP,SAAO,IAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,SAAS,SAAU,GAAG;AAAE,UAAM;AAAA,EAAG,CAAC,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,QAAQ,IAAI,WAAY;AAAE,WAAO;AAAA,EAAM,GAAG;AAC1I,WAAS,KAAK,GAAG,GAAG;AAAE,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,SAAU,GAAG;AAAE,cAAQ,IAAI,CAAC,KAAK,EAAE,OAAO,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,MAAM,IAAI,IAAI,EAAE,CAAC,IAAI;AAAA,IAAG,IAAI;AAAA,EAAG;AACvI;AAEO,SAAS,cAAc,GAAG;AAC/B,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,EAAE,OAAO,aAAa,GAAG;AACjC,SAAO,IAAI,EAAE,KAAK,CAAC,KAAK,IAAI,OAAO,aAAa,aAAa,SAAS,CAAC,IAAI,EAAE,OAAO,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;AAAA,EAAM,GAAG;AAC9M,WAAS,KAAK,GAAG;AAAE,MAAE,CAAC,IAAI,EAAE,CAAC,KAAK,SAAU,GAAG;AAAE,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAAE,YAAI,EAAE,CAAC,EAAE,CAAC,GAAG,OAAO,SAAS,QAAQ,EAAE,MAAM,EAAE,KAAK;AAAA,MAAG,CAAC;AAAA,IAAG;AAAA,EAAG;AAC/J,WAAS,OAAO,SAAS,QAAQ,GAAG,GAAG;AAAE,YAAQ,QAAQ,CAAC,EAAE,KAAK,SAASC,IAAG;AAAE,cAAQ,EAAE,OAAOA,IAAG,MAAM,EAAE,CAAC;AAAA,IAAG,GAAG,MAAM;AAAA,EAAG;AAC7H;AAEO,SAAS,qBAAqB,QAAQ,KAAK;AAChD,MAAI,OAAO,gBAAgB;AAAE,WAAO,eAAe,QAAQ,OAAO,EAAE,OAAO,IAAI,CAAC;AAAA,EAAG,OAAO;AAAE,WAAO,MAAM;AAAA,EAAK;AAC9G,SAAO;AACT;AAiBO,SAAS,aAAaC,MAAK;AAChC,MAAIA,QAAOA,KAAI,WAAY,QAAOA;AAClC,MAAI,SAAS,CAAC;AACd,MAAIA,QAAO;AAAM,aAAS,IAAI,QAAQA,IAAG,GAAG,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAK,KAAI,EAAE,CAAC,MAAM,UAAW,iBAAgB,QAAQA,MAAK,EAAE,CAAC,CAAC;AAAA;AAC/H,qBAAmB,QAAQA,IAAG;AAC9B,SAAO;AACT;AAEO,SAAS,gBAAgBA,MAAK;AACnC,SAAQA,QAAOA,KAAI,aAAcA,OAAM,EAAE,SAASA,KAAI;AACxD;AAEO,SAAS,uBAAuB,UAAU,OAAO,MAAM,GAAG;AAC/D,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAC9F;AAEO,SAAS,uBAAuB,UAAU,OAAO,OAAO,MAAM,GAAG;AACtE,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACtG;AAEO,SAAS,sBAAsB,OAAO,UAAU;AACrD,MAAI,aAAa,QAAS,OAAO,aAAa,YAAY,OAAO,aAAa,WAAa,OAAM,IAAI,UAAU,wCAAwC;AACvJ,SAAO,OAAO,UAAU,aAAa,aAAa,QAAQ,MAAM,IAAI,QAAQ;AAC9E;AAEO,SAAS,wBAAwB,KAAK,OAAO,OAAO;AACzD,MAAI,UAAU,QAAQ,UAAU,QAAQ;AACtC,QAAI,OAAO,UAAU,YAAY,OAAO,UAAU,WAAY,OAAM,IAAI,UAAU,kBAAkB;AACpG,QAAI,SAAS;AACb,QAAI,OAAO;AACT,UAAI,CAAC,OAAO,aAAc,OAAM,IAAI,UAAU,qCAAqC;AACnF,gBAAU,MAAM,OAAO,YAAY;AAAA,IACrC;AACA,QAAI,YAAY,QAAQ;AACtB,UAAI,CAAC,OAAO,QAAS,OAAM,IAAI,UAAU,gCAAgC;AACzE,gBAAU,MAAM,OAAO,OAAO;AAC9B,UAAI,MAAO,SAAQ;AAAA,IACrB;AACA,QAAI,OAAO,YAAY,WAAY,OAAM,IAAI,UAAU,wBAAwB;AAC/E,QAAI,MAAO,WAAU,WAAW;AAAE,UAAI;AAAE,cAAM,KAAK,IAAI;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,QAAQ,OAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AACpG,QAAI,MAAM,KAAK,EAAE,OAAc,SAAkB,MAAa,CAAC;AAAA,EACjE,WACS,OAAO;AACd,QAAI,MAAM,KAAK,EAAE,OAAO,KAAK,CAAC;AAAA,EAChC;AACA,SAAO;AACT;AAOO,SAAS,mBAAmB,KAAK;AACtC,WAAS,KAAK,GAAG;AACf,QAAI,QAAQ,IAAI,WAAW,IAAI,iBAAiB,GAAG,IAAI,OAAO,0CAA0C,IAAI;AAC5G,QAAI,WAAW;AAAA,EACjB;AACA,MAAI,GAAG,IAAI;AACX,WAAS,OAAO;AACd,WAAO,IAAI,IAAI,MAAM,IAAI,GAAG;AAC1B,UAAI;AACF,YAAI,CAAC,EAAE,SAAS,MAAM,EAAG,QAAO,IAAI,GAAG,IAAI,MAAM,KAAK,CAAC,GAAG,QAAQ,QAAQ,EAAE,KAAK,IAAI;AACrF,YAAI,EAAE,SAAS;AACb,cAAI,SAAS,EAAE,QAAQ,KAAK,EAAE,KAAK;AACnC,cAAI,EAAE,MAAO,QAAO,KAAK,GAAG,QAAQ,QAAQ,MAAM,EAAE,KAAK,MAAM,SAAS,GAAG;AAAE,iBAAK,CAAC;AAAG,mBAAO,KAAK;AAAA,UAAG,CAAC;AAAA,QACxG,MACK,MAAK;AAAA,MACZ,SACO,GAAG;AACR,aAAK,CAAC;AAAA,MACR;AAAA,IACF;AACA,QAAI,MAAM,EAAG,QAAO,IAAI,WAAW,QAAQ,OAAO,IAAI,KAAK,IAAI,QAAQ,QAAQ;AAC/E,QAAI,IAAI,SAAU,OAAM,IAAI;AAAA,EAC9B;AACA,SAAO,KAAK;AACd;AAEO,SAAS,iCAAiC,MAAM,aAAa;AAClE,MAAI,OAAO,SAAS,YAAY,WAAW,KAAK,IAAI,GAAG;AACnD,WAAO,KAAK,QAAQ,oDAAoD,SAAU,GAAG,KAAK,GAAG,KAAK,IAAI;AAClG,aAAO,MAAM,cAAc,SAAS,QAAQ,MAAM,CAAC,OAAO,CAAC,MAAM,IAAK,IAAI,MAAM,MAAM,GAAG,YAAY,IAAI;AAAA,IAC7G,CAAC;AAAA,EACL;AACA,SAAO;AACT;AA7WA,IAgBI,eAeO,UAyHA,iBA2GP,oBAMA,SA8DA,kBAwCG;AA/WP;AAAA;AAgBA,IAAI,gBAAgB,SAAS,GAAG,GAAG;AACjC,sBAAgB,OAAO,kBAClB,EAAE,WAAW,CAAC,EAAE,aAAa,SAAS,SAAUC,IAAGC,IAAG;AAAE,QAAAD,GAAE,YAAYC;AAAA,MAAG,KAC1E,SAAUD,IAAGC,IAAG;AAAE,iBAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,MAAG;AACpG,aAAO,cAAc,GAAG,CAAC;AAAA,IAC3B;AAUO,IAAI,WAAW,WAAW;AAC/B,iBAAW,OAAO,UAAU,SAASC,UAAS,GAAG;AAC7C,iBAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,cAAI,UAAU,CAAC;AACf,mBAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,EAAG,GAAE,CAAC,IAAI,EAAE,CAAC;AAAA,QAC/E;AACA,eAAO;AAAA,MACX;AACA,aAAO,SAAS,MAAM,MAAM,SAAS;AAAA,IACvC;AAgHO,IAAI,kBAAkB,OAAO,UAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAClE,UAAI,OAAO,OAAW,MAAK;AAC3B,UAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,UAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AAC/E,eAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,iBAAO,EAAE,CAAC;AAAA,QAAG,EAAE;AAAA,MAChE;AACA,aAAO,eAAe,GAAG,IAAI,IAAI;AAAA,IACnC,MAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AAC1B,UAAI,OAAO,OAAW,MAAK;AAC3B,QAAE,EAAE,IAAI,EAAE,CAAC;AAAA,IACb;AAiGA,IAAI,qBAAqB,OAAO,UAAU,SAAS,GAAG,GAAG;AACvD,aAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,EAAE,CAAC;AAAA,IACpE,KAAK,SAAS,GAAG,GAAG;AAClB,QAAE,SAAS,IAAI;AAAA,IACjB;AAEA,IAAI,UAAU,SAAS,GAAG;AACxB,gBAAU,OAAO,uBAAuB,SAAUC,IAAG;AACnD,YAAI,KAAK,CAAC;AACV,iBAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,IAAG,GAAG,MAAM,IAAI;AACjF,eAAO;AAAA,MACT;AACA,aAAO,QAAQ,CAAC;AAAA,IAClB;AAuDA,IAAI,mBAAmB,OAAO,oBAAoB,aAAa,kBAAkB,SAAU,OAAO,YAAY,SAAS;AACrH,UAAI,IAAI,IAAI,MAAM,OAAO;AACzB,aAAO,EAAE,OAAO,mBAAmB,EAAE,QAAQ,OAAO,EAAE,aAAa,YAAY;AAAA,IACjF;AAqCA,IAAO,oBAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC5YO,SAAS,uBAAuB,SAAS;AAE5C,SAAO,KAAK,oBAAoB,OAAO;AAC3C;AAPA;AAAA;AAAA;AAAA;;;ACIO,SAAS,yBAAyB,IAAI,IAAI;AAC7C,MAAI,YAAY,GAAG,WAAW,iBAAiB,GAAG;AAClD,MAAI,eAAe,GAAG,YAAY;AAClC,MAAI,kBAAkB,UAAU,OAAO,SAAU,KAAK,GAAG;AACrD,QAAI,EAAE,YAAY,CAAC,IAAI;AACvB,WAAO;AAAA,EACX,GAAG,CAAC,CAAC;AACL,MAAI,eAAe,eAAe,YAAY,KAAK,gBAAgB,YAAY;AAC/E,MAAI,iBAAiB,aAAa,iBAAiB,WAAW;AAC1D,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAhBA;AAAA;AAAA;AAAA;;;ACk9EA,SAAS,eAAe,GAAG;AACzB,MAAI,GAAG,GAAG,IACR,kBAAkB,EAAE,SAAS,GAC7B,MAAM,IACN,IAAI,EAAE,CAAC;AAET,MAAI,kBAAkB,GAAG;AACvB,WAAO;AACP,SAAK,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACpC,WAAK,EAAE,CAAC,IAAI;AACZ,UAAI,WAAW,GAAG;AAClB,UAAI,EAAG,QAAO,cAAc,CAAC;AAC7B,aAAO;AAAA,IACT;AAEA,QAAI,EAAE,CAAC;AACP,SAAK,IAAI;AACT,QAAI,WAAW,GAAG;AAClB,QAAI,EAAG,QAAO,cAAc,CAAC;AAAA,EAC/B,WAAW,MAAM,GAAG;AAClB,WAAO;AAAA,EACT;AAGA,SAAO,IAAI,OAAO,IAAI,MAAK;AAE3B,SAAO,MAAM;AACf;AAGA,SAAS,WAAW,GAAGC,MAAKC,MAAK;AAC/B,MAAI,MAAM,CAAC,CAAC,KAAK,IAAID,QAAO,IAAIC,MAAK;AACnC,UAAM,MAAM,kBAAkB,CAAC;AAAA,EACjC;AACF;AAQA,SAAS,oBAAoB,GAAG,GAAG,IAAI,WAAW;AAChD,MAAI,IAAI,GAAG,GAAG;AAGd,OAAK,IAAI,EAAE,CAAC,GAAG,KAAK,IAAI,KAAK,GAAI,GAAE;AAGnC,MAAI,EAAE,IAAI,GAAG;AACX,SAAK;AACL,SAAK;AAAA,EACP,OAAO;AACL,SAAK,KAAK,MAAM,IAAI,KAAK,QAAQ;AACjC,SAAK;AAAA,EACP;AAKA,MAAI,QAAQ,IAAI,WAAW,CAAC;AAC5B,OAAK,EAAE,EAAE,IAAI,IAAI;AAEjB,MAAI,aAAa,MAAM;AACrB,QAAI,IAAI,GAAG;AACT,UAAI,KAAK,EAAG,MAAK,KAAK,MAAM;AAAA,eACnB,KAAK,EAAG,MAAK,KAAK,KAAK;AAChC,UAAI,KAAK,KAAK,MAAM,SAAS,KAAK,KAAK,MAAM,SAAS,MAAM,OAAS,MAAM;AAAA,IAC7E,OAAO;AACL,WAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,OACnD,EAAE,KAAK,CAAC,IAAI,IAAI,MAAM,MAAM,QAAQ,IAAI,IAAI,CAAC,IAAI,MAC/C,MAAM,IAAI,KAAK,MAAM,OAAO,EAAE,KAAK,CAAC,IAAI,IAAI,MAAM,MAAM;AAAA,IAC/D;AAAA,EACF,OAAO;AACL,QAAI,IAAI,GAAG;AACT,UAAI,KAAK,EAAG,MAAK,KAAK,MAAO;AAAA,eACpB,KAAK,EAAG,MAAK,KAAK,MAAM;AAAA,eACxB,KAAK,EAAG,MAAK,KAAK,KAAK;AAChC,WAAK,aAAa,KAAK,MAAM,MAAM,QAAQ,CAAC,aAAa,KAAK,KAAK,MAAM;AAAA,IAC3E,OAAO;AACL,YAAM,aAAa,KAAK,MAAM,KAAK,KAAK,KACvC,CAAC,aAAa,KAAK,KAAM,KAAK,KAAK,IAAI,OACrC,EAAE,KAAK,CAAC,IAAI,IAAI,MAAO,MAAM,QAAQ,IAAI,IAAI,CAAC,IAAI;AAAA,IACvD;AAAA,EACF;AAEA,SAAO;AACT;AAMA,SAAS,YAAY,KAAK,QAAQ,SAAS;AACzC,MAAI,GACF,MAAM,CAAC,CAAC,GACR,MACA,IAAI,GACJ,OAAO,IAAI;AAEb,SAAO,IAAI,QAAO;AAChB,SAAK,OAAO,IAAI,QAAQ,SAAS,KAAI,IAAI,KAAK;AAC9C,QAAI,CAAC,KAAK,SAAS,QAAQ,IAAI,OAAO,GAAG,CAAC;AAC1C,SAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC/B,UAAI,IAAI,CAAC,IAAI,UAAU,GAAG;AACxB,YAAI,IAAI,IAAI,CAAC,MAAM,OAAQ,KAAI,IAAI,CAAC,IAAI;AACxC,YAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,UAAU;AACjC,YAAI,CAAC,KAAK;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,SAAO,IAAI,QAAQ;AACrB;AAQA,SAAS,OAAO,MAAM,GAAG;AACvB,MAAI,GAAG,KAAK;AAEZ,MAAI,EAAE,OAAO,EAAG,QAAO;AAMvB,QAAM,EAAE,EAAE;AACV,MAAI,MAAM,IAAI;AACZ,QAAI,KAAK,KAAK,MAAM,CAAC;AACrB,SAAK,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS;AAAA,EACnC,OAAO;AACL,QAAI;AACJ,QAAI;AAAA,EACN;AAEA,OAAK,aAAa;AAElB,MAAI,aAAa,MAAM,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;AAGjD,WAAS,IAAI,GAAG,OAAM;AACpB,QAAI,QAAQ,EAAE,MAAM,CAAC;AACrB,QAAI,MAAM,MAAM,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC;AAAA,EACrD;AAEA,OAAK,aAAa;AAElB,SAAO;AACT;AAkRC,SAAS,SAAS,GAAG,IAAI,IAAI,aAAa;AACzC,MAAI,QAAQ,GAAG,GAAG,GAAG,IAAI,SAAS,GAAG,IAAI,KACvC,OAAO,EAAE;AAGX,MAAK,KAAI,MAAM,MAAM;AACnB,SAAK,EAAE;AAGP,QAAI,CAAC,GAAI,QAAO;AAWhB,SAAK,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,GAAI;AAC9C,QAAI,KAAK;AAGT,QAAI,IAAI,GAAG;AACT,WAAK;AACL,UAAI;AACJ,UAAI,GAAG,MAAM,CAAC;AAGd,WAAK,IAAI,QAAQ,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK;AAAA,IAC9C,OAAO;AACL,YAAM,KAAK,MAAM,IAAI,KAAK,QAAQ;AAClC,UAAI,GAAG;AACP,UAAI,OAAO,GAAG;AACZ,YAAI,aAAa;AAGf,iBAAO,OAAO,MAAM,IAAG,KAAK,CAAC;AAC7B,cAAI,KAAK;AACT,mBAAS;AACT,eAAK;AACL,cAAI,IAAI,WAAW;AAAA,QACrB,OAAO;AACL,gBAAM;AAAA,QACR;AAAA,MACF,OAAO;AACL,YAAI,IAAI,GAAG,GAAG;AAGd,aAAK,SAAS,GAAG,KAAK,IAAI,KAAK,GAAI;AAGnC,aAAK;AAIL,YAAI,IAAI,WAAW;AAGnB,aAAK,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK;AAAA,MAC1D;AAAA,IACF;AAGA,kBAAc,eAAe,KAAK,KAChC,GAAG,MAAM,CAAC,MAAM,WAAW,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,IAAI,CAAC;AAMvE,cAAU,KAAK,KACV,MAAM,iBAAiB,MAAM,KAAK,OAAO,EAAE,IAAI,IAAI,IAAI,MACxD,KAAK,KAAK,MAAM,MAAM,MAAM,KAAK,eAAe,MAAM;AAAA,KAGpD,IAAI,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,KAAM,KACvE,OAAO,EAAE,IAAI,IAAI,IAAI;AAE3B,QAAI,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG;AACpB,SAAG,SAAS;AACZ,UAAI,SAAS;AAGX,cAAM,EAAE,IAAI;AAGZ,WAAG,CAAC,IAAI,QAAQ,KAAK,WAAW,KAAK,YAAY,QAAQ;AACzD,UAAE,IAAI,CAAC,MAAM;AAAA,MACf,OAAO;AAGL,WAAG,CAAC,IAAI,EAAE,IAAI;AAAA,MAChB;AAEA,aAAO;AAAA,IACT;AAGA,QAAI,KAAK,GAAG;AACV,SAAG,SAAS;AACZ,UAAI;AACJ;AAAA,IACF,OAAO;AACL,SAAG,SAAS,MAAM;AAClB,UAAI,QAAQ,IAAI,WAAW,CAAC;AAI5B,SAAG,GAAG,IAAI,IAAI,KAAK,IAAI,QAAQ,IAAI,SAAS,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,IAAI;AAAA,IAC7E;AAEA,QAAI,SAAS;AACX,iBAAS;AAGP,YAAI,OAAO,GAAG;AAGZ,eAAK,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,GAAI;AACzC,cAAI,GAAG,CAAC,KAAK;AACb,eAAK,IAAI,GAAG,KAAK,IAAI,KAAK,GAAI;AAG9B,cAAI,KAAK,GAAG;AACV,cAAE;AACF,gBAAI,GAAG,CAAC,KAAK,KAAM,IAAG,CAAC,IAAI;AAAA,UAC7B;AAEA;AAAA,QACF,OAAO;AACL,aAAG,GAAG,KAAK;AACX,cAAI,GAAG,GAAG,KAAK,KAAM;AACrB,aAAG,KAAK,IAAI;AACZ,cAAI;AAAA,QACN;AAAA,MACF;AAAA,IACF;AAGA,SAAK,IAAI,GAAG,QAAQ,GAAG,EAAE,CAAC,MAAM,IAAI,IAAG,IAAI;AAAA,EAC7C;AAEA,MAAI,UAAU;AAGZ,QAAI,EAAE,IAAI,KAAK,MAAM;AAGnB,QAAE,IAAI;AACN,QAAE,IAAI;AAAA,IAGR,WAAW,EAAE,IAAI,KAAK,MAAM;AAG1B,QAAE,IAAI;AACN,QAAE,IAAI,CAAC,CAAC;AAAA,IAEV;AAAA,EACF;AAEA,SAAO;AACT;AAGA,SAAS,eAAe,GAAG,OAAO,IAAI;AACpC,MAAI,CAAC,EAAE,SAAS,EAAG,QAAO,kBAAkB,CAAC;AAC7C,MAAI,GACF,IAAI,EAAE,GACN,MAAM,eAAe,EAAE,CAAC,GACxB,MAAM,IAAI;AAEZ,MAAI,OAAO;AACT,QAAI,OAAO,IAAI,KAAK,OAAO,GAAG;AAC5B,YAAM,IAAI,OAAO,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,cAAc,CAAC;AAAA,IAC5D,WAAW,MAAM,GAAG;AAClB,YAAM,IAAI,OAAO,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC;AAAA,IACzC;AAEA,UAAM,OAAO,EAAE,IAAI,IAAI,MAAM,QAAQ,EAAE;AAAA,EACzC,WAAW,IAAI,GAAG;AAChB,UAAM,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI;AACrC,QAAI,OAAO,IAAI,KAAK,OAAO,EAAG,QAAO,cAAc,CAAC;AAAA,EACtD,WAAW,KAAK,KAAK;AACnB,WAAO,cAAc,IAAI,IAAI,GAAG;AAChC,QAAI,OAAO,IAAI,KAAK,IAAI,KAAK,EAAG,OAAM,MAAM,MAAM,cAAc,CAAC;AAAA,EACnE,OAAO;AACL,SAAK,IAAI,IAAI,KAAK,IAAK,OAAM,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC;AAChE,QAAI,OAAO,IAAI,KAAK,OAAO,GAAG;AAC5B,UAAI,IAAI,MAAM,IAAK,QAAO;AAC1B,aAAO,cAAc,CAAC;AAAA,IACxB;AAAA,EACF;AAEA,SAAO;AACT;AAIA,SAAS,kBAAkB,QAAQ,GAAG;AACpC,MAAI,IAAI,OAAO,CAAC;AAGhB,OAAM,KAAK,UAAU,KAAK,IAAI,KAAK,GAAI;AACvC,SAAO;AACT;AAGA,SAAS,QAAQ,MAAM,IAAI,IAAI;AAC7B,MAAI,KAAK,gBAAgB;AAGvB,eAAW;AACX,QAAI,GAAI,MAAK,YAAY;AACzB,UAAM,MAAM,sBAAsB;AAAA,EACpC;AACA,SAAO,SAAS,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;AAC7C;AAGA,SAAS,MAAM,MAAM,IAAI,IAAI;AAC3B,MAAI,KAAK,aAAc,OAAM,MAAM,sBAAsB;AACzD,SAAO,SAAS,IAAI,KAAK,EAAE,GAAG,IAAI,IAAI,IAAI;AAC5C;AAGA,SAAS,aAAa,QAAQ;AAC5B,MAAI,IAAI,OAAO,SAAS,GACtB,MAAM,IAAI,WAAW;AAEvB,MAAI,OAAO,CAAC;AAGZ,MAAI,GAAG;AAGL,WAAO,IAAI,MAAM,GAAG,KAAK,GAAI;AAG7B,SAAK,IAAI,OAAO,CAAC,GAAG,KAAK,IAAI,KAAK,GAAI;AAAA,EACxC;AAEA,SAAO;AACT;AAGA,SAAS,cAAc,GAAG;AACxB,MAAI,KAAK;AACT,SAAO,MAAM,OAAM;AACnB,SAAO;AACT;AAUA,SAAS,OAAO,MAAM,GAAG,GAAG,IAAI;AAC9B,MAAI,aACF,IAAI,IAAI,KAAK,CAAC,GAId,IAAI,KAAK,KAAK,KAAK,WAAW,CAAC;AAEjC,aAAW;AAEX,aAAS;AACP,QAAI,IAAI,GAAG;AACT,UAAI,EAAE,MAAM,CAAC;AACb,UAAI,SAAS,EAAE,GAAG,CAAC,EAAG,eAAc;AAAA,IACtC;AAEA,QAAI,UAAU,IAAI,CAAC;AACnB,QAAI,MAAM,GAAG;AAGX,UAAI,EAAE,EAAE,SAAS;AACjB,UAAI,eAAe,EAAE,EAAE,CAAC,MAAM,EAAG,GAAE,EAAE,EAAE,CAAC;AACxC;AAAA,IACF;AAEA,QAAI,EAAE,MAAM,CAAC;AACb,aAAS,EAAE,GAAG,CAAC;AAAA,EACjB;AAEA,aAAW;AAEX,SAAO;AACT;AAGA,SAAS,MAAM,GAAG;AAChB,SAAO,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,IAAI;AAC/B;AAMA,SAAS,SAAS,MAAM,MAAM,GAAG;AAC/B,MAAI,GAAG,GACL,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC,GACpB,IAAI;AAEN,SAAO,EAAE,IAAI,KAAK,UAAS;AACzB,QAAI,IAAI,KAAK,KAAK,CAAC,CAAC;AAGpB,QAAI,CAAC,EAAE,GAAG;AACR,UAAI;AACJ;AAAA,IACF;AAEA,QAAI,EAAE,IAAI,CAAC;AAEX,QAAI,MAAM,KAAK,MAAM,KAAK,EAAE,MAAM,GAAG;AACnC,UAAI;AAAA,IACN;AAAA,EACF;AAEA,SAAO;AACT;AAkCA,SAAS,mBAAmB,GAAG,IAAI;AACjC,MAAI,aAAa,OAAO,GAAGC,MAAKC,MAAK,GAAG,KACtC,MAAM,GACN,IAAI,GACJ,IAAI,GACJ,OAAO,EAAE,aACT,KAAK,KAAK,UACV,KAAK,KAAK;AAGZ,MAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,IAAI,IAAI;AAE/B,WAAO,IAAI,KAAK,EAAE,IACd,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,IAChC,EAAE,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC;AAAA,EACnC;AAEA,MAAI,MAAM,MAAM;AACd,eAAW;AACX,UAAM;AAAA,EACR,OAAO;AACL,UAAM;AAAA,EACR;AAEA,MAAI,IAAI,KAAK,OAAO;AAGpB,SAAO,EAAE,IAAI,IAAI;AAGf,QAAI,EAAE,MAAM,CAAC;AACb,SAAK;AAAA,EACP;AAIA,UAAQ,KAAK,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI;AACtD,SAAO;AACP,gBAAcD,OAAMC,OAAM,IAAI,KAAK,CAAC;AACpC,OAAK,YAAY;AAEjB,aAAS;AACP,IAAAD,OAAM,SAASA,KAAI,MAAM,CAAC,GAAG,KAAK,CAAC;AACnC,kBAAc,YAAY,MAAM,EAAE,CAAC;AACnC,QAAIC,KAAI,KAAK,OAAOD,MAAK,aAAa,KAAK,CAAC,CAAC;AAE7C,QAAI,eAAe,EAAE,CAAC,EAAE,MAAM,GAAG,GAAG,MAAM,eAAeC,KAAI,CAAC,EAAE,MAAM,GAAG,GAAG,GAAG;AAC7E,UAAI;AACJ,aAAO,IAAK,CAAAA,OAAM,SAASA,KAAI,MAAMA,IAAG,GAAG,KAAK,CAAC;AAOjD,UAAI,MAAM,MAAM;AAEd,YAAI,MAAM,KAAK,oBAAoBA,KAAI,GAAG,MAAM,OAAO,IAAI,GAAG,GAAG;AAC/D,eAAK,YAAY,OAAO;AACxB,wBAAcD,OAAM,IAAI,IAAI,KAAK,CAAC;AAClC,cAAI;AACJ;AAAA,QACF,OAAO;AACL,iBAAO,SAASC,MAAK,KAAK,YAAY,IAAI,IAAI,WAAW,IAAI;AAAA,QAC/D;AAAA,MACF,OAAO;AACL,aAAK,YAAY;AACjB,eAAOA;AAAA,MACT;AAAA,IACF;AAEA,IAAAA,OAAM;AAAA,EACR;AACF;AAkBA,SAAS,iBAAiB,GAAG,IAAI;AAC/B,MAAI,GAAG,IAAI,aAAa,GAAG,WAAW,KAAKA,MAAK,GAAG,KAAK,IAAI,IAC1D,IAAI,GACJ,QAAQ,IACR,IAAI,GACJ,KAAK,EAAE,GACP,OAAO,EAAE,aACT,KAAK,KAAK,UACV,KAAK,KAAK;AAGZ,MAAI,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,UAAU,GAAG;AACpE,WAAO,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,EAAE,KAAK,IAAI,MAAM,KAAK,IAAI,CAAC;AAAA,EACrE;AAEA,MAAI,MAAM,MAAM;AACd,eAAW;AACX,UAAM;AAAA,EACR,OAAO;AACL,UAAM;AAAA,EACR;AAEA,OAAK,YAAY,OAAO;AACxB,MAAI,eAAe,EAAE;AACrB,OAAK,EAAE,OAAO,CAAC;AAEf,MAAI,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,OAAQ;AAa9B,WAAO,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,EAAE,OAAO,CAAC,IAAI,GAAG;AACtD,UAAI,EAAE,MAAM,CAAC;AACb,UAAI,eAAe,EAAE,CAAC;AACtB,WAAK,EAAE,OAAO,CAAC;AACf;AAAA,IACF;AAEA,QAAI,EAAE;AAEN,QAAI,KAAK,GAAG;AACV,UAAI,IAAI,KAAK,OAAO,CAAC;AACrB;AAAA,IACF,OAAO;AACL,UAAI,IAAI,KAAK,KAAK,MAAM,EAAE,MAAM,CAAC,CAAC;AAAA,IACpC;AAAA,EACF,OAAO;AAKL,QAAI,QAAQ,MAAM,MAAM,GAAG,EAAE,EAAE,MAAM,IAAI,EAAE;AAC3C,QAAI,iBAAiB,IAAI,KAAK,KAAK,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,KAAK,EAAE,KAAK,CAAC;AACzE,SAAK,YAAY;AAEjB,WAAO,MAAM,OAAO,SAAS,GAAG,IAAI,IAAI,WAAW,IAAI,IAAI;AAAA,EAC7D;AAGA,OAAK;AAKL,EAAAA,OAAM,YAAY,IAAI,OAAO,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;AAC1D,OAAK,SAAS,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;AAChC,gBAAc;AAEd,aAAS;AACP,gBAAY,SAAS,UAAU,MAAM,EAAE,GAAG,KAAK,CAAC;AAChD,QAAIA,KAAI,KAAK,OAAO,WAAW,IAAI,KAAK,WAAW,GAAG,KAAK,CAAC,CAAC;AAE7D,QAAI,eAAe,EAAE,CAAC,EAAE,MAAM,GAAG,GAAG,MAAM,eAAeA,KAAI,CAAC,EAAE,MAAM,GAAG,GAAG,GAAG;AAC7E,MAAAA,OAAMA,KAAI,MAAM,CAAC;AAIjB,UAAI,MAAM,EAAG,CAAAA,OAAMA,KAAI,KAAK,QAAQ,MAAM,MAAM,GAAG,EAAE,EAAE,MAAM,IAAI,EAAE,CAAC;AACpE,MAAAA,OAAM,OAAOA,MAAK,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC;AAQrC,UAAI,MAAM,MAAM;AACd,YAAI,oBAAoBA,KAAI,GAAG,MAAM,OAAO,IAAI,GAAG,GAAG;AACpD,eAAK,YAAY,OAAO;AACxB,cAAI,YAAY,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;AAC1D,eAAK,SAAS,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;AAChC,wBAAc,MAAM;AAAA,QACtB,OAAO;AACL,iBAAO,SAASA,MAAK,KAAK,YAAY,IAAI,IAAI,WAAW,IAAI;AAAA,QAC/D;AAAA,MACF,OAAO;AACL,aAAK,YAAY;AACjB,eAAOA;AAAA,MACT;AAAA,IACF;AAEA,IAAAA,OAAM;AACN,mBAAe;AAAA,EACjB;AACF;AAIA,SAAS,kBAAkB,GAAG;AAE5B,SAAO,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;AAC7B;AAMA,SAAS,aAAa,GAAG,KAAK;AAC5B,MAAI,GAAG,GAAG;AAIV,OAAK,IAAI,IAAI,QAAQ,GAAG,KAAK,GAAI,OAAM,IAAI,QAAQ,KAAK,EAAE;AAG1D,OAAK,IAAI,IAAI,OAAO,IAAI,KAAK,GAAG;AAG9B,QAAI,IAAI,EAAG,KAAI;AACf,SAAK,CAAC,IAAI,MAAM,IAAI,CAAC;AACrB,UAAM,IAAI,UAAU,GAAG,CAAC;AAAA,EAC1B,WAAW,IAAI,GAAG;AAGhB,QAAI,IAAI;AAAA,EACV;AAGA,OAAK,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI;AAG1C,OAAK,MAAM,IAAI,QAAQ,IAAI,WAAW,MAAM,CAAC,MAAM,IAAI,EAAE,IAAI;AAC7D,QAAM,IAAI,MAAM,GAAG,GAAG;AAEtB,MAAI,KAAK;AACP,WAAO;AACP,MAAE,IAAI,IAAI,IAAI,IAAI;AAClB,MAAE,IAAI,CAAC;AAMP,SAAK,IAAI,KAAK;AACd,QAAI,IAAI,EAAG,MAAK;AAEhB,QAAI,IAAI,KAAK;AACX,UAAI,EAAG,GAAE,EAAE,KAAK,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC;AAChC,WAAK,OAAO,UAAU,IAAI,MAAM,GAAE,EAAE,KAAK,CAAC,IAAI,MAAM,GAAG,KAAK,QAAQ,CAAC;AACrE,YAAM,IAAI,MAAM,CAAC;AACjB,UAAI,WAAW,IAAI;AAAA,IACrB,OAAO;AACL,WAAK;AAAA,IACP;AAEA,WAAO,MAAM,QAAO;AACpB,MAAE,EAAE,KAAK,CAAC,GAAG;AAEb,QAAI,UAAU;AAGZ,UAAI,EAAE,IAAI,EAAE,YAAY,MAAM;AAG5B,UAAE,IAAI;AACN,UAAE,IAAI;AAAA,MAGR,WAAW,EAAE,IAAI,EAAE,YAAY,MAAM;AAGnC,UAAE,IAAI;AACN,UAAE,IAAI,CAAC,CAAC;AAAA,MAEV;AAAA,IACF;AAAA,EACF,OAAO;AAGL,MAAE,IAAI;AACN,MAAE,IAAI,CAAC,CAAC;AAAA,EACV;AAEA,SAAO;AACT;AAMA,SAAS,WAAW,GAAG,KAAK;AAC1B,MAAI,MAAM,MAAM,SAAS,GAAG,SAAS,KAAK,GAAG,IAAI;AAEjD,MAAI,IAAI,QAAQ,GAAG,IAAI,IAAI;AACzB,UAAM,IAAI,QAAQ,gBAAgB,IAAI;AACtC,QAAI,UAAU,KAAK,GAAG,EAAG,QAAO,aAAa,GAAG,GAAG;AAAA,EACrD,WAAW,QAAQ,cAAc,QAAQ,OAAO;AAC9C,QAAI,CAAC,CAAC,IAAK,GAAE,IAAI;AACjB,MAAE,IAAI;AACN,MAAE,IAAI;AACN,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,KAAK,GAAG,GAAI;AACpB,WAAO;AACP,UAAM,IAAI,YAAY;AAAA,EACxB,WAAW,SAAS,KAAK,GAAG,GAAI;AAC9B,WAAO;AAAA,EACT,WAAW,QAAQ,KAAK,GAAG,GAAI;AAC7B,WAAO;AAAA,EACT,OAAO;AACL,UAAM,MAAM,kBAAkB,GAAG;AAAA,EACnC;AAGA,MAAI,IAAI,OAAO,IAAI;AAEnB,MAAI,IAAI,GAAG;AACT,QAAI,CAAC,IAAI,MAAM,IAAI,CAAC;AACpB,UAAM,IAAI,UAAU,GAAG,CAAC;AAAA,EAC1B,OAAO;AACL,UAAM,IAAI,MAAM,CAAC;AAAA,EACnB;AAIA,MAAI,IAAI,QAAQ,GAAG;AACnB,YAAU,KAAK;AACf,SAAO,EAAE;AAET,MAAI,SAAS;AACX,UAAM,IAAI,QAAQ,KAAK,EAAE;AACzB,UAAM,IAAI;AACV,QAAI,MAAM;AAGV,cAAU,OAAO,MAAM,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC;AAAA,EACjD;AAEA,OAAK,YAAY,KAAK,MAAM,IAAI;AAChC,OAAK,GAAG,SAAS;AAGjB,OAAK,IAAI,IAAI,GAAG,CAAC,MAAM,GAAG,EAAE,EAAG,IAAG,IAAI;AACtC,MAAI,IAAI,EAAG,QAAO,IAAI,KAAK,EAAE,IAAI,CAAC;AAClC,IAAE,IAAI,kBAAkB,IAAI,EAAE;AAC9B,IAAE,IAAI;AACN,aAAW;AAQX,MAAI,QAAS,KAAI,OAAO,GAAG,SAAS,MAAM,CAAC;AAG3C,MAAI,EAAG,KAAI,EAAE,MAAM,KAAK,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,CAAC,IAAI,QAAQ,IAAI,GAAG,CAAC,CAAC;AACvE,aAAW;AAEX,SAAO;AACT;AAQA,SAAS,KAAK,MAAM,GAAG;AACrB,MAAI,GACF,MAAM,EAAE,EAAE;AAEZ,MAAI,MAAM,GAAG;AACX,WAAO,EAAE,OAAO,IAAI,IAAI,aAAa,MAAM,GAAG,GAAG,CAAC;AAAA,EACpD;AAOA,MAAI,MAAM,KAAK,KAAK,GAAG;AACvB,MAAI,IAAI,KAAK,KAAK,IAAI;AAEtB,MAAI,EAAE,MAAM,IAAI,QAAQ,GAAG,CAAC,CAAC;AAC7B,MAAI,aAAa,MAAM,GAAG,GAAG,CAAC;AAG9B,MAAI,QACF,KAAK,IAAI,KAAK,CAAC,GACf,MAAM,IAAI,KAAK,EAAE,GACjB,MAAM,IAAI,KAAK,EAAE;AACnB,SAAO,OAAM;AACX,aAAS,EAAE,MAAM,CAAC;AAClB,QAAI,EAAE,MAAM,GAAG,KAAK,OAAO,MAAM,IAAI,MAAM,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,EACjE;AAEA,SAAO;AACT;AAIA,SAAS,aAAa,MAAM,GAAG,GAAG,GAAG,cAAc;AACjD,MAAI,GAAG,GAAG,GAAG,IACX,IAAI,GACJ,KAAK,KAAK,WACV,IAAI,KAAK,KAAK,KAAK,QAAQ;AAE7B,aAAW;AACX,OAAK,EAAE,MAAM,CAAC;AACd,MAAI,IAAI,KAAK,CAAC;AAEd,aAAS;AACP,QAAI,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,KAAK,MAAM,GAAG,GAAG,IAAI,CAAC;AAClD,QAAI,eAAe,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC;AACxC,QAAI,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,KAAK,MAAM,GAAG,GAAG,IAAI,CAAC;AAClD,QAAI,EAAE,KAAK,CAAC;AAEZ,QAAI,EAAE,EAAE,CAAC,MAAM,QAAQ;AACrB,WAAK,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,MAAK;AACtC,UAAI,KAAK,GAAI;AAAA,IACf;AAEA,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ;AAAA,EACF;AAEA,aAAW;AACX,IAAE,EAAE,SAAS,IAAI;AAEjB,SAAO;AACT;AAIA,SAAS,QAAQ,GAAG,GAAG;AACrB,MAAI,IAAI;AACR,SAAO,EAAE,EAAG,MAAK;AACjB,SAAO;AACT;AAIA,SAAS,iBAAiB,MAAM,GAAG;AACjC,MAAI,GACF,QAAQ,EAAE,IAAI,GACd,KAAK,MAAM,MAAM,KAAK,WAAW,CAAC,GAClC,SAAS,GAAG,MAAM,GAAG;AAEvB,MAAI,EAAE,IAAI;AAEV,MAAI,EAAE,IAAI,MAAM,GAAG;AACjB,eAAW,QAAQ,IAAI;AACvB,WAAO;AAAA,EACT;AAEA,MAAI,EAAE,SAAS,EAAE;AAEjB,MAAI,EAAE,OAAO,GAAG;AACd,eAAW,QAAQ,IAAI;AAAA,EACzB,OAAO;AACL,QAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;AAGvB,QAAI,EAAE,IAAI,MAAM,GAAG;AACjB,iBAAW,MAAM,CAAC,IAAK,QAAQ,IAAI,IAAM,QAAQ,IAAI;AACrD,aAAO;AAAA,IACT;AAEA,eAAW,MAAM,CAAC,IAAK,QAAQ,IAAI,IAAM,QAAQ,IAAI;AAAA,EACvD;AAEA,SAAO,EAAE,MAAM,EAAE,EAAE,IAAI;AACzB;AAQA,SAAS,eAAe,GAAG,SAAS,IAAI,IAAI;AAC1C,MAAI,MAAM,GAAG,GAAG,GAAG,KAAK,SAAS,KAAK,IAAI,GACxC,OAAO,EAAE,aACT,QAAQ,OAAO;AAEjB,MAAI,OAAO;AACT,eAAW,IAAI,GAAG,UAAU;AAC5B,QAAI,OAAO,OAAQ,MAAK,KAAK;AAAA,QACxB,YAAW,IAAI,GAAG,CAAC;AAAA,EAC1B,OAAO;AACL,SAAK,KAAK;AACV,SAAK,KAAK;AAAA,EACZ;AAEA,MAAI,CAAC,EAAE,SAAS,GAAG;AACjB,UAAM,kBAAkB,CAAC;AAAA,EAC3B,OAAO;AACL,UAAM,eAAe,CAAC;AACtB,QAAI,IAAI,QAAQ,GAAG;AAOnB,QAAI,OAAO;AACT,aAAO;AACP,UAAI,WAAW,IAAI;AACjB,aAAK,KAAK,IAAI;AAAA,MAChB,WAAW,WAAW,GAAG;AACvB,aAAK,KAAK,IAAI;AAAA,MAChB;AAAA,IACF,OAAO;AACL,aAAO;AAAA,IACT;AAMA,QAAI,KAAK,GAAG;AACV,YAAM,IAAI,QAAQ,KAAK,EAAE;AACzB,UAAI,IAAI,KAAK,CAAC;AACd,QAAE,IAAI,IAAI,SAAS;AACnB,QAAE,IAAI,YAAY,eAAe,CAAC,GAAG,IAAI,IAAI;AAC7C,QAAE,IAAI,EAAE,EAAE;AAAA,IACZ;AAEA,SAAK,YAAY,KAAK,IAAI,IAAI;AAC9B,QAAI,MAAM,GAAG;AAGb,WAAO,GAAG,EAAE,GAAG,KAAK,IAAI,IAAG,IAAI;AAE/B,QAAI,CAAC,GAAG,CAAC,GAAG;AACV,YAAM,QAAQ,SAAS;AAAA,IACzB,OAAO;AACL,UAAI,IAAI,GAAG;AACT;AAAA,MACF,OAAO;AACL,YAAI,IAAI,KAAK,CAAC;AACd,UAAE,IAAI;AACN,UAAE,IAAI;AACN,YAAI,OAAO,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI;AAChC,aAAK,EAAE;AACP,YAAI,EAAE;AACN,kBAAU;AAAA,MACZ;AAGA,UAAI,GAAG,EAAE;AACT,UAAI,OAAO;AACX,gBAAU,WAAW,GAAG,KAAK,CAAC,MAAM;AAEpC,gBAAU,KAAK,KACV,MAAM,UAAU,aAAa,OAAO,KAAK,QAAQ,EAAE,IAAI,IAAI,IAAI,MAChE,IAAI,KAAK,MAAM,MAAM,OAAO,KAAK,WAAW,OAAO,KAAK,GAAG,KAAK,CAAC,IAAI,KACrE,QAAQ,EAAE,IAAI,IAAI,IAAI;AAE1B,SAAG,SAAS;AAEZ,UAAI,SAAS;AAGX,eAAO,EAAE,GAAG,EAAE,EAAE,IAAI,OAAO,KAAI;AAC7B,aAAG,EAAE,IAAI;AACT,cAAI,CAAC,IAAI;AACP,cAAE;AACF,eAAG,QAAQ,CAAC;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAGA,WAAK,MAAM,GAAG,QAAQ,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI;AAG1C,WAAK,IAAI,GAAG,MAAM,IAAI,IAAI,KAAK,IAAK,QAAO,SAAS,OAAO,GAAG,CAAC,CAAC;AAGhE,UAAI,OAAO;AACT,YAAI,MAAM,GAAG;AACX,cAAI,WAAW,MAAM,WAAW,GAAG;AACjC,gBAAI,WAAW,KAAK,IAAI;AACxB,iBAAK,EAAE,KAAK,MAAM,GAAG,MAAO,QAAO;AACnC,iBAAK,YAAY,KAAK,MAAM,OAAO;AACnC,iBAAK,MAAM,GAAG,QAAQ,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI;AAG1C,iBAAK,IAAI,GAAG,MAAM,MAAM,IAAI,KAAK,IAAK,QAAO,SAAS,OAAO,GAAG,CAAC,CAAC;AAAA,UACpE,OAAO;AACL,kBAAM,IAAI,OAAO,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC;AAAA,UACzC;AAAA,QACF;AAEA,cAAO,OAAO,IAAI,IAAI,MAAM,QAAQ;AAAA,MACtC,WAAW,IAAI,GAAG;AAChB,eAAO,EAAE,IAAI,OAAM,MAAM;AACzB,cAAM,OAAO;AAAA,MACf,OAAO;AACL,YAAI,EAAE,IAAI,IAAK,MAAK,KAAK,KAAK,MAAO,QAAO;AAAA,iBACnC,IAAI,IAAK,OAAM,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC;AAAA,MAC7D;AAAA,IACF;AAEA,WAAO,WAAW,KAAK,OAAO,WAAW,IAAI,OAAO,WAAW,IAAI,OAAO,MAAM;AAAA,EAClF;AAEA,SAAO,EAAE,IAAI,IAAI,MAAM,MAAM;AAC/B;AAIA,SAAS,SAAS,KAAK,KAAK;AAC1B,MAAI,IAAI,SAAS,KAAK;AACpB,QAAI,SAAS;AACb,WAAO;AAAA,EACT;AACF;AAyDA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI;AACzB;AASA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AAUA,SAAS,MAAM,GAAG;AAChB,SAAO,IAAI,KAAK,CAAC,EAAE,MAAM;AAC3B;AAWA,SAAS,IAAI,GAAG,GAAG;AACjB,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC;AAC3B;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AAUA,SAAS,MAAM,GAAG;AAChB,SAAO,IAAI,KAAK,CAAC,EAAE,MAAM;AAC3B;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AAUA,SAAS,MAAM,GAAG;AAChB,SAAO,IAAI,KAAK,CAAC,EAAE,MAAM;AAC3B;AA4BA,SAAS,MAAM,GAAG,GAAG;AACnB,MAAI,IAAI,KAAK,CAAC;AACd,MAAI,IAAI,KAAK,CAAC;AACd,MAAI,GACF,KAAK,KAAK,WACV,KAAK,KAAK,UACV,MAAM,KAAK;AAGb,MAAI,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG;AAChB,QAAI,IAAI,KAAK,GAAG;AAAA,EAGlB,WAAW,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG;AACvB,QAAI,MAAM,MAAM,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,IAAI,OAAO,IAAI;AACnD,MAAE,IAAI,EAAE;AAAA,EAGV,WAAW,CAAC,EAAE,KAAK,EAAE,OAAO,GAAG;AAC7B,QAAI,EAAE,IAAI,IAAI,MAAM,MAAM,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC;AAC9C,MAAE,IAAI,EAAE;AAAA,EAGV,WAAW,CAAC,EAAE,KAAK,EAAE,OAAO,GAAG;AAC7B,QAAI,MAAM,MAAM,KAAK,CAAC,EAAE,MAAM,GAAG;AACjC,MAAE,IAAI,EAAE;AAAA,EAGV,WAAW,EAAE,IAAI,GAAG;AAClB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,QAAI,KAAK,KAAK,OAAO,GAAG,GAAG,KAAK,CAAC,CAAC;AAClC,QAAI,MAAM,MAAM,KAAK,CAAC;AACtB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,QAAI,EAAE,IAAI,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC;AAAA,EACrC,OAAO;AACL,QAAI,KAAK,KAAK,OAAO,GAAG,GAAG,KAAK,CAAC,CAAC;AAAA,EACpC;AAEA,SAAO;AACT;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AASA,SAAS,KAAK,GAAG;AACf,SAAO,SAAS,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;AAC7C;AAWA,SAAS,MAAM,GAAGH,MAAKC,MAAK;AAC1B,SAAO,IAAI,KAAK,CAAC,EAAE,MAAMD,MAAKC,IAAG;AACnC;AAqBA,SAAS,OAAO,KAAK;AACnB,MAAI,CAAC,OAAO,OAAO,QAAQ,SAAU,OAAM,MAAM,eAAe,iBAAiB;AACjF,MAAI,GAAG,GAAG,GACR,cAAc,IAAI,aAAa,MAC/B,KAAK;AAAA,IACH;AAAA,IAAa;AAAA,IAAG;AAAA,IAChB;AAAA,IAAY;AAAA,IAAG;AAAA,IACf;AAAA,IAAY,CAAC;AAAA,IAAW;AAAA,IACxB;AAAA,IAAY;AAAA,IAAG;AAAA,IACf;AAAA,IAAQ;AAAA,IAAG;AAAA,IACX;AAAA,IAAQ,CAAC;AAAA,IAAW;AAAA,IACpB;AAAA,IAAU;AAAA,IAAG;AAAA,EACf;AAEF,OAAK,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK,GAAG;AACjC,QAAI,IAAI,GAAG,CAAC,GAAG,YAAa,MAAK,CAAC,IAAI,SAAS,CAAC;AAChD,SAAK,IAAI,IAAI,CAAC,OAAO,QAAQ;AAC3B,UAAI,UAAU,CAAC,MAAM,KAAK,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,GAAG,IAAI,CAAC,EAAG,MAAK,CAAC,IAAI;AAAA,UACjE,OAAM,MAAM,kBAAkB,IAAI,OAAO,CAAC;AAAA,IACjD;AAAA,EACF;AAEA,MAAI,IAAI,UAAU,YAAa,MAAK,CAAC,IAAI,SAAS,CAAC;AACnD,OAAK,IAAI,IAAI,CAAC,OAAO,QAAQ;AAC3B,QAAI,MAAM,QAAQ,MAAM,SAAS,MAAM,KAAK,MAAM,GAAG;AACnD,UAAI,GAAG;AACL,YAAI,OAAO,UAAU,eAAe,WACjC,OAAO,mBAAmB,OAAO,cAAc;AAChD,eAAK,CAAC,IAAI;AAAA,QACZ,OAAO;AACL,gBAAM,MAAM,iBAAiB;AAAA,QAC/B;AAAA,MACF,OAAO;AACL,aAAK,CAAC,IAAI;AAAA,MACZ;AAAA,IACF,OAAO;AACL,YAAM,MAAM,kBAAkB,IAAI,OAAO,CAAC;AAAA,IAC5C;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI;AACzB;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AAQA,SAAS,MAAM,KAAK;AAClB,MAAI,GAAG,GAAG;AASV,WAASG,SAAQ,GAAG;AAClB,QAAI,GAAGC,IAAG,GACR,IAAI;AAGN,QAAI,EAAE,aAAaD,UAAU,QAAO,IAAIA,SAAQ,CAAC;AAIjD,MAAE,cAAcA;AAEhB,QAAI,kBAAkB,CAAC,GAAG;AACxB,QAAE,IAAI,EAAE;AAER,UAAI,UAAU;AACZ,YAAI,CAAC,EAAE,KAAK,EAAE,IAAIA,SAAQ,MAAM;AAG9B,YAAE,IAAI;AACN,YAAE,IAAI;AAAA,QACR,WAAW,EAAE,IAAIA,SAAQ,MAAM;AAG7B,YAAE,IAAI;AACN,YAAE,IAAI,CAAC,CAAC;AAAA,QACV,OAAO;AACL,YAAE,IAAI,EAAE;AACR,YAAE,IAAI,EAAE,EAAE,MAAM;AAAA,QAClB;AAAA,MACF,OAAO;AACL,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE,IAAI,EAAE,EAAE,MAAM,IAAI,EAAE;AAAA,MAC9B;AAEA;AAAA,IACF;AAEA,QAAI,OAAO;AAEX,QAAI,MAAM,UAAU;AAClB,UAAI,MAAM,GAAG;AACX,UAAE,IAAI,IAAI,IAAI,IAAI,KAAK;AACvB,UAAE,IAAI;AACN,UAAE,IAAI,CAAC,CAAC;AACR;AAAA,MACF;AAEA,UAAI,IAAI,GAAG;AACT,YAAI,CAAC;AACL,UAAE,IAAI;AAAA,MACR,OAAO;AACL,UAAE,IAAI;AAAA,MACR;AAGA,UAAI,MAAM,CAAC,CAAC,KAAK,IAAI,KAAK;AACxB,aAAK,IAAI,GAAGC,KAAI,GAAGA,MAAK,IAAIA,MAAK,GAAI;AAErC,YAAI,UAAU;AACZ,cAAI,IAAID,SAAQ,MAAM;AACpB,cAAE,IAAI;AACN,cAAE,IAAI;AAAA,UACR,WAAW,IAAIA,SAAQ,MAAM;AAC3B,cAAE,IAAI;AACN,cAAE,IAAI,CAAC,CAAC;AAAA,UACV,OAAO;AACL,cAAE,IAAI;AACN,cAAE,IAAI,CAAC,CAAC;AAAA,UACV;AAAA,QACF,OAAO;AACL,YAAE,IAAI;AACN,YAAE,IAAI,CAAC,CAAC;AAAA,QACV;AAEA;AAAA,MACF;AAGA,UAAI,IAAI,MAAM,GAAG;AACf,YAAI,CAAC,EAAG,GAAE,IAAI;AACd,UAAE,IAAI;AACN,UAAE,IAAI;AACN;AAAA,MACF;AAEA,aAAO,aAAa,GAAG,EAAE,SAAS,CAAC;AAAA,IACrC;AAEA,QAAI,MAAM,UAAU;AAClB,WAAKC,KAAI,EAAE,WAAW,CAAC,OAAO,IAAI;AAChC,YAAI,EAAE,MAAM,CAAC;AACb,UAAE,IAAI;AAAA,MACR,OAAO;AACL,YAAIA,OAAM,GAAI,KAAI,EAAE,MAAM,CAAC;AAC3B,UAAE,IAAI;AAAA,MACR;AAEA,aAAO,UAAU,KAAK,CAAC,IAAI,aAAa,GAAG,CAAC,IAAI,WAAW,GAAG,CAAC;AAAA,IACjE;AAEA,QAAI,MAAM,UAAU;AAClB,UAAI,IAAI,GAAG;AACT,YAAI,CAAC;AACL,UAAE,IAAI;AAAA,MACR,OAAO;AACL,UAAE,IAAI;AAAA,MACR;AAEA,aAAO,aAAa,GAAG,EAAE,SAAS,CAAC;AAAA,IACrC;AAEA,UAAM,MAAM,kBAAkB,CAAC;AAAA,EACjC;AAEA,EAAAD,SAAQ,YAAY;AAEpB,EAAAA,SAAQ,WAAW;AACnB,EAAAA,SAAQ,aAAa;AACrB,EAAAA,SAAQ,aAAa;AACrB,EAAAA,SAAQ,cAAc;AACtB,EAAAA,SAAQ,gBAAgB;AACxB,EAAAA,SAAQ,kBAAkB;AAC1B,EAAAA,SAAQ,kBAAkB;AAC1B,EAAAA,SAAQ,kBAAkB;AAC1B,EAAAA,SAAQ,mBAAmB;AAC3B,EAAAA,SAAQ,SAAS;AAEjB,EAAAA,SAAQ,SAASA,SAAQ,MAAM;AAC/B,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,YAAY;AAEpB,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,KAAK;AACb,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,SAAS;AACjB,EAAAA,SAAQ,QAAQ;AAChB,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,MAAM;AACd,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,QAAQ;AAEhB,MAAI,QAAQ,OAAQ,OAAM,CAAC;AAC3B,MAAI,KAAK;AACP,QAAI,IAAI,aAAa,MAAM;AACzB,WAAK,CAAC,aAAa,YAAY,YAAY,YAAY,QAAQ,QAAQ,UAAU,QAAQ;AACzF,WAAK,IAAI,GAAG,IAAI,GAAG,SAAS,KAAI,CAAC,IAAI,eAAe,IAAI,GAAG,GAAG,CAAC,EAAG,KAAI,CAAC,IAAI,KAAK,CAAC;AAAA,IACnF;AAAA,EACF;AAEA,EAAAA,SAAQ,OAAO,GAAG;AAElB,SAAOA;AACT;AAWA,SAAS,IAAI,GAAG,GAAG;AACjB,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAC1B;AAUA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI;AACzB;AASA,SAAS,MAAM,GAAG;AAChB,SAAO,SAAS,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;AAC7C;AAYA,SAAS,QAAQ;AACf,MAAI,GAAG,GACL,IAAI,IAAI,KAAK,CAAC;AAEhB,aAAW;AAEX,OAAK,IAAI,GAAG,IAAI,UAAU,UAAS;AACjC,QAAI,IAAI,KAAK,UAAU,GAAG,CAAC;AAC3B,QAAI,CAAC,EAAE,GAAG;AACR,UAAI,EAAE,GAAG;AACP,mBAAW;AACX,eAAO,IAAI,KAAK,IAAI,CAAC;AAAA,MACvB;AACA,UAAI;AAAA,IACN,WAAW,EAAE,GAAG;AACd,UAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AAAA,IACvB;AAAA,EACF;AAEA,aAAW;AAEX,SAAO,EAAE,KAAK;AAChB;AAQA,SAAS,kBAAkB,KAAK;AAC9B,SAAO,eAAe,WAAW,OAAO,IAAI,gBAAgB,OAAO;AACrE;AAUA,SAAS,GAAG,GAAG;AACb,SAAO,IAAI,KAAK,CAAC,EAAE,GAAG;AACxB;AAaA,SAAS,IAAI,GAAG,GAAG;AACjB,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAC1B;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAC1B;AAUA,SAAS,MAAM,GAAG;AAChB,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,EAAE;AAC3B;AASA,SAAS,MAAM;AACb,SAAO,SAAS,MAAM,WAAW,EAAE;AACrC;AASA,SAAS,MAAM;AACb,SAAO,SAAS,MAAM,WAAW,CAAC;AACpC;AAWA,SAAS,IAAI,GAAG,GAAG;AACjB,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAC1B;AAWA,SAAS,IAAI,GAAG,GAAG;AACjB,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAC1B;AAWA,SAAS,IAAI,GAAG,GAAG;AACjB,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAC1B;AAWA,SAAS,OAAO,IAAI;AAClB,MAAI,GAAG,GAAG,GAAG,GACX,IAAI,GACJ,IAAI,IAAI,KAAK,CAAC,GACd,KAAK,CAAC;AAER,MAAI,OAAO,OAAQ,MAAK,KAAK;AAAA,MACxB,YAAW,IAAI,GAAG,UAAU;AAEjC,MAAI,KAAK,KAAK,KAAK,QAAQ;AAE3B,MAAI,CAAC,KAAK,QAAQ;AAChB,WAAO,IAAI,IAAI,IAAG,GAAG,IAAI,KAAK,OAAO,IAAI,MAAM;AAAA,EAGjD,WAAW,OAAO,iBAAiB;AACjC,QAAI,OAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC;AAE7C,WAAO,IAAI,KAAI;AACb,UAAI,EAAE,CAAC;AAIP,UAAI,KAAK,OAAQ;AACf,UAAE,CAAC,IAAI,OAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC;AAAA,MACrD,OAAO;AAIL,WAAG,GAAG,IAAI,IAAI;AAAA,MAChB;AAAA,IACF;AAAA,EAGF,WAAW,OAAO,aAAa;AAG7B,QAAI,OAAO,YAAY,KAAK,CAAC;AAE7B,WAAO,IAAI,KAAI;AAGb,UAAI,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,MAAM,EAAE,IAAI,CAAC,KAAK,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAS;AAGtE,UAAI,KAAK,OAAQ;AACf,eAAO,YAAY,CAAC,EAAE,KAAK,GAAG,CAAC;AAAA,MACjC,OAAO;AAIL,WAAG,KAAK,IAAI,GAAG;AACf,aAAK;AAAA,MACP;AAAA,IACF;AAEA,QAAI,IAAI;AAAA,EACV,OAAO;AACL,UAAM,MAAM,iBAAiB;AAAA,EAC/B;AAEA,MAAI,GAAG,EAAE,CAAC;AACV,QAAM;AAGN,MAAI,KAAK,IAAI;AACX,QAAI,QAAQ,IAAI,WAAW,EAAE;AAC7B,OAAG,CAAC,KAAK,IAAI,IAAI,KAAK;AAAA,EACxB;AAGA,SAAO,GAAG,CAAC,MAAM,GAAG,IAAK,IAAG,IAAI;AAGhC,MAAI,IAAI,GAAG;AACT,QAAI;AACJ,SAAK,CAAC,CAAC;AAAA,EACT,OAAO;AACL,QAAI;AAGJ,WAAO,GAAG,CAAC,MAAM,GAAG,KAAK,SAAU,IAAG,MAAM;AAG5C,SAAK,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,GAAI;AAGzC,QAAI,IAAI,SAAU,MAAK,WAAW;AAAA,EACpC;AAEA,IAAE,IAAI;AACN,IAAE,IAAI;AAEN,SAAO;AACT;AAWA,SAAS,MAAM,GAAG;AAChB,SAAO,SAAS,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK,QAAQ;AACzD;AAcA,SAAS,KAAK,GAAG;AACf,MAAI,IAAI,KAAK,CAAC;AACd,SAAO,EAAE,IAAK,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,IAAK,EAAE,KAAK;AACjD;AAUA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI;AACzB;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AAWA,SAAS,IAAI,GAAG,GAAG;AACjB,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAC1B;AAYA,SAAS,MAAM;AACb,MAAI,IAAI,GACN,OAAO,WACP,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC;AAEtB,aAAW;AACX,SAAO,EAAE,KAAK,EAAE,IAAI,KAAK,SAAS,KAAI,EAAE,KAAK,KAAK,CAAC,CAAC;AACpD,aAAW;AAEX,SAAO,SAAS,GAAG,KAAK,WAAW,KAAK,QAAQ;AAClD;AAUA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,KAAK,CAAC,EAAE,IAAI;AACzB;AAUA,SAAS,KAAK,GAAG;AACf,SAAO,IAAI,KAAK,CAAC,EAAE,KAAK;AAC1B;AASA,SAAS,MAAM,GAAG;AAChB,SAAO,SAAS,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;AAC7C;AApyJA,IAcI,WAIF,YAGA,UAGA,MAGA,IAIA,UAiEA,SAAS,UACT,UAEA,cACA,iBACA,wBACA,mBACA,KAEA,WACA,SAEA,UACA,OACA,SACA,WAEA,MACA,UACA,kBAEA,gBACA,cAGA,GAu/EE,QA2rEO,SAMJ;AAjzJP;AAAA;AAcA,IAAI,YAAY;AAAhB,IAIE,aAAa;AAJf,IAOE,WAAW;AAPb,IAUE,OAAO;AAVT,IAaE,KAAK;AAbP,IAiBE,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,MAOT,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiBX,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAeV,QAAQ;AAAA;AAAA;AAAA;AAAA,MAIR,UAAU;AAAA;AAAA;AAAA;AAAA,MAIV,UAAW;AAAA;AAAA;AAAA;AAAA,MAIX,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,MAIP,MAAM;AAAA;AAAA;AAAA,MAGN,QAAQ;AAAA;AAAA,IACV;AA5EF,IAmFE,WAAW;AAnFb,IAqFE,eAAe;AArFjB,IAsFE,kBAAkB,eAAe;AAtFnC,IAuFE,yBAAyB,eAAe;AAvF1C,IAwFE,oBAAoB,eAAe;AAxFrC,IAyFE,MAAM;AAzFR,IA2FE,YAAY,KAAK;AA3FnB,IA4FE,UAAU,KAAK;AA5FjB,IA8FE,WAAW;AA9Fb,IA+FE,QAAQ;AA/FV,IAgGE,UAAU;AAhGZ,IAiGE,YAAY;AAjGd,IAmGE,OAAO;AAnGT,IAoGE,WAAW;AApGb,IAqGE,mBAAmB;AArGrB,IAuGE,iBAAiB,KAAK,SAAS;AAvGjC,IAwGE,eAAe,GAAG,SAAS;AAxG7B,IA2GE,IAAI,EAAE,aAAa,IAAI;AA0EzB,MAAE,gBAAgB,EAAE,MAAM,WAAY;AACpC,UAAI,IAAI,IAAI,KAAK,YAAY,IAAI;AACjC,UAAI,EAAE,IAAI,EAAG,GAAE,IAAI;AACnB,aAAO,SAAS,CAAC;AAAA,IACnB;AAQA,MAAE,OAAO,WAAY;AACnB,aAAO,SAAS,IAAI,KAAK,YAAY,IAAI,GAAG,KAAK,IAAI,GAAG,CAAC;AAAA,IAC3D;AAWA,MAAE,YAAY,EAAE,QAAQ,SAAUJ,MAAKC,MAAK;AAC1C,UAAI,GACF,IAAI,MACJ,OAAO,EAAE;AACX,MAAAD,OAAM,IAAI,KAAKA,IAAG;AAClB,MAAAC,OAAM,IAAI,KAAKA,IAAG;AAClB,UAAI,CAACD,KAAI,KAAK,CAACC,KAAI,EAAG,QAAO,IAAI,KAAK,GAAG;AACzC,UAAID,KAAI,GAAGC,IAAG,EAAG,OAAM,MAAM,kBAAkBA,IAAG;AAClD,UAAI,EAAE,IAAID,IAAG;AACb,aAAO,IAAI,IAAIA,OAAM,EAAE,IAAIC,IAAG,IAAI,IAAIA,OAAM,IAAI,KAAK,CAAC;AAAA,IACxD;AAWA,MAAE,aAAa,EAAE,MAAM,SAAU,GAAG;AAClC,UAAI,GAAG,GAAG,KAAK,KACb,IAAI,MACJ,KAAK,EAAE,GACP,MAAM,IAAI,IAAI,EAAE,YAAY,CAAC,GAAG,GAChC,KAAK,EAAE,GACP,KAAK,EAAE;AAGT,UAAI,CAAC,MAAM,CAAC,IAAI;AACd,eAAO,CAAC,MAAM,CAAC,KAAK,MAAM,OAAO,KAAK,KAAK,OAAO,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI;AAAA,MAChF;AAGA,UAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAG,QAAO,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK;AAGxD,UAAI,OAAO,GAAI,QAAO;AAGtB,UAAI,EAAE,MAAM,EAAE,EAAG,QAAO,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,IAAI;AAEjD,YAAM,GAAG;AACT,YAAM,GAAG;AAGT,WAAK,IAAI,GAAG,IAAI,MAAM,MAAM,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG;AACjD,YAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAG,QAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI;AAAA,MAC3D;AAGA,aAAO,QAAQ,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI,IAAI;AAAA,IACpD;AAgBA,MAAE,SAAS,EAAE,MAAM,WAAY;AAC7B,UAAI,IAAI,IACN,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,EAAG,QAAO,IAAI,KAAK,GAAG;AAG7B,UAAI,CAAC,EAAE,EAAE,CAAC,EAAG,QAAO,IAAI,KAAK,CAAC;AAE9B,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI;AAC9C,WAAK,WAAW;AAEhB,UAAI,OAAO,MAAM,iBAAiB,MAAM,CAAC,CAAC;AAE1C,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,SAAS,YAAY,KAAK,YAAY,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;AAAA,IAC5E;AAmBA,MAAE,WAAW,EAAE,OAAO,WAAY;AAChC,UAAI,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,SACjC,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,SAAS,KAAK,EAAE,OAAO,EAAG,QAAO,IAAI,KAAK,CAAC;AAClD,iBAAW;AAGX,UAAI,EAAE,IAAI,QAAQ,EAAE,IAAI,GAAG,IAAI,CAAC;AAIhC,UAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,GAAG;AAC9B,YAAI,eAAe,EAAE,CAAC;AACtB,YAAI,EAAE;AAGN,YAAI,KAAK,IAAI,EAAE,SAAS,KAAK,EAAG,MAAM,KAAK,KAAK,KAAK,KAAK,MAAM;AAChE,YAAI,QAAQ,GAAG,IAAI,CAAC;AAGpB,YAAI,WAAW,IAAI,KAAK,CAAC,KAAK,IAAI,MAAM,IAAI,IAAI,KAAK;AAErD,YAAI,KAAK,IAAI,GAAG;AACd,cAAI,OAAO;AAAA,QACb,OAAO;AACL,cAAI,EAAE,cAAc;AACpB,cAAI,EAAE,MAAM,GAAG,EAAE,QAAQ,GAAG,IAAI,CAAC,IAAI;AAAA,QACvC;AAEA,YAAI,IAAI,KAAK,CAAC;AACd,UAAE,IAAI,EAAE;AAAA,MACV,OAAO;AACL,YAAI,IAAI,KAAK,EAAE,SAAS,CAAC;AAAA,MAC3B;AAEA,YAAM,IAAI,KAAK,aAAa;AAI5B,iBAAS;AACP,YAAI;AACJ,aAAK,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;AACvB,kBAAU,GAAG,KAAK,CAAC;AACnB,YAAI,OAAO,QAAQ,KAAK,CAAC,EAAE,MAAM,CAAC,GAAG,QAAQ,KAAK,EAAE,GAAG,KAAK,GAAG,CAAC;AAGhE,YAAI,eAAe,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,OAAO,IAAI,eAAe,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE,GAAG;AAC/E,cAAI,EAAE,MAAM,KAAK,GAAG,KAAK,CAAC;AAI1B,cAAI,KAAK,UAAU,CAAC,OAAO,KAAK,QAAQ;AAItC,gBAAI,CAAC,KAAK;AACR,uBAAS,GAAG,IAAI,GAAG,CAAC;AAEpB,kBAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,GAAG;AAC7B,oBAAI;AACJ;AAAA,cACF;AAAA,YACF;AAEA,kBAAM;AACN,kBAAM;AAAA,UACR,OAAO;AAIL,gBAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,KAAK;AAG7C,uBAAS,GAAG,IAAI,GAAG,CAAC;AACpB,kBAAI,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC;AAAA,YAC/B;AAEA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,iBAAW;AAEX,aAAO,SAAS,GAAG,GAAG,KAAK,UAAU,CAAC;AAAA,IACxC;AAOA,MAAE,gBAAgB,EAAE,KAAK,WAAY;AACnC,UAAI,GACF,IAAI,KAAK,GACT,IAAI;AAEN,UAAI,GAAG;AACL,YAAI,EAAE,SAAS;AACf,aAAK,IAAI,UAAU,KAAK,IAAI,QAAQ,KAAK;AAGzC,YAAI,EAAE,CAAC;AACP,YAAI,EAAG,QAAO,IAAI,MAAM,GAAG,KAAK,GAAI;AACpC,YAAI,IAAI,EAAG,KAAI;AAAA,MACjB;AAEA,aAAO;AAAA,IACT;AAwBA,MAAE,YAAY,EAAE,MAAM,SAAU,GAAG;AACjC,aAAO,OAAO,MAAM,IAAI,KAAK,YAAY,CAAC,CAAC;AAAA,IAC7C;AAQA,MAAE,qBAAqB,EAAE,WAAW,SAAU,GAAG;AAC/C,UAAI,IAAI,MACN,OAAO,EAAE;AACX,aAAO,SAAS,OAAO,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,WAAW,KAAK,QAAQ;AAAA,IAChF;AAOA,MAAE,SAAS,EAAE,KAAK,SAAU,GAAG;AAC7B,aAAO,KAAK,IAAI,CAAC,MAAM;AAAA,IACzB;AAQA,MAAE,QAAQ,WAAY;AACpB,aAAO,SAAS,IAAI,KAAK,YAAY,IAAI,GAAG,KAAK,IAAI,GAAG,CAAC;AAAA,IAC3D;AAQA,MAAE,cAAc,EAAE,KAAK,SAAU,GAAG;AAClC,aAAO,KAAK,IAAI,CAAC,IAAI;AAAA,IACvB;AAQA,MAAE,uBAAuB,EAAE,MAAM,SAAU,GAAG;AAC5C,UAAI,IAAI,KAAK,IAAI,CAAC;AAClB,aAAO,KAAK,KAAK,MAAM;AAAA,IACzB;AA4BA,MAAE,mBAAmB,EAAE,OAAO,WAAY;AACxC,UAAI,GAAG,GAAG,IAAI,IAAI,KAChB,IAAI,MACJ,OAAO,EAAE,aACT,MAAM,IAAI,KAAK,CAAC;AAElB,UAAI,CAAC,EAAE,SAAS,EAAG,QAAO,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,GAAG;AACpD,UAAI,EAAE,OAAO,EAAG,QAAO;AAEvB,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI;AAC9C,WAAK,WAAW;AAChB,YAAM,EAAE,EAAE;AAOV,UAAI,MAAM,IAAI;AACZ,YAAI,KAAK,KAAK,MAAM,CAAC;AACrB,aAAK,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS;AAAA,MACnC,OAAO;AACL,YAAI;AACJ,YAAI;AAAA,MACN;AAEA,UAAI,aAAa,MAAM,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI;AAGvD,UAAI,SACF,IAAI,GACJ,KAAK,IAAI,KAAK,CAAC;AACjB,aAAO,OAAM;AACX,kBAAU,EAAE,MAAM,CAAC;AACnB,YAAI,IAAI,MAAM,QAAQ,MAAM,GAAG,MAAM,QAAQ,MAAM,EAAE,CAAC,CAAC,CAAC;AAAA,MAC1D;AAEA,aAAO,SAAS,GAAG,KAAK,YAAY,IAAI,KAAK,WAAW,IAAI,IAAI;AAAA,IAClE;AAiCA,MAAE,iBAAiB,EAAE,OAAO,WAAY;AACtC,UAAI,GAAG,IAAI,IAAI,KACb,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,SAAS,KAAK,EAAE,OAAO,EAAG,QAAO,IAAI,KAAK,CAAC;AAElD,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI;AAC9C,WAAK,WAAW;AAChB,YAAM,EAAE,EAAE;AAEV,UAAI,MAAM,GAAG;AACX,YAAI,aAAa,MAAM,GAAG,GAAG,GAAG,IAAI;AAAA,MACtC,OAAO;AAWL,YAAI,MAAM,KAAK,KAAK,GAAG;AACvB,YAAI,IAAI,KAAK,KAAK,IAAI;AAEtB,YAAI,EAAE,MAAM,IAAI,QAAQ,GAAG,CAAC,CAAC;AAC7B,YAAI,aAAa,MAAM,GAAG,GAAG,GAAG,IAAI;AAGpC,YAAI,SACF,KAAK,IAAI,KAAK,CAAC,GACf,MAAM,IAAI,KAAK,EAAE,GACjB,MAAM,IAAI,KAAK,EAAE;AACnB,eAAO,OAAM;AACX,oBAAU,EAAE,MAAM,CAAC;AACnB,cAAI,EAAE,MAAM,GAAG,KAAK,QAAQ,MAAM,IAAI,MAAM,OAAO,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA,QAClE;AAAA,MACF;AAEA,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,SAAS,GAAG,IAAI,IAAI,IAAI;AAAA,IACjC;AAmBA,MAAE,oBAAoB,EAAE,OAAO,WAAY;AACzC,UAAI,IAAI,IACN,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,SAAS,EAAG,QAAO,IAAI,KAAK,EAAE,CAAC;AACtC,UAAI,EAAE,OAAO,EAAG,QAAO,IAAI,KAAK,CAAC;AAEjC,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK;AACtB,WAAK,WAAW;AAEhB,aAAO,OAAO,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,KAAK,YAAY,IAAI,KAAK,WAAW,EAAE;AAAA,IAC3E;AAsBA,MAAE,gBAAgB,EAAE,OAAO,WAAY;AACrC,UAAI,IAAI,MACN,OAAO,EAAE,aACT,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GACjB,KAAK,KAAK,WACV,KAAK,KAAK;AAEZ,UAAI,MAAM,IAAI;AACZ,eAAO,MAAM,IAET,EAAE,MAAM,IAAI,MAAM,MAAM,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC,IAE5C,IAAI,KAAK,GAAG;AAAA,MAClB;AAEA,UAAI,EAAE,OAAO,EAAG,QAAO,MAAM,MAAM,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG;AAIxD,WAAK,YAAY,KAAK;AACtB,WAAK,WAAW;AAGhB,UAAI,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK;AAEpD,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,EAAE,MAAM,CAAC;AAAA,IAClB;AAsBA,MAAE,0BAA0B,EAAE,QAAQ,WAAY;AAChD,UAAI,IAAI,IACN,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,EAAE,IAAI,CAAC,EAAG,QAAO,IAAI,KAAK,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG;AAC/C,UAAI,CAAC,EAAE,SAAS,EAAG,QAAO,IAAI,KAAK,CAAC;AAEpC,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI;AACxD,WAAK,WAAW;AAChB,iBAAW;AAEX,UAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AAErC,iBAAW;AACX,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,EAAE,GAAG;AAAA,IACd;AAmBA,MAAE,wBAAwB,EAAE,QAAQ,WAAY;AAC9C,UAAI,IAAI,IACN,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,SAAS,KAAK,EAAE,OAAO,EAAG,QAAO,IAAI,KAAK,CAAC;AAElD,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI;AAC5D,WAAK,WAAW;AAChB,iBAAW;AAEX,UAAI,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AAEpC,iBAAW;AACX,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,EAAE,GAAG;AAAA,IACd;AAsBA,MAAE,2BAA2B,EAAE,QAAQ,WAAY;AACjD,UAAI,IAAI,IAAI,KAAK,KACf,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,SAAS,EAAG,QAAO,IAAI,KAAK,GAAG;AACtC,UAAI,EAAE,KAAK,EAAG,QAAO,IAAI,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,OAAO,IAAI,IAAI,GAAG;AAE5E,WAAK,KAAK;AACV,WAAK,KAAK;AACV,YAAM,EAAE,GAAG;AAEX,UAAI,KAAK,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAG,QAAO,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,IAAI;AAE/E,WAAK,YAAY,MAAM,MAAM,EAAE;AAE/B,UAAI,OAAO,EAAE,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,GAAG,MAAM,IAAI,CAAC;AAEvD,WAAK,YAAY,KAAK;AACtB,WAAK,WAAW;AAEhB,UAAI,EAAE,GAAG;AAET,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,EAAE,MAAM,GAAG;AAAA,IACpB;AAwBA,MAAE,cAAc,EAAE,OAAO,WAAY;AACnC,UAAI,QAAQ,GACV,IAAI,IACJ,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,EAAE,OAAO,EAAG,QAAO,IAAI,KAAK,CAAC;AAEjC,UAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AACjB,WAAK,KAAK;AACV,WAAK,KAAK;AAEV,UAAI,MAAM,IAAI;AAGZ,YAAI,MAAM,GAAG;AACX,mBAAS,MAAM,MAAM,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG;AAC1C,iBAAO,IAAI,EAAE;AACb,iBAAO;AAAA,QACT;AAGA,eAAO,IAAI,KAAK,GAAG;AAAA,MACrB;AAIA,WAAK,YAAY,KAAK;AACtB,WAAK,WAAW;AAEhB,UAAI,EAAE,IAAI,IAAI,KAAK,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK;AAE7D,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,EAAE,MAAM,CAAC;AAAA,IAClB;AAqBA,MAAE,iBAAiB,EAAE,OAAO,WAAY;AACtC,UAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,IAC7B,IAAI,MACJ,OAAO,EAAE,aACT,KAAK,KAAK,WACV,KAAK,KAAK;AAEZ,UAAI,CAAC,EAAE,SAAS,GAAG;AACjB,YAAI,CAAC,EAAE,EAAG,QAAO,IAAI,KAAK,GAAG;AAC7B,YAAI,KAAK,KAAK,cAAc;AAC1B,cAAI,MAAM,MAAM,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG;AACrC,YAAE,IAAI,EAAE;AACR,iBAAO;AAAA,QACT;AAAA,MACF,WAAW,EAAE,OAAO,GAAG;AACrB,eAAO,IAAI,KAAK,CAAC;AAAA,MACnB,WAAW,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,KAAK,KAAK,cAAc;AAClD,YAAI,MAAM,MAAM,KAAK,GAAG,EAAE,EAAE,MAAM,IAAI;AACtC,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAEA,WAAK,YAAY,MAAM,KAAK;AAC5B,WAAK,WAAW;AAQhB,UAAI,KAAK,IAAI,IAAI,MAAM,WAAW,IAAI,CAAC;AAEvC,WAAK,IAAI,GAAG,GAAG,EAAE,EAAG,KAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAE/D,iBAAW;AAEX,UAAI,KAAK,KAAK,MAAM,QAAQ;AAC5B,UAAI;AACJ,WAAK,EAAE,MAAM,CAAC;AACd,UAAI,IAAI,KAAK,CAAC;AACd,WAAK;AAGL,aAAO,MAAM,MAAK;AAChB,aAAK,GAAG,MAAM,EAAE;AAChB,YAAI,EAAE,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC;AAE1B,aAAK,GAAG,MAAM,EAAE;AAChB,YAAI,EAAE,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC;AAEzB,YAAI,EAAE,EAAE,CAAC,MAAM,OAAQ,MAAK,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,MAAK;AAAA,MAC/D;AAEA,UAAI,EAAG,KAAI,EAAE,MAAM,KAAM,IAAI,CAAE;AAE/B,iBAAW;AAEX,aAAO,SAAS,GAAG,KAAK,YAAY,IAAI,KAAK,WAAW,IAAI,IAAI;AAAA,IAClE;AAOA,MAAE,WAAW,WAAY;AACvB,aAAO,CAAC,CAAC,KAAK;AAAA,IAChB;AAOA,MAAE,YAAY,EAAE,QAAQ,WAAY;AAClC,aAAO,CAAC,CAAC,KAAK,KAAK,UAAU,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE,SAAS;AAAA,IACpE;AAOA,MAAE,QAAQ,WAAY;AACpB,aAAO,CAAC,KAAK;AAAA,IACf;AAOA,MAAE,aAAa,EAAE,QAAQ,WAAY;AACnC,aAAO,KAAK,IAAI;AAAA,IAClB;AAOA,MAAE,aAAa,EAAE,QAAQ,WAAY;AACnC,aAAO,KAAK,IAAI;AAAA,IAClB;AAOA,MAAE,SAAS,WAAY;AACrB,aAAO,CAAC,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC,MAAM;AAAA,IACnC;AAOA,MAAE,WAAW,EAAE,KAAK,SAAU,GAAG;AAC/B,aAAO,KAAK,IAAI,CAAC,IAAI;AAAA,IACvB;AAOA,MAAE,oBAAoB,EAAE,MAAM,SAAU,GAAG;AACzC,aAAO,KAAK,IAAI,CAAC,IAAI;AAAA,IACvB;AAiCA,MAAE,YAAY,EAAE,MAAM,SAAU,MAAM;AACpC,UAAI,UAAU,GAAG,aAAa,GAAG,KAAK,KAAK,IAAI,GAC7C,MAAM,MACN,OAAO,IAAI,aACX,KAAK,KAAK,WACV,KAAK,KAAK,UACV,QAAQ;AAGV,UAAI,QAAQ,MAAM;AAChB,eAAO,IAAI,KAAK,EAAE;AAClB,mBAAW;AAAA,MACb,OAAO;AACL,eAAO,IAAI,KAAK,IAAI;AACpB,YAAI,KAAK;AAGT,YAAI,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,GAAG,CAAC,EAAG,QAAO,IAAI,KAAK,GAAG;AAEhE,mBAAW,KAAK,GAAG,EAAE;AAAA,MACvB;AAEA,UAAI,IAAI;AAGR,UAAI,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG;AACzC,eAAO,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC;AAAA,MACxE;AAIA,UAAI,UAAU;AACZ,YAAI,EAAE,SAAS,GAAG;AAChB,gBAAM;AAAA,QACR,OAAO;AACL,eAAK,IAAI,EAAE,CAAC,GAAG,IAAI,OAAO,IAAI,MAAK;AACnC,gBAAM,MAAM;AAAA,QACd;AAAA,MACF;AAEA,iBAAW;AACX,WAAK,KAAK;AACV,YAAM,iBAAiB,KAAK,EAAE;AAC9B,oBAAc,WAAW,QAAQ,MAAM,KAAK,EAAE,IAAI,iBAAiB,MAAM,EAAE;AAG3E,UAAI,OAAO,KAAK,aAAa,IAAI,CAAC;AAgBlC,UAAI,oBAAoB,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG;AAExC,WAAG;AACD,gBAAM;AACN,gBAAM,iBAAiB,KAAK,EAAE;AAC9B,wBAAc,WAAW,QAAQ,MAAM,KAAK,EAAE,IAAI,iBAAiB,MAAM,EAAE;AAC3E,cAAI,OAAO,KAAK,aAAa,IAAI,CAAC;AAElC,cAAI,CAAC,KAAK;AAGR,gBAAI,CAAC,eAAe,EAAE,CAAC,EAAE,MAAM,IAAI,GAAG,IAAI,EAAE,IAAI,KAAK,MAAM;AACzD,kBAAI,SAAS,GAAG,KAAK,GAAG,CAAC;AAAA,YAC3B;AAEA;AAAA,UACF;AAAA,QACF,SAAS,oBAAoB,EAAE,GAAG,KAAK,IAAI,EAAE;AAAA,MAC/C;AAEA,iBAAW;AAEX,aAAO,SAAS,GAAG,IAAI,EAAE;AAAA,IAC3B;AAgDA,MAAE,QAAQ,EAAE,MAAM,SAAU,GAAG;AAC7B,UAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,MAAM,IAC5C,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,IAAI,KAAK,CAAC;AAGd,UAAI,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG;AAGhB,YAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAG,KAAI,IAAI,KAAK,GAAG;AAAA,iBAGzB,EAAE,EAAG,GAAE,IAAI,CAAC,EAAE;AAAA,YAKlB,KAAI,IAAI,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,IAAI,GAAG;AAE9C,eAAO;AAAA,MACT;AAGA,UAAI,EAAE,KAAK,EAAE,GAAG;AACd,UAAE,IAAI,CAAC,EAAE;AACT,eAAO,EAAE,KAAK,CAAC;AAAA,MACjB;AAEA,WAAK,EAAE;AACP,WAAK,EAAE;AACP,WAAK,KAAK;AACV,WAAK,KAAK;AAGV,UAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;AAGpB,YAAI,GAAG,CAAC,EAAG,GAAE,IAAI,CAAC,EAAE;AAAA,iBAGX,GAAG,CAAC,EAAG,KAAI,IAAI,KAAK,CAAC;AAAA,YAIzB,QAAO,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC;AAEtC,eAAO,WAAW,SAAS,GAAG,IAAI,EAAE,IAAI;AAAA,MAC1C;AAKA,UAAI,UAAU,EAAE,IAAI,QAAQ;AAC5B,WAAK,UAAU,EAAE,IAAI,QAAQ;AAE7B,WAAK,GAAG,MAAM;AACd,UAAI,KAAK;AAGT,UAAI,GAAG;AACL,eAAO,IAAI;AAEX,YAAI,MAAM;AACR,cAAI;AACJ,cAAI,CAAC;AACL,gBAAM,GAAG;AAAA,QACX,OAAO;AACL,cAAI;AACJ,cAAI;AACJ,gBAAM,GAAG;AAAA,QACX;AAKA,YAAI,KAAK,IAAI,KAAK,KAAK,KAAK,QAAQ,GAAG,GAAG,IAAI;AAE9C,YAAI,IAAI,GAAG;AACT,cAAI;AACJ,YAAE,SAAS;AAAA,QACb;AAGA,UAAE,QAAQ;AACV,aAAK,IAAI,GAAG,MAAM,GAAE,KAAK,CAAC;AAC1B,UAAE,QAAQ;AAAA,MAGZ,OAAO;AAIL,YAAI,GAAG;AACP,cAAM,GAAG;AACT,eAAO,IAAI;AACX,YAAI,KAAM,OAAM;AAEhB,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACxB,cAAI,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG;AAClB,mBAAO,GAAG,CAAC,IAAI,GAAG,CAAC;AACnB;AAAA,UACF;AAAA,QACF;AAEA,YAAI;AAAA,MACN;AAEA,UAAI,MAAM;AACR,YAAI;AACJ,aAAK;AACL,aAAK;AACL,UAAE,IAAI,CAAC,EAAE;AAAA,MACX;AAEA,YAAM,GAAG;AAIT,WAAK,IAAI,GAAG,SAAS,KAAK,IAAI,GAAG,EAAE,EAAG,IAAG,KAAK,IAAI;AAGlD,WAAK,IAAI,GAAG,QAAQ,IAAI,KAAI;AAE1B,YAAI,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG;AACnB,eAAK,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC,MAAM,IAAI,IAAG,CAAC,IAAI,OAAO;AAChD,YAAE,GAAG,CAAC;AACN,aAAG,CAAC,KAAK;AAAA,QACX;AAEA,WAAG,CAAC,KAAK,GAAG,CAAC;AAAA,MACf;AAGA,aAAO,GAAG,EAAE,GAAG,MAAM,IAAI,IAAG,IAAI;AAGhC,aAAO,GAAG,CAAC,MAAM,GAAG,GAAG,MAAM,EAAG,GAAE;AAGlC,UAAI,CAAC,GAAG,CAAC,EAAG,QAAO,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC;AAE7C,QAAE,IAAI;AACN,QAAE,IAAI,kBAAkB,IAAI,CAAC;AAE7B,aAAO,WAAW,SAAS,GAAG,IAAI,EAAE,IAAI;AAAA,IAC1C;AA2BA,MAAE,SAAS,EAAE,MAAM,SAAU,GAAG;AAC9B,UAAI,GACF,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,IAAI,KAAK,CAAC;AAGd,UAAI,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAG,QAAO,IAAI,KAAK,GAAG;AAGvD,UAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG;AAC1B,eAAO,SAAS,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,KAAK,QAAQ;AAAA,MAC5D;AAGA,iBAAW;AAEX,UAAI,KAAK,UAAU,GAAG;AAIpB,YAAI,OAAO,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC;AAC9B,UAAE,KAAK,EAAE;AAAA,MACX,OAAO;AACL,YAAI,OAAO,GAAG,GAAG,GAAG,KAAK,QAAQ,CAAC;AAAA,MACpC;AAEA,UAAI,EAAE,MAAM,CAAC;AAEb,iBAAW;AAEX,aAAO,EAAE,MAAM,CAAC;AAAA,IAClB;AASA,MAAE,qBAAqB,EAAE,MAAM,WAAY;AACzC,aAAO,mBAAmB,IAAI;AAAA,IAChC;AAQA,MAAE,mBAAmB,EAAE,KAAK,WAAY;AACtC,aAAO,iBAAiB,IAAI;AAAA,IAC9B;AAQA,MAAE,UAAU,EAAE,MAAM,WAAY;AAC9B,UAAI,IAAI,IAAI,KAAK,YAAY,IAAI;AACjC,QAAE,IAAI,CAAC,EAAE;AACT,aAAO,SAAS,CAAC;AAAA,IACnB;AAwBA,MAAE,OAAO,EAAE,MAAM,SAAU,GAAG;AAC5B,UAAI,OAAO,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,IAAI,IACtC,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,IAAI,KAAK,CAAC;AAGd,UAAI,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG;AAGhB,YAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAG,KAAI,IAAI,KAAK,GAAG;AAAA,iBAMzB,CAAC,EAAE,EAAG,KAAI,IAAI,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,IAAI,GAAG;AAExD,eAAO;AAAA,MACT;AAGA,UAAI,EAAE,KAAK,EAAE,GAAG;AACd,UAAE,IAAI,CAAC,EAAE;AACT,eAAO,EAAE,MAAM,CAAC;AAAA,MAClB;AAEA,WAAK,EAAE;AACP,WAAK,EAAE;AACP,WAAK,KAAK;AACV,WAAK,KAAK;AAGV,UAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;AAIpB,YAAI,CAAC,GAAG,CAAC,EAAG,KAAI,IAAI,KAAK,CAAC;AAE1B,eAAO,WAAW,SAAS,GAAG,IAAI,EAAE,IAAI;AAAA,MAC1C;AAKA,UAAI,UAAU,EAAE,IAAI,QAAQ;AAC5B,UAAI,UAAU,EAAE,IAAI,QAAQ;AAE5B,WAAK,GAAG,MAAM;AACd,UAAI,IAAI;AAGR,UAAI,GAAG;AAEL,YAAI,IAAI,GAAG;AACT,cAAI;AACJ,cAAI,CAAC;AACL,gBAAM,GAAG;AAAA,QACX,OAAO;AACL,cAAI;AACJ,cAAI;AACJ,gBAAM,GAAG;AAAA,QACX;AAGA,YAAI,KAAK,KAAK,KAAK,QAAQ;AAC3B,cAAM,IAAI,MAAM,IAAI,IAAI,MAAM;AAE9B,YAAI,IAAI,KAAK;AACX,cAAI;AACJ,YAAE,SAAS;AAAA,QACb;AAGA,UAAE,QAAQ;AACV,eAAO,MAAM,GAAE,KAAK,CAAC;AACrB,UAAE,QAAQ;AAAA,MACZ;AAEA,YAAM,GAAG;AACT,UAAI,GAAG;AAGP,UAAI,MAAM,IAAI,GAAG;AACf,YAAI;AACJ,YAAI;AACJ,aAAK;AACL,aAAK;AAAA,MACP;AAGA,WAAK,QAAQ,GAAG,KAAI;AAClB,iBAAS,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,SAAS,OAAO;AACnD,WAAG,CAAC,KAAK;AAAA,MACX;AAEA,UAAI,OAAO;AACT,WAAG,QAAQ,KAAK;AAChB,UAAE;AAAA,MACJ;AAIA,WAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,GAAG,KAAK,IAAI,IAAG,IAAI;AAE9C,QAAE,IAAI;AACN,QAAE,IAAI,kBAAkB,IAAI,CAAC;AAE7B,aAAO,WAAW,SAAS,GAAG,IAAI,EAAE,IAAI;AAAA,IAC1C;AASA,MAAE,YAAY,EAAE,KAAK,SAAU,GAAG;AAChC,UAAI,GACF,IAAI;AAEN,UAAI,MAAM,UAAU,MAAM,CAAC,CAAC,KAAK,MAAM,KAAK,MAAM,EAAG,OAAM,MAAM,kBAAkB,CAAC;AAEpF,UAAI,EAAE,GAAG;AACP,YAAI,aAAa,EAAE,CAAC;AACpB,YAAI,KAAK,EAAE,IAAI,IAAI,EAAG,KAAI,EAAE,IAAI;AAAA,MAClC,OAAO;AACL,YAAI;AAAA,MACN;AAEA,aAAO;AAAA,IACT;AAQA,MAAE,QAAQ,WAAY;AACpB,UAAI,IAAI,MACN,OAAO,EAAE;AAEX,aAAO,SAAS,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK,QAAQ;AAAA,IACrD;AAkBA,MAAE,OAAO,EAAE,MAAM,WAAY;AAC3B,UAAI,IAAI,IACN,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,SAAS,EAAG,QAAO,IAAI,KAAK,GAAG;AACtC,UAAI,EAAE,OAAO,EAAG,QAAO,IAAI,KAAK,CAAC;AAEjC,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI;AAC9C,WAAK,WAAW;AAEhB,UAAI,KAAK,MAAM,iBAAiB,MAAM,CAAC,CAAC;AAExC,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,SAAS,WAAW,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;AAAA,IAC1D;AAeA,MAAE,aAAa,EAAE,OAAO,WAAY;AAClC,UAAI,GAAG,GAAG,IAAI,GAAG,KAAK,GACpB,IAAI,MACJ,IAAI,EAAE,GACN,IAAI,EAAE,GACN,IAAI,EAAE,GACN,OAAO,EAAE;AAGX,UAAI,MAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;AAC1B,eAAO,IAAI,KAAK,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC;AAAA,MACnE;AAEA,iBAAW;AAGX,UAAI,KAAK,KAAK,CAAC,CAAC;AAIhB,UAAI,KAAK,KAAK,KAAK,IAAI,GAAG;AACxB,YAAI,eAAe,CAAC;AAEpB,aAAK,EAAE,SAAS,KAAK,KAAK,EAAG,MAAK;AAClC,YAAI,KAAK,KAAK,CAAC;AACf,YAAI,WAAW,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,IAAI;AAE3C,YAAI,KAAK,IAAI,GAAG;AACd,cAAI,OAAO;AAAA,QACb,OAAO;AACL,cAAI,EAAE,cAAc;AACpB,cAAI,EAAE,MAAM,GAAG,EAAE,QAAQ,GAAG,IAAI,CAAC,IAAI;AAAA,QACvC;AAEA,YAAI,IAAI,KAAK,CAAC;AAAA,MAChB,OAAO;AACL,YAAI,IAAI,KAAK,EAAE,SAAS,CAAC;AAAA,MAC3B;AAEA,YAAM,IAAI,KAAK,aAAa;AAG5B,iBAAS;AACP,YAAI;AACJ,YAAI,EAAE,KAAK,OAAO,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG;AAG7C,YAAI,eAAe,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,OAAO,IAAI,eAAe,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE,GAAG;AAC/E,cAAI,EAAE,MAAM,KAAK,GAAG,KAAK,CAAC;AAI1B,cAAI,KAAK,UAAU,CAAC,OAAO,KAAK,QAAQ;AAItC,gBAAI,CAAC,KAAK;AACR,uBAAS,GAAG,IAAI,GAAG,CAAC;AAEpB,kBAAI,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,GAAG;AACpB,oBAAI;AACJ;AAAA,cACF;AAAA,YACF;AAEA,kBAAM;AACN,kBAAM;AAAA,UACR,OAAO;AAIL,gBAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,KAAK;AAG7C,uBAAS,GAAG,IAAI,GAAG,CAAC;AACpB,kBAAI,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC;AAAA,YACtB;AAEA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,iBAAW;AAEX,aAAO,SAAS,GAAG,GAAG,KAAK,UAAU,CAAC;AAAA,IACxC;AAgBA,MAAE,UAAU,EAAE,MAAM,WAAY;AAC9B,UAAI,IAAI,IACN,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,CAAC,EAAE,SAAS,EAAG,QAAO,IAAI,KAAK,GAAG;AACtC,UAAI,EAAE,OAAO,EAAG,QAAO,IAAI,KAAK,CAAC;AAEjC,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY,KAAK;AACtB,WAAK,WAAW;AAEhB,UAAI,EAAE,IAAI;AACV,QAAE,IAAI;AACN,UAAI,OAAO,GAAG,IAAI,KAAK,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,IAAI,CAAC;AAE9D,WAAK,YAAY;AACjB,WAAK,WAAW;AAEhB,aAAO,SAAS,YAAY,KAAK,YAAY,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;AAAA,IAC5E;AAwBA,MAAE,QAAQ,EAAE,MAAM,SAAU,GAAG;AAC7B,UAAI,OAAO,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,KACjC,IAAI,MACJ,OAAO,EAAE,aACT,KAAK,EAAE,GACP,MAAM,IAAI,IAAI,KAAK,CAAC,GAAG;AAEzB,QAAE,KAAK,EAAE;AAGT,UAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;AAElC,eAAO,IAAI,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAI5D,MAIA,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC;AAAA,MACpC;AAEA,UAAI,UAAU,EAAE,IAAI,QAAQ,IAAI,UAAU,EAAE,IAAI,QAAQ;AACxD,YAAM,GAAG;AACT,YAAM,GAAG;AAGT,UAAI,MAAM,KAAK;AACb,YAAI;AACJ,aAAK;AACL,aAAK;AACL,aAAK;AACL,cAAM;AACN,cAAM;AAAA,MACR;AAGA,UAAI,CAAC;AACL,WAAK,MAAM;AACX,WAAK,IAAI,IAAI,MAAM,GAAE,KAAK,CAAC;AAG3B,WAAK,IAAI,KAAK,EAAE,KAAK,KAAI;AACvB,gBAAQ;AACR,aAAK,IAAI,MAAM,GAAG,IAAI,KAAI;AACxB,cAAI,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;AACnC,YAAE,GAAG,IAAI,IAAI,OAAO;AACpB,kBAAQ,IAAI,OAAO;AAAA,QACrB;AAEA,UAAE,CAAC,KAAK,EAAE,CAAC,IAAI,SAAS,OAAO;AAAA,MACjC;AAGA,aAAO,CAAC,EAAE,EAAE,EAAE,IAAI,GAAE,IAAI;AAExB,UAAI,MAAO,GAAE;AAAA,UACR,GAAE,MAAM;AAEb,QAAE,IAAI;AACN,QAAE,IAAI,kBAAkB,GAAG,CAAC;AAE5B,aAAO,WAAW,SAAS,GAAG,KAAK,WAAW,KAAK,QAAQ,IAAI;AAAA,IACjE;AAaA,MAAE,WAAW,SAAU,IAAI,IAAI;AAC7B,aAAO,eAAe,MAAM,GAAG,IAAI,EAAE;AAAA,IACvC;AAaA,MAAE,kBAAkB,EAAE,OAAO,SAAU,IAAI,IAAI;AAC7C,UAAI,IAAI,MACN,OAAO,EAAE;AAEX,UAAI,IAAI,KAAK,CAAC;AACd,UAAI,OAAO,OAAQ,QAAO;AAE1B,iBAAW,IAAI,GAAG,UAAU;AAE5B,UAAI,OAAO,OAAQ,MAAK,KAAK;AAAA,UACxB,YAAW,IAAI,GAAG,CAAC;AAExB,aAAO,SAAS,GAAG,KAAK,EAAE,IAAI,GAAG,EAAE;AAAA,IACrC;AAWA,MAAE,gBAAgB,SAAU,IAAI,IAAI;AAClC,UAAI,KACF,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,OAAO,QAAQ;AACjB,cAAM,eAAe,GAAG,IAAI;AAAA,MAC9B,OAAO;AACL,mBAAW,IAAI,GAAG,UAAU;AAE5B,YAAI,OAAO,OAAQ,MAAK,KAAK;AAAA,YACxB,YAAW,IAAI,GAAG,CAAC;AAExB,YAAI,SAAS,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;AACpC,cAAM,eAAe,GAAG,MAAM,KAAK,CAAC;AAAA,MACtC;AAEA,aAAO,EAAE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,MAAM,MAAM;AAAA,IAChD;AAmBA,MAAE,UAAU,SAAU,IAAI,IAAI;AAC5B,UAAI,KAAK,GACP,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,OAAO,QAAQ;AACjB,cAAM,eAAe,CAAC;AAAA,MACxB,OAAO;AACL,mBAAW,IAAI,GAAG,UAAU;AAE5B,YAAI,OAAO,OAAQ,MAAK,KAAK;AAAA,YACxB,YAAW,IAAI,GAAG,CAAC;AAExB,YAAI,SAAS,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,GAAG,EAAE;AAC1C,cAAM,eAAe,GAAG,OAAO,KAAK,EAAE,IAAI,CAAC;AAAA,MAC7C;AAIA,aAAO,EAAE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,MAAM,MAAM;AAAA,IAChD;AAcA,MAAE,aAAa,SAAU,MAAM;AAC7B,UAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GACzC,IAAI,MACJ,KAAK,EAAE,GACP,OAAO,EAAE;AAEX,UAAI,CAAC,GAAI,QAAO,IAAI,KAAK,CAAC;AAE1B,WAAK,KAAK,IAAI,KAAK,CAAC;AACpB,WAAK,KAAK,IAAI,KAAK,CAAC;AAEpB,UAAI,IAAI,KAAK,EAAE;AACf,UAAI,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE,IAAI;AACnC,UAAI,IAAI;AACR,QAAE,EAAE,CAAC,IAAI,QAAQ,IAAI,IAAI,IAAI,WAAW,IAAI,CAAC;AAE7C,UAAI,QAAQ,MAAM;AAGhB,eAAO,IAAI,IAAI,IAAI;AAAA,MACrB,OAAO;AACL,YAAI,IAAI,KAAK,IAAI;AACjB,YAAI,CAAC,EAAE,MAAM,KAAK,EAAE,GAAG,EAAE,EAAG,OAAM,MAAM,kBAAkB,CAAC;AAC3D,eAAO,EAAE,GAAG,CAAC,IAAK,IAAI,IAAI,IAAI,KAAM;AAAA,MACtC;AAEA,iBAAW;AACX,UAAI,IAAI,KAAK,eAAe,EAAE,CAAC;AAC/B,WAAK,KAAK;AACV,WAAK,YAAY,IAAI,GAAG,SAAS,WAAW;AAE5C,iBAAU;AACR,YAAI,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,aAAK,GAAG,KAAK,EAAE,MAAM,EAAE,CAAC;AACxB,YAAI,GAAG,IAAI,IAAI,KAAK,EAAG;AACvB,aAAK;AACL,aAAK;AACL,aAAK;AACL,aAAK,GAAG,KAAK,EAAE,MAAM,EAAE,CAAC;AACxB,aAAK;AACL,aAAK;AACL,YAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;AACvB,YAAI;AAAA,MACN;AAEA,WAAK,OAAO,KAAK,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC;AACvC,WAAK,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC;AACzB,WAAK,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC;AACzB,SAAG,IAAI,GAAG,IAAI,EAAE;AAGhB,UAAI,OAAO,IAAI,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,OAAO,IAAI,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,IAC7E,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AAExB,WAAK,YAAY;AACjB,iBAAW;AAEX,aAAO;AAAA,IACT;AAaA,MAAE,gBAAgB,EAAE,QAAQ,SAAU,IAAI,IAAI;AAC5C,aAAO,eAAe,MAAM,IAAI,IAAI,EAAE;AAAA,IACxC;AAmBA,MAAE,YAAY,SAAU,GAAG,IAAI;AAC7B,UAAI,IAAI,MACN,OAAO,EAAE;AAEX,UAAI,IAAI,KAAK,CAAC;AAEd,UAAI,KAAK,MAAM;AAGb,YAAI,CAAC,EAAE,EAAG,QAAO;AAEjB,YAAI,IAAI,KAAK,CAAC;AACd,aAAK,KAAK;AAAA,MACZ,OAAO;AACL,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,OAAO,QAAQ;AACjB,eAAK,KAAK;AAAA,QACZ,OAAO;AACL,qBAAW,IAAI,GAAG,CAAC;AAAA,QACrB;AAGA,YAAI,CAAC,EAAE,EAAG,QAAO,EAAE,IAAI,IAAI;AAG3B,YAAI,CAAC,EAAE,GAAG;AACR,cAAI,EAAE,EAAG,GAAE,IAAI,EAAE;AACjB,iBAAO;AAAA,QACT;AAAA,MACF;AAGA,UAAI,EAAE,EAAE,CAAC,GAAG;AACV,mBAAW;AACX,YAAI,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC;AAClC,mBAAW;AACX,iBAAS,CAAC;AAAA,MAGZ,OAAO;AACL,UAAE,IAAI,EAAE;AACR,YAAI;AAAA,MACN;AAEA,aAAO;AAAA,IACT;AAQA,MAAE,WAAW,WAAY;AACvB,aAAO,CAAC;AAAA,IACV;AAaA,MAAE,UAAU,SAAU,IAAI,IAAI;AAC5B,aAAO,eAAe,MAAM,GAAG,IAAI,EAAE;AAAA,IACvC;AA8CA,MAAE,UAAU,EAAE,MAAM,SAAU,GAAG;AAC/B,UAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GACnB,IAAI,MACJ,OAAO,EAAE,aACT,KAAK,EAAE,IAAI,IAAI,KAAK,CAAC;AAGvB,UAAI,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAG,QAAO,IAAI,KAAK,QAAQ,CAAC,GAAG,EAAE,CAAC;AAEvE,UAAI,IAAI,KAAK,CAAC;AAEd,UAAI,EAAE,GAAG,CAAC,EAAG,QAAO;AAEpB,WAAK,KAAK;AACV,WAAK,KAAK;AAEV,UAAI,EAAE,GAAG,CAAC,EAAG,QAAO,SAAS,GAAG,IAAI,EAAE;AAGtC,UAAI,UAAU,EAAE,IAAI,QAAQ;AAG5B,UAAI,KAAK,EAAE,EAAE,SAAS,MAAM,IAAI,KAAK,IAAI,CAAC,KAAK,OAAO,kBAAkB;AACtE,YAAI,OAAO,MAAM,GAAG,GAAG,EAAE;AACzB,eAAO,EAAE,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,SAAS,GAAG,IAAI,EAAE;AAAA,MAC1D;AAEA,UAAI,EAAE;AAGN,UAAI,IAAI,GAAG;AAGT,YAAI,IAAI,EAAE,EAAE,SAAS,EAAG,QAAO,IAAI,KAAK,GAAG;AAG3C,aAAK,EAAE,EAAE,CAAC,IAAI,MAAM,EAAG,KAAI;AAG3B,YAAI,EAAE,KAAK,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,EAAE,EAAE,UAAU,GAAG;AAC9C,YAAE,IAAI;AACN,iBAAO;AAAA,QACT;AAAA,MACF;AAMA,UAAI,QAAQ,CAAC,GAAG,EAAE;AAClB,UAAI,KAAK,KAAK,CAAC,SAAS,CAAC,IACrB,UAAU,MAAM,KAAK,IAAI,OAAO,eAAe,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE,IAAI,EAAE,IAC3E,IAAI,KAAK,IAAI,EAAE,EAAE;AAKrB,UAAI,IAAI,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,EAAG,QAAO,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC;AAE7E,iBAAW;AACX,WAAK,WAAW,EAAE,IAAI;AAMtB,UAAI,KAAK,IAAI,KAAK,IAAI,IAAI,MAAM;AAGhC,UAAI,mBAAmB,EAAE,MAAM,iBAAiB,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE;AAG/D,UAAI,EAAE,GAAG;AAGP,YAAI,SAAS,GAAG,KAAK,GAAG,CAAC;AAIzB,YAAI,oBAAoB,EAAE,GAAG,IAAI,EAAE,GAAG;AACpC,cAAI,KAAK;AAGT,cAAI,SAAS,mBAAmB,EAAE,MAAM,iBAAiB,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC;AAGjF,cAAI,CAAC,eAAe,EAAE,CAAC,EAAE,MAAM,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,MAAM;AAC3D,gBAAI,SAAS,GAAG,KAAK,GAAG,CAAC;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AAEA,QAAE,IAAI;AACN,iBAAW;AACX,WAAK,WAAW;AAEhB,aAAO,SAAS,GAAG,IAAI,EAAE;AAAA,IAC3B;AAcA,MAAE,cAAc,SAAU,IAAI,IAAI;AAChC,UAAI,KACF,IAAI,MACJ,OAAO,EAAE;AAEX,UAAI,OAAO,QAAQ;AACjB,cAAM,eAAe,GAAG,EAAE,KAAK,KAAK,YAAY,EAAE,KAAK,KAAK,QAAQ;AAAA,MACtE,OAAO;AACL,mBAAW,IAAI,GAAG,UAAU;AAE5B,YAAI,OAAO,OAAQ,MAAK,KAAK;AAAA,YACxB,YAAW,IAAI,GAAG,CAAC;AAExB,YAAI,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE;AAChC,cAAM,eAAe,GAAG,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,UAAU,EAAE;AAAA,MAC/D;AAEA,aAAO,EAAE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,MAAM,MAAM;AAAA,IAChD;AAiBA,MAAE,sBAAsB,EAAE,OAAO,SAAU,IAAI,IAAI;AACjD,UAAI,IAAI,MACN,OAAO,EAAE;AAEX,UAAI,OAAO,QAAQ;AACjB,aAAK,KAAK;AACV,aAAK,KAAK;AAAA,MACZ,OAAO;AACL,mBAAW,IAAI,GAAG,UAAU;AAE5B,YAAI,OAAO,OAAQ,MAAK,KAAK;AAAA,YACxB,YAAW,IAAI,GAAG,CAAC;AAAA,MAC1B;AAEA,aAAO,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE;AAAA,IACrC;AAUA,MAAE,WAAW,WAAY;AACvB,UAAI,IAAI,MACN,OAAO,EAAE,aACT,MAAM,eAAe,GAAG,EAAE,KAAK,KAAK,YAAY,EAAE,KAAK,KAAK,QAAQ;AAEtE,aAAO,EAAE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,MAAM,MAAM;AAAA,IAChD;AAOA,MAAE,YAAY,EAAE,QAAQ,WAAY;AAClC,aAAO,SAAS,IAAI,KAAK,YAAY,IAAI,GAAG,KAAK,IAAI,GAAG,CAAC;AAAA,IAC3D;AAQA,MAAE,UAAU,EAAE,SAAS,WAAY;AACjC,UAAI,IAAI,MACN,OAAO,EAAE,aACT,MAAM,eAAe,GAAG,EAAE,KAAK,KAAK,YAAY,EAAE,KAAK,KAAK,QAAQ;AAEtE,aAAO,EAAE,MAAM,IAAI,MAAM,MAAM;AAAA,IACjC;AAkNA,IAAI,SAAU,4BAAY;AAGxB,eAAS,gBAAgB,GAAG,GAAG,MAAM;AACnC,YAAI,MACF,QAAQ,GACR,IAAI,EAAE;AAER,aAAK,IAAI,EAAE,MAAM,GAAG,OAAM;AACxB,iBAAO,EAAE,CAAC,IAAI,IAAI;AAClB,YAAE,CAAC,IAAI,OAAO,OAAO;AACrB,kBAAQ,OAAO,OAAO;AAAA,QACxB;AAEA,YAAI,MAAO,GAAE,QAAQ,KAAK;AAE1B,eAAO;AAAA,MACT;AAEA,eAAS,QAAQ,GAAG,GAAG,IAAI,IAAI;AAC7B,YAAI,GAAG;AAEP,YAAI,MAAM,IAAI;AACZ,cAAI,KAAK,KAAK,IAAI;AAAA,QACpB,OAAO;AACL,eAAK,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,gBAAI,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG;AAChB,kBAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI;AACtB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,SAAS,GAAG,GAAG,IAAI,MAAM;AAChC,YAAI,IAAI;AAGR,eAAO,QAAO;AACZ,YAAE,EAAE,KAAK;AACT,cAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,IAAI;AACxB,YAAE,EAAE,IAAI,IAAI,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE;AAAA,QACjC;AAGA,eAAO,CAAC,EAAE,CAAC,KAAK,EAAE,SAAS,IAAI,GAAE,MAAM;AAAA,MACzC;AAEA,aAAO,SAAU,GAAG,GAAG,IAAI,IAAI,IAAI,MAAM;AACvC,YAAI,KAAK,GAAG,GAAG,GAAG,SAAS,MAAM,MAAM,OAAO,GAAG,IAAI,KAAK,MAAM,MAAM,IAAI,GAAG,IAAI,IAAI,KACnF,IAAI,IACJ,OAAO,EAAE,aACTK,QAAO,EAAE,KAAK,EAAE,IAAI,IAAI,IACxB,KAAK,EAAE,GACP,KAAK,EAAE;AAGT,YAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;AAElC,iBAAO,IAAI;AAAA;AAAA,YACT,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,KAAK,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM;AAAA;AAAA,cAGpD,MAAM,GAAG,CAAC,KAAK,KAAK,CAAC,KAAKA,QAAO,IAAIA,QAAO;AAAA;AAAA,UAAC;AAAA,QACjD;AAEA,YAAI,MAAM;AACR,oBAAU;AACV,cAAI,EAAE,IAAI,EAAE;AAAA,QACd,OAAO;AACL,iBAAO;AACP,oBAAU;AACV,cAAI,UAAU,EAAE,IAAI,OAAO,IAAI,UAAU,EAAE,IAAI,OAAO;AAAA,QACxD;AAEA,aAAK,GAAG;AACR,aAAK,GAAG;AACR,YAAI,IAAI,KAAKA,KAAI;AACjB,aAAK,EAAE,IAAI,CAAC;AAIZ,aAAK,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,IAAI;AAEvC,YAAI,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,GAAI;AAE1B,YAAI,MAAM,MAAM;AACd,eAAK,KAAK,KAAK;AACf,eAAK,KAAK;AAAA,QACZ,WAAW,IAAI;AACb,eAAK,MAAM,EAAE,IAAI,EAAE,KAAK;AAAA,QAC1B,OAAO;AACL,eAAK;AAAA,QACP;AAEA,YAAI,KAAK,GAAG;AACV,aAAG,KAAK,CAAC;AACT,iBAAO;AAAA,QACT,OAAO;AAGL,eAAK,KAAK,UAAU,IAAI;AACxB,cAAI;AAGJ,cAAI,MAAM,GAAG;AACX,gBAAI;AACJ,iBAAK,GAAG,CAAC;AACT;AAGA,oBAAQ,IAAI,MAAM,MAAM,MAAM,KAAK;AACjC,kBAAI,IAAI,QAAQ,GAAG,CAAC,KAAK;AACzB,iBAAG,CAAC,IAAI,IAAI,KAAK;AACjB,kBAAI,IAAI,KAAK;AAAA,YACf;AAEA,mBAAO,KAAK,IAAI;AAAA,UAGlB,OAAO;AAGL,gBAAI,QAAQ,GAAG,CAAC,IAAI,KAAK;AAEzB,gBAAI,IAAI,GAAG;AACT,mBAAK,gBAAgB,IAAI,GAAG,IAAI;AAChC,mBAAK,gBAAgB,IAAI,GAAG,IAAI;AAChC,mBAAK,GAAG;AACR,mBAAK,GAAG;AAAA,YACV;AAEA,iBAAK;AACL,kBAAM,GAAG,MAAM,GAAG,EAAE;AACpB,mBAAO,IAAI;AAGX,mBAAO,OAAO,KAAK,KAAI,MAAM,IAAI;AAEjC,iBAAK,GAAG,MAAM;AACd,eAAG,QAAQ,CAAC;AACZ,kBAAM,GAAG,CAAC;AAEV,gBAAI,GAAG,CAAC,KAAK,OAAO,EAAG,GAAE;AAEzB,eAAG;AACD,kBAAI;AAGJ,oBAAM,QAAQ,IAAI,KAAK,IAAI,IAAI;AAG/B,kBAAI,MAAM,GAAG;AAGX,uBAAO,IAAI,CAAC;AACZ,oBAAI,MAAM,KAAM,QAAO,OAAO,QAAQ,IAAI,CAAC,KAAK;AAGhD,oBAAI,OAAO,MAAM;AAUjB,oBAAI,IAAI,GAAG;AACT,sBAAI,KAAK,KAAM,KAAI,OAAO;AAG1B,yBAAO,gBAAgB,IAAI,GAAG,IAAI;AAClC,0BAAQ,KAAK;AACb,yBAAO,IAAI;AAGX,wBAAM,QAAQ,MAAM,KAAK,OAAO,IAAI;AAGpC,sBAAI,OAAO,GAAG;AACZ;AAGA,6BAAS,MAAM,KAAK,QAAQ,KAAK,IAAI,OAAO,IAAI;AAAA,kBAClD;AAAA,gBACF,OAAO;AAKL,sBAAI,KAAK,EAAG,OAAM,IAAI;AACtB,yBAAO,GAAG,MAAM;AAAA,gBAClB;AAEA,wBAAQ,KAAK;AACb,oBAAI,QAAQ,KAAM,MAAK,QAAQ,CAAC;AAGhC,yBAAS,KAAK,MAAM,MAAM,IAAI;AAG9B,oBAAI,OAAO,IAAI;AACb,yBAAO,IAAI;AAGX,wBAAM,QAAQ,IAAI,KAAK,IAAI,IAAI;AAG/B,sBAAI,MAAM,GAAG;AACX;AAGA,6BAAS,KAAK,KAAK,OAAO,KAAK,IAAI,MAAM,IAAI;AAAA,kBAC/C;AAAA,gBACF;AAEA,uBAAO,IAAI;AAAA,cACb,WAAW,QAAQ,GAAG;AACpB;AACA,sBAAM,CAAC,CAAC;AAAA,cACV;AAGA,iBAAG,GAAG,IAAI;AAGV,kBAAI,OAAO,IAAI,CAAC,GAAG;AACjB,oBAAI,MAAM,IAAI,GAAG,EAAE,KAAK;AAAA,cAC1B,OAAO;AACL,sBAAM,CAAC,GAAG,EAAE,CAAC;AACb,uBAAO;AAAA,cACT;AAAA,YAEF,UAAU,OAAO,MAAM,IAAI,CAAC,MAAM,WAAW;AAE7C,mBAAO,IAAI,CAAC,MAAM;AAAA,UACpB;AAGA,cAAI,CAAC,GAAG,CAAC,EAAG,IAAG,MAAM;AAAA,QACvB;AAGA,YAAI,WAAW,GAAG;AAChB,YAAE,IAAI;AACN,oBAAU;AAAA,QACZ,OAAO;AAGL,eAAK,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,GAAI;AACzC,YAAE,IAAI,IAAI,IAAI,UAAU;AAExB,mBAAS,GAAG,KAAK,KAAK,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA,QAC9C;AAEA,eAAO;AAAA,MACT;AAAA,IACF,GAAG;AAk7DH,MAAE,OAAO,IAAI,4BAA4B,CAAC,IAAI,EAAE;AAChD,MAAE,OAAO,WAAW,IAAI;AAGjB,IAAI,UAAU,EAAE,cAAc,MAAM,QAAQ;AAGnD,WAAO,IAAI,QAAQ,IAAI;AACvB,SAAK,IAAI,QAAQ,EAAE;AAEnB,IAAO,kBAAQ;AAAA;AAAA;;;ACjzJf,IACW,KACA,MACA;AAHX;AAAA;AAAA;AACO,IAAI,MAAM,IAAI,gBAAQ,EAAE;AACxB,IAAI,OAAO,IAAI,gBAAQ,CAAC;AACxB,IAAI,gBAAgB,IAAI,gBAAQ,EAAE;AAAA;AAAA;;;ACAlC,SAAS,QAAQ,IAAI,SAAS;AACjC,MAAI,QAAQ,WAAW,QAAQ,QAAQ,QAAQ,QAAQ;AACvD,MAAI,aAAa,WAAW,QAAQ,aAAa,QAAQ,aAAa;AACtE,MAAI,WAAW,WAAW,QAAQ,WAAW,QAAQ,WAAW;AAChE,SAAO,SAAS,IAAI;AAAA,IAChB;AAAA,IACA;AAAA,EACJ,CAAC;AACL;AAIA,SAAS,YAAY,OAAO;AACxB,SAAQ,SAAS,QAAQ,OAAO,UAAU,YAAY,OAAO,UAAU;AAC3E;AACA,SAAS,QAAQ,IAAI,OAAO,YAAY,KAAK;AACzC,MAAI,WAAW,YAAY,GAAG,IAAI,MAAM,WAAW,GAAG;AACtD,MAAI,gBAAgB,MAAM,IAAI,QAAQ;AACtC,MAAI,OAAO,kBAAkB,aAAa;AACtC,oBAAgB,GAAG,KAAK,MAAM,GAAG;AACjC,UAAM,IAAI,UAAU,aAAa;AAAA,EACrC;AACA,SAAO;AACX;AACA,SAAS,SAAS,IAAI,OAAO,YAAY;AACrC,MAAI,OAAO,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AAClD,MAAI,WAAW,WAAW,IAAI;AAC9B,MAAI,gBAAgB,MAAM,IAAI,QAAQ;AACtC,MAAI,OAAO,kBAAkB,aAAa;AACtC,oBAAgB,GAAG,MAAM,MAAM,IAAI;AACnC,UAAM,IAAI,UAAU,aAAa;AAAA,EACrC;AACA,SAAO;AACX;AACA,SAAS,SAAS,IAAI,SAAS,UAAU,OAAO,WAAW;AACvD,SAAO,SAAS,KAAK,SAAS,IAAI,OAAO,SAAS;AACtD;AACA,SAAS,gBAAgB,IAAI,SAAS;AAClC,MAAI,WAAW,GAAG,WAAW,IAAI,UAAU;AAC3C,SAAO,SAAS,IAAI,MAAM,UAAU,QAAQ,MAAM,OAAO,GAAG,QAAQ,UAAU;AAClF;AACA,SAAS,iBAAiB,IAAI,SAAS;AACnC,SAAO,SAAS,IAAI,MAAM,UAAU,QAAQ,MAAM,OAAO,GAAG,QAAQ,UAAU;AAClF;AACA,SAAS,gBAAgB,IAAI,SAAS;AAClC,SAAO,SAAS,IAAI,MAAM,SAAS,QAAQ,MAAM,OAAO,GAAG,QAAQ,UAAU;AACjF;AAjDA,IAqDI,mBAMA,6BAYA,cAKO;AA5EX;AAAA;AAqDA,IAAI,oBAAoB,WAAY;AAChC,aAAO,KAAK,UAAU,SAAS;AAAA,IACnC;AAIA,IAAI;AAAA,KAA6C,WAAY;AACzD,eAASC,+BAA8B;AACnC,aAAK,QAAQ,uBAAO,OAAO,IAAI;AAAA,MACnC;AACA,MAAAA,6BAA4B,UAAU,MAAM,SAAUC,MAAK;AACvD,eAAO,KAAK,MAAMA,IAAG;AAAA,MACzB;AACA,MAAAD,6BAA4B,UAAU,MAAM,SAAUC,MAAK,OAAO;AAC9D,aAAK,MAAMA,IAAG,IAAI;AAAA,MACtB;AACA,aAAOD;AAAA,IACX,GAAE;AACF,IAAI,eAAe;AAAA,MACf,QAAQ,SAAS,SAAS;AACtB,eAAO,IAAI,4BAA4B;AAAA,MAC3C;AAAA,IACJ;AACO,IAAI,aAAa;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,IACb;AAAA;AAAA;;;AC7EO,SAAS,OAAO,GAAG,OAAO;AAC7B,MAAI,OAAO,EAAE,WAAW,YAAY;AAChC,WAAO,EAAE,OAAO,KAAK;AAAA,EACzB;AACA,MAAI,MAAM,IAAI,MAAM,KAAK;AACzB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,QAAI,CAAC,IAAI;AAAA,EACb;AACA,SAAO,IAAI,KAAK,EAAE;AACtB;AACO,SAAS,gBAAgB,KAAK,IAAI,OAAO,OAAO;AACnD,MAAI,CAAC,IAAI,IAAI,EAAE,GAAG;AACd,QAAI,IAAI,IAAI,uBAAO,OAAO,IAAI,CAAC;AAAA,EACnC;AACA,MAAI,QAAQ,IAAI,IAAI,EAAE;AACtB,QAAM,KAAK,IAAI;AACnB;AACO,SAAS,sBAAsB,KAAK,IAAI,OAAO;AAClD,WAAS,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,QAAQ,MAAM;AAC5D,QAAI,IAAI,GAAG,EAAE;AACb,oBAAgB,KAAK,IAAI,GAAG,MAAM,CAAC,CAAC;AAAA,EACxC;AACJ;AACO,SAAS,gBAAgB,KAAK,IAAI,OAAO;AAC5C,SAAO,sBAAsB,KAAK,IAAI,KAAK,EAAE,KAAK;AACtD;AACO,SAAS,sBAAsB,KAAK,IAAI;AAC3C,MAAI,SAAS,CAAC;AACd,WAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,WAAO,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,EACjC;AACA,MAAI,QAAQ,IAAI,IAAI,EAAE;AACtB,MAAI,CAAC,OAAO;AACR,UAAM,IAAI,UAAU,GAAG,OAAO,IAAI,wCAAwC,CAAC;AAAA,EAC/E;AACA,SAAO,OAAO,OAAO,SAAU,KAAK,GAAG;AACnC,QAAI,CAAC,IAAI,MAAM,CAAC;AAChB,WAAO;AAAA,EACX,GAAG,uBAAO,OAAO,IAAI,CAAC;AAC1B;AACO,SAAS,cAAc,aAAa;AACvC,SAAO,YAAY,SAAS;AAChC;AAWO,SAAS,eAAe,QAAQ,MAAM,IAAI;AAC7C,MAAI,QAAQ,GAAG;AACf,SAAO,eAAe,QAAQ,MAAM;AAAA,IAChC,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV;AAAA,EACJ,CAAC;AACL;AAOO,SAAS,mBAAmB,QAAQ,MAAM,OAAO;AACpD,SAAO,eAAe,QAAQ,MAAM;AAAA,IAChC,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV;AAAA,EACJ,CAAC;AACL;AAEO,SAAS,UAAU,WAAW,SAAS,KAAK;AAC/C,MAAI,QAAQ,QAAQ;AAAE,UAAM;AAAA,EAAO;AACnC,MAAI,CAAC,WAAW;AACZ,UAAM,IAAI,IAAI,OAAO;AAAA,EACzB;AACJ;AApFA,IAqFW,4BAUA,8BAUA,2BAUA,sBAUA;AA7HX;AAAA;AAAA;AACA;AAoFO,IAAI,6BAA6B,QAAQ,WAAY;AACxD,UAAI;AACJ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MAC3B;AACA,aAAO,MAAM,KAAK,KAAK,cAAc,KAAK,MAAM,IAAI,cAAc,CAAC,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG;AAAA,IAC/F,GAAG;AAAA,MACC,UAAU,WAAW;AAAA,IACzB,CAAC;AACM,IAAI,+BAA+B,QAAQ,WAAY;AAC1D,UAAI;AACJ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MAC3B;AACA,aAAO,MAAM,KAAK,KAAK,gBAAgB,KAAK,MAAM,IAAI,cAAc,CAAC,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG;AAAA,IACjG,GAAG;AAAA,MACC,UAAU,WAAW;AAAA,IACzB,CAAC;AACM,IAAI,4BAA4B,QAAQ,WAAY;AACvD,UAAI;AACJ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MAC3B;AACA,aAAO,MAAM,KAAK,KAAK,aAAa,KAAK,MAAM,IAAI,cAAc,CAAC,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG;AAAA,IAC9F,GAAG;AAAA,MACC,UAAU,WAAW;AAAA,IACzB,CAAC;AACM,IAAI,uBAAuB,QAAQ,WAAY;AAClD,UAAI;AACJ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MAC3B;AACA,aAAO,MAAM,KAAK,KAAK,QAAQ,KAAK,MAAM,IAAI,cAAc,CAAC,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG;AAAA,IACzF,GAAG;AAAA,MACC,UAAU,WAAW;AAAA,IACzB,CAAC;AACM,IAAI,2BAA2B,QAAQ,WAAY;AACtD,UAAI;AACJ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MAC3B;AACA,aAAO,MAAM,KAAK,KAAK,YAAY,KAAK,MAAM,IAAI,cAAc,CAAC,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG;AAAA,IAC7F,GAAG;AAAA,MACC,UAAU,WAAW;AAAA,IACzB,CAAC;AAAA;AAAA;;;AChIM,SAAS,SAAS,GAAG;AAExB,MAAI,OAAO,MAAM,UAAU;AACvB,UAAM,UAAU,2CAA2C;AAAA,EAC/D;AACA,SAAO,OAAO,CAAC;AACnB;AAKO,SAAS,SAAS,KAAK;AAC1B,MAAI,OAAO,QAAQ,UAAU;AACzB,WAAO,IAAI,QAAQ,GAAG;AAAA,EAC1B;AACA,YAAU,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU,uCAAuC,SAAS;AAC9G,MAAI,QAAQ,QAAW;AACnB,WAAO,IAAI,QAAQ,GAAG;AAAA,EAC1B;AACA,MAAI,QAAQ,QAAQ,QAAQ,GAAG;AAC3B,WAAO;AAAA,EACX;AACA,MAAI,QAAQ,MAAM;AACd,WAAO,IAAI,QAAQ,CAAC;AAAA,EACxB;AACA,MAAI,OAAO,QAAQ,UAAU;AACzB,QAAI;AACA,aAAO,IAAI,QAAQ,GAAG;AAAA,IAC1B,SACO,GAAG;AACN,aAAO,IAAI,QAAQ,GAAG;AAAA,IAC1B;AAAA,EACJ;AACA,YAAU,OAAO,QAAQ,UAAU,mBAAmB,SAAS;AAC/D,MAAI,YAAY,YAAY,KAAK,QAAQ;AACzC,YAAU,OAAO,cAAc,UAAU,mBAAmB,SAAS;AACrE,SAAO,SAAS,SAAS;AAC7B;AAKA,SAAS,UAAU,GAAG;AAClB,MAAI,SAAS,SAAS,CAAC;AACvB,MAAI,OAAO,MAAM,KAAK,OAAO,OAAO,GAAG;AACnC,WAAO;AAAA,EACX;AACA,MAAI,OAAO,SAAS,GAAG;AACnB,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,IAAI,EAAE,MAAM;AACjC,MAAI,OAAO,WAAW,GAAG;AACrB,cAAU,QAAQ,QAAQ;AAAA,EAC9B;AACA,SAAO;AACX;AAKO,SAAS,SAAS,MAAM;AAC3B,MAAI,CAAC,KAAK,SAAS,GAAG;AAClB,WAAO,IAAI,QAAQ,GAAG;AAAA,EAC1B;AACA,MAAI,KAAK,IAAI,EAAE,YAAY,OAAO,IAAI,GAAG;AACrC,WAAO,IAAI,QAAQ,GAAG;AAAA,EAC1B;AACA,SAAO,UAAU,IAAI;AACzB;AAKO,SAAS,SAAS,KAAK;AAC1B,MAAI,OAAO,MAAM;AACb,UAAM,IAAI,UAAU,8CAA8C;AAAA,EACtE;AACA,SAAO,OAAO,GAAG;AACrB;AAMO,SAAS,UAAU,GAAG,GAAG;AAC5B,MAAI,OAAO,IAAI;AACX,WAAO,OAAO,GAAG,GAAG,CAAC;AAAA,EACzB;AAEA,MAAI,MAAM,GAAG;AAGT,WAAO,MAAM,KAAK,IAAI,MAAM,IAAI;AAAA,EACpC;AAEA,SAAO,MAAM,KAAK,MAAM;AAC5B;AAKO,SAAS,YAAY,KAAK;AAC7B,SAAO,IAAI,MAAM,GAAG;AACxB;AAMO,SAAS,eAAe,GAAGE,OAAM;AACpC,SAAO,OAAO,UAAU,eAAe,KAAK,GAAGA,KAAI;AACvD;AAKO,SAAS,KAAK,GAAG;AACpB,MAAI,MAAM,MAAM;AACZ,WAAO;AAAA,EACX;AACA,MAAI,OAAO,MAAM,aAAa;AAC1B,WAAO;AAAA,EACX;AACA,MAAI,OAAO,MAAM,cAAc,OAAO,MAAM,UAAU;AAClD,WAAO;AAAA,EACX;AACA,MAAI,OAAO,MAAM,UAAU;AACvB,WAAO;AAAA,EACX;AACA,MAAI,OAAO,MAAM,WAAW;AACxB,WAAO;AAAA,EACX;AACA,MAAI,OAAO,MAAM,UAAU;AACvB,WAAO;AAAA,EACX;AACA,MAAI,OAAO,MAAM,UAAU;AACvB,WAAO;AAAA,EACX;AACA,MAAI,OAAO,MAAM,UAAU;AACvB,WAAO;AAAA,EACX;AACJ;AAQA,SAASC,KAAI,GAAG,GAAG;AACf,SAAO,IAAI,KAAK,MAAM,IAAI,CAAC,IAAI;AACnC;AAKO,SAAS,IAAI,GAAG;AACnB,SAAO,KAAK,MAAM,IAAI,UAAU;AACpC;AAKO,SAAS,QAAQ,GAAG;AACvB,SAAOA,KAAI,IAAI,CAAC,IAAI,GAAG,CAAC;AAC5B;AAKO,SAAS,YAAY,GAAG;AAC3B,SAAO,KAAK,IAAI,GAAG,CAAC,IAAI;AAC5B;AAKO,SAAS,aAAa,GAAG;AAC5B,SAAO,KAAK,IAAI,GAAG,CAAC;AACxB;AAKO,SAAS,aAAa,GAAG;AAC5B,SAAO,IAAI,KAAK,CAAC,EAAE,eAAe;AACtC;AACO,SAAS,WAAW,GAAG;AAC1B,MAAI,IAAI,MAAM,GAAG;AACb,WAAO;AAAA,EACX;AACA,MAAI,IAAI,QAAQ,GAAG;AACf,WAAO;AAAA,EACX;AACA,MAAI,IAAI,QAAQ,GAAG;AACf,WAAO;AAAA,EACX;AACA,SAAO;AACX;AACO,SAAS,cAAc,GAAG;AAC7B,SAAO,IAAI,CAAC,IAAI,YAAY,aAAa,CAAC,CAAC;AAC/C;AACO,SAAS,WAAW,GAAG;AAC1B,SAAO,WAAW,aAAa,CAAC,CAAC,MAAM,MAAM,IAAI;AACrD;AAKO,SAAS,cAAc,GAAG;AAC7B,MAAI,MAAM,cAAc,CAAC;AACzB,MAAI,OAAO,WAAW,CAAC;AACvB,MAAI,OAAO,KAAK,MAAM,IAAI;AACtB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,KAAK,MAAM;AACjB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,KAAK,MAAM;AACjB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,MAAM,MAAM;AAClB,WAAO;AAAA,EACX;AACA,QAAM,IAAI,MAAM,cAAc;AAClC;AACO,SAAS,aAAa,GAAG;AAC5B,MAAI,MAAM,cAAc,CAAC;AACzB,MAAI,MAAM,cAAc,CAAC;AACzB,MAAI,OAAO,WAAW,CAAC;AACvB,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM;AAAA,EACjB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM;AAAA,EACjB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,KAAK;AAAA,EACtB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,KAAK;AAAA,EACtB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,MAAI,QAAQ,GAAG;AACX,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,MAAI,QAAQ,IAAI;AACZ,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,MAAI,QAAQ,IAAI;AACZ,WAAO,MAAM,MAAM;AAAA,EACvB;AACA,QAAM,IAAI,MAAM,cAAc;AAClC;AAOO,SAAS,aAAa,GAAG;AAC5B,SAAOA,KAAI,KAAK,MAAM,IAAI,WAAW,GAAG,aAAa;AACzD;AACO,SAAS,YAAY,GAAG;AAC3B,SAAOA,KAAI,KAAK,MAAM,IAAI,aAAa,GAAG,gBAAgB;AAC9D;AACO,SAAS,YAAY,GAAG;AAC3B,SAAOA,KAAI,KAAK,MAAM,IAAI,aAAa,GAAG,kBAAkB;AAChE;AACA,SAAS,WAAW,IAAI;AACpB,SAAO,OAAO,OAAO;AACzB;AAUO,SAAS,oBAAoB,GAAG,GAAG,eAAe;AACrD,MAAI,CAAC,WAAW,CAAC,GAAG;AAChB,WAAO;AAAA,EACX;AACA,MAAI,kBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc,qBAAqB;AACjG,QAAI,KAAK,kBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AACrF,WAAO,aAAa;AAAA,EACxB;AACA,MAAI,OAAO,MAAM,UAAU;AACvB,WAAO;AAAA,EACX;AACA,MAAIC,KAAI,EAAE;AACV,MAAI,OAAOA,OAAM,UAAU;AACvB,UAAM,IAAI,UAAU,6EAA6E;AAAA,EACrG;AACA,SAAO,OAAO,UAAU,cAAc,KAAKA,IAAG,CAAC;AACnD;AACO,SAAS,WAAW,GAAG;AAC1B,SAAOD,KAAI,GAAG,aAAa;AAC/B;AACA,SAAS,oBAAoB,GAAG,MAAM;AAClC,MAAI;AACJ,MAAI,SAAS,UAAU;AACnB,kBAAc,CAAC,YAAY,SAAS;AAAA,EACxC,OACK;AACD,kBAAc,CAAC,WAAW,UAAU;AAAA,EACxC;AACA,WAAS,KAAK,GAAG,gBAAgB,aAAa,KAAK,cAAc,QAAQ,MAAM;AAC3E,QAAI,SAAS,cAAc,EAAE;AAC7B,QAAI,SAAS,EAAE,MAAM;AACrB,QAAI,WAAW,MAAM,GAAG;AACpB,UAAI,SAAS,OAAO,KAAK,CAAC;AAC1B,UAAI,OAAO,WAAW,UAAU;AAC5B,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACA,QAAM,IAAI,UAAU,0CAA0C;AAClE;AACO,SAAS,YAAY,OAAO,eAAe;AAC9C,MAAI,OAAO,UAAU,YAAY,SAAS,MAAM;AAC5C,QAAI,eAAe,OAAO,eAAe,QAAQ,MAAM,OAAO,WAAW,IAAI;AAC7E,QAAI,OAAO;AACX,QAAI,iBAAiB,QAAW;AAC5B,UAAI,kBAAkB,QAAW;AAC7B,eAAO;AAAA,MACX,WACS,kBAAkB,UAAU;AACjC,eAAO;AAAA,MACX,OACK;AACD,kBAAU,kBAAkB,UAAU,4CAA4C;AAClF,eAAO;AAAA,MACX;AACA,UAAI,SAAS,aAAa,KAAK,OAAO,IAAI;AAC1C,UAAI,OAAO,WAAW,UAAU;AAC5B,eAAO;AAAA,MACX;AACA,YAAM,IAAI,UAAU,4CAA4C;AAAA,IACpE;AACA,QAAI,kBAAkB,QAAW;AAC7B,sBAAgB;AAAA,IACpB;AACA,WAAO,oBAAoB,OAAO,aAAa;AAAA,EACnD;AACA,SAAO;AACX;AAxYA,IAoJI,YAsJA,eACA,kBACA,oBACA,eACA,eACA;AA/SJ;AAAA;AAAA;AACA;AACA;AAkJA,IAAI,aAAa;AAsJjB,IAAI,gBAAgB;AACpB,IAAI,mBAAmB;AACvB,IAAI,qBAAqB;AACzB,IAAI,gBAAgB;AACpB,IAAI,gBAAgB,gBAAgB;AACpC,IAAI,cAAc,gBAAgB;AAAA;AAAA;;;ACzS3B,SAAS,sBAAsB,SAAS;AAC3C,MAAI,OAAO,YAAY,aAAa;AAChC,WAAO,uBAAO,OAAO,IAAI;AAAA,EAC7B;AACA,SAAO,SAAS,OAAO;AAC3B;AAXA;AAAA;AAAA;AAAA;AAAA;;;ACOO,SAAS,oBAAoB,UAAUE,MAAKC,MAAK,UAAU;AAC9D,MAAI,aAAa,QAAW;AAExB,WAAO;AAAA,EACX;AACA,MAAI,MAAM,OAAO,QAAQ;AACzB,MAAI,MAAM,GAAG,KAAK,MAAMD,QAAO,MAAMC,MAAK;AACtC,UAAM,IAAI,WAAW,GAAG,OAAO,KAAK,wBAAwB,EAAE,OAAOD,MAAK,IAAI,EAAE,OAAOC,MAAK,GAAG,CAAC;AAAA,EACpG;AACA,SAAO,KAAK,MAAM,GAAG;AACzB;AAjBA;AAAA;AAAA;AAAA;;;ACSO,SAAS,gBAAgB,SAAS,UAAU,SAAS,SAAS,UAAU;AAC3E,MAAI,MAAM,QAAQ,QAAQ;AAC1B,SAAO,oBAAoB,KAAK,SAAS,SAAS,QAAQ;AAC9D;AAZA;AAAA;AAQA;AAAA;AAAA;;;ACCO,SAAS,UAAU,MAAMC,OAAM,MAAM,QAAQ,UAAU;AAC1D,MAAI,OAAO,SAAS,UAAU;AAC1B,UAAM,IAAI,UAAU,2BAA2B;AAAA,EACnD;AACA,MAAI,QAAQ,KAAKA,KAAI;AACrB,MAAI,UAAU,QAAW;AACrB,QAAI,SAAS,aAAa,SAAS,UAAU;AACzC,YAAM,IAAI,UAAU,cAAc;AAAA,IACtC;AACA,QAAI,SAAS,WAAW;AACpB,cAAQ,QAAQ,KAAK;AAAA,IACzB;AACA,QAAI,SAAS,UAAU;AACnB,cAAQ,SAAS,KAAK;AAAA,IAC1B;AACA,QAAI,WAAW,UAAa,CAAC,OAAO,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO;AAAA,IAAO,CAAC,EAAE,QAAQ;AACxF,YAAM,IAAI,WAAW,GAAG,OAAO,OAAO,iBAAiB,EAAE,OAAO,OAAO,KAAK,IAAI,CAAC,CAAC;AAAA,IACtF;AACA,WAAO;AAAA,EACX;AACA,SAAO;AACX;AA9BA;AAAA;AAAA;AAAA;AAAA;;;ACKO,SAAS,iBAAiB,SAAS;AACtC,MAAI,OAAO,YAAY,aAAa;AAChC,WAAO,uBAAO,OAAO,IAAI;AAAA,EAC7B;AACA,MAAI,OAAO,YAAY,UAAU;AAC7B,WAAO;AAAA,EACX;AACA,QAAM,IAAI,UAAU,2BAA2B;AACnD;AAbA;AAAA;AAAA;AAAA;;;ACUO,SAAS,yBAAyB,MAAMC,OAAM,QAAQ,WAAW,YAAY,UAAU;AAC1F,MAAI,QAAQ,KAAKA,KAAI;AACrB,MAAI,UAAU,QAAW;AACrB,WAAO;AAAA,EACX;AACA,MAAI,UAAU,MAAM;AAChB,WAAO;AAAA,EACX;AACA,MAAI,eAAe,QAAQ,KAAK;AAChC,MAAI,iBAAiB,OAAO;AACxB,WAAO;AAAA,EACX;AACA,UAAQ,SAAS,KAAK;AACtB,MAAI,UAAU,UAAU,UAAU,SAAS;AACvC,WAAO;AAAA,EACX;AACA,OAAK,UAAU,CAAC,GAAG,QAAQ,KAAK,MAAM,IAAI;AACtC,UAAM,IAAI,WAAW,iBAAiB,OAAO,KAAK,CAAC;AAAA,EACvD;AACA,SAAO;AACX;AA9BA;AAAA;AASA;AAAA;AAAA;;;ACyCO,SAAS,oBAAoB,MAAM;AACtC,SAAO,KAAK,MAAM,KAAK,QAAQ,GAAG,IAAI,CAAC;AAC3C;AAQO,SAAS,iCAAiC,gBAAgB;AAC7D,SAAO,aAAa,QAAQ,cAAc,IAAI;AAClD;AA9DA,IAGW,kBAqDA;AAxDX;AAAA;AAGO,IAAI,mBAAmB;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AASO,IAAI,eAAe,iBAAiB,IAAI,mBAAmB;AAAA;AAAA;;;ACnD3D,SAAS,oBAAoB,IAAI,IAAI;AACxC,MAAI,oBAAoB,GAAG,mBAAmB,iBAAiB,GAAG;AAClE,MAAI,eAAe,GAAG,YAAY;AAClC,MAAI,YAAY,oBAAI,IAAI;AACxB,MAAI,YAAY,oBAAI,IAAI;AACxB,oBAAkB,IAAI,SAAU,GAAG;AAAE,WAAO,EAAE,YAAY;AAAA,EAAG,CAAC,EAAE,QAAQ,SAAU,GAAG;AAAE,WAAO,UAAU,IAAI,CAAC;AAAA,EAAG,CAAC;AACjH,SAAO,KAAK,cAAc,EAAE,QAAQ,SAAU,UAAU;AACpD,cAAU,IAAI,SAAS,YAAY,CAAC;AACpC,cAAU,IAAI,eAAe,QAAQ,EAAE,YAAY,CAAC;AAAA,EACxD,CAAC;AACD,SAAO,UAAU,IAAI,YAAY,KAAK,UAAU,IAAI,YAAY;AACpE;AAhBA;AAAA;AAAA;AAAA;;;ACIA,SAAS,YAAY,KAAK;AACtB,SAAO,IAAI,QAAQ,YAAY,SAAU,GAAG,GAAG;AAAE,WAAO,EAAE,YAAY;AAAA,EAAG,CAAC;AAC9E;AAKO,SAAS,yBAAyB,UAAU;AAC/C,aAAW,YAAY,QAAQ;AAC/B,MAAI,SAAS,WAAW,GAAG;AACvB,WAAO;AAAA,EACX;AACA,MAAI,cAAc,KAAK,QAAQ,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO;AACX;AApBA,IAOI;AAPJ;AAAA;AAOA,IAAI,gBAAgB;AAAA;AAAA;;;ACFpB,SAAS,YAAY,KAAK;AACtB,SAAO,IAAI,QAAQ,YAAY,SAAU,GAAG,GAAG;AAAE,WAAO,EAAE,YAAY;AAAA,EAAG,CAAC;AAC9E;AAKO,SAAS,2BAA2B,MAAM;AAC7C,SAAO,YAAY,IAAI;AACvB,MAAI,iCAAiC,IAAI,GAAG;AACxC,WAAO;AAAA,EACX;AACA,MAAI,QAAQ,KAAK,MAAM,OAAO;AAC9B,MAAI,MAAM,WAAW,GAAG;AACpB,WAAO;AAAA,EACX;AACA,MAAI,YAAY,MAAM,CAAC,GAAG,cAAc,MAAM,CAAC;AAC/C,MAAI,CAAC,iCAAiC,SAAS,KAC3C,CAAC,iCAAiC,WAAW,GAAG;AAChD,WAAO;AAAA,EACX;AACA,SAAO;AACX;AA3BA;AAAA;AAAA;AAAA;AAAA;;;ACCO,SAAS,0BAA0B,GAAG,IAAI,IAAI,sBAAsB;AACvE,MAAI,EAAE,GAAG,EAAE;AACP,WAAO;AACX,YAAU,GAAG,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,uCAAuC,OAAO,GAAG,OAAO,EAAE,OAAO,IAAI,OAAO,EAAE,OAAO,EAAE,CAAC;AACpI,MAAI,yBAAyB,QAAQ;AACjC,WAAO;AAAA,EACX;AACA,MAAI,yBAAyB,YAAY;AACrC,WAAO;AAAA,EACX;AACA,MAAI,KAAK,EAAE,MAAM,EAAE;AACnB,MAAI,KAAK,GAAG,MAAM,CAAC;AACnB,MAAI,GAAG,SAAS,EAAE,GAAG;AACjB,WAAO;AAAA,EACX;AACA,MAAI,GAAG,SAAS,EAAE,GAAG;AACjB,WAAO;AAAA,EACX;AACA,YAAU,GAAG,GAAG,EAAE,GAAG,0BAA0B;AAC/C,MAAI,yBAAyB,aAAa;AACtC,WAAO;AAAA,EACX;AACA,MAAI,yBAAyB,iBAAiB;AAC1C,WAAO;AAAA,EACX;AACA,YAAU,yBAAyB,aAAa,0CAA0C;AAC1F,MAAI,cAAc,GAAG,IAAI,GAAG,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC;AAC5C,MAAI,YAAY,OAAO,GAAG;AACtB,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAhCA;AAAA;AAAA;AAAA;AAAA;;;ACgBO,SAAS,oBAAoB,cAAc,QAAQ,IAAI;AAC1D,MAAI,mBAAmB,GAAG;AAC1B,MAAI,gBAAgB,iBAAiB,YAAY;AACjD,MAAI,UAAU,cAAc,eAAe,QAAQ,QAAQ,cAAc,eAAe;AACxF,MAAI,iBAAiB,IAAI,OAAO,MAAM,OAAO,QAAQ,WAAW,KAAK,CAAC;AACtE,MAAI,iBAAiB,OAAO,UAAU,SAAU,GAAG;AAAE,WAAO,EAAE,SAAS,aAAa,eAAe,KAAK,EAAE,KAAK;AAAA,EAAG,CAAC;AACnH,MAAI,kBAAkB,CAAC;AACvB,WAAS,IAAI,iBAAiB,GAAG,KAAK,GAAG,KAAK;AAC1C,QAAI,CAAC,uBAAuB,IAAI,OAAO,CAAC,EAAE,IAAI,GAAG;AAC7C;AAAA,IACJ;AACA,oBAAgB,QAAQ,OAAO,CAAC,CAAC;AAAA,EACrC;AAEA,MAAI,MAAM,KAAK,gBAAgB,IAAI,SAAU,GAAG;AAAE,WAAO,EAAE;AAAA,EAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,GAAG;AACvF,QAAI,YAAY,MAAM,KAAK,MAAM;AACjC,cAAU,OAAO,iBAAiB,gBAAgB,QAAQ,gBAAgB,MAAM;AAChF,WAAO;AAAA,EACX;AACA,MAAI,kBAAkB,CAAC;AACvB,WAAS,IAAI,iBAAiB,GAAG,IAAI,OAAO,QAAQ,KAAK;AACrD,QAAI,CAAC,uBAAuB,IAAI,OAAO,CAAC,EAAE,IAAI,GAAG;AAC7C;AAAA,IACJ;AACA,oBAAgB,KAAK,OAAO,CAAC,CAAC;AAAA,EAClC;AAEA,MAAI,MAAM,KAAK,gBAAgB,IAAI,SAAU,GAAG;AAAE,WAAO,EAAE;AAAA,EAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,GAAG;AACvF,QAAI,YAAY,MAAM,KAAK,MAAM;AACjC,cAAU,OAAO,iBAAiB,GAAG,gBAAgB,MAAM;AAC3D,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAjDA,IAAI;AAAJ;AAAA;AAAA,IAAI,yBAAyB,oBAAI,IAAI;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA;AAAA;;;ACDM,SAAS,4BAA4B,eAAe,WAAW;AAClE,MAAI,WAAW,cAAc,UAAU,iBAAiB,cAAc,gBAAgB,kBAAkB,cAAc;AACtH,UAAQ,UAAU;AAAA,IACd,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO,UAAU,SAAS;AAAA,IAC9B,KAAK;AACD,UAAI,YAAY,UAAU,IAAI,CAAC,EAAE,MAAM;AACvC,aAAO,UAAU,MAAM,CAAC,EAAE,SAAS;AAAA,IACvC,SAAS;AACL,gBAAU,aAAa,WAAW,kBAAkB;AAGpD,UAAI,iBAAiB,cAAc,gBAAgB,QAAQ,cAAc,OAAO,kBAAkB,cAAc;AAChH,UAAI,eAAe;AACnB,UAAI,UAAU,cAAc,oBAAoB,QAAQ;AACpD,YAAI,WAAW,eAAe,QAAQ,SAAS,eAAe,KAC1D,eAAe,QAAQ,SAAS,eAAe,QAAQ,GAAG,CAAC,CAAC;AAChE,uBAAe,SAAS;AAAA,MAC5B,OACK;AACD,YAAI,UAAU,eAAe,QAAQ,QAAQ,eAAe,KACxD,eAAe,QAAQ,QAAQ,eAAe,QAAQ,GAAG,CAAC,CAAC;AAC/D,uBAAe,mBAAmB,SAAS,QAAQ,OAAO,QAAQ;AAAA,MACtE;AACA,UAAI,CAAC,cAAc;AACf,eAAO;AAAA,MACX;AACA,UAAI,MAAM,gBAAQ,IAAI,IAAI,SAAS,EAAE,SAAS;AAC9C,UAAI,aAAa,OAAO,KAAK,YAAY;AACzC,UAAI,MAAM,WAAW,CAAC,GAAG;AACrB,eAAO;AAAA,MACX;AACA,UAAI,MAAM,WAAW,WAAW,SAAS,CAAC,GAAG;AACzC,eAAO,WAAW,WAAW,SAAS,CAAC,EAAE,SAAS;AAAA,MACtD;AACA,UAAI,IAAI,WAAW,QAAQ,GAAG;AAC9B,UAAI,MAAM,IAAI;AACV,eAAO;AAAA,MACX;AAGA,UAAI,eAAe,WAAW,CAAC;AAE/B,UAAI,iBAAiB,aAAa,YAAY,EAAE;AAChD,UAAI,mBAAmB,KAAK;AACxB,eAAO;AAAA,MACX;AAEA,aAAQ,aAAa,SACjB,aAAa,YAAY,EAAE,MAAM,MAAM,IAAI,EAAE,CAAC,EAAE;AAAA,IACxD;AAAA,EACJ;AACJ;AAhEA;AAAA;AAAA;AACA;AACA,oBAAQ,IAAI;AAAA,MACR,UAAU;AAAA,IACd,CAAC;AAAA;AAAA;;;ACkBM,SAAS,wBAAwB,cAAc,YAAY;AAC9D,MAAI,YAAY;AACZ,WAAO,gBAAgB,YAAY;AAAA,EACvC;AACA,SAAO,gBAAgB,YAAY;AACvC;AA3BA,IAAI,iBAWA;AAXJ;AAAA;AAAA,IAAI,kBAAkB;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,UAAU;AAAA,IACd;AACA,IAAI,kBAAkB;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,UAAU;AAAA,IACd;AAAA;AAAA;;;ACbA,SAAS,aAAa,GAAG,GAAG;AACxB,SAAO,EAAE,MAAM,gBAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;AACtC;AAEA,SAAS,SAAS,GAAG,GAAG,mBAAmB;AACvC,MAAI,KAAK,EAAE,MAAM,gBAAQ,IAAI,IAAI,CAAC,CAAC,EAAE,MAAM;AAC3C,MAAI,KAAK,GAAG,IAAI,iBAAiB,EAAE,MAAM,EAAE,MAAM,iBAAiB;AAClE,MAAI,KAAK,aAAa,IAAI,CAAC;AAC3B,SAAO;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AACJ;AAEA,SAAS,SAAS,GAAG,GAAG,mBAAmB;AACvC,MAAI,KAAK,EAAE,MAAM,gBAAQ,IAAI,IAAI,CAAC,CAAC,EAAE,KAAK;AAC1C,MAAI,KAAK,GAAG,IAAI,iBAAiB,EAAE,KAAK,EAAE,MAAM,iBAAiB;AACjE,MAAI,KAAK,aAAa,IAAI,CAAC;AAC3B,SAAO;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AACJ;AAOO,SAAS,WAAW,GAAG,aAAa,aAAa,mBAAmB,sBAAsB;AAE7F,MAAI,IAAI;AAER,MAAI,KAAK,SAAS,GAAG,GAAG,iBAAiB,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG;AAEhE,MAAI,KAAK,SAAS,GAAG,GAAG,iBAAiB,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG;AAEhE,MAAI,IAAI,0BAA0B,GAAG,IAAI,IAAI,oBAAoB;AACjE,MAAI,GAAG;AACP,MAAI;AAEJ,MAAI,EAAE,GAAG,EAAE,GAAG;AAEV,QAAI;AAEJ,aAAS;AAAA,EACb,OACK;AAGD,QAAI;AAEJ,aAAS;AAAA,EACb;AAEA,MAAI,EAAE,OAAO,GAAG;AACZ,QAAI;AAAA,EACR,OACK;AAED,QAAI,EAAE,SAAS;AAAA,EACnB;AACA,MAAI;AAEJ,MAAI,MAAM,GAAG;AAET,QAAI,IAAI,EAAE;AAEV,QAAI,KAAK,GAAG;AAER,UAAI,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC;AAE7B,UAAI,IAAI;AAER,UAAI,IAAI;AAAA,IACZ;AAEA,QAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC;AAExB,QAAI,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;AAE5B,QAAI,IAAI,MAAM;AAEd,UAAM,EAAE;AAAA,EACZ,OACK;AAED,UAAM,EAAE;AAAA,EACZ;AAEA,MAAI,MAAM,cAAc;AAExB,SAAO,MAAM,KAAK,EAAE,EAAE,SAAS,CAAC,MAAM,KAAK;AAEvC,QAAI,EAAE,MAAM,GAAG,EAAE,SAAS,CAAC;AAE3B;AAAA,EACJ;AAEA,MAAI,EAAE,EAAE,SAAS,CAAC,MAAM,KAAU;AAE9B,QAAI,EAAE,MAAM,GAAG,EAAE,SAAS,CAAC;AAAA,EAC/B;AAEA,SAAO;AAAA,IACH,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,mBAAmB,CAAC;AAAA,EACxB;AACJ;AAtHA;AAAA;AAAA;AACA;AACA;AAEA,oBAAQ,IAAI;AAAA,MACR,UAAU;AAAA,IACd,CAAC;AAAA;AAAA;;;ACDD,SAAS,WAAW,GAAG,GAAG;AACtB,MAAI,QAAQ,gBAAQ,IAAI,IAAI,CAAC;AAC7B,MAAI,QAAQ,gBAAQ,IAAI,IAAI,IAAI,CAAC;AACjC,MAAI,QAAQ,EAAE,IAAI,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK;AACvD,MAAI,YAAY;AAChB,SAAO,MAAM;AACT,QAAI,YAAY,EAAE,IAAI,gBAAQ,IAAI,IAAI,UAAU,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM;AACzE,QAAI,UAAU,SAAS,KAAK,KAAK,UAAU,qBAAqB,KAAK,GAAG;AACpE,UAAI,YAAY,UAAU,MAAM,gBAAQ,IAAI,IAAI,UAAU,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3E,UAAI,UAAU,kBAAkB,CAAC,GAAG;AAChC,eAAO;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACR;AAAA,MACJ;AAAA,IACJ;AACA,gBAAY,UAAU,MAAM,CAAC;AAAA,EACjC;AACJ;AAEA,SAAS,WAAW,GAAG,GAAG;AACtB,MAAI,QAAQ,gBAAQ,IAAI,IAAI,CAAC;AAC7B,MAAI,QAAQ,gBAAQ,IAAI,IAAI,IAAI,CAAC;AACjC,MAAI,QAAQ,EAAE,IAAI,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM;AACxD,MAAI,YAAY;AAChB,SAAO,MAAM;AACT,QAAI,YAAY,EAAE,IAAI,gBAAQ,IAAI,IAAI,UAAU,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK;AACxE,QAAI,UAAU,SAAS,KAAK,KAAK,UAAU,qBAAqB,KAAK,GAAG;AACpE,UAAI,YAAY,UAAU,MAAM,gBAAQ,IAAI,IAAI,UAAU,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3E,UAAI,UAAU,qBAAqB,CAAC,GAAG;AACnC,eAAO;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACR;AAAA,MACJ;AAAA,IACJ;AACA,gBAAY,UAAU,KAAK,CAAC;AAAA,EAChC;AACJ;AAOO,SAAS,eAAe,GAAG,cAAc,cAAc,sBAAsB;AAEhF,MAAI,IAAI;AACR,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,EAAE,OAAO,GAAG;AAEZ,QAAI,OAAO,KAAK,CAAC;AAEjB,QAAI;AAEJ,aAAS;AAAA,EACb,OACK;AAGD,QAAI,KAAK,WAAW,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,GAAG;AAE3D,QAAI,KAAK,WAAW,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,GAAG;AAE3D,QAAI,IAAI,0BAA0B,GAAG,IAAI,IAAI,oBAAoB;AACjE,QAAI,IAEF;AAEF,QAAI,EAAE,GAAG,EAAE,GAAG;AAEV,UAAI;AAEJ,UAAI,GAAG,SAAS;AAEhB,eAAS;AAAA,IACb,OACK;AAGD,UAAI;AAEJ,UAAI,GAAG,SAAS;AAEhB,eAAS;AAAA,IACb;AAEA,QAAI,EAAE,SAAS;AAAA,EACnB;AACA,MAAI;AAEJ,MAAI,KAAK,IAAI,GAAG;AAEZ,QAAI,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC;AAE7B,UAAM,IAAI;AAAA,EACd,WACS,KAAK,GAAG;AAGb,QAAI,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,MAAM,EAAE,MAAM,EAAE,UAAU,KAAK,IAAI,GAAG;AAE9D,UAAM,IAAI;AAAA,EACd,OACK;AAGD,cAAU,IAAI,GAAG,yBAAyB;AAE1C,QAAI,OAAO,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI;AAEjC,UAAM;AAAA,EACV;AAEA,MAAI,EAAE,SAAS,GAAG,KAAK,eAAe,cAAc;AAEhD,QAAI,MAAM,eAAe;AAEzB,WAAO,MAAM,KAAK,EAAE,EAAE,SAAS,CAAC,MAAM,KAAK;AAEvC,UAAI,EAAE,MAAM,GAAG,EAAE,SAAS,CAAC;AAE3B;AAAA,IACJ;AAEA,QAAI,EAAE,EAAE,SAAS,CAAC,MAAM,KAAK;AAEzB,UAAI,EAAE,MAAM,GAAG,EAAE,SAAS,CAAC;AAAA,IAC/B;AAAA,EACJ;AAEA,SAAO;AAAA,IACH,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,EACvB;AACJ;AAnJA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACKO,SAAS,sBAAsB,YAAY,IAAI;AAClD,MAAI,IAAI;AACR,MAAIC;AAEJ,MAAI,EAAE,OAAO,KAAK,EAAE,WAAW,GAAG;AAC9B,IAAAA,QAAO;AACP,QAAI;AAAA,EACR,OACK;AACD,cAAU,EAAE,SAAS,GAAG,oDAAoD;AAC5E,QAAI,EAAE,SAAS,CAAC,GAAG;AACf,MAAAA,QAAO;AAAA,IACX,OACK;AACD,MAAAA,QAAO;AAAA,IACX;AACA,QAAIA,UAAS,YAAY;AACrB,UAAI,EAAE,QAAQ;AAAA,IAClB;AAAA,EACJ;AACA,MAAI;AACJ,MAAI,eAAe,WAAW;AAC9B,MAAI,uBAAuB,wBAAwB,WAAW,cAAcA,UAAS,UAAU;AAC/F,UAAQ,cAAc;AAAA,IAClB,KAAK;AACD,eAAS,eAAe,GAAG,WAAW,0BAA0B,WAAW,0BAA0B,oBAAoB;AACzH;AAAA,IACJ,KAAK;AACD,eAAS,WAAW,GAAG,WAAW,uBAAuB,WAAW,uBAAuB,WAAW,mBAAmB,oBAAoB;AAC7I;AAAA,IACJ;AACI,UAAI,UAAU,eAAe,GAAG,WAAW,0BAA0B,WAAW,0BAA0B,oBAAoB;AAC9H,UAAI,UAAU,WAAW,GAAG,WAAW,uBAAuB,WAAW,uBAAuB,WAAW,mBAAmB,oBAAoB;AAClJ,UAAI,WAAW,iBAAiB,iBAAiB;AAC7C,YAAI,QAAQ,qBAAqB,QAAQ,mBAAmB;AACxD,mBAAS;AAAA,QACb,OACK;AACD,mBAAS;AAAA,QACb;AAAA,MACJ,OACK;AACD,kBAAU,WAAW,iBAAiB,iBAAiB,sBAAsB;AAC7E,YAAI,QAAQ,qBAAqB,QAAQ,mBAAmB;AACxD,mBAAS;AAAA,QACb,OACK;AACD,mBAAS;AAAA,QACb;AAAA,MACJ;AACA;AAAA,EACR;AACA,MAAI,OAAO;AACX,MAAI,SAAS,OAAO;AACpB,MAAI,WAAW,wBAAwB,oBAAoB,EAAE,UAAU,GAAG;AACtE,QAAI,IAAI,OAAO,QAAQ,GAAG;AAC1B,QAAI,IAAI,IAAI;AACR,eAAS,OAAO,MAAM,GAAG,CAAC;AAAA,IAC9B;AAAA,EACJ;AACA,MAAI,MAAM,OAAO;AACjB,MAAI,aAAa,WAAW;AAC5B,MAAI,MAAM,YAAY;AAClB,QAAI,eAAe,OAAO,KAAK,aAAa,GAAG;AAC/C,aAAS,eAAe;AAAA,EAC5B;AACA,MAAIA,UAAS,YAAY;AACrB,QAAI,EAAE,OAAO,GAAG;AACZ,UAAI;AAAA,IACR,OACK;AACD,UAAI,EAAE,QAAQ;AAAA,IAClB;AAAA,EACJ;AACA,SAAO,EAAE,eAAe,GAAG,iBAAiB,OAAO;AACvD;AAnFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACMO,SAAS,gBAAgB,eAAe,GAAG;AAC9C,MAAI,EAAE,OAAO,GAAG;AACZ,WAAO,CAAC,GAAG,CAAC;AAAA,EAChB;AACA,MAAI,EAAE,WAAW,GAAG;AAChB,QAAI,EAAE,QAAQ;AAAA,EAClB;AACA,MAAI,YAAY,EAAE,IAAI,EAAE,EAAE,MAAM;AAChC,MAAI,WAAW,4BAA4B,eAAe,SAAS;AAEnE,MAAI,EAAE,MAAM,gBAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;AACtC,MAAI,qBAAqB,sBAAsB,eAAe,CAAC;AAC/D,MAAI,mBAAmB,cAAc,OAAO,GAAG;AAC3C,WAAO,CAAC,UAAU,UAAU,SAAS,CAAC;AAAA,EAC1C;AACA,MAAI,eAAe,mBAAmB,cAAc,IAAI,EAAE,EAAE,MAAM;AAClE,MAAI,aAAa,GAAG,UAAU,MAAM,QAAQ,CAAC,GAAG;AAC5C,WAAO,CAAC,UAAU,UAAU,SAAS,CAAC;AAAA,EAC1C;AACA,SAAO;AAAA,IACH,4BAA4B,eAAe,UAAU,KAAK,CAAC,CAAC;AAAA,IAC5D,UAAU,KAAK,CAAC,EAAE,SAAS;AAAA,EAC/B;AACJ;AAjCA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACEO,SAAS,eAAe,GAAG,IAAI;AAClC,MAAI,qBAAqB,GAAG;AAC5B,SAAO,eAAe,oBAAoB,CAAC,IACrC,mBAAmB,CAAC,IACpB;AACV;AATA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IACW;AADX;AAAA;AACO,IAAI,kBAAkB;AAAA;AAAA;;;ACD7B,IAAW;AAAX;AAAA;AAAO,IAAI,eAAe;AAAA,MACtB,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,WAAW;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,WAAW;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,WAAW;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,WAAW;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QA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ACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,Y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",
  "names": ["key", "P", "v", "mod", "d", "b", "__assign", "o", "min", "max", "pow", "sum", "Decimal", "i", "sign", "ObjectWithoutPrototypeCache", "key", "prop", "mod", "P", "min", "max", "prop", "prop", "sign", "data", "sign", "sign", "CanonicalizeLocaleList", "init_CanonicalizeLocaleList", "invariant", "data", "key", "init_utils", "init_utils", "invariant", "init_utils", "invariant", "key", "init_utils", "init_utils", "invariant", "k", "init_utils", "key", "invariant", "init_utils", "init_utils", "CanonicalizeLocaleList", "init_lib", "init_CanonicalizeLocaleList", "init_lib", "init_lib", "MissingLocaleDataError", "RangePatternType", "lib_exports", "init_lib", "match", "Segmenter", "key", "SegmentIterator", "element", "$$anchor"]
}
