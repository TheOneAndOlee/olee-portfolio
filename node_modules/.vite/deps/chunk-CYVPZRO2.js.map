{
  "version": 3,
  "sources": ["../../svelte-typewriter/package/helpers/getLongestTextElement.js", "../../svelte-typewriter/package/helpers/onAnimationEnd.js", "../../svelte-typewriter/package/modes/concurrent.js"],
  "sourcesContent": ["/** @type {import(types').DescendingSortFunction} */\r\nconst descendingSortFunction = (firstElement, secondElement) =>\r\n\tsecondElement.text.length - firstElement.text.length\r\n\r\n/** @type {import(types').GetLongestTextElement} */\r\nconst getLongestTextElement = elements => {\r\n\tconst descendingTextLengthOrder = elements.sort(descendingSortFunction)\r\n\tconst longestTextElement = descendingTextLengthOrder[0].currentNode\r\n\treturn longestTextElement\r\n}\r\n\r\nexport { getLongestTextElement }\r\n", "/** @type {import(types').OnAnimationEnd} */\r\nconst onAnimationEnd = (element, callback) => {\r\n\tconst observer = new MutationObserver(mutations => {\r\n\t\tmutations.forEach(mutation => {\r\n\t\t\tconst elementAttributeChanged = mutation.type === 'attributes'\r\n\t\t\tconst elementFinishedTyping = mutation.target.classList.contains('finished-typing')\r\n\t\t\tif (elementAttributeChanged && elementFinishedTyping) callback()\r\n\t\t})\r\n\t})\r\n\r\n\tobserver.observe(element, {\r\n\t\tattributes: true,\r\n\t\tchildList: true,\r\n\t\tsubtree: true\r\n\t})\r\n}\r\n\r\nexport { onAnimationEnd }\r\n", "import { getLongestTextElement } from '../helpers/getLongestTextElement'\r\nimport { writeEffect } from '../helpers/writeEffect'\r\nimport { onAnimationEnd } from '../helpers/onAnimationEnd'\r\nimport { animationSetup } from '../helpers/animationSetup'\r\n\r\n// the name \"default\" cannot be used due to being a js keyword\r\n\r\n/**\r\n * @typedef {object} Props\r\n * @property {number} [interval]\r\n * @property {boolean} [cursor]\r\n * @property {boolean} [keepCursorOnFinish]\r\n * @property {number} [delay]\r\n * @property {boolean} [showCursorOnDelay]\r\n * @property {boolean} [disabled]\r\n * @property {string} [element]\r\n * @property {number} [scrambleDuration]\r\n * @property {number} [scrambleSlowdown]\r\n * @property {number} [unwriteInterval]\r\n * @property {number} [wordInterval]\r\n */\r\n\r\n/**\r\n * @typedef {{ update: () => void, destroy: () => void }} SvelteActionReturnType\r\n */\r\n\r\n/**\r\n * @typedef {(node: HTMLElement, props: Props) => SvelteActionReturnType} TypewriterModeFn\r\n */\r\n\r\n/**\r\n * @type {TypewriterModeFn}\r\n */\r\nconst concurrent = (node, props) => {\r\n\tconst { options, elements } = animationSetup(node, props)\r\n\r\n\tconst lastElementToFinish = getLongestTextElement(elements)\r\n\tonAnimationEnd(lastElementToFinish, () => options.dispatch('done'))\r\n\r\n\tfor (const element of elements) {\r\n\t\t// \"then\" is required here to prevent blocking execution, thus keeping\r\n\t\t// the animation asynchronous\r\n\t\twriteEffect(element, options).then(() => {\r\n\t\t\tif (options.keepCursorOnFinish) {\r\n\t\t\t\tconst isNotLongestElement = element.currentNode !== lastElementToFinish\r\n\t\t\t\tisNotLongestElement\r\n\t\t\t\t\t? element.currentNode.classList.replace('typing', 'finished-typing')\r\n\t\t\t\t\t: options.dispatch('done')\r\n\t\t\t} else {\r\n\t\t\t\telement.currentNode.classList.replace('typing', 'finished-typing')\r\n\t\t\t}\r\n\r\n\t\t\tconst cursorHasTimeout = typeof options.keepCursorOnFinish === 'number'\r\n\t\t\tcursorHasTimeout &&\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\telement.currentNode.classList.replace('typing', 'finished-typing')\r\n\t\t\t\t}, options.keepCursorOnFinish)\r\n\t\t})\r\n\t}\r\n\r\n\treturn {\r\n\t\tupdate() {},\r\n\t\tdestroy() {}\r\n\t}\r\n}\r\n\r\nexport default concurrent\r\n"],
  "mappings": ";;;;;;;;AACA,IAAM,yBAAyB,CAAC,cAAc,kBAC7C,cAAc,KAAK,SAAS,aAAa,KAAK;AAG/C,IAAM,wBAAwB,cAAY;AACzC,QAAM,4BAA4B,SAAS,KAAK,sBAAsB;AACtE,QAAM,qBAAqB,0BAA0B,CAAC,EAAE;AACxD,SAAO;AACR;;;ACRA,IAAM,iBAAiB,CAAC,SAAS,aAAa;AAC7C,QAAM,WAAW,IAAI,iBAAiB,eAAa;AAClD,cAAU,QAAQ,cAAY;AAC7B,YAAM,0BAA0B,SAAS,SAAS;AAClD,YAAM,wBAAwB,SAAS,OAAO,UAAU,SAAS,iBAAiB;AAClF,UAAI,2BAA2B,sBAAuB,UAAS;AAAA,IAChE,CAAC;AAAA,EACF,CAAC;AAED,WAAS,QAAQ,SAAS;AAAA,IACzB,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,SAAS;AAAA,EACV,CAAC;AACF;;;ACkBA,IAAM,aAAa,CAAC,MAAM,UAAU;AACnC,QAAM,EAAE,SAAS,SAAS,IAAI,eAAe,MAAM,KAAK;AAExD,QAAM,sBAAsB,sBAAsB,QAAQ;AAC1D,iBAAe,qBAAqB,MAAM,QAAQ,SAAS,MAAM,CAAC;AAElE,aAAW,WAAW,UAAU;AAG/B,gBAAY,SAAS,OAAO,EAAE,KAAK,MAAM;AACxC,UAAI,QAAQ,oBAAoB;AAC/B,cAAM,sBAAsB,QAAQ,gBAAgB;AACpD,8BACG,QAAQ,YAAY,UAAU,QAAQ,UAAU,iBAAiB,IACjE,QAAQ,SAAS,MAAM;AAAA,MAC3B,OAAO;AACN,gBAAQ,YAAY,UAAU,QAAQ,UAAU,iBAAiB;AAAA,MAClE;AAEA,YAAM,mBAAmB,OAAO,QAAQ,uBAAuB;AAC/D,0BACC,WAAW,MAAM;AAChB,gBAAQ,YAAY,UAAU,QAAQ,UAAU,iBAAiB;AAAA,MAClE,GAAG,QAAQ,kBAAkB;AAAA,IAC/B,CAAC;AAAA,EACF;AAEA,SAAO;AAAA,IACN,SAAS;AAAA,IAAC;AAAA,IACV,UAAU;AAAA,IAAC;AAAA,EACZ;AACD;AAEA,IAAO,qBAAQ;",
  "names": []
}
