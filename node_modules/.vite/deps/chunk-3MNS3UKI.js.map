{
  "version": 3,
  "sources": ["../../svelte-typewriter/package/modes/loop.js"],
  "sourcesContent": ["import { writeAndUnwriteText } from '../helpers/writeAndUnwriteText'\r\nimport { animationSetup } from '../helpers/animationSetup'\r\nimport { makeNestedStaticElementsVisible } from '../helpers/makeNestedStaticElementsVisible'\r\n\r\n/**\r\n * @typedef {object} Props\r\n * @property {number} [interval]\r\n * @property {boolean} [cursor]\r\n * @property {boolean} [keepCursorOnFinish]\r\n * @property {number} [delay]\r\n * @property {boolean} [showCursorOnDelay]\r\n * @property {boolean} [disabled]\r\n * @property {string} [element]\r\n * @property {number} [scrambleDuration]\r\n * @property {number} [scrambleSlowdown]\r\n * @property {number} [unwriteInterval]\r\n * @property {number} [wordInterval]\r\n */\r\n\r\n/**\r\n * @typedef {{ update: () => void, destroy: () => void }} SvelteActionReturnType\r\n */\r\n\r\n/**\r\n * @typedef {(node: HTMLElement, props: Props) => SvelteActionReturnType} TypewriterModeFn\r\n */\r\n\r\n/**\r\n * @type {TypewriterModeFn}\r\n */\r\nconst loop = async (node, props) => {\r\n\tconst { options, elements } = animationSetup(node, props)\r\n\r\n\twhile (true) {\r\n\t\tmakeNestedStaticElementsVisible(node)\r\n\t\tfor (const element of elements) await writeAndUnwriteText(element, options)\r\n\t}\r\n\r\n\treturn {\r\n\t\tupdate() {},\r\n\t\tdestroy() {}\r\n\t}\r\n}\r\n\r\nexport default loop\r\n"],
  "mappings": ";;;;;;;;;AA8BA,IAAM,OAAO,OAAO,MAAM,UAAU;AACnC,QAAM,EAAE,SAAS,SAAS,IAAI,eAAe,MAAM,KAAK;AAExD,SAAO,MAAM;AACZ,oCAAgC,IAAI;AACpC,eAAW,WAAW,SAAU,OAAM,oBAAoB,SAAS,OAAO;AAAA,EAC3E;AAEA,SAAO;AAAA,IACN,SAAS;AAAA,IAAC;AAAA,IACV,UAAU;AAAA,IAAC;AAAA,EACZ;AACD;AAEA,IAAO,eAAQ;",
  "names": []
}
